<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello Hexo</title>
    <url>/2017/01/22/hello-hexo/</url>
    <content><![CDATA[<p>hello hexo</p>
<h1 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init [folder]</span><br><span class="line">$ hexo new [layout] &lt;title&gt;</span><br><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<div class="table-container">
<table>
<thead>
<tr>
<th>Option</th>
<th style="text-align:right">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>-d, —deploy</td>
<td style="text-align:right">Deploy after generation finishes</td>
</tr>
<tr>
<td>-w, —watch</td>
<td style="text-align:right">Watch file changes</td>
</tr>
</tbody>
</table>
</div>
<h1 id="config"><a href="#config" class="headerlink" title="config"></a>config</h1><blockquote>
<p>&nbsp;&nbsp;<strong>Website in subdirectory </strong></p>
<p>If your website is in a subdirectory (such as <a href="http://example.org/blog" target="_blank" rel="noopener">http://example.org/blog</a>) set url to <a href="http://example.org/blog" target="_blank" rel="noopener">http://example.org/blog</a> and set root to /blog/<br><code>Ctrl+Alt+N</code></p>
</blockquote>
<ul>
<li>hexo install</li>
<li>hexo server</li>
<li>hexo deploy</li>
</ul>
<ol>
<li>hexo install</li>
<li>hexo server</li>
<li>hexo deploy</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> staic <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br></pre></td></tr></table></figure>
<p><a href="http://burningbright.github.io" target="_blank" rel="noopener">GitHub</a></p>
<p><img src="http://www.easyicon.net/api/resizeApi.php?id=1116693&amp;size=72" alt="octocat"></p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>first</tag>
      </tags>
  </entry>
  <entry>
    <title>mybatis foreach error</title>
    <url>/2017/01/24/mybatis-foreach-error/</url>
    <content><![CDATA[<h2 id="Parameter-‘-frch-item-0’-not-found-Available-parameters-are-list"><a href="#Parameter-‘-frch-item-0’-not-found-Available-parameters-are-list" class="headerlink" title="Parameter ‘__frch_item_0’ not found. Available parameters are [list]"></a>Parameter ‘__frch_item_0’ not found. Available parameters are [list]</h2><p><strong>Mybatis parameter in list</strong></p>
<ol>
<li>查看parameterType的类型是不是Java.util.List类型，如果是的话，看foreach 的collection属性是不是list，因为 传递一个 List 实例或者数组作为参数对象传给 MyBatis,MyBatis 会自动将它包装在一个 Map 中,用名称在作为键。List 实例将会以“list” 作为键,而数组实例将会以“array”作为键<br><code>Is parameterType type Java.util.List. If it is, be caution foreach&#39;s collection must &#39;list&#39;. Becase if put a List example or array to Mybatis, it will auto put it to a Map, use it&#39;s name as key, example as value. So Mybatis will put a special map to foreach</code></li>
<li>foreach is any value in list?</li>
<li>foreach is property spell error?</li>
<li>Mybatis set field auto increase but Mysql not.</li>
<li>Item’s property is not right</li>
</ol>
<p><em>ps: use Map reduce Bean’s work, but question is if query result is null, then it’s corresponding property will lost(null)</em></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo install</title>
    <url>/2017/01/24/hexo-install/</url>
    <content><![CDATA[<h2 id="Install-amp-theme"><a href="#Install-amp-theme" class="headerlink" title="Install &amp; theme"></a>Install &amp; theme</h2><blockquote>
<p>use cnpm<br>npm install -g cnpm —registry=<a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo cnpm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line"></span><br><span class="line">cnpm install</span><br><span class="line">hexo server</span><br><span class="line"></span><br><span class="line"># may ship</span><br><span class="line">git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</span><br><span class="line">npm install hexo-renderer-jade --save</span><br><span class="line">npm install hexo-renderer-sass --save</span><br><span class="line"></span><br><span class="line">npm install hexo-tag-katex --save</span><br></pre></td></tr></table></figure>
<h2 id="Optimization"><a href="#Optimization" class="headerlink" title="Optimization"></a>Optimization</h2><ul>
<li><p>enter themes\landscape\layout_partial，open head.ejs，delete 31th row fonts.googleapis.com</p>
</li>
<li><p>download jquery-2.0.3.min.js put into themes\landscape\source\js , enter themes\landscape\layout_partial, openafter-footer.ejs, replace 17th row to /js/jquery-2.0.3.min.js。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>skip_render</title>
    <url>/2017/01/24/skip-render/</url>
    <content><![CDATA[<h2 id="No-translate-source-dirctory"><a href="#No-translate-source-dirctory" class="headerlink" title="No translate source dirctory"></a>No translate source dirctory</h2><p>set _config.yml skip_render to ignore translate like:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">skip_render: Demo/*.html</span><br></pre></td></tr></table></figure></p>
<p>or more complicated, base on regular expression(not strict)</p>
<ol>
<li><p>under single dirctory all files:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">skip_render: demo/*</span><br></pre></td></tr></table></figure>
</li>
<li><p>under single dirctory a type file:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">skip_render: demo/*.html</span><br></pre></td></tr></table></figure>
</li>
<li><p>under single dirctory all files and children dirctory:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">skip_render: demo/**</span><br></pre></td></tr></table></figure>
</li>
<li><p>complicated condition:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">skip_render:</span><br><span class="line">    - &apos;demo/*.html&apos;</span><br><span class="line">    - &apos;demo/**&apos;</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>yml</tag>
      </tags>
  </entry>
  <entry>
    <title>mybatis foreach</title>
    <url>/2017/01/24/mybatis-foreach/</url>
    <content><![CDATA[<div class="table-container">
<table>
<thead>
<tr>
<th>Option</th>
<th style="text-align:right">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>item</td>
<td style="text-align:right">循环体中的具体对象。支持属性的点路径访问，如item.age,item.info.details。具体说明：在list和数组中是其中的对象，在map中是value。该参数为必选。</td>
</tr>
<tr>
<td>collection</td>
<td style="text-align:right">要做foreach的对象，作为入参时，List&lt;?&gt;对象默认用list代替作为键，数组对象有array代替作为键，Map对象用map代替作为键。当然在作为入参时可以使用@Param(“keyName”)来设置键，设置keyName后，list,array,map将会失效。 除了入参这种情况外，还有一种作为参数对象的某个字段的时候。举个例子：如果User有属性List ids。入参是User对象，那么这个collection = “ids”如果User有属性Ids ids;其中Ids是个对象，Ids有个属性List id;入参是User对象，那么collection = “ids.id”上面只是举例，具体collection等于什么，就看你想对那个元素做循环。该参数为必选。</td>
</tr>
<tr>
<td>separator</td>
<td style="text-align:right">元素之间的分隔符，例如在in()的时候，separator=”,”会自动在元素中间用“,“隔开，避免手动输入逗号导致sql错误，如in(1,2,)这样。该参数可选。</td>
</tr>
<tr>
<td>open</td>
<td style="text-align:right">foreach代码的开始符号，一般是(和close=”)”合用。常用在in(),values()时。该参数可选。</td>
</tr>
<tr>
<td>close</td>
<td style="text-align:right">foreach代码的关闭符号，一般是)和open=”(“合用。常用在in(),values()时。该参数可选。</td>
</tr>
<tr>
<td>index</td>
<td style="text-align:right">在list和数组中,index是元素的序号，在map中，index是元素的key，该参数可选。</td>
</tr>
</tbody>
</table>
</div>
<p><strong>select count(*) from users WHERE id in ( ? , ? )</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;select id=&quot;countByUserList&quot; resultType=&quot;_int&quot; parameterType=&quot;list&quot;&gt;    </span><br><span class="line">select count(*) from users    </span><br><span class="line">  &lt;where&gt;    </span><br><span class="line">    id in    </span><br><span class="line">    &lt;foreach item=&quot;item&quot; collection=&quot;list&quot; separator=&quot;,&quot; open=&quot;(&quot; close=&quot;)&quot; index=&quot;&quot;&gt;    </span><br><span class="line">      #&#123;item.id, jdbcType=NUMERIC&#125;    </span><br><span class="line">    &lt;/foreach&gt;    </span><br><span class="line">  &lt;/where&gt;    </span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure></p>
<p><strong>insert into deliver select ?,? from dual union all select ?,? from dual</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;insert id=&quot;addList&quot;&gt;  </span><br><span class="line">    INSERT INTO DELIVER  </span><br><span class="line">        (  </span><br><span class="line">            &lt;include refid=&quot;selectAllColumnsSql&quot;/&gt;  </span><br><span class="line">         )  </span><br><span class="line"></span><br><span class="line">      &lt;foreach collection=&quot;deliverList&quot; item=&quot;item&quot; separator=&quot;UNION ALL&quot;&gt;  </span><br><span class="line">            SELECT   </span><br><span class="line">                 #&#123;item.id, jdbcType=NUMERIC&#125;,  </span><br><span class="line">                 #&#123;item.name, jdbcType=VARCHAR&#125;  </span><br><span class="line">            FROM DUAL  </span><br><span class="line">      &lt;/foreach&gt;  </span><br><span class="line">&lt;/insert&gt;</span><br></pre></td></tr></table></figure></p>
<p><strong>insert into string_string (key, value) values (?, ?) , (?, ?) </strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;insert id=&quot;ins_string_string&quot;&gt;    </span><br><span class="line">    insert into string_string (key, value) values    </span><br><span class="line">    &lt;foreach item=&quot;item&quot; index=&quot;key&quot; collection=&quot;map&quot;    </span><br><span class="line">        open=&quot;&quot; separator=&quot;,&quot; close=&quot;&quot;&gt;(#&#123;key&#125;, #&#123;item&#125;)&lt;/foreach&gt;    </span><br><span class="line">&lt;/insert&gt;</span><br></pre></td></tr></table></figure></p>
<p><strong>select count(*) from key_cols where col_a = ? AND col_b = ?</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;select id=&quot;sel_key_cols&quot; resultType=&quot;int&quot;&gt;    </span><br><span class="line">    select count(*) from key_cols where    </span><br><span class="line">    &lt;foreach item=&quot;item&quot; index=&quot;key&quot; collection=&quot;map&quot;    </span><br><span class="line">        open=&quot;&quot; separator=&quot;AND&quot; close=&quot;&quot;&gt;$&#123;key&#125; = #&#123;item&#125;&lt;/foreach&gt;    </span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure></p>
<p><em>ps: 一定要注意到$和#的区别，$的参数直接输出，#的参数会被替换为?，然后传入参数值执行。</em></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title>url encoding</title>
    <url>/2017/01/24/url-encoding/</url>
    <content><![CDATA[<ul>
<li><p>RFC 3986 section 2.2 reserved january 2005</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">! * &apos;( ) ; : @&amp; = + $ ,/ ? # [ ]</span><br></pre></td></tr></table></figure>
</li>
<li><p>RFC 3986 section 2.3 unreserved january 2005</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A B C D E F G H I J K L M N O P Q RS T U V W X Y Z  </span><br><span class="line">a b c d e f g h i j k l m n o p q rs t u v w x y z  </span><br><span class="line">0 1 2 3 4 5 6 7 8 9 - _ .~</span><br></pre></td></tr></table></figure>
</li>
<li><p>RFC 2396 URI Generic Syntax reserved August 1998</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">;  /  ?  :  @  &amp;  =  +  $  ,</span><br></pre></td></tr></table></figure>
</li>
<li><p>RFC 2396 URI Generic Syntax unreserved August 1998</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alphanum  or  mark</span><br><span class="line">mark      = -  _  .  !  ~  *  &apos;  (  )</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>java use the older one</strong><br><strong>for compatible java use the same collection unreserved from all browser just like RFC2986 no ‘~’ add ‘*’</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line"> * Unreserved characters can be escaped without changing the</span><br><span class="line"> * semantics of the URI, but this should not be done unless the</span><br><span class="line"> * URI is being used in a context that does not allow the</span><br><span class="line"> * unescaped character to appear.</span><br><span class="line"> */</span><br></pre></td></tr></table></figure></p>
<h2 id="regular-expression"><a href="#regular-expression" class="headerlink" title="regular expression"></a>regular expression</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/^((ht|f)tps?):\/\/[\w\-]+(\.[\w\-]+)+([\w\-\.,@?^=%&amp;:\/~\+#]*[\w\-\@?^=%&amp;\/~\+#])?$/</span><br></pre></td></tr></table></figure>
<ul>
<li>start with ‘http/https/ftp/ftps’</li>
<li>can’t contain double bytes characters or not unreserved characters</li>
</ul>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>symbol</tag>
        <tag>regex</tag>
      </tags>
  </entry>
  <entry>
    <title>collection and array</title>
    <url>/2017/01/26/collection-and-array/</url>
    <content><![CDATA[<h2 id="Collection-to-array"><a href="#Collection-to-array" class="headerlink" title="Collection to array"></a>Collection to array</h2><ol>
<li><p>Object[]</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Object[] listArray = list.toArray();</span><br></pre></td></tr></table></figure>
</li>
<li><p>specific array</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">String[] listArray = (String[]) list.toArray(new String[0])</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>ps. it’s can’t be used to translate generic paradigm typed array</p>
<h2 id="Array-to-collection"><a href="#Array-to-collection" class="headerlink" title="Array to collection"></a>Array to collection</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">List list = new ArrayList();</span><br><span class="line">list = Arrays.asList(array);</span><br></pre></td></tr></table></figure>
<p>ps. primary type can’t do it like this, it’s parameter must be objects</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>structure</tag>
      </tags>
  </entry>
  <entry>
    <title>gzip stream</title>
    <url>/2017/01/26/gzip-stream/</url>
    <content><![CDATA[<blockquote>
<p>Use GZIPOutputStream ZipOutputStream packing the output<br>maybe it’s destination a file or a socket, it’s not the  point. usually we use generic paradigm the reprecent the  data source in stream and the compressed data out stream</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">compress</span><span class="params">(InputStream is, OutputStream os)</span></span></span><br><span class="line"><span class="function">              <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    GZIPOutputStream gos = <span class="keyword">new</span> GZIPOutputStream(os);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> count;</span><br><span class="line">    <span class="keyword">byte</span> data[] = <span class="keyword">new</span> <span class="keyword">byte</span>[BUFFER];</span><br><span class="line">    <span class="keyword">while</span> ((count = is.read(data, <span class="number">0</span>, BUFFER)) != -<span class="number">1</span>) &#123;</span><br><span class="line">        gos.write(data, <span class="number">0</span>, count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    gos.finish();</span><br><span class="line">    gos.flush();</span><br><span class="line">    gos.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>compress</tag>
      </tags>
  </entry>
  <entry>
    <title>lucene concept</title>
    <url>/2017/01/28/lucene-concept/</url>
    <content><![CDATA[<h2 id="Document"><a href="#Document" class="headerlink" title="Document"></a>Document</h2><p>Document used to describe a document, it can be a html page, a email or a text file. a Document made by a series of File.You can imagine a record of DB as a Document, fields as Fields object</p>
<h2 id="Field"><a href="#Field" class="headerlink" title="Field"></a>Field</h2><p>Field used to descibe a property in Document, like a email’s title and content can be descibed by two Fileds</p>
<h2 id="Analyzer"><a href="#Analyzer" class="headerlink" title="Analyzer"></a>Analyzer</h2><p>Before a Document be Indexed, Document content should be participle first, Analyzer will done the job. Analyzer class is a abstract class, it have a lot of implementations. In different language, it should choose right Analyzer to do this. After Analysis , the content token to IndexWriter to build Index.</p>
<h2 id="IndexWriter"><a href="#IndexWriter" class="headerlink" title="IndexWriter"></a>IndexWriter</h2><p>IndexWriter is the core Lucene used to build Index, it’s job is to take every Document into Index.</p>
<h2 id="Directory"><a href="#Directory" class="headerlink" title="Directory"></a>Directory</h2><p>This class represent Lucene’s Index save path. It is a abstract class, it has two implementations. First is FSDirectory, it represent the Index in file system. Second is RAMDirectory, it represent the Index in random memory.</p>
<h2 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h2><p>Query is a abstract class, has a lot of implementations, like TermQuery, BooleanQuery, PrefixQuery. The task of this class is to take user’s query string packing into a Query that Lucene could recognize</p>
<h2 id="IndexSearcher"><a href="#IndexSearcher" class="headerlink" title="IndexSearcher"></a>IndexSearcher</h2><p>IndexSearcher is used to search in the builded Index. It’s only way to open a Index is read, so it could be a lot of IndexSearcher on a single Index implementations do operations.</p>
<h2 id="Hits"><a href="#Hits" class="headerlink" title="Hits"></a>Hits</h2><p>Hits used to save search result.</p>
]]></content>
      <categories>
        <category>search</category>
      </categories>
      <tags>
        <tag>lucene</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Lucene Core</title>
    <url>/2017/01/27/Apache-Lucene-Core/</url>
    <content><![CDATA[<p>Apache LuceneTM is a high-performance, full-featured text search engine library<br>written entirely in Java. It is a technology suitable for nearly any application that requires full-text search, especially cross-platform.<br>Apache Lucene is an open source project available for free download.<br>Please use the links on the right to access Lucene.</p>
<h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><p>Lucene offers powerful features through a simple API:\</p>
<h3 id="Scalable-High-Performance-Indexing"><a href="#Scalable-High-Performance-Indexing" class="headerlink" title="Scalable, High-Performance Indexing"></a>Scalable, High-Performance Indexing</h3><ul>
<li>over <a href="http://home.apache.org/~mikemccand/lucenebench/indexing.html" target="_blank" rel="noopener">150GB/hour on modern hardware</a></li>
<li>small RAM requirements — only 1MB heap</li>
<li>incremental indexing as fast as batch indexing</li>
<li>index size roughly 20-30% the size of text indexed</li>
</ul>
<h3 id="Powerful-Accurate-and-Efficient-Search-Algorithms"><a href="#Powerful-Accurate-and-Efficient-Search-Algorithms" class="headerlink" title="Powerful, Accurate and Efficient Search Algorithms"></a>Powerful, Accurate and Efficient Search Algorithms</h3><ul>
<li>ranked searching — best results returned first</li>
<li>many powerful query types: phrase queries, wildcard queries, proximity queries, range queries and more</li>
<li>fielded searching (e.g. title, author, contents)</li>
<li>sorting by any field</li>
<li>multiple-index searching with merged results</li>
<li>allows simultaneous update and searching</li>
<li>flexible faceting, highlighting, joins and result grouping</li>
<li>fast, memory-efficient and typo-tolerant suggesters</li>
<li>pluggable ranking models, including the <a href="https://en.wikipedia.org/wiki/Vector_space_model" target="_blank" rel="noopener">Vector Space Model</a> and <a href="https://en.wikipedia.org/wiki/Okapi_BM25" target="_blank" rel="noopener">Okapi BM25</a></li>
<li>configurable storage engine (codecs)</li>
</ul>
<h3 id="Cross-Platform-Solution"><a href="#Cross-Platform-Solution" class="headerlink" title="Cross-Platform Solution"></a>Cross-Platform Solution</h3><ul>
<li>Available as Open Source software under the <a href="http://www.apache.org/licenses/LICENSE-2.0.html" target="_blank" rel="noopener">Apache License</a> which lets you use Lucene in both commercial and Open Source programs</li>
<li>100%-pure Java</li>
<li>Implementations in other <a href="https://wiki.apache.org/lucene-java/LuceneImplementations" target="_blank" rel="noopener">programming languages</a> available that are index-compatible</li>
</ul>
<h3 id="The-Apache-Software-Foundation"><a href="#The-Apache-Software-Foundation" class="headerlink" title="The Apache Software Foundation"></a>The Apache Software Foundation</h3><p>The <a href="http://www.apache.org/" target="_blank" rel="noopener">Apache Software Foundation</a> provides support for the Apache community of open-source software projects. The Apache projects are defined by collaborative consensus based processes, an open, pragmatic software license and a desire to create high quality software that leads the way in its field. Apache Lucene, Apache Solr, Apache PyLucene, Apache Open Relevance Project and their respective logos are trademarks of The Apache Software Foundation. All other marks mentioned may be trademarks or registered trademarks of their respective owners.</p>
]]></content>
      <categories>
        <category>search</category>
      </categories>
      <tags>
        <tag>lucene</tag>
      </tags>
  </entry>
  <entry>
    <title>lucene demo</title>
    <url>/2017/01/28/lucene-demo/</url>
    <content><![CDATA[<h2 id="Build-Index"><a href="#Build-Index" class="headerlink" title="Build Index"></a>Build Index</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.lucene.analysis.Analyzer;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.analysis.standard.StandardAnalyzer;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.document.Document;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.document.Field;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.document.TextField;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.index.IndexWriter;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.index.IndexWriterConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.store.Directory;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.store.FSDirectory;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.store.RAMDirectory;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Indexer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  IndexWriter writer;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 实例化写索引</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Indexer</span><span class="params">(String indexDir)</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        Analyzer analyzer=<span class="keyword">new</span> StandardAnalyzer();<span class="comment">//分词器</span></span><br><span class="line">        IndexWriterConfig writerConfig=<span class="keyword">new</span> IndexWriterConfig(analyzer);<span class="comment">//写索引配置</span></span><br><span class="line">        <span class="comment">//Directory ramDirectory= new RAMDirectory();//索引写的内存</span></span><br><span class="line">        Directory directory= FSDirectory.open(Paths.get(indexDir));<span class="comment">//索引存储磁盘位置</span></span><br><span class="line">        writer=<span class="keyword">new</span> IndexWriter(directory,writerConfig);<span class="comment">//实例化一个写索引</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭写索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        writer.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加指定目录的所有文件的索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataDir</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">index</span><span class="params">(String dataDir)</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        File[] files=<span class="keyword">new</span> File(dataDir).listFiles();<span class="comment">//得到指定目录的文档数组</span></span><br><span class="line">        <span class="keyword">for</span>(File file:files)&#123;</span><br><span class="line">            indexFile(file);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> writer.numDocs();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">indexFile</span><span class="params">(File file)</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"索引文件:"</span>+file.getCanonicalPath());<span class="comment">//打印索引到的文件路径信息</span></span><br><span class="line">        Document document=getDocument(file);<span class="comment">//得到一个文档信息，相对一个表记录</span></span><br><span class="line">        writer.addDocument(document);<span class="comment">//写入到索引，相当于插入一个表记录</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回一个文档记录</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Document <span class="title">getDocument</span><span class="params">(File file)</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        Document document=<span class="keyword">new</span> Document();<span class="comment">//实例化一个文档</span></span><br><span class="line">        document.add(<span class="keyword">new</span> TextField(<span class="string">"context"</span>,<span class="keyword">new</span> FileReader(file)));<span class="comment">//添加一个文档信息，相当于一个数据库表字段</span></span><br><span class="line">        document.add(<span class="keyword">new</span> TextField(<span class="string">"fileName"</span>,file.getName(), Field.Store.YES));<span class="comment">//添加文档的名字属性</span></span><br><span class="line">        document.add(<span class="keyword">new</span> TextField(<span class="string">"filePath"</span>,file.getCanonicalPath(),Field.Store.YES));<span class="comment">//添加文档的路径属性</span></span><br><span class="line">        <span class="keyword">return</span> document;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []ages)</span></span>&#123;</span><br><span class="line">        String indexDir=<span class="string">"E:\\LuceneIndex"</span>;</span><br><span class="line">        String dataDir=<span class="string">"E:\\LuceneTestData"</span>;</span><br><span class="line">        Indexer indexer=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">int</span> indexSum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            indexer=<span class="keyword">new</span> Indexer(indexDir);</span><br><span class="line">            indexSum= indexer.index(dataDir);</span><br><span class="line">            System.out.printf(<span class="string">"完成"</span>+indexSum+<span class="string">"个文件的索引"</span>);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                indexer.close();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Read-amp-Query"><a href="#Read-amp-Query" class="headerlink" title="Read &amp; Query"></a>Read &amp; Query</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.lucene.analysis.Analyzer;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.analysis.standard.StandardAnalyzer;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.document.Document;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.document.Field;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.document.TextField;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.index.IndexWriter;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.index.IndexWriterConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.store.Directory;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.store.FSDirectory;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.store.RAMDirectory;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Indexer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  IndexWriter writer;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 实例化写索引</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Indexer</span><span class="params">(String indexDir)</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        Analyzer analyzer=<span class="keyword">new</span> StandardAnalyzer();<span class="comment">//分词器</span></span><br><span class="line">        IndexWriterConfig writerConfig=<span class="keyword">new</span> IndexWriterConfig(analyzer);<span class="comment">//写索引配置</span></span><br><span class="line">        <span class="comment">//Directory ramDirectory= new RAMDirectory();//索引写的内存</span></span><br><span class="line">        Directory directory= FSDirectory.open(Paths.get(indexDir));<span class="comment">//索引存储磁盘位置</span></span><br><span class="line">        writer=<span class="keyword">new</span> IndexWriter(directory,writerConfig);<span class="comment">//实例化一个写索引</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭写索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        writer.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加指定目录的所有文件的索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataDir</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">index</span><span class="params">(String dataDir)</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        File[] files=<span class="keyword">new</span> File(dataDir).listFiles();<span class="comment">//得到指定目录的文档数组</span></span><br><span class="line">        <span class="keyword">for</span>(File file:files)&#123;</span><br><span class="line">            indexFile(file);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> writer.numDocs();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">indexFile</span><span class="params">(File file)</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"索引文件:"</span>+file.getCanonicalPath());<span class="comment">//打印索引到的文件路径信息</span></span><br><span class="line">        Document document=getDocument(file);<span class="comment">//得到一个文档信息，相对一个表记录</span></span><br><span class="line">        writer.addDocument(document);<span class="comment">//写入到索引，相当于插入一个表记录</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回一个文档记录</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Document <span class="title">getDocument</span><span class="params">(File file)</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        Document document=<span class="keyword">new</span> Document();<span class="comment">//实例化一个文档</span></span><br><span class="line">        document.add(<span class="keyword">new</span> TextField(<span class="string">"context"</span>,<span class="keyword">new</span> FileReader(file)));<span class="comment">//添加一个文档信息，相当于一个数据库表字段</span></span><br><span class="line">        document.add(<span class="keyword">new</span> TextField(<span class="string">"fileName"</span>,file.getName(), Field.Store.YES));<span class="comment">//添加文档的名字属性</span></span><br><span class="line">        document.add(<span class="keyword">new</span> TextField(<span class="string">"filePath"</span>,file.getCanonicalPath(),Field.Store.YES));<span class="comment">//添加文档的路径属性</span></span><br><span class="line">        <span class="keyword">return</span> document;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []ages)</span></span>&#123;</span><br><span class="line">        String indexDir=<span class="string">"E:\\LuceneIndex"</span>;</span><br><span class="line">        String dataDir=<span class="string">"E:\\LuceneTestData"</span>;</span><br><span class="line">        Indexer indexer=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">int</span> indexSum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            indexer=<span class="keyword">new</span> Indexer(indexDir);</span><br><span class="line">            indexSum= indexer.index(dataDir);</span><br><span class="line">            System.out.printf(<span class="string">"完成"</span>+indexSum+<span class="string">"个文件的索引"</span>);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                indexer.close();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>search</category>
      </categories>
      <tags>
        <tag>lucene</tag>
      </tags>
  </entry>
  <entry>
    <title>Full-text retrieval fundamental (1)</title>
    <url>/2017/01/29/Full-text-retrieval-fundamental-1/</url>
    <content><![CDATA[<h2 id="Introduce"><a href="#Introduce" class="headerlink" title="Introduce"></a>Introduce</h2><ul>
<li>结构化数据: 指有规律结构固定格式长度的数据, 如数据库</li>
<li>非结构化数据: 指无规律不定长不固定格式的数据, 如邮件</li>
<li>半结构化数据: XML/HTML等, 可按需求以不同形式处理</li>
</ul>
<p>非结构化数据又一种叫法叫全文数据。</p>
<p>全文检索大体分两个过程，索引创建(Indexing)和搜索索引(Search)。</p>
<ul>
<li>索引创建：将现实世界中所有的结构化和非结构化数据提取信息，创建索引的过程。</li>
<li>搜索索引：就是得到用户的查询请求，搜索创建的索引，然后返回结果的过程。</li>
</ul>
<p>全文检索就存在三个重要问题：</p>
<ol>
<li>索引里面究竟存些什么？(Index)</li>
<li>如何创建索引？(Indexing)</li>
<li>如何对索引进行搜索？(Search)</li>
</ol>
<h2 id="What-fuck-in-these-Index"><a href="#What-fuck-in-these-Index" class="headerlink" title="What fuck in these Index"></a>What fuck in these Index</h2><ul>
<li>存的是<strong> 符号表 </strong> 通俗的说是个映射表</li>
<li>从字符串到文件的映射是文件到字符串映射的反向过程，于是保存这种信息的索引称为<strong> 反向索引 </strong> 。</li>
<li>左边的一系列为词典也叫Key</li>
<li>右边的一系列为倒排表也叫Value</li>
</ul>
<p><em>建索引的好处是一次建立, 多次使用, 如果建索引的频率过于频繁反而会拖累整体性能</em></p>
]]></content>
      <categories>
        <category>search</category>
      </categories>
      <tags>
        <tag>fundamental</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Lucene Demo</title>
    <url>/2017/01/29/Apache-Lucene-Demo/</url>
    <content><![CDATA[<h2 id="IndexFiles"><a href="#IndexFiles" class="headerlink" title="IndexFiles"></a>IndexFiles</h2><p>As we discussed in the previous walk-through, the IndexFiles class creates a Lucene Index. Let’s take a look at how it does this.</p>
<p>The main() method parses the command-line parameters, then in preparation for instantiating <code>IndexWriter</code>, opens a <code>Directory</code>, and instantiates <code>StandardAnalyzer</code> and <code>IndexWriterConfig</code>.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;args.length;i++) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="string">"-index"</span>.equals(args[i])) &#123;</span><br><span class="line">    indexPath = args[i+<span class="number">1</span>];</span><br><span class="line">    i++;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"-docs"</span>.equals(args[i])) &#123;</span><br><span class="line">    docsPath = args[i+<span class="number">1</span>];</span><br><span class="line">    i++;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"-update"</span>.equals(args[i])) &#123;</span><br><span class="line">    create = <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The value of the <code>-index</code> command-line parameter is the name of the <strong> filesystem directory </strong> where all index information should be stored. If IndexFiles is invoked with a relative path given in the -index command-line parameter, or if the -index command-line parameter is not given, causing the default relative index path “index” to be used, the index path will be created as a subdirectory of the current working directory (if it does not already exist). On some platforms, the index path may be created in a different directory (such as the user’s home directory).</p>
<p>The <code>-docs</code> command-line parameter value is the location of the directory containing files <strong> to be indexed </strong> .</p>
<p>The <code>-update</code> command-line parameter tells IndexFiles <strong> not to delete </strong> the index if it already exists. When -update is not given, IndexFiles will first wipe the slate clean before indexing any documents.</p>
<p>Lucene <code>Directorys</code> are used by the IndexWriter to store information in the index. In addition to the <code>FSDirectory</code> implementation we are using, there are several other Directory subclasses that can write to RAM, to databases, etc.<br>(索引可以放在文件/内存/数据库…)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Directory dir = FSDirectory.open(Paths.get(indexPath));</span><br></pre></td></tr></table></figure>
<p>Lucene <code>Analyzers</code> are processing pipelines that break up text into indexed tokens, a.k.a. terms, and optionally perform other operations on these tokens, e.g. downcasing, synonym insertion, filtering out unwanted tokens, etc. The Analyzer we are using is StandardAnalyzer, which creates tokens using the Word Break rules from the Unicode Text Segmentation algorithm specified in <a href="http://unicode.org/reports/tr29/" target="_blank" rel="noopener">Unicode Standard Annex #29</a>; converts tokens to lowercase; and then filters out stopwords. Stopwords are common language words such as articles (a, an, the, etc.) and other tokens that may have less value for searching. It should be noted that there are different rules for every language, and you should use the proper analyzer for each. Lucene currently provides Analyzers for a number of different languages (see the javadocs under <a href="http://lucene.apache.org/core/6_4_0/analyzers-common/overview-summary.html" target="_blank" rel="noopener">lucene/analysis/common/src/java/org/apache/lucene/analysis</a>).</p>
<p>The IndexWriterConfig instance holds all configuration for IndexWriter. For example, we set the OpenMode to use here based on the value of the -update command-line parameter.</p>
<p>Looking further down in the file, after IndexWriter is instantiated, you should see the indexDocs() code. This recursive function crawls the directories and creates <code>Document</code> objects. The Document is simply a data object to represent the text content from the file as well as its creation time and location. These instances are added to the IndexWriter. If the -update command-line parameter is given, the IndexWriterConfig OpenMode will be set to <code>OpenMode.CREATE_OR_APPEND</code>, and rather than adding documents to the index, the IndexWriter will <strong> update </strong> them in the index by attempting to find an already-indexed document with the same identifier (in our case, the file path serves as the identifier); deleting it from the index if it exists; and then adding the new document to the index.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** Indexes a single document */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">indexDoc</span><span class="params">(IndexWriter writer, Path file, <span class="keyword">long</span> lastModified)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> (InputStream stream = Files.newInputStream(file)) &#123;</span><br><span class="line">    <span class="comment">// make a new, empty document</span></span><br><span class="line">    Document doc = <span class="keyword">new</span> Document();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add the path of the file as a field named "path".  Use a</span></span><br><span class="line">    <span class="comment">// field that is indexed (i.e. searchable), but don't tokenize</span></span><br><span class="line">    <span class="comment">// the field into separate words and don't index term frequency</span></span><br><span class="line">    <span class="comment">// or positional information:</span></span><br><span class="line">    Field pathField = <span class="keyword">new</span> StringField(<span class="string">"path"</span>, file.toString(), Field.Store.YES);</span><br><span class="line">    doc.add(pathField);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add the last modified date of the file a field named "modified".</span></span><br><span class="line">    <span class="comment">// Use a LongPoint that is indexed (i.e. efficiently filterable with</span></span><br><span class="line">    <span class="comment">// PointRangeQuery).  This indexes to milli-second resolution, which</span></span><br><span class="line">    <span class="comment">// is often too fine.  You could instead create a number based on</span></span><br><span class="line">    <span class="comment">// year/month/day/hour/minutes/seconds, down the resolution you require.</span></span><br><span class="line">    <span class="comment">// For example the long value 2011021714 would mean</span></span><br><span class="line">    <span class="comment">// February 17, 2011, 2-3 PM.</span></span><br><span class="line">    doc.add(<span class="keyword">new</span> LongPoint(<span class="string">"modified"</span>, lastModified));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add the contents of the file to a field named "contents".  Specify a Reader,</span></span><br><span class="line">    <span class="comment">// so that the text of the file is tokenized and indexed, but not stored.</span></span><br><span class="line">    <span class="comment">// Note that FileReader expects the file to be in UTF-8 encoding.</span></span><br><span class="line">    <span class="comment">// If that's not the case searching for special characters will fail.</span></span><br><span class="line">    doc.add(<span class="keyword">new</span> TextField(<span class="string">"contents"</span>, <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(stream, StandardCharsets.UTF_8))));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (writer.getConfig().getOpenMode() == OpenMode.CREATE) &#123;</span><br><span class="line">      <span class="comment">// New index, so we just add the document (no old document can be there):</span></span><br><span class="line">      System.out.println(<span class="string">"adding "</span> + file);</span><br><span class="line">      writer.addDocument(doc);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// Existing index (an old copy of this document may have been indexed) so</span></span><br><span class="line">      <span class="comment">// we use updateDocument instead to replace the old one matching the exact</span></span><br><span class="line">      <span class="comment">// path, if present:</span></span><br><span class="line">      System.out.println(<span class="string">"updating "</span> + file);</span><br><span class="line">      writer.updateDocument(<span class="keyword">new</span> Term(<span class="string">"path"</span>, file.toString()), doc);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Searching-Files"><a href="#Searching-Files" class="headerlink" title="Searching Files"></a>Searching Files</h2><p>The SearchFiles class is quite simple. It primarily collaborates with an <code>IndexSearcher</code>, <code>StandardAnalyzer</code>, (which is used in the <code>IndexFiles</code> class as well) and a QueryParser. The query parser is constructed with an analyzer used to interpret your query text in the same way the documents are interpreted: finding word boundaries, downcasing, and removing useless words like ‘a’, ‘an’ and ‘the’. The Query object contains the results from the QueryParser which is passed to the searcher. Note that it’s also possible to programmatically construct a rich <code>Query</code> object without using the <code>query parser</code>. The <code>query</code> parser just enables decoding the <a href="http://lucene.apache.org/core/6_4_0/queryparser/org/apache/lucene/queryparser/classic/package-summary.html#package_description" target="_blank" rel="noopener">Lucene query syntax</a> into the corresponding Query object.</p>
<p>SearchFiles uses the <code>IndexSearcher.search(query,n)</code> method that returns <code>TopDocs</code> with max n hits. The results are printed in pages, sorted by score (i.e. relevance).</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Collect enough docs to show 5 pages</span></span><br><span class="line">TopDocs results = searcher.search(query, <span class="number">5</span> * hitsPerPage);</span><br><span class="line">ScoreDoc[] hits = results.scoreDocs;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>search</category>
      </categories>
      <tags>
        <tag>lucene</tag>
      </tags>
  </entry>
  <entry>
    <title>Full-text retrieval fundamental (2)</title>
    <url>/2017/01/30/Full-text-retrieval-fundamental-2/</url>
    <content><![CDATA[<h2 id="How-to-build-Index"><a href="#How-to-build-Index" class="headerlink" title="How to build Index"></a>How to build Index</h2><h3 id="1-Prepare-origin-Document"><a href="#1-Prepare-origin-Document" class="headerlink" title="1. Prepare origin Document"></a>1. Prepare origin Document</h3><ul>
<li>file1: Researches of Chinese full-text search technologies based on word indexing is related to many fields.</li>
<li>file2: The Index Data Service provides basic full-text functions for storage and retrieval of terms and indexed summary documents.<h3 id="2-Put-Document-TOKENIZER"><a href="#2-Put-Document-TOKENIZER" class="headerlink" title="2. Put Document TOKENIZER"></a>2. Put Document TOKENIZER</h3></li>
</ul>
<ol>
<li>split Document into words</li>
<li>separate <code>symbols</code></li>
<li><p>separate <code>Stop word</code></p>
<p>Stop word in english like: “like”, “a”, “this”…<br>After Tokenier got Token:<br>“Researches” “Chinese” “full” “text” “search” “technologies” “word” “indexing” “related” “many” “fields” “Index” “Data” “Service” “provides” “basic” “full” “text” “functions” “storage” “retrieval” “terms” “indexed” “summary” “documents”</p>
</li>
</ol>
<h3 id="3-Put-TOKEN-to-LINGUISTIC-PROCESSOR"><a href="#3-Put-TOKEN-to-LINGUISTIC-PROCESSOR" class="headerlink" title="3. Put TOKEN to LINGUISTIC PROCESSOR"></a>3. Put TOKEN to LINGUISTIC PROCESSOR</h3><ol>
<li>to Lowercase</li>
<li>words reduce to root type like “fields” to “field” <code>stemming</code></li>
<li><p>words to origin type like “indexed” to “index” <code>lemmatization</code></p>
<p><strong><em>the difference between “Stemming” and “lemmatization”</em></strong></p>
<ul>
<li>same: make words to initial</li>
<li><p>difference:</p>
<blockquote>
<ul>
<li>Stemming is reduce</li>
<li>lemmatization is change</li>
</ul>
</blockquote>
</li>
<li><p>difference in algorithm:</p>
<blockquote>
<ul>
<li>Stemming is delete “s”, “ing”-&gt;”e”, “ational”-&gt;”ate”, “tional”-&gt; “tion”</li>
<li>lemmatization is “drove” -&gt; “drive”</li>
</ul>
</blockquote>
</li>
<li>they are not mutex, but mates</li>
</ul>
<p><strong><em>After linguistic processor result be call <code>Term</code>:</em></strong><br>“researche” “chinese” “full” “text” “search” “technologie” “word” “index” “relate” “many” “field” “index” “data” “service” “provide” “basic” “full” “text” “function” “storage” “retrieve” “term” “index” “summary” “document”</p>
<p>Because the linguistic processor when search drove, drive’s documents can be found.</p>
</li>
</ol>
<h3 id="4-Put-TERM-to-INDEXER"><a href="#4-Put-TERM-to-INDEXER" class="headerlink" title="4. Put TERM to INDEXER"></a>4. Put TERM to INDEXER</h3><ol>
<li>Build a dictionary in Term</li>
</ol>
<div class="table-container">
<table>
<thead>
<tr>
<th>Term</th>
<th style="text-align:right">Document ID</th>
</tr>
</thead>
<tbody>
<tr>
<td>researche</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>chinese</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>full</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>text</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>search</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>technologie</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>word</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>index</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>relate</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>many</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>field</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>index</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>data</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>service</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>provide</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>basic</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>full</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>text</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>function</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>storage</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>retrieve</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>term</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>index</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>summary</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>document</td>
<td style="text-align:right">2</td>
</tr>
</tbody>
</table>
</div>
<ol>
<li>sort table by key’s first letter</li>
</ol>
<div class="table-container">
<table>
<thead>
<tr>
<th>Term</th>
<th style="text-align:right">Document ID</th>
</tr>
</thead>
<tbody>
<tr>
<td>basic</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>chinese</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>data</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>document</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>field</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>full</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>full</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>function</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>index</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>index</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>index</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>many</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>provide</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>relate</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>researche</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>retrieve</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>search</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>service</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>storage</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>summary</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>technologie</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>term</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>text</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td>text</td>
<td style="text-align:right">2</td>
</tr>
<tr>
<td>word</td>
<td style="text-align:right">1</td>
</tr>
</tbody>
</table>
</div>
<ol>
<li>merge same Term into Posting List<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Term-[Document Frequency] | DocumentID-Frequency</span><br><span class="line">basic-1        2-1</span><br><span class="line">chinese-1     1-1</span><br><span class="line">data-1        2-1</span><br><span class="line">document-1    2-1</span><br><span class="line">field-1       1-1</span><br><span class="line">full-2        1-1 -&gt; 2-1</span><br><span class="line">function-1    2-1</span><br><span class="line">index-2       2-2 -&gt; 1-1</span><br><span class="line">many-1        1-1</span><br><span class="line">provide-1     2-1</span><br><span class="line">relate-1      1-1</span><br><span class="line">researche-1   1-1</span><br><span class="line">retrieve-2    2-1</span><br><span class="line">search-1      1-1</span><br><span class="line">service-2     2-1</span><br><span class="line">storage-2     2-1</span><br><span class="line">summary-2     2-1</span><br><span class="line">technologie-1 1-1</span><br><span class="line">term-2        2-1</span><br><span class="line">text-2        2-1 -&gt; 1-1</span><br><span class="line">word-1        1-1</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ul>
<li>Document Frequency: Document appear times</li>
<li>Frequency: Term appear times in Document</li>
</ul>
<p><strong><em> When searching “drive” “driving” “drove” “driven” will be processor to drive like build Index process </em></strong></p>
]]></content>
      <categories>
        <category>search</category>
      </categories>
      <tags>
        <tag>fundamental</tag>
      </tags>
  </entry>
  <entry>
    <title>Full-text retrieval fundamental (3)</title>
    <url>/2017/01/30/Full-text-retrieval-fundamental-3/</url>
    <content><![CDATA[<h2 id="How-to-search-in-Index"><a href="#How-to-search-in-Index" class="headerlink" title="How to search in Index"></a>How to search in Index</h2><p> <strong>How to find the result you want most, or the most relevant result with query phrase?</strong></p>
<h3 id="1-first-User-input-query-pharse"><a href="#1-first-User-input-query-pharse" class="headerlink" title="1. first: User input query pharse"></a>1. first: User input query pharse</h3><p>  <em>The basic query grammar like “AND”, “OR”, “NOT”.</em><br>  <code>elephant and tiger or lion not sheep</code></p>
<h3 id="2-second-Query-pharse-lexical-analysis-syntax-analysis-and-language-processing"><a href="#2-second-Query-pharse-lexical-analysis-syntax-analysis-and-language-processing" class="headerlink" title="2. second: Query pharse lexical analysis, syntax analysis, and language processing"></a>2. second: Query pharse lexical analysis, syntax analysis, and language processing</h3><ol>
<li>lexical analysis used to distinguish words and key words</li>
<li>syntax analysis used to build a grammar tree by syntax rule</li>
<li>language processing just like the processe in building Index. check page 2</li>
</ol>
<h3 id="3-third-Traverse-Index-get-result-that-fit-syntax-tree"><a href="#3-third-Traverse-Index-get-result-that-fit-syntax-tree" class="headerlink" title="3. third: Traverse Index, get result that fit syntax tree"></a>3. third: Traverse Index, get result that fit syntax tree</h3><ol>
<li>first find the documents contain words(elephant tiger lion) in the posting list.</li>
<li>second merge documents contain both elephant, tiger or lion.</li>
<li>third separate documents contain sheep, got result contain both elephant, tiger or lion not sheep.</li>
</ol>
<h3 id="4-fourth-Sort-result-by-relevant-between-query-pharse-and-search-result"><a href="#4-fourth-Sort-result-by-relevant-between-query-pharse-and-search-result" class="headerlink" title="4. fourth: Sort result by relevant between query pharse and search result"></a>4. fourth: Sort result by relevant between query pharse and search result</h3><p> <strong>How to calculate the relevance between documents and query pharse?</strong><br> Toke query pharse as a shot document, scoring relevance between documents, the higher score is the higher rank document is.<br> <em>How to score the relevance between documents?</em><br> <strong><em>It’s not easy a thing</em></strong></p>
<ul>
<li>Check what is the important factors between documents</li>
<li>Check the relation between these factors</li>
</ul>
<hr>
<ul>
<li>The process of finding the importance of a word (Term) to a document is called the weight (Term) process.</li>
<li>The process of judging the relationship between Term to get document relevance using an algorithm called <code>Vector Space Model</code></li>
</ul>
<hr>
<h2 id="Term-weight-process"><a href="#Term-weight-process" class="headerlink" title="Term weight process"></a>Term weight process</h2><p><strong>This is a simple classic implementation, lucene’s have a little difference</strong></p>
<script type="math/tex; mode=display">w_{t_\eta}{_d} = tf_{t_\eta}{_d} \times log(n/df_t)</script><ul>
<li>$w<em>{t</em>\eta}{_d}$ = the weight of the term t in document d</li>
<li>$tf<em>{t</em>\eta}{_d}$ = frequency of term t in document d</li>
<li>$n$ = total number of documents</li>
<li>$df_t$ = the number of documents that contain term t</li>
</ul>
<ul>
<li>Term Frequency (tf): How many times this Term show in this document, the bigger tf is , the more importance this Term is.</li>
<li>Document Frequency (df)：How many documents contain this Term, the bigger df is, the less importance this Term is.</li>
</ul>
<p><strong>Like programmer, the deeper technology you leanr is better(tf big), the less technology people know is better (df little). When finding job your competitive power would be grate. Man’s value is about unsubsititutability</strong></p>
<h2 id="Vector-Space-Model"><a href="#Vector-Space-Model" class="headerlink" title="Vector Space Model"></a>Vector Space Model</h2><p><strong>Less the two vector’s angle is the more relevance is</strong><br><strong>We take two vector’s consine as the score point</strong></p>
]]></content>
      <categories>
        <category>search</category>
      </categories>
      <tags>
        <tag>fundamental</tag>
      </tags>
  </entry>
  <entry>
    <title>lucene index file constructure (1)</title>
    <url>/2017/02/01/lucene-index-file-constructure-1/</url>
    <content><![CDATA[<ul>
<li>Index<ul>
<li>In Lucene an Index is in a directory</li>
<li>All files constitute an Index</li>
</ul>
</li>
<li>Segment<ul>
<li>An Index could contain a lot of Segments, each Segment is independent.<br>The new added document could be build into a new Segment, different Segment can be merged.</li>
<li>If files prefix is same, they belong to same Segment, like “_0”, “_1”, “_2”.</li>
<li>segments.gen and segments_X is Segment’s metaldata, storage it’s propertites information.</li>
</ul>
</li>
<li>Document<ul>
<li>Document is the basic unit in building Index. Different Document storage in different Segment, a Segment can contain a lot of Documents.</li>
<li>New added Document is in Segment new build, when Segment be merged, different document be merged into same Segment.</li>
</ul>
</li>
<li>Field<ul>
<li>A document may contain different type informations, like time, content, write and so on, it can be index separately, and be storage in different Term.</li>
<li>Different Term’s Index way can be different, when analysis Term’s storage, we would explain it.</li>
</ul>
</li>
<li>Term<ul>
<li>Term is the basic unit in Index. It is the string after lexical analysis and language processing</li>
</ul>
</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>文件拓展名</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>段文件</td>
<td>segments_N</td>
<td style="text-align:center">保存了索引包含的多少段，每个段包含多少文档。</td>
</tr>
<tr>
<td>段元数据</td>
<td>.si</td>
<td style="text-align:center">保存了索引段的元数据信息</td>
</tr>
<tr>
<td>锁文件&nbsp;</td>
<td>write.lock</td>
<td style="text-align:center">防止多个IndexWriter同时写到一份索引文件中。</td>
</tr>
<tr>
<td>复合索引文件</td>
<td>.cfs, .cfe</td>
<td style="text-align:center">把所有索引信息都存储到复合索引文件中。</td>
</tr>
<tr>
<td>索引段的域信息</td>
<td>.fnm</td>
<td style="text-align:center">保存此段包含的域，以及域的名称和域的索引类型。</td>
</tr>
<tr>
<td>索引段的文档信息</td>
<td>.fdx, .fdt</td>
<td style="text-align:center">保存此段包含的文档，每篇文档中包含的域以及每个域的信息。</td>
</tr>
<tr>
<td>索引段Term信息</td>
<td>.tim, .tip</td>
<td style="text-align:center">.tim文件中存储着每个域中Term的统计信息且保存着指向  .doc, .pos, and .pay 索引文件的指针。  .tip文件保存着Term 字典的索引信息，可支持随机访问。</td>
</tr>
<tr>
<td>文档中Term词频和跳表信息</td>
<td>.doc</td>
<td style="text-align:center">保存此段中每个文档对应的Term频率信息。</td>
</tr>
<tr>
<td>文档中Term的位置信息</td>
<td>.pos</td>
<td style="text-align:center">保存此段中每个文档对应的Term位置信息。</td>
</tr>
<tr>
<td>文档的有效载荷和部分位置信息</td>
<td>.pay</td>
<td style="text-align:center">保存此段中每个文档的有效载体(payload) 和 Term的位置信息(offsets)。 其中有一部分的Term位置信息存储在.pos文件中。</td>
</tr>
<tr>
<td>索引字段加权因子</td>
<td>.nvd, .nvm</td>
<td style="text-align:center">.nvm 文件保存索引字段加权因子的元数据  .nvd 文件保存索引字段加权数据</td>
</tr>
<tr>
<td>索引文档加权因子</td>
<td>.dvd, .dvm</td>
<td style="text-align:center">.dvm 文件保存索引文档加权因子的元数据  .dvd 文件保存索引文档加权数据</td>
</tr>
<tr>
<td>索引矢量数据</td>
<td>.tvx, .tvd, .tvf</td>
<td style="text-align:center">.tvd 存储此段文档的Term、Term频率、位置信息、有效载荷等信息。  .tvx 索引文件，用于把特定的文档加载到内存。  .tvf 保存索引字段的矢量信息。</td>
</tr>
<tr>
<td>有效文档</td>
<td>.liv</td>
<td style="text-align:center">保存有效文档的索引文件信息</td>
</tr>
</tbody>
</table>
</div>
<div class="table-container">
<table>
<thead>
<tr>
<th>Name</th>
<th>Extension</th>
<th style="text-align:center">Brief Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>Segments File</td>
<td>segments.gen, segments_N</td>
<td style="text-align:center">Stores information about segments</td>
</tr>
<tr>
<td>Lock File</td>
<td>write.lock</td>
<td style="text-align:center">The Write lock prevents multiple IndexWriters from writing to the same file.</td>
</tr>
<tr>
<td>Compound File</td>
<td>.cfs</td>
<td style="text-align:center">An optional “virtual” file consisting of all the other index files for systems that frequently run out of file handles.</td>
</tr>
<tr>
<td>Fields</td>
<td>.fnm</td>
<td style="text-align:center">Stores information about the fields</td>
</tr>
<tr>
<td>Field Index</td>
<td>.fdx</td>
<td style="text-align:center">Contains pointers to field data</td>
</tr>
<tr>
<td>Field Data</td>
<td>.fdt</td>
<td style="text-align:center">The stored fields for documents</td>
</tr>
<tr>
<td>Term Infos</td>
<td>.tis</td>
<td style="text-align:center">Part of the term dictionary, stores term info</td>
</tr>
<tr>
<td>Term Info Index</td>
<td>.tii</td>
<td style="text-align:center">The index into the Term Infos file</td>
</tr>
<tr>
<td>Frequencies</td>
<td>.frq</td>
<td style="text-align:center">Contains the list of docs which contain each term along with frequency</td>
</tr>
<tr>
<td>Positions</td>
<td>.prx</td>
<td style="text-align:center">Stores position information about where a term occurs in the index</td>
</tr>
<tr>
<td>Norms</td>
<td>.nrm</td>
<td style="text-align:center">Encodes length and boost factors for docs and fields</td>
</tr>
<tr>
<td>Term Vector Index</td>
<td>.tvx</td>
<td style="text-align:center">Stores offset into the document data file</td>
</tr>
<tr>
<td>Term Vector Documents</td>
<td>.tvd</td>
<td style="text-align:center">Contains information about each document that has term vectors</td>
</tr>
<tr>
<td>Term Vector Fields</td>
<td>.tvf</td>
<td style="text-align:center">The field level info about term vectors</td>
</tr>
<tr>
<td>Deleted Documents</td>
<td>.del</td>
<td style="text-align:center">Info about what files are deleted</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Lucene’s-index-not-only-storage-positive-mapping-but-also-storage-negative-mapping"><a href="#Lucene’s-index-not-only-storage-positive-mapping-but-also-storage-negative-mapping" class="headerlink" title="Lucene’s index not only storage positive mapping but also storage negative mapping"></a>Lucene’s index not only storage positive mapping but also storage negative mapping</h2><h3 id="Positive-mapping"><a href="#Positive-mapping" class="headerlink" title="Positive mapping"></a>Positive mapping</h3><ul>
<li>From Index to Term : Index –&gt; segment –&gt; Document –&gt; Field –&gt; Term</li>
<li>Each upper floor storage it’s children floors’ matedata. Like a province, a city, a county, they got it’s chilren’s info.<ul>
<li>segments_N : how many segment the Index have, how many Documents each segment have.</li>
<li>.fnm : how many Fields the segment contain, each Field’s name and Index way.</li>
<li>.fdx , .fdt : all Documents the segment have, how many Fields each Document have, what information each field recorded.</li>
<li>.tvx , .tvd , .tvf : how many Documents the segment have, how many Fields each Document have, how many words each Field have, every words’ string, position, and so on.<h3 id="Negative-mapping"><a href="#Negative-mapping" class="headerlink" title="Negative mapping"></a>Negative mapping</h3></li>
</ul>
</li>
<li>Term -&gt; Document<ul>
<li>.tis , .tii : Term dictionary, that is segment’s words sort by alphabet sequencely.</li>
<li>.frq : posting sorted table, that is table that contain all words’ Document ID.</li>
<li>.prx : the word position in Document at posting sorted table.</li>
</ul>
</li>
</ul>
<h2 id="Primary-Type"><a href="#Primary-Type" class="headerlink" title="Primary Type"></a>Primary Type</h2><ul>
<li>Byte : the most basic type, 8 bits long.</li>
<li>UInt32 : composed by 4 Bytes.</li>
<li>UInt64 : composed by 8 Bytes.</li>
<li>VInt :<ul>
<li>May be composed by many Bytes.</li>
<li>Front byte represent lower number bit.</li>
<li>For example: 51271 - [1]1000111, [1]0010000, [0]0000011</li>
</ul>
</li>
<li>Chars : UTF-8 encoding bytes.</li>
<li>String : first a VInt represent Char numbers, then a series of Chars.</li>
</ul>
]]></content>
      <categories>
        <category>search</category>
      </categories>
      <tags>
        <tag>lucene</tag>
        <tag>constructure</tag>
      </tags>
  </entry>
  <entry>
    <title>lucene index file constructure (2)</title>
    <url>/2017/02/02/lucene-index-file-constructure-2/</url>
    <content><![CDATA[<h2 id="1-Prefix-amp-Suffix"><a href="#1-Prefix-amp-Suffix" class="headerlink" title="1. Prefix &amp; Suffix"></a>1. Prefix &amp; Suffix</h2><p>Lucene negative index will storage Term Dictionary. All Term sort by ‘dictionary sequence’, but Dictionary contain all word in documents, some words have long length and it’s <strong>occupy space</strong> will be astonish. In Lucene, when some word has same prefix with is privious <strong><code>word</code></strong>[may be it’s prefix is offset from it’s privious one], word storage it’s prefix’s offset in word then suffix.</p>
<p><strong>Nature storage:</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[VInt = 4] [t][e][r][m]</span><br><span class="line">[VInt = 10][t][e][r][m][a][g][a][n][c][y]</span><br><span class="line">[VInt = 9][t][e][r][m][a][g][a][n][t]</span><br><span class="line">[VInt = 8][t][e][r][m][i][n][a][l]</span><br></pre></td></tr></table></figure></p>
<p><strong>Compress storage:</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[VInt = 4] [t][e][r][m]</span><br><span class="line">[VInt = 4 (offset)][VInt = 6][a][g][a][n][c][y]</span><br><span class="line">[VInt = 8 (offset)][VInt = 1][t]</span><br><span class="line">[VInt = 4(offset)][VInt = 4][i][n][a][l]</span><br></pre></td></tr></table></figure></p>
<script type="math/tex; mode=display">4[term]\times3+4[agan]-3[offset]=13bytes</script><p><strong>Reduce occupy space, especially in dictionary sequence order condition, prefixs’ has big repeat probability</strong></p>
<h2 id="2-Delta"><a href="#2-Delta" class="headerlink" title="2.Delta"></a>2.Delta</h2><p>Lucene negative index need to storage a lot of Integer number like Id, position, frequence and so on. For reduce the occupy space of Integer, when Integer increase, it only storage it’s <strong>difference value</strong>.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">16386 16387 16388 16389</span><br><span class="line">[(1) 000, 0010][(1) 000, 0000][(0) 000, 0001]</span><br><span class="line">[(1) 000, 0011][(1) 000, 0000][(0) 000, 0001]</span><br><span class="line">[(1) 000, 0100][(1) 000, 0000][(0) 000, 0001]</span><br><span class="line">[(1) 000, 0101][(1) 000, 0000][(0) 000, 0001]</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">16386 16387 16388 16389</span><br><span class="line">[(1) 000, 0010][(1) 000, 0000][(0) 000, 0001]</span><br><span class="line">[(0) 000, 0001]</span><br><span class="line">[(0) 000, 0001]</span><br><span class="line">[(0) 000, 0001]</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">2[high num bytes]\times3 = 6</script><h2 id="3-Flag-A-B"><a href="#3-Flag-A-B" class="headerlink" title="3. Flag (A, B?)"></a>3. Flag (A, B?)</h2><p>There are same condition in Lucene index constructure, after block maybe have another block , maybe not. Nature storage is add a byte to flag it’s boolean. Actually a bit is enough, put origin data <strong>move left</strong> a bit, save a bit to show it’s boolean. Data minuse 2 got it’s origin data.</p>
<h3 id="Obey"><a href="#Obey" class="headerlink" title="Obey"></a>Obey</h3><ul>
<li>.frq DocDelta[, Freq?], DocSkip[, PayloadLength?]</li>
<li>.prx positionDelta[, Playload?](incomplete)</li>
</ul>
<h3 id="Not-obey"><a href="#Not-obey" class="headerlink" title="Not obey"></a>Not obey</h3><ul>
<li>.frq SkipChildLevePointer multi skip, when last level no need flag.</li>
<li>.tvf Positions, Offsets</li>
</ul>
<h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><ul>
<li>When A, B condition occur a lot, save 8 times space is economical.</li>
<li>For not obey, cause have a global macro, it is effective in all Field even all index.</li>
</ul>
<h2 id="4-Skip-list"><a href="#4-Skip-list" class="headerlink" title="4.Skip list"></a>4.Skip list</h2><p>For inprove search performance Lucene use a lot of skip list data structure.</p>
<ul>
<li>Element is sequential, in lucene either number order or alphabet order.</li>
<li>Skip have <strong>interval</strong>, it’s a config in advance, that is skip element number.</li>
<li>Skip list have level, it’s config interve point it’s up level [12 -&gt; 5 -&gt; 2][interval 3]</li>
</ul>
<h3 id="Define-difference"><a href="#Define-difference" class="headerlink" title="Define difference"></a>Define difference</h3><ul>
<li><p>the interval define :</p>
<ul>
<li>not contain up level two element</li>
<li>contain head, not contain end[Lucene define]</li>
<li>contain both it’s up level two element</li>
</ul>
</li>
<li><p>the level define :</p>
<ul>
<li>contain origin list, start from 1, like 1, 2, 3</li>
<li>contain origin list, start from 0, like 0, 1, 2</li>
<li>not contain origin list, start from 0[Lucene define]</li>
</ul>
</li>
</ul>
<p><strong>Jump element &amp; Skip list</strong></p>
<p><a href="http://lucene.apache.org/core/2_9_4/fileformats.html" target="_blank" rel="noopener">http://lucene.apache.org/core/2_9_4/fileformats.html</a></p>
]]></content>
      <categories>
        <category>search</category>
      </categories>
      <tags>
        <tag>lucene</tag>
        <tag>constructure</tag>
      </tags>
  </entry>
  <entry>
    <title>github style</title>
    <url>/2017/02/03/github-style/</url>
    <content><![CDATA[<p><img src="/2017/02/03/github-style/095329_upMF_12.png" alt><br><strong>Top to down, left to right</strong></p>
<ul>
<li>XXX’s GitHub repository : “offical” page</li>
<li>Your GitHub repository : “personal” page</li>
<li>Working directory : “battlefield”</li>
<li>Local repository : local project storage</li>
<li>Index : cache space</li>
</ul>
<ol>
<li><code>&quot;fork&quot;</code> : web “offical” -&gt; “personal”</li>
<li><code>&quot;Pull request&quot;</code> : web handle to “offical”</li>
<li><code>push</code> : local storage to remote storage</li>
<li><code>fetch</code> : remote storage to local storage</li>
<li><code>clone</code> : copy a remote git project</li>
<li><code>pull XXX-github</code> : get “offical” update to local storage and merge to “battlefield”</li>
<li><code>merge</code> : merge local storage to “battlefield”</li>
<li><code>pull my-github</code> : get remote storage update to local storage</li>
<li><code>checkout</code> : reset file or hash version to “battlefield” directly from local storage</li>
<li><code>checkout</code> : reset file cover “battlefield” from cache</li>
<li><code>commit -a</code> : handle to local storage and update to remote directly(push)</li>
<li><code>commit</code> : handle to local storage</li>
<li><code>add</code> : put add/delete/modify to cache</li>
<li><code>reset</code> : reset file or hash version to cache from local storage</li>
</ol>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>version</tag>
      </tags>
  </entry>
  <entry>
    <title>Match literal text</title>
    <url>/2017/02/04/Match-literal-text/</url>
    <content><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p><strong>Math these literal</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The punctuation characters in the ASCII table are: !&quot;#$%&amp;&apos;()*+,-./:;&lt;=&gt;?@[\]^_`&#123;|&#125;~</span><br></pre></td></tr></table></figure></p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The●punctuation●characters●in●the●ASCII●table●are:●↵</span><br><span class="line">!&quot;#\$%&amp;&apos;\(\)\*\+,-\./:;&lt;=&gt;\?@\[\\]\^_`\&#123;\|&#125;~</span><br></pre></td></tr></table></figure>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$()*+.?[\^&#123;|</span><br></pre></td></tr></table></figure>
<ul>
<li>these characters is key words, only <strong><em>matches itsself</em></strong></li>
<li><strong><em>‘]’ and ‘}’</em></strong> is not</li>
</ul>
<hr>
<h3 id="Variations"><a href="#Variations" class="headerlink" title="Variations"></a>Variations</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The●punctuation●characters●in●the●ASCII●table●are:●↵</span><br><span class="line">\Q!&quot;#$%&amp;&apos;()*+,-./:;&lt;=&gt;?@[\]^_`&#123;|&#125;~\E</span><br></pre></td></tr></table></figure>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: Java 6, PCRE, Perl</li>
</ul>
<p><strong>use \Q \E to suppresses the meaning<br>of all metacharacters, including the backslash</strong></p>
<hr>
<h3 id="Case-insensitive-matching"><a href="#Case-insensitive-matching" class="headerlink" title="Case-insensitive matching"></a>Case-insensitive matching</h3><p><strong>Outside the regex</strong><br><code>ascii</code></p>
<ul>
<li>Regex options: Case insensitive</li>
<li>Regex flavors: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby</li>
</ul>
<p><strong>Inside the regex</strong><br><code>(?i)ascii</code></p>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java, XRegExp, PCRE, Perl, Python, Ruby</li>
</ul>
]]></content>
      <categories>
        <category>regex</category>
      </categories>
  </entry>
  <entry>
    <title>ASCII</title>
    <url>/2017/02/05/ASCII/</url>
    <content><![CDATA[<h2 id="ASCII"><a href="#ASCII" class="headerlink" title="ASCII"></a>ASCII</h2><div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
<th>A</th>
<th>B</th>
<th>C</th>
<th>D</th>
<th>E</th>
<th>F</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>NUL</td>
<td>SOH</td>
<td>STX</td>
<td>ETX</td>
<td>EOT</td>
<td>ENQ</td>
<td>ACK</td>
<td>BEL</td>
<td>BS</td>
<td>HT</td>
<td>LF</td>
<td>VT</td>
<td>FF</td>
<td>CR</td>
<td>SO</td>
<td>SI</td>
</tr>
<tr>
<td>1</td>
<td>DLE</td>
<td>DC1</td>
<td>DC2</td>
<td>DC3</td>
<td>DC4</td>
<td>NAK</td>
<td>SYN</td>
<td>ETB</td>
<td>CAN</td>
<td>EM</td>
<td>SUB</td>
<td>ESC</td>
<td>FS</td>
<td>GS</td>
<td>RS</td>
<td>US</td>
</tr>
<tr>
<td>2</td>
<td>(space)</td>
<td>!</td>
<td>“</td>
<td>#</td>
<td>$</td>
<td>%</td>
<td>&amp;</td>
<td>‘</td>
<td>(</td>
<td>)</td>
<td>*</td>
<td>+</td>
<td>,</td>
<td>-</td>
<td>.</td>
<td>/</td>
</tr>
<tr>
<td>3</td>
<td>0</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>6</td>
<td>7</td>
<td>8</td>
<td>9</td>
<td>:</td>
<td>;</td>
<td>&lt;</td>
<td>=</td>
<td>&gt;</td>
<td>?</td>
</tr>
<tr>
<td>4</td>
<td>@</td>
<td>A</td>
<td>B</td>
<td>C</td>
<td>D</td>
<td>E</td>
<td>F</td>
<td>G</td>
<td>H</td>
<td>I</td>
<td>J</td>
<td>K</td>
<td>L</td>
<td>M</td>
<td>N</td>
<td>O</td>
</tr>
<tr>
<td>5</td>
<td>P</td>
<td>Q</td>
<td>R</td>
<td>S</td>
<td>T</td>
<td>U</td>
<td>V</td>
<td>W</td>
<td>X</td>
<td>Y</td>
<td>Z</td>
<td>[</td>
<td>\</td>
<td>]</td>
<td>^</td>
<td>_</td>
</tr>
<tr>
<td>6</td>
<td>`</td>
<td>a</td>
<td>b</td>
<td>c</td>
<td>d</td>
<td>e</td>
<td>f</td>
<td>g</td>
<td>h</td>
<td>i</td>
<td>j</td>
<td>k</td>
<td>l</td>
<td>m</td>
<td>n</td>
<td>o</td>
</tr>
<tr>
<td>7</td>
<td>p</td>
<td>q</td>
<td>r</td>
<td>s</td>
<td>t</td>
<td>u</td>
<td>v</td>
<td>w</td>
<td>x</td>
<td>y</td>
<td>z</td>
<td>{</td>
<td>&#124;</td>
<td>}</td>
<td>~</td>
<td>DEL (delete)</td>
</tr>
</tbody>
</table>
</div>
<h3 id="Contrast"><a href="#Contrast" class="headerlink" title="Contrast"></a>Contrast</h3><ul>
<li>NUL(null)</li>
<li>SOH(start of headline)</li>
<li>STX (start of text)</li>
<li>ETX (end of text)</li>
<li>EOT (end of transmission)</li>
<li>ENQ (enquiry)</li>
<li>ACK (acknowledge)</li>
<li>BEL (bell)</li>
<li>BS (backspace)</li>
<li>HT (horizontal tab)</li>
<li>LF (NL line feed, new line)</li>
<li>VT (vertical tab)</li>
<li>FF (NP form feed, new page)</li>
<li>CR (carriage return)</li>
<li>SO (shift out)</li>
<li>SI (shift in)</li>
<li>DLE (data link escape)</li>
<li>DC1 (device control 1)</li>
<li>DC2 (device control 2)</li>
<li>DC3 (device control 3)</li>
<li>DC4 (device control 4)</li>
<li>NAK (negative acknowledge)</li>
<li>SYN (synchronous idle)</li>
<li>ETB (end of trans. block)</li>
<li>CAN (cancel)</li>
<li>EM (end of medium)</li>
<li>SUB (substitute)</li>
<li>ESC (escape)</li>
<li>FS (file separator)</li>
<li>GS (group separator)</li>
<li>RS (record separator)</li>
<li>US (unit separator)</li>
</ul>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>symbol</tag>
      </tags>
  </entry>
  <entry>
    <title>Match characters</title>
    <url>/2017/02/05/Match-characters/</url>
    <content><![CDATA[<h1 id="Match-a-character"><a href="#Match-a-character" class="headerlink" title="Match a character"></a>Match a character</h1><p><strong>Hexadecimal character</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[a-fA-F0-9]</span><br></pre></td></tr></table></figure></p>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby</li>
</ul>
<p><strong>Nonhexadecimal character</strong><br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[^a-fA-F0-9]</span><br></pre></td></tr></table></figure></p>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby</li>
</ul>
<hr>
<blockquote>
<p>The notation using square brackets is called<br><strong>a character class</strong></p>
</blockquote>
<ul>
<li><p><strong><code>\, ^, -, and ]</code> have special function in square brackets</strong></p>
</li>
<li><p><em>JavaScript</em> treats ‹[]› as an empty character class that <strong>always fails to match</strong>.</p>
</li>
<li><p>In all the regex flavors discussed in this book, a <strong>negated character class</strong> matches <strong>line break characters</strong>, unless you add them to the negated character class. Make sure that you don’t accidentally allow your regex to span <em>across lines</em>.</p>
</li>
</ul>
<hr>
<h3 id="About-w"><a href="#About-w" class="headerlink" title="About \w"></a>About <code>\w</code></h3><ul>
<li>Java 4-6, JavaScript, PCRE, Ruby : <code>\w</code> -&gt; [a-zA-Z0-9_]</li>
<li>Java 7 : set <strong>Pattern.UNICODE_CHARACTER_CLASS</strong> flag, <code>\w</code> matches unicode characters. <strong>(?U)</strong> Inner regex usage.</li>
<li>Python2.x : set UNICODE or U flag, matches unicode characters.</li>
<li>Python3.x : matches unicode characters in default, <code>\w</code> ASCII-only with the ASCII or A flag.</li>
<li>Perl&gt;=5.1.4 : <code>/u (Unicode)</code> adds all Unicode scripts, and <code>/l
(locale)</code> makes <code>\w</code> depend on the locale. (<code>/d</code>, no <code>adlu</code>) Unicode scripts rule same as Perl&lt;5.1.4.</li>
<li>Perl&lt;5.1.4 : matches unicode characters in default, <code>\w</code> automatically includes Unicode scripts if the subject string or the regex are <strong>encoded as UTF-8</strong>, or the regex includes a code <strong>point above 255</strong> such as ‹\x{100}› or a Unicode property such as ‹\p{L}›. If not, the default for <code>\w</code> is pure ASCII</li>
</ul>
<h3 id="About-d"><a href="#About-d" class="headerlink" title="About \d"></a>About <code>\d</code></h3><ul>
<li><code>\d</code> follows the same rules as <code>\w</code> in all these flavors.</li>
<li>In .NET, digits from other scripts are always included.</li>
<li>In Python it depends on the <strong>UNICODE</strong> and <strong>ASCII</strong> flags, and whether you’re using Python 2.x or 3.x. In Perl 5.14, it depends on the <strong>/adlu</strong> flags.</li>
<li>In earlier versions of Perl, it depends on <strong>the encoding</strong> of the subject and regex, and whether the regex has any Uncicode tokens</li>
</ul>
<h3 id="About-s"><a href="#About-s" class="headerlink" title="About \s"></a>About <code>\s</code></h3><ul>
<li><code>\s</code> matches any whitespace character. This includes spaces, tabs, and line breaks.</li>
<li><code>\S</code> matches any character <strong>not matched</strong> by <code>\s</code></li>
<li>In .NET and JavaScript, <code>\s</code> also matches any character defined as whitespace by the <strong>Unicode standard</strong>.</li>
<li>In Java, Perl, and Python, <code>\s</code> follows the same rules as <code>\w</code> and <code>\d</code>.</li>
<li>Notice that JavaScript uses <strong>Unicode</strong> for ‹\s› but <strong>ASCII</strong> for <code>\d</code> and <code>\w</code>.</li>
</ul>
<hr>
<h3 id="Flavor-Specific-Features"><a href="#Flavor-Specific-Features" class="headerlink" title="Flavor-Specific Features"></a>Flavor-Specific Features</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[a-zA-Z0-9-[g-zG-Z]]</span><br></pre></td></tr></table></figure>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET 2.0 or later</li>
</ul>
<hr>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[\w&amp;&amp;[a-fA-F0-9\s]]</span><br></pre></td></tr></table></figure>
<ul>
<li>uses character class <strong>intersection</strong> to match a hexadecimal digit.</li>
<li>Regex options: None</li>
<li>Regex flavors: Java</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[a-zA-Z0-9&amp;&amp;[^g-zG-Z]]</span><br></pre></td></tr></table></figure>
<ul>
<li>uses character class <strong>subtraction</strong> to match a single hexadecimal character in a roundabout way.</li>
<li>Regex options: None</li>
<li>Regex flavors: Java</li>
</ul>
<h1 id="Match-any-character"><a href="#Match-any-character" class="headerlink" title="Match any character"></a>Match any character</h1><h3 id="Any-character-except-line-breaks"><a href="#Any-character-except-line-breaks" class="headerlink" title="Any character except line breaks"></a>Any character except line breaks</h3><blockquote>
<p><code>&#39;.&#39;</code></p>
</blockquote>
<ul>
<li>Regex options: None (the “dot matches line breaks” option must not be set)</li>
<li>Regex flavors: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby</li>
</ul>
<hr>
<h3 id="Any-character-including-line-breaks"><a href="#Any-character-including-line-breaks" class="headerlink" title="Any character including line breaks"></a>Any character including line breaks</h3><blockquote>
<p><code>&#39;.&#39;</code></p>
</blockquote>
<ul>
<li>Regex options: Dot matches line breaks</li>
<li>Regex flavors: .NET, Java, PCRE, Perl, Python, Ruby</li>
</ul>
<blockquote>
<p><code>&#39;[\s\S]&#39;</code></p>
</blockquote>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby</li>
</ul>
<hr>
<h3 id="Inner-mode"><a href="#Inner-mode" class="headerlink" title="Inner mode"></a>Inner mode</h3><blockquote>
<p><code>(?s)&#39;.&#39;</code></p>
</blockquote>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java, XRegExp, PCRE, Perl, Python</li>
</ul>
<blockquote>
<p><code>(?m)&#39;.&#39;</code></p>
</blockquote>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: Ruby</li>
</ul>
]]></content>
      <categories>
        <category>regex</category>
      </categories>
  </entry>
  <entry>
    <title>Match nonprintable characters</title>
    <url>/2017/02/05/Match-nonprintable-characters/</url>
    <content><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p><strong>Math these characters</strong></p>
<ul>
<li>bell</li>
<li>escape</li>
<li>form feed</li>
<li>line</li>
<li>feed</li>
<li>carriage return</li>
<li>horizontal tab</li>
<li>vertical tab<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexadecimal ASCII codes :</span><br><span class="line">07, 1B, 0C, 0A, 0D, 09, 0B</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\a\e\f\n\r\t\v</span><br></pre></td></tr></table></figure>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java, PCRE, Python, Ruby</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\x07\x1B\f\n\r\t\v</span><br></pre></td></tr></table></figure>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java, JavaScript, Python, Ruby</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\a\e\f\n\r\t\x0B</span><br></pre></td></tr></table></figure>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java, PCRE, Perl, Python, Ruby</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>Representation</th>
<th>Meaning</th>
<th>Hex</th>
<th>Regex flavors</th>
</tr>
</thead>
<tbody>
<tr>
<td>‹\a›</td>
<td>bell</td>
<td>0x07</td>
<td>.NET, Java, PCRE, Perl, Python, Ruby</td>
</tr>
<tr>
<td>‹\e›</td>
<td>escape</td>
<td>0x1B</td>
<td>.NET, Java, PCRE, Perl, Ruby</td>
</tr>
<tr>
<td>‹\f›</td>
<td>form feed</td>
<td>0x0C</td>
<td>.NET, Java, JavaScript, PCRE, Perl, Python, Ruby</td>
</tr>
<tr>
<td>‹\n›</td>
<td>line feed (newline)</td>
<td>0x0A</td>
<td>.NET, Java, JavaScript, PCRE, Perl, Python, Ruby</td>
</tr>
<tr>
<td>‹\r›</td>
<td>carriage return</td>
<td>0x0D</td>
<td>.NET, Java, JavaScript, PCRE, Perl, Python, Ruby</td>
</tr>
<tr>
<td>‹\t›</td>
<td>horizontal tab</td>
<td>0x09</td>
<td>.NET, Java, JavaScript, PCRE, Perl, Python, Ruby</td>
</tr>
<tr>
<td>‹\v›</td>
<td>vertical tab</td>
<td>0x0B</td>
<td>.NET, Java, JavaScript, Python, Ruby, Perl-5.10, PCRE-7.2</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Variations"><a href="#Variations" class="headerlink" title="Variations"></a>Variations</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\cG\x1B\cL\cJ\cM\cI\cK</span><br></pre></td></tr></table></figure>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java, JavaScript, PCRE, Perl, Ruby 1.9</li>
</ul>
<hr>
<p><strong>The 7-bit character set</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\x07\x1B\x0C\x0A\x0D\x09\x0B</span><br></pre></td></tr></table></figure></p>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby</li>
</ul>
]]></content>
      <categories>
        <category>regex</category>
      </categories>
  </entry>
  <entry>
    <title>Full-text retrieval fundamental</title>
    <url>/2017/02/06/Full-text-retrieval-fundamental-4/</url>
    <content><![CDATA[<p><img src="/2017/02/06/Full-text-retrieval-fundamental-4/Full-text retrieval.png" alt></p>
<h3 id="Build-Index"><a href="#Build-Index" class="headerlink" title="Build Index"></a>Build Index</h3><ol>
<li>Data source(Documents) ready be index.</li>
<li>Lexcial analysis, language processing, translate to Terms.</li>
<li>Create dictionary, posting index table.</li>
<li>Writen into hard disk, or other space.</li>
</ol>
<h3 id="Query-process"><a href="#Query-process" class="headerlink" title="Query process"></a>Query process</h3><ul>
<li>A. Input query parse.</li>
<li>B. Lexcial analysis, language processing, translate to terms.</li>
<li>C. Syntax analysis, translate to a query tree.</li>
<li>D. Read hard disk index to memory</li>
<li>E. Get every term’s documents list by query tree, get result documents by ‘And’/‘Or’/‘Not’ operations on list.</li>
<li>F. Sort result documents by doc relevance.</li>
<li>G. Return query result.</li>
</ul>
]]></content>
      <categories>
        <category>search</category>
      </categories>
      <tags>
        <tag>fundamental</tag>
      </tags>
  </entry>
  <entry>
    <title>Match &quot;start&quot; &amp; &quot;end&quot;</title>
    <url>/2017/02/06/Match-start-end/</url>
    <content><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><blockquote>
<p>alpha…..↵<br>alpha…..↵<br>begin…..↵<br>…….end↵<br>….omega↵<br>….omega↵</p>
</blockquote>
<ul>
<li>Match <code>&#39;alpha&#39;</code> occurs at the very beginning</li>
<li>Match two <code>&#39;alpha&#39;</code> at line head</li>
<li>Match <code>&#39;omega&#39;</code> occurs at the very end</li>
<li>Match two <code>&#39;omega&#39;</code> at line end</li>
<li>Match <code>&#39;begin&#39;</code> at line’s head</li>
<li>Match <code>&#39;end&#39;</code> at line’s tail</li>
</ul>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>Start of the subject<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">^alpha</span><br></pre></td></tr></table></figure></p>
<ul>
<li>Regex options: None (“^ and $ match at line breaks” must not be set, if not <strong>matches two</strong>)</li>
<li>Regex flavors: .NET, Java, JavaScript, PCRE, Perl, Python</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\Aalpha</span><br></pre></td></tr></table></figure>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java, PCRE, Perl, Python, Ruby<br>End of the subject</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">omega$</span><br></pre></td></tr></table></figure>
<ul>
<li>Regex options: None (“^ and $ match at line breaks” must not be set, if not <strong>matches two</strong>)</li>
<li>Regex flavors: .NET, Java, JavaScript, PCRE, Perl, Python</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">omega\Z</span><br></pre></td></tr></table></figure>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java, PCRE, Perl, Python, Ruby Start of a line</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">^begin</span><br></pre></td></tr></table></figure>
<ul>
<li>Regex options: ^ and $ match at line breaks</li>
<li>Regex flavors: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">end\$</span><br></pre></td></tr></table></figure>
<ul>
<li>Regex options: ^ and $ match at line breaks</li>
<li>Regex flavors: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby</li>
</ul>
<h2 id="Discussion"><a href="#Discussion" class="headerlink" title="Discussion"></a>Discussion</h2><ul>
<li><code>JavaScript</code> does not support ‹\A›.</li>
<li>The anchor ‹^› is equivalent to ‹\A›, as long as you do not turn on the <strong>“^ and $ match at line breaks”</strong> option.</li>
<li><p>The anchor ‹$› is equivalent to ‹\Z›, as long as you do not turn on the <strong>“^ and $ match at line breaks”</strong> option.</p>
<ul>
<li>In <code>Java</code> is <strong>Pattern.MULTILINE</strong> option<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Enables multiline mode.</span><br><span class="line"> *</span><br><span class="line"> * &lt;p&gt; In multiline mode the expressions &lt;tt&gt;^&lt;/tt&gt; and &lt;tt&gt;$&lt;/tt&gt; match</span><br><span class="line"> * just after or just before, respectively, a line terminator or the end of</span><br><span class="line"> * the input sequence.  By default these expressions only match at the</span><br><span class="line"> * beginning and the end of the entire input sequence.</span><br><span class="line"> *</span><br><span class="line"> * &lt;p&gt; Multiline mode can also be enabled via the embedded flag</span><br><span class="line"> * expression&amp;nbsp;&lt;tt&gt;(?m)&lt;/tt&gt;.  &lt;/p&gt;</span><br><span class="line"> */</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>The anchors ‹\Z› and ‹\z› always match at the very end of the subject text, <strong>after the last character</strong></p>
</li>
<li>&lt;\Z› without having to worry about stripping off a <strong>trailing line break</strong> at the end of your subject text.</li>
<li>&lt;\Z&gt; The very last <code>\r\n|\r|\n</code> -&gt; <code>↵</code> will be ignore.</li>
<li>&lt;\z&gt; The very last <code>\r\n|\r|\n</code> -&gt; <code>↵</code> will not be ignore.</li>
</ul>
<hr>
<ul>
<li><code>JavaScript</code> does not support ‹\A›</li>
<li><code>JavaScript</code> does not support ‹\Z› or ‹\z› at all</li>
<li><code>.NET, Java, PCRE, Perl, and Ruby</code> support both ‹\Z› and ‹\z›.</li>
<li><code>Python</code> supports only ‹\Z›.</li>
</ul>
<h2 id="Variations"><a href="#Variations" class="headerlink" title="Variations"></a>Variations</h2><ul>
<li><code>.NET, Java, XRegExp, PCRE, Perl, and Python1</code>: (?m) internal mode, for “^ and $ match at line breaks”.</li>
<li>Ruby uses‹(?m)› to turn on <strong>“dot matches line breaks”</strong> mode.</li>
<li>In Ruby, ‹^› and ‹$› <strong>always match</strong> at the start and end of each line.</li>
<li>‹(?-m)› to turn off the option.</li>
<li>&lt;(?i)&gt; turn on the ignore the sensitive of letter.</li>
<li>&lt;(?s)&gt; dot matches line breaks.[except <code>Ruby</code>]</li>
</ul>
]]></content>
      <categories>
        <category>regex</category>
      </categories>
      <tags>
        <tag>anchor</tag>
      </tags>
  </entry>
  <entry>
    <title>Match whole words</title>
    <url>/2017/02/06/Match-whole-words/</url>
    <content><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><blockquote>
<p>My cat is brown<br>category<br>octocat<br>staccato</p>
</blockquote>
<ul>
<li>find word ‘cat’</li>
<li>find word begin with ‘cat’</li>
<li>find word end with ‘cat’</li>
<li>find word contain ‘cat’</li>
<li>find word not begin with ‘cat’</li>
<li>find word not end with ‘cat’</li>
<li>find word not contain ‘cat’</li>
</ul>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p><strong>Word boundaries</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\bcat\b</span><br></pre></td></tr></table></figure></p>
<ul>
<li>Regex options: None</li>
<li><p>Regex flavors: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby<br><strong>Nonboundaries</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\Bcat\B</span><br></pre></td></tr></table></figure>
</li>
<li><p>Regex options: None</p>
</li>
<li>Regex flavors: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\bcat       (?&lt;!\w)(?=\w)cat</span><br><span class="line">cat\b       cat(?&lt;=\w)(?!\w)</span><br><span class="line">\Bcat       (?&lt;=\w)cat(?!\w)</span><br><span class="line">cat\B       (?&lt;!\w)cat(?=\w)</span><br><span class="line">\b(?!\w*?cat\w*?)\w+?\b</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><strong><em>\b  -&gt;  (?&lt;=\w)(?!\w)|(?&lt;!\w)(?=\w)</em></strong></p>
<h2 id="Discussion"><a href="#Discussion" class="headerlink" title="Discussion"></a>Discussion</h2><p><strong>‹\b› matches in these three positions:</strong></p>
<ul>
<li>Before the first character in the subject, if the first character is a word character</li>
<li>After the last character in the subject, if the last character is a word character</li>
<li>Between two characters in the subject, where one is a word character and the other<br>is not a word character</li>
</ul>
<p><strong>‹\B› matches in these five positions:</strong></p>
<ul>
<li>Before the first character in the subject, if the first character is not a word character</li>
<li>After the last character in the subject, if the last character is not a word character</li>
<li>Between two word characters</li>
<li>Between two nonword characters</li>
<li>The empty string</li>
</ul>
<h2 id="Word-Characters"><a href="#Word-Characters" class="headerlink" title="Word Characters"></a>Word Characters</h2><ul>
<li><code>Java</code> :<ul>
<li><strong>Java 4 to 6</strong> ‹\w› matches <strong>only ASCII</strong> characters</li>
<li><strong>Java 7</strong> ‹\w› extended matches Unicode characters if set the <code>UNICODE_CHARACTER_CLASS</code> flag</li>
<li><strong>All version Java</strong> ‹\b› is Unicode-enabled, supporting any script</li>
</ul>
</li>
</ul>
<ul>
<li><code>.NET, JavaScript, PCRE, Perl, Python, and Ruby have</code>:<ul>
<li>‹\b› match between two characters where <strong>one is</strong> matched by ‹\w› and <strong>the other</strong> by ‹\W›.</li>
<li>‹\B› always matches between two characters where <strong>both</strong> are matched by ‹\w› or ‹\W›</li>
</ul>
</li>
<li><code>JavaScript, PCRE, and Ruby</code> : ‹\w› is identical to ‹[a-zA-Z0-9_]› so only “whole words only” search in language which use <strong>Latin alphabet</strong>.</li>
<li><p><code>.NET</code> : treats letters and digits from <strong>all scripts</strong> as word characters. You can do a “whole words only” search on words in <strong>any language</strong></p>
</li>
<li><p><code>Python 2.x</code>: non-ASCII characters are included only if you pass the <code>UNICODE</code> or <code>U</code> flag when creating the regex.</p>
</li>
<li><p><code>Python 3.x</code>: non-ASCII character are included by default, but you can exclude them with the <code>ASCII</code> or <code>A</code>flag. This flag affects both ‹\b› and ‹\w› equally.</p>
</li>
<li><p><code>Perl</code>: depends on your version of <code>Perl</code> and <code>/adlu</code> flags whether ‹\w› is pure ASCII or includes all Unicode letters, digits, and underscores.</p>
</li>
</ul>
]]></content>
      <categories>
        <category>regex</category>
      </categories>
      <tags>
        <tag>anchor</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown syntax</title>
    <url>/2017/02/07/Markdown-syntax/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">**Blod**</span><br><span class="line">*Emphasize*</span><br><span class="line">++Undeline++</span><br><span class="line">~~Strikethrough~~</span><br><span class="line">==Heightlight==</span><br><span class="line">^Superscript^</span><br><span class="line">~Subscript~</span><br><span class="line"></span><br><span class="line">![pic](pic.jpg)</span><br><span class="line">[git](http://github.com)</span><br><span class="line">@[]()[?]</span><br><span class="line"></span><br><span class="line">- unordered list</span><br><span class="line">1. Order list</span><br><span class="line">- [] Task[?]</span><br><span class="line"></span><br><span class="line">[^id]</span><br><span class="line">[^id]:xxx</span><br><span class="line"></span><br><span class="line">`code`</span><br><span class="line">\`\`\`code block\`\`\`</span><br><span class="line"></span><br><span class="line">***page break</span><br><span class="line"></span><br><span class="line">---section break</span><br><span class="line"></span><br><span class="line">___sentence break</span><br><span class="line"></span><br><span class="line">[TOC]</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>hello</tag>
      </tags>
  </entry>
  <entry>
    <title>Unicode block</title>
    <url>/2017/02/07/Unicode-block/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">|</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">|</span><br></pre></td></tr></table></figure>
<div class="table-container">
<table>
<thead>
<tr>
<th>A</th>
<th>B</th>
<th>C</th>
<th>D</th>
</tr>
</thead>
<tbody>
<tr>
<td>0000-007F</td>
<td>\p{InBasicLatin}</td>
<td>0000-007F</td>
<td>C0控制符及基本拉丁文&lt;/br&gt;(C0 Control and Basic Latin)</td>
</tr>
<tr>
<td>0080-00FF</td>
<td>\p{InLatin-1Supplement}</td>
<td>0080-00FF</td>
<td>C1控制符及拉丁文补充-1&lt;/br&gt;(C1 Control and Latin 1 Supplement)</td>
</tr>
<tr>
<td>0100-017F</td>
<td>\p{InLatinExtended-A}</td>
<td>0100-017F</td>
<td>拉丁文扩展-A&lt;/br&gt;(Latin Extended-A)</td>
</tr>
<tr>
<td>0180-024F</td>
<td>\p{InLatinExtended-B}</td>
<td>0180-024F</td>
<td>拉丁文扩展-B&lt;/br&gt;(Latin Extended-B)</td>
</tr>
<tr>
<td>0250-02AF</td>
<td>\p{InIPAExtensions}</td>
<td>0250-02AF</td>
<td>国际音标扩展&lt;/br&gt;(IPA Extensions)</td>
</tr>
<tr>
<td>02B0-02FF</td>
<td>\p{InSpacingModifierLetters}</td>
<td>02B0-02FF</td>
<td>空白修饰字母&lt;/br&gt;(Spacing Modifiers)</td>
</tr>
<tr>
<td>0300-036F</td>
<td>\p{InCombiningDiacriticalMarks}</td>
<td>0300-036F</td>
<td>结合用读音符号&lt;/br&gt;(Combining Diacritics Marks)</td>
</tr>
<tr>
<td>0370-03FF</td>
<td>\p{InGreekandCoptic}</td>
<td>0370-03FF</td>
<td>希腊文及科普特文&lt;/br&gt;(Greek and Coptic)</td>
</tr>
<tr>
<td>0400-04FF</td>
<td>\p{InCyrillic}</td>
<td>0400-04FF</td>
<td>西里尔字母(Cyrillic)</td>
</tr>
<tr>
<td>0500-052F</td>
<td>\p{InCyrillicSupplement}</td>
<td>0500-052F</td>
<td>西里尔字母补充&lt;/br&gt;(Cyrillic Supplement)</td>
</tr>
<tr>
<td>0530-058F</td>
<td>\p{InArmenian}</td>
<td>0530-058F</td>
<td>亚美尼亚语&lt;/br&gt;(Armenian)</td>
</tr>
<tr>
<td>0590-05FF</td>
<td>\p{InHebrew}</td>
<td>0590-05FF</td>
<td>希伯来文&lt;/br&gt;(Hebrew)</td>
</tr>
<tr>
<td>0600-06FF</td>
<td>\p{InArabic}</td>
<td>0600-06FF</td>
<td>阿拉伯文&lt;/br&gt;(Arabic)</td>
</tr>
<tr>
<td>0700-074F</td>
<td>\p{InSyriac}</td>
<td>0700-074F</td>
<td>叙利亚文&lt;/br&gt;(Syriac)</td>
</tr>
<tr>
<td>0750-077F</td>
<td>\p{InArabicSupplement}</td>
<td>0750-077F</td>
<td>阿拉伯文补充&lt;/br&gt;(Arabic Supplement)</td>
</tr>
<tr>
<td>0780-07BF</td>
<td>\p{InThaana}</td>
<td>0780-07BF</td>
<td>马尔代夫语&lt;/br&gt;(Thaana)</td>
</tr>
<tr>
<td>07C0-07FF</td>
<td>\p{InNKo}</td>
<td>07C0-077F</td>
<td>西非书面语言&lt;/br&gt;(N’Ko)</td>
</tr>
<tr>
<td>0800-083F</td>
<td>\p{InSamaritan}</td>
<td>0800-085F</td>
<td>阿维斯塔语及巴列维语(Avestan and Pahlavi)</td>
</tr>
<tr>
<td>0840-085F</td>
<td>\p{InMandaic}</td>
<td>0860-087F</td>
<td>Mandaic</td>
</tr>
<tr>
<td>08A0-08FF</td>
<td>\p{InArabicExtended-A}</td>
<td>0880-08AF</td>
<td>撒马利亚语&lt;/br&gt;(Samaritan)</td>
</tr>
<tr>
<td>0900-097F</td>
<td>\p{InDevanagari}</td>
<td>0900-097F</td>
<td>天城文书&lt;/br&gt;(Devanagari)</td>
</tr>
<tr>
<td>0980-09FF</td>
<td>\p{InBengali}</td>
<td>0980-09FF</td>
<td>孟加拉语&lt;/br&gt;(Bengali)</td>
</tr>
<tr>
<td>0A00-0A7F</td>
<td>\p{InGurmukhi}</td>
<td>0A00-0A7F</td>
<td>锡克教文&lt;/br&gt;(Gurmukhi)</td>
</tr>
<tr>
<td>0A80-0AFF</td>
<td>\p{InGujarati}</td>
<td>0A80-0AFF</td>
<td>古吉拉特文&lt;/br&gt;(Gujarati)</td>
</tr>
<tr>
<td>0B00-0B7F</td>
<td>\p{InOriya}</td>
<td>0B00-0B7F</td>
<td>奥里亚文&lt;/br&gt;(Oriya)</td>
</tr>
<tr>
<td>0B80-0BFF</td>
<td>\p{InTamil}</td>
<td>0B80-0BFF</td>
<td>泰米尔文&lt;/br&gt;(Tamil)</td>
</tr>
<tr>
<td>0C00-0C7F</td>
<td>\p{InTelugu}</td>
<td>0C00-0C7F</td>
<td>泰卢固文&lt;/br&gt;(Telugu)</td>
</tr>
<tr>
<td>0C80-0CFF</td>
<td>\p{InKannada}</td>
<td>0C80-0CFF</td>
<td>卡纳达文&lt;/br&gt;(Kannada)</td>
</tr>
<tr>
<td>0D00-0D7F</td>
<td>\p{InMalayalam}</td>
<td>0D00-0D7F</td>
<td>德拉维族语&lt;/br&gt;(Malayalam)</td>
</tr>
<tr>
<td>0D80-0DFF</td>
<td>\p{InSinhala}</td>
<td>0D80-0DFF</td>
<td>僧伽罗语&lt;/br&gt;(Sinhala)</td>
</tr>
<tr>
<td>0E00-0E7F</td>
<td>\p{InThai}</td>
<td>0E00-0E7F</td>
<td>泰文&lt;/br&gt;(Thai)</td>
</tr>
<tr>
<td>0E80-0EFF</td>
<td>\p{InLao}</td>
<td>0E80-0EFF</td>
<td>老挝文&lt;/br&gt;(Lao)</td>
</tr>
<tr>
<td>0F00-0FFF</td>
<td>\p{InTibetan}</td>
<td>0F00-0FFF</td>
<td>藏文&lt;/br&gt;(Tibetan)</td>
</tr>
<tr>
<td>1000-109F</td>
<td>\p{InMyanmar}</td>
<td>1000-109F</td>
<td>缅甸语&lt;/br&gt;(Myanmar)</td>
</tr>
<tr>
<td>10A0-10FF</td>
<td>\p{InGeorgian}</td>
<td>10A0-10FF</td>
<td>格鲁吉亚语(Georgian)</td>
</tr>
<tr>
<td>1100-11FF</td>
<td>\p{InHangulJamo}</td>
<td>1100-11FF</td>
<td>朝鲜文&lt;/br&gt;(Hangul Jamo)</td>
</tr>
<tr>
<td>1200-137F</td>
<td>\p{InEthiopic}</td>
<td>1200-137F</td>
<td>埃塞俄比亚语&lt;/br&gt;(Ethiopic)</td>
</tr>
<tr>
<td>1380-139F</td>
<td>\p{InEthiopicSupplement}</td>
<td>1380-139F</td>
<td>埃塞俄比亚语补充&lt;/br&gt;(Ethiopic Supplement)</td>
</tr>
<tr>
<td>13A0-13FF</td>
<td>\p{InCherokee}</td>
<td>13A0-13FF</td>
<td>切罗基语&lt;/br&gt;(Cherokee)</td>
</tr>
<tr>
<td>1400-167F</td>
<td>\p{InUnifiedCanadianAboriginalSyllabics}</td>
<td>1400-167F</td>
<td>统一加拿大土著语音节&lt;/br&gt;(Unified Canadian Aboriginal Syllabics)</td>
</tr>
<tr>
<td>1680-169F</td>
<td>\p{InOgham}</td>
<td>1680-169F</td>
<td>欧甘字母&lt;/br&gt;(Ogham)</td>
</tr>
<tr>
<td>16A0-16FF</td>
<td>\p{InRunic}</td>
<td>16A0-16FF</td>
<td>如尼文(Runic)</td>
</tr>
<tr>
<td>1700-171F</td>
<td>\p{InTagalog}</td>
<td>1700-171F</td>
<td>塔加拉语&lt;/br&gt;(Tagalog)</td>
</tr>
<tr>
<td>1720-173F</td>
<td>\p{InHanunoo}</td>
<td>1720-173F</td>
<td>Hanunóo</td>
</tr>
<tr>
<td>1740-175F</td>
<td>\p{InBuhid}</td>
<td>1740-175F</td>
<td>Buhid</td>
</tr>
<tr>
<td>1760-177F</td>
<td>\p{InTagbanwa}</td>
<td>1760-177F</td>
<td>Tagbanwa</td>
</tr>
<tr>
<td>1780-17FF</td>
<td>\p{InKhmer}</td>
<td>1780-17FF</td>
<td>高棉语&lt;/br&gt;(Khmer)</td>
</tr>
<tr>
<td>1800-18AF</td>
<td>\p{InMongolian}</td>
<td>1800-18AF</td>
<td>蒙古文&lt;/br&gt;(Mongolian)</td>
</tr>
<tr>
<td>18B0-18FF</td>
<td>\p{InUnifiedCanadianAboriginalSyllabicsExtended}</td>
<td>18B0-18FF</td>
<td>Cham</td>
</tr>
<tr>
<td>1900-194F</td>
<td>\p{InLimbu}</td>
<td>1900-194F</td>
<td>Limbu</td>
</tr>
<tr>
<td>1950-197F</td>
<td>\p{InTaiLe}</td>
<td>1950-197F</td>
<td>德宏泰语&lt;/br&gt;(Tai Le)</td>
</tr>
<tr>
<td>1980-19DF</td>
<td>\p{InNewTaiLue}</td>
<td>1980-19DF</td>
<td>新傣仂语&lt;/br&gt;(New Tai Lue)</td>
</tr>
<tr>
<td>19E0-19FF</td>
<td>\p{InKhmerSymbols}</td>
<td>19E0-19FF</td>
<td>高棉语记号&lt;/br&gt;(Kmer Symbols)</td>
</tr>
<tr>
<td>1A00-1A1F</td>
<td>\p{InBuginese}</td>
<td>1A00-1A1F</td>
<td>Buginese</td>
</tr>
<tr>
<td>1A20-1AAF</td>
<td>\p{InTaiTham}</td>
<td>1A20-1A5F</td>
<td>Batak</td>
</tr>
<tr>
<td>1B00-1B7F</td>
<td>\p{InBalinese}</td>
<td>1A80-1AEF</td>
<td>Lanna</td>
</tr>
<tr>
<td>1B80-1BBF</td>
<td>\p{InSundanese}</td>
<td>1B00-1B7F</td>
<td>巴厘语&lt;/br&gt;(Balinese)</td>
</tr>
<tr>
<td>1BC0-1BFF</td>
<td>\p{InBatak}</td>
<td>1B80-1BB0</td>
<td>巽他语&lt;/br&gt;(Sundanese)</td>
</tr>
<tr>
<td>1C00-1C4F</td>
<td>\p{InLepcha}</td>
<td>1BC0-1BFF</td>
<td>Pahawh Hmong</td>
</tr>
<tr>
<td>1C50-1C7F</td>
<td>\p{InOlChiki}</td>
<td>1C00-1C4F</td>
<td>雷布查语(Lepcha)</td>
</tr>
<tr>
<td>1CC0-1CCF</td>
<td>\p{InSundaneseSupplement}</td>
<td>1C50-1C7F</td>
<td>Ol Chiki</td>
</tr>
<tr>
<td>1CD0-1CFF</td>
<td>\p{InVedicExtensions}</td>
<td>1C80-1CDF</td>
<td>曼尼普尔语(Meithei/Manipuri)</td>
</tr>
<tr>
<td>1D00-1D7F</td>
<td>\p{InPhoneticExtensions}</td>
<td>1D00-1D7F</td>
<td>语音学扩展&lt;/br&gt;(Phonetic Extensions)</td>
</tr>
<tr>
<td>1D80-1DBF</td>
<td>\p{InPhoneticExtensionsSupplement}</td>
<td>1D80-1DBF</td>
<td>语音学扩展补充&lt;/br&gt;(Phonetic Extensions Supplement)</td>
</tr>
<tr>
<td>1DC0-1DFF</td>
<td>\p{InCombiningDiacriticalMarksSupplement}</td>
<td>1DC0-1DFF</td>
<td>结合用读音符号补充&lt;/br&gt;(Combining Diacritics Marks Supplement)</td>
</tr>
<tr>
<td>1E00-1EFF</td>
<td>\p{InLatinExtendedAdditional}</td>
<td>1E00-1EFF</td>
<td>拉丁文扩充附加&lt;/br&gt;(Latin Extended Additional)</td>
</tr>
<tr>
<td>1F00-1FFF</td>
<td>\p{InGreekExtended}</td>
<td>1F00-1FFF</td>
<td>希腊语扩充&lt;/br&gt;(Greek Extended)</td>
</tr>
<tr>
<td>2000-206F</td>
<td>\p{InGeneralPunctuation}</td>
<td>2000-206F</td>
<td>常用标点(General Punctuation)</td>
</tr>
<tr>
<td>2070-209F</td>
<td>\p{InSuperscriptsandSubscripts}</td>
<td>2070-209F</td>
<td>上标及下标&lt;/br&gt;(Superscripts and Subscripts)</td>
</tr>
<tr>
<td>20A0-20CF</td>
<td>\p{InCurrencySymbols}</td>
<td>20A0-20CF</td>
<td>货币符号&lt;/br&gt;(Currency Symbols)</td>
</tr>
<tr>
<td>20D0-20FF</td>
<td>\p{InCombiningDiacriticalMarksforSymbols}</td>
<td>20D0-20FF</td>
<td>组合用记号&lt;/br&gt;(Combining Diacritics Marks for Symbols)</td>
</tr>
<tr>
<td>2100-214F</td>
<td>\p{InLetterlikeSymbols}</td>
<td>2100-214F</td>
<td>字母式符号&lt;/br&gt;(Letterlike Symbols)</td>
</tr>
<tr>
<td>2150-218F</td>
<td>\p{InNumberForms}</td>
<td>2150-218F</td>
<td>数字形式&lt;/br&gt;(Number Form)</td>
</tr>
<tr>
<td>2190-21FF</td>
<td>\p{InArrows}</td>
<td>2190-21FF</td>
<td>箭头&lt;/br&gt;(Arrows)</td>
</tr>
<tr>
<td>2200-22FF</td>
<td>\p{InMathematicalOperators}</td>
<td>2200-22FF</td>
<td>数学运算符&lt;/br&gt;(Mathematical Operator)</td>
</tr>
<tr>
<td>2300-23FF</td>
<td>\p{InMiscellaneousTechnical}</td>
<td>2300-23FF</td>
<td>杂项工业符号&lt;/br&gt;(Miscellaneous Technical)</td>
</tr>
<tr>
<td>2400-243F</td>
<td>\p{InControlPictures}</td>
<td>2400-243F</td>
<td>控制图片&lt;/br&gt;(Control Pictures)</td>
</tr>
<tr>
<td>2440-245F</td>
<td>\p{InOpticalCharacterRecognition}</td>
<td>2440-245F</td>
<td>光学识别符&lt;/br&gt;(Optical Character Recognition)</td>
</tr>
<tr>
<td>2460-24FF</td>
<td>\p{InEnclosedAlphanumerics}</td>
<td>2460-24FF</td>
<td>封闭式字母数字&lt;/br&gt;(Enclosed Alphanumerics)</td>
</tr>
<tr>
<td>2500-257F</td>
<td>\p{InBoxDrawing}</td>
<td>2500-257F</td>
<td>制表符&lt;/br&gt;(Box Drawing)</td>
</tr>
<tr>
<td>2580-259F</td>
<td>\p{InBlockElements}</td>
<td>2580-259F</td>
<td>方块元素&lt;/br&gt;(Block Element)</td>
</tr>
<tr>
<td>25A0-25FF</td>
<td>\p{InGeometricShapes}</td>
<td>25A0-25FF</td>
<td>几何图形&lt;/br&gt;(Geometric Shapes)</td>
</tr>
<tr>
<td>2600-26FF</td>
<td>\p{InMiscellaneousSymbols}</td>
<td>2600-26FF</td>
<td>杂项符号&lt;/br&gt;(Miscellaneous Symbols)</td>
</tr>
<tr>
<td>2700-27BF</td>
<td>\p{InDingbats}</td>
<td>2700-27BF</td>
<td>印刷符号&lt;/br&gt;(Dingbats)</td>
</tr>
<tr>
<td>27C0-27EF</td>
<td>\p{InMiscellaneousMathematicalSymbols-A}</td>
<td>27C0-27EF</td>
<td>杂项数学符号-A&lt;/br&gt;(Miscellaneous Mathematical Symbols-A)</td>
</tr>
<tr>
<td>27F0-27FF</td>
<td>\p{InSupplementalArrows-A}</td>
<td>27F0-27FF</td>
<td>追加箭头-A&lt;/br&gt;(Supplemental Arrows-A)</td>
</tr>
<tr>
<td>2800-28FF</td>
<td>\p{InBraillePatterns}</td>
<td>2800-28FF</td>
<td>盲文点字模型&lt;/br&gt;(Braille Patterns)</td>
</tr>
<tr>
<td>2900-297F</td>
<td>\p{InSupplementalArrows-B}</td>
<td>2900-297F</td>
<td>追加箭头-B&lt;/br&gt;(Supplemental Arrows-B)</td>
</tr>
<tr>
<td>2980-29FF</td>
<td>\p{InMiscellaneousMathematicalSymbols-B}</td>
<td>2980-29FF</td>
<td>杂项数学符号-B&lt;/br&gt;(Miscellaneous Mathematical Symbols-B)</td>
</tr>
<tr>
<td>2A00-2AFF</td>
<td>\p{InSupplementalMathematicalOperators}</td>
<td>2A00-2AFF</td>
<td>追加数学运算符&lt;/br&gt;(Supplemental Mathematical Operator)</td>
</tr>
<tr>
<td>2B00-2BFF</td>
<td>\p{InMiscellaneousSymbolsandArrows}</td>
<td>2B00-2BFF</td>
<td>杂项符号和箭头&lt;/br&gt;(Miscellaneous Symbols and Arrows)</td>
</tr>
<tr>
<td>2C00-2C5F</td>
<td>\p{InGlagolitic}</td>
<td>2C00-2C5F</td>
<td>格拉哥里字母(Glagolitic)</td>
</tr>
<tr>
<td>2C60-2C7F</td>
<td>\p{InLatinExtended-C}</td>
<td>2C60-2C7F</td>
<td>拉丁文扩展-C&lt;/br&gt;(Latin Extended-C)</td>
</tr>
<tr>
<td>2C80-2CFF</td>
<td>\p{InCoptic}</td>
<td>2C80-2CFF</td>
<td>古埃及语&lt;/br&gt;(Coptic)</td>
</tr>
<tr>
<td>2D00-2D2F</td>
<td>\p{InGeorgianSupplement}</td>
<td>2D00-2D2F</td>
<td>格鲁吉亚语补充&lt;/br&gt;(Georgian Supplement)</td>
</tr>
<tr>
<td>2D30-2D7F</td>
<td>\p{InTifinagh}</td>
<td>2D30-2D7F</td>
<td>提非纳文&lt;/br&gt;(Tifinagh)</td>
</tr>
<tr>
<td>2D80-2DDF</td>
<td>\p{InEthiopicExtended}</td>
<td>2D80-2DDF</td>
<td>埃塞俄比亚语扩展&lt;/br&gt;(Ethiopic Extended)</td>
</tr>
<tr>
<td>2DE0-2DFF</td>
<td>\p{InCyrillicExtended-A}</td>
<td></td>
<td></td>
</tr>
<tr>
<td>2E00-2E7F</td>
<td>\p{InSupplementalPunctuation}</td>
<td>2E00-2E7F</td>
<td>追加标点&lt;/br&gt;(Supplemental Punctuation)</td>
</tr>
<tr>
<td>2E80-2EFF</td>
<td>\p{InCJKRadicalsSupplement}</td>
<td>2E80-2EFF</td>
<td>CJK 部首补充&lt;/br&gt;(CJK Radicals Supplement)</td>
</tr>
<tr>
<td>2F00-2FDF</td>
<td>\p{InKangxiRadicals}</td>
<td>2F00-2FDF</td>
<td>康熙字典部首&lt;/br&gt;(Kangxi Radicals)</td>
</tr>
<tr>
<td>2FF0-2FFF</td>
<td>\p{InIdeographicDescriptionCharacters}</td>
<td>2FF0-2FFF</td>
<td>表意文字描述符&lt;/br&gt;(Ideographic Description Characters)</td>
</tr>
<tr>
<td>3000-303F</td>
<td>\p{InCJKSymbolsandPunctuation}</td>
<td>3000-303F</td>
<td>CJK 符号和标点&lt;/br&gt;(CJK Symbols and Punctuation)</td>
</tr>
<tr>
<td>3040-309F</td>
<td>\p{InHiragana}</td>
<td>3040-309F</td>
<td>日文平假名&lt;/br&gt;(Hiragana)</td>
</tr>
<tr>
<td>30A0-30FF</td>
<td>\p{InKatakana}</td>
<td>30A0-30FF</td>
<td>日文片假名&lt;/br&gt;(Katakana)</td>
</tr>
<tr>
<td>3100-312F</td>
<td>\p{InBopomofo}</td>
<td>3100-312F</td>
<td>注音字母&lt;/br&gt;(Bopomofo)</td>
</tr>
<tr>
<td>3130-318F</td>
<td>\p{InHangulCompatibilityJamo}</td>
<td>3130-318F</td>
<td>朝鲜文兼容字母&lt;/br&gt;(Hangul Compatibility Jamo)</td>
</tr>
<tr>
<td>3190-319F</td>
<td>\p{InKanbun}</td>
<td>3190-319F</td>
<td>象形字注释标志&lt;/br&gt;(Kanbun)</td>
</tr>
<tr>
<td>31A0-31BF</td>
<td>\p{InBopomofoExtended}</td>
<td>31A0-31BF</td>
<td>注音字母扩展&lt;/br&gt;(Bopomofo Extended)</td>
</tr>
<tr>
<td>31C0-31EF</td>
<td>\p{InCJKStrokes}</td>
<td>31C0-31EF</td>
<td>CJK 笔画&lt;/br&gt;(CJK Strokes)</td>
</tr>
<tr>
<td>31F0-31FF</td>
<td>\p{InKatakanaPhoneticExtensions}</td>
<td>31F0-31FF</td>
<td>日文片假名语音扩展&lt;/br&gt;(Katakana Phonetic Extensions)</td>
</tr>
<tr>
<td>3200-32FF</td>
<td>\p{InEnclosedCJKLettersandMonths}</td>
<td>3200-32FF</td>
<td>封闭式 CJK 文字和月份&lt;/br&gt;(Enclosed CJK Letters and Months)</td>
</tr>
<tr>
<td>3300-33FF</td>
<td>\p{InCJKCompatibility}</td>
<td>3300-33FF</td>
<td>CJK 兼容&lt;/br&gt;(CJK Compatibility)</td>
</tr>
<tr>
<td>3400-4DBF</td>
<td>\p{InCJKUnifiedIdeographsExtensionA}</td>
<td>3400-4DBF</td>
<td>CJK 统一表意符号扩展 A&lt;/br&gt;(CJK Unified Ideographs Extension A)</td>
</tr>
<tr>
<td><strong>4DC0-4DFF</strong></td>
<td><strong>\p{InYijingHexagramSymbols}</strong></td>
<td><strong>4DC0-4DFF</strong></td>
<td><strong>易经六十四卦符号&lt;/br&gt;(Yijing Hexagrams Symbols)</strong></td>
</tr>
<tr>
<td><strong>4E00-9FFF</strong></td>
<td><strong>\p{InCJKUnifiedIdeographs}</strong></td>
<td><strong>4E00-9FBF</strong></td>
<td><strong>CJK 统一表意符号&lt;/br&gt;(CJK Unified Ideographs)</strong></td>
</tr>
<tr>
<td>A000-A48F</td>
<td>\p{InYiSyllables}</td>
<td>A000-A48F</td>
<td>彝文音节&lt;/br&gt;(Yi Syllables)</td>
</tr>
<tr>
<td>A490-A4CF</td>
<td>\p{InYiRadicals}</td>
<td>A490-A4CF</td>
<td>彝文字根&lt;/br&gt;(Yi Radicals)</td>
</tr>
<tr>
<td>A4D0-A4FF</td>
<td>\p{InLisu}</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A500-A63F</td>
<td>\p{InVai}</td>
<td>A500-A61F</td>
<td>Vai</td>
</tr>
<tr>
<td>A640-A69F</td>
<td>\p{InCyrillicExtended-B}</td>
<td>A660-A6FF</td>
<td>统一加拿大土著语音节补充&lt;/br&gt;(Unified Canadian Aboriginal Syllabics Supplement)</td>
</tr>
<tr>
<td>A6A0-A6FF</td>
<td>\p{InBamum}</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A700-A71F</td>
<td>\p{InModifierToneLetters}</td>
<td>A700-A71F</td>
<td>声调修饰字母&lt;/br&gt;(Modifier Tone Letters)</td>
</tr>
<tr>
<td>A720-A7FF</td>
<td>\p{InLatinExtended-D}</td>
<td>A720-A7FF</td>
<td>拉丁文扩展-D&lt;/br&gt;(Latin Extended-D)</td>
</tr>
<tr>
<td>A800-A82F</td>
<td>\p{InSylotiNagri}</td>
<td>A800-A82F</td>
<td>Syloti Nagri</td>
</tr>
<tr>
<td>A830-A83F</td>
<td>\p{InCommonIndicNumberForms}</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A840-A87F</td>
<td>\p{InPhags-pa}</td>
<td>A840-A87F</td>
<td>八思巴字&lt;/br&gt;(Phags-pa)</td>
</tr>
<tr>
<td>A880-A8DF</td>
<td>\p{InSaurashtra}</td>
<td>A880-A8DF</td>
<td>Saurashtra</td>
</tr>
<tr>
<td>A8E0-A8FF</td>
<td>\p{InDevanagariExtended}</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A900-A92F</td>
<td>\p{InKayahLi}</td>
<td>A900-A97F</td>
<td>爪哇语&lt;/br&gt;(Javanese)</td>
</tr>
<tr>
<td>A930-A95F</td>
<td>\p{InRejang}</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A960-A97F</td>
<td>\p{InHangulJamoExtended-A}</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A980-A9DF</td>
<td>\p{InJavanese}</td>
<td>A980-A9DF</td>
<td>Chakma</td>
</tr>
<tr>
<td>AA00-AA5F</td>
<td>\p{InCham}</td>
<td>AA00-AA3F</td>
<td>Varang Kshiti</td>
</tr>
<tr>
<td>AA60-AA7F</td>
<td>\p{InMyanmarExtended-A}</td>
<td>AA40-AA6F</td>
<td>Sorang Sompeng</td>
</tr>
<tr>
<td>AA80-AADF</td>
<td>\p{InTaiViet}</td>
<td>AA80-AADF</td>
<td>Newari</td>
</tr>
<tr>
<td>AAE0-AAFF</td>
<td>\p{InMeeteiMayekExtensions}</td>
<td></td>
<td></td>
</tr>
<tr>
<td>AB00-AB2F</td>
<td>\p{InEthiopicExtended-A}</td>
<td>AB00-AB5F</td>
<td>越南傣语&lt;/br&gt;(Vi?t Thái)</td>
</tr>
<tr>
<td>ABC0-ABFF</td>
<td>\p{InMeeteiMayek}</td>
<td>AB80-ABA0</td>
<td>Kayah Li</td>
</tr>
<tr>
<td>AC00-D7AF</td>
<td>\p{InHangulSyllables}</td>
<td>AC00-D7AF</td>
<td>朝鲜文音节&lt;/br&gt;(Hangul Syllables)</td>
</tr>
<tr>
<td>D7B0-D7FF</td>
<td>\p{InHangulJamoExtended-B}</td>
<td>D800-DBFF</td>
<td>High-half zone of UTF-16</td>
</tr>
<tr>
<td>D800-DB7F</td>
<td>\p{InHighSurrogates}</td>
<td></td>
<td></td>
</tr>
<tr>
<td>DB80-DBFF</td>
<td>\p{InHighPrivateUseSurrogates}</td>
<td></td>
<td></td>
</tr>
<tr>
<td>DC00-DFFF</td>
<td>\p{InLowSurrogates}</td>
<td>DC00-DFFF</td>
<td>Low-half zone of UTF-16</td>
</tr>
<tr>
<td>E000-F8FF</td>
<td>\p{InPrivateUseArea}</td>
<td>E000-F8FF</td>
<td>自行使用区域&lt;/br&gt;(Private Use Zone)</td>
</tr>
<tr>
<td>F900-FAFF</td>
<td>\p{InCJKCompatibilityIdeographs}</td>
<td>F900-FAFF</td>
<td>CJK 兼容象形文字&lt;/br&gt;(CJK Compatibility Ideographs)</td>
</tr>
<tr>
<td>FB00-FB4F</td>
<td>\p{InAlphabeticPresentationForms}</td>
<td>FB00-FB4F</td>
<td>字母表达形式&lt;/br&gt;(Alphabetic Presentation Form)</td>
</tr>
<tr>
<td>FB50-FDFF</td>
<td>\p{InArabicPresentationForms-A}</td>
<td>FB50-FDFF</td>
<td>阿拉伯表达形式A&lt;/br&gt;(Arabic Presentation Form-A)</td>
</tr>
<tr>
<td>FE00-FE0F</td>
<td>\p{InVariationSelectors}</td>
<td>FE00-FE0F</td>
<td>变量选择符&lt;/br&gt;(Variation Selector)</td>
</tr>
<tr>
<td>FE10-FE1F</td>
<td>\p{InVerticalForms}</td>
<td>FE10-FE1F</td>
<td>竖排形式&lt;/br&gt;(Vertical Forms)</td>
</tr>
<tr>
<td>FE20-FE2F</td>
<td>\p{InCombiningHalfMarks}</td>
<td>FE20-FE2F</td>
<td>组合用半符号&lt;/br&gt;(Combining Half Marks)</td>
</tr>
<tr>
<td>FE30-FE4F</td>
<td>\p{InCJKCompatibilityForms}</td>
<td>FE30-FE4F</td>
<td>CJK 兼容形式&lt;/br&gt;(CJK Compatibility Forms)</td>
</tr>
<tr>
<td>FE50-FE6F</td>
<td>\p{InSmallFormVariants}</td>
<td>FE50-FE6F</td>
<td>小型变体形式&lt;/br&gt;(Small Form Variants)</td>
</tr>
<tr>
<td>FE70-FEFF</td>
<td>\p{InArabicPresentationForms-B}</td>
<td>FE70-FEFF</td>
<td>阿拉伯表达形式B&lt;/br&gt;(Arabic Presentation Form-B)</td>
</tr>
<tr>
<td>FF00-FFEF</td>
<td>\p{InHalfwidthandFullwidthForms}</td>
<td>FF00-FFEF</td>
<td>半型及全型形式&lt;/br&gt;(Halfwidth and Fullwidth Form)</td>
</tr>
<tr>
<td>FFF0-FFFF</td>
<td>\p{InSpecials}</td>
<td>FFF0-FFFF</td>
<td>特殊&lt;/br&gt;(Specials)</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>regex</category>
      </categories>
      <tags>
        <tag>symbol</tag>
      </tags>
  </entry>
  <entry>
    <title>visual git checkout</title>
    <url>/2017/02/08/visual-git-checkout/</url>
    <content><![CDATA[<h4 id="Checkout"><a href="#Checkout" class="headerlink" title="Checkout"></a>Checkout</h4><p>checkout命令用于从历史提交（或者暂存区域）中拷贝文件到工作目录，也可用于切换分支。</p>
<p>当给定某个文件名（或者打开-p选项，或者文件名和-p选项同时打开）时，git会从指定的提交中拷贝文件到暂存区域和工作目录。比如，git checkout HEAD~ foo.c会将提交节点HEAD~(即当前提交节点的父节点)中的foo.c复制到工作目录并且加到暂存区域中。（如果命令中没有指定提交节点，则会从暂存区域中拷贝内容。）注意当前分支不会发生变化。<br><img src="http://marklodato.github.io/visual-git-guide/checkout-files.svg" alt><br>当不指定文件名，而是给出一个（本地）分支时，那么HEAD标识会移动到那个分支（也就是说，我们“切换”到那个分支了），然后暂存区域和工作目录中的内容会和HEAD对应的提交节点一致。新提交节点（下图中的a47c3）中的所有文件都会被复制（到暂存区域和工作目录中）；只存在于老的提交节点（ed489）中的文件会被删除；不属于上述两者的文件会被忽略，不受影响。<br><img src="http://marklodato.github.io/visual-git-guide/checkout-branch.svg" alt><br>如果既没有指定文件名，也没有指定分支名，而是一个标签、远程分支、SHA-1值或者是像master~3类似的东西，就得到一个匿名分支，称作detached HEAD（被分离的HEAD标识）。这样可以很方便地在历史版本之间互相切换。比如说你想要编译1.6.6.1版本的git，你可以运行git checkout v1.6.6.1（这是一个标签，而非分支名），编译，安装，然后切换回另一个分支，比如说git checkout master。然而，当提交操作涉及到“分离的HEAD”时，其行为会略有不同，详情见在下面。<br><img src="http://marklodato.github.io/visual-git-guide/checkout-detached.svg" alt></p>
<h3 id="HEAD标识处于分离状态时的提交操作"><a href="#HEAD标识处于分离状态时的提交操作" class="headerlink" title="HEAD标识处于分离状态时的提交操作"></a>HEAD标识处于分离状态时的提交操作</h3><p>当HEAD处于分离状态（不依附于任一分支）时，提交操作可以正常进行，但是不会更新任何已命名的分支。(你可以认为这是在更新一个匿名分支。)<br><img src="http://marklodato.github.io/visual-git-guide/commit-detached.svg" alt><br>一旦此后你切换到别的分支，比如说master，那么这个提交节点（可能）再也不会被引用到，然后就会被丢弃掉了。注意这个命令之后就不会有东西引用2eecb。<br><img src="http://marklodato.github.io/visual-git-guide/checkout-after-detached.svg" alt><br>但是，如果你想保存这个状态，可以用命令git checkout -b name来创建一个新的分支。<br><img src="http://marklodato.github.io/visual-git-guide/checkout-b-detached.svg" alt></p>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>version</tag>
      </tags>
  </entry>
  <entry>
    <title>visual git cherry-pick &amp; rebase</title>
    <url>/2017/02/08/visual-git-cherry-pick-rebase/</url>
    <content><![CDATA[<h4 id="Cherry-Pick"><a href="#Cherry-Pick" class="headerlink" title="Cherry Pick"></a>Cherry Pick</h4><p>cherry-pick命令”复制”一个提交节点并在当前分支做一次完全一样的新提交。<br><img src="http://marklodato.github.io/visual-git-guide/cherry-pick.svg" alt></p>
<h4 id="Rebase"><a href="#Rebase" class="headerlink" title="Rebase"></a>Rebase</h4><p>衍合是合并命令的另一种选择。合并把两个父分支合并进行一次提交，提交历史不是线性的。衍合在当前分支上重演另一个分支的历史，提交历史是线性的。 本质上，这是线性化的自动的 cherry-pick<br><img src="http://marklodato.github.io/visual-git-guide/rebase.svg" alt></p>
<p>上面的命令都在topic分支中进行，而不是master分支，在master分支上重演，并且把分支指向新的节点。注意旧提交没有被引用，将被回收。</p>
<p>要限制回滚范围，使用—onto选项。下面的命令在master分支上重演当前分支从169a6以来的最近几个提交，即2c33a。<br><img src="http://marklodato.github.io/visual-git-guide/rebase-onto.svg" alt><br>同样有git rebase —interactive让你更方便的完成一些复杂操作，比如丢弃、重排、修改、合并提交。没有图片体现这些，细节看这里:<a href="http://www.kernel.org/pub/software/scm/git/docs/git-rebase.html#_interactive_mode" target="_blank" rel="noopener">git-rebase(1)</a></p>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>version</tag>
      </tags>
  </entry>
  <entry>
    <title>visual git diff &amp; commit</title>
    <url>/2017/02/08/visual-git-diff-commit/</url>
    <content><![CDATA[<h3 id="Diff"><a href="#Diff" class="headerlink" title="Diff"></a>Diff</h3><p>有许多种方法查看两次提交之间的变动。下面是一些示例。</p>
<p><img src="http://marklodato.github.io/visual-git-guide/diff.svg" alt></p>
<h3 id="Commit"><a href="#Commit" class="headerlink" title="Commit"></a>Commit</h3><p>提交时，git用暂存区域的文件创建一个新的提交，并把此时的节点设为父节点。然后把当前分支指向新的提交节点。下图中，当前分支是master。 在运行命令之前，master指向ed489，提交后，master指向新的节点f0cec并以ed489作为父节点。<br><img src="http://marklodato.github.io/visual-git-guide/commit-master.svg" alt><br>即便当前分支是某次提交的祖父节点，git会同样操作。下图中，在master分支的祖父节点maint分支进行一次提交，生成了1800b。 这样，maint分支就不再是master分支的祖父节点。此时，<a href="/2017/02/08/visual-git-reset-merge/">合并</a> (或者 <a href="/2017/02/08/visual-git-cherry-pick-rebase/">衍合</a>) 是必须的。<br><img src="http://marklodato.github.io/visual-git-guide/commit-maint.svg" alt><br>如果想更改一次提交，使用 git commit —amend。git会使用与当前提交相同的父节点进行一次新提交，旧的提交会被取消。<br><img src="http://marklodato.github.io/visual-git-guide/commit-amend.svg" alt><br>另一个例子是<a href="/2017/02/08/visual-git-checkout/">分离HEAD</a>提交,后文讲。</p>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>version</tag>
      </tags>
  </entry>
  <entry>
    <title>visual git</title>
    <url>/2017/02/08/visual-git/</url>
    <content><![CDATA[<h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><p><img src="http://marklodato.github.io/visual-git-guide/basic-usage.svg" alt></p>
<p>上面的四条命令在工作目录、暂存目录(也叫做索引)和仓库之间复制文件。</p>
<ul>
<li>git add files 把当前文件放入暂存区域。</li>
<li>git commit 给暂存区域生成快照并提交。</li>
<li>git reset — files 用来撤销最后一次git add files，你也可以用git reset 撤销所有暂存区域文件。</li>
<li>git checkout — files 把文件从暂存区域复制到工作目录，用来丢弃本地修改。</li>
</ul>
<p>你可以用 <code>git reset -p</code>, <code>git checkout -p</code>, or <code>git add -p</code>进入交互模式。<br>也可以跳过暂存区域直接从仓库取出文件或者直接提交代码。</p>
<p><img src="http://marklodato.github.io/visual-git-guide/basic-usage-2.svg" alt></p>
<ul>
<li>git commit -a 相当于运行 git add 把所有当前目录下的文件加入暂存区域再运行。git commit.</li>
<li>git commit files 进行一次包含最后一次提交加上工作目录中文件快照的提交。并且文件被添加到暂存区域。</li>
<li>git checkout HEAD — files 回滚到复制最后一次提交。</li>
</ul>
<h4 id="约定"><a href="#约定" class="headerlink" title="约定"></a>约定</h4><p>后文中以下面的形式使用图片。</p>
<p><img src="http://marklodato.github.io/visual-git-guide/conventions.svg" alt></p>
<p>绿色的5位字符表示提交的ID，分别指向父节点。分支用橘色显示，分别指向特定的提交。当前分支由附在其上的HEAD标识。 这张图片里显示最后5次提交，ed489是最新提交。 master分支指向此次提交，另一个maint分支指向祖父提交节点。</p>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>version</tag>
      </tags>
  </entry>
  <entry>
    <title>visual git reset &amp; merge</title>
    <url>/2017/02/08/visual-git-reset-merge/</url>
    <content><![CDATA[<h4 id="Reset"><a href="#Reset" class="headerlink" title="Reset"></a>Reset</h4><p>reset命令把当前分支指向另一个位置，并且有选择的变动工作目录和索引。也用来在从历史仓库中复制文件到索引，而不动工作目录。</p>
<p>如果不给选项，那么当前分支指向到那个提交。如果用—hard选项，那么工作目录也更新，如果用—soft选项，那么都不变。<br><img src="http://marklodato.github.io/visual-git-guide/reset-commit.svg" alt><br>如果没有给出提交点的版本号，那么默认用HEAD。这样，分支指向不变，但是索引会回滚到最后一次提交，如果用—hard选项，工作目录也同样。<br><img src="http://marklodato.github.io/visual-git-guide/reset.svg" alt><br>如果给了文件名(或者 -p选项), 那么工作效果和带文件名的<a href="/2017/02/08/visual-git-checkout/">checkout</a>差不多，除了索引被更新。<br><img src="http://marklodato.github.io/visual-git-guide/reset-files.svg" alt></p>
<h4 id="Merge"><a href="#Merge" class="headerlink" title="Merge"></a>Merge</h4><p>merge 命令把不同分支合并起来。合并前，索引必须和当前提交相同。如果另一个分支是当前提交的祖父节点，那么合并命令将什么也不做。 另一种情况是如果当前提交是另一个分支的祖父节点，就导致fast-forward合并。指向只是简单的移动，并生成一个新的提交。<br><img src="http://marklodato.github.io/visual-git-guide/merge-ff.svg" alt><br>否则就是一次真正的合并。默认把当前提交(ed489 如下所示)和另一个提交(33104)以及他们的共同祖父节点(b325c)进行一次<code>三方合并</code>。结果是先保存当前目录和索引，然后和父节点33104一起做一次新提交。<br><img src="http://marklodato.github.io/visual-git-guide/merge.svg" alt></p>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>version</tag>
      </tags>
  </entry>
  <entry>
    <title>Version of javascript</title>
    <url>/2017/02/09/Version-of-javascript/</url>
    <content><![CDATA[<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">Version</th>
<th style="text-align:left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">JavaScript 1.0</td>
<td style="text-align:left">The original version of the language. It was buggy and is now essentially obsolete. Implemented by Netscape 2.</td>
</tr>
<tr>
<td style="text-align:center">JavaScript 1.1</td>
<td style="text-align:left">Introduced a true Array object; most serious bugs resolved. Implemented by Netscape 3.</td>
</tr>
<tr>
<td style="text-align:center">JavaScript 1.2</td>
<td style="text-align:left">Introduced the <code>switch</code> statement, <strong>regular expressions</strong>, and a number of other features. Almost compliant with ECMA v1, but has some incompatibilities. Implemented by Netscape 4.</td>
</tr>
<tr>
<td style="text-align:center">JavaScript 1.3</td>
<td style="text-align:left">Fixed incompatibilities of JavaScript 1.2. Compliant with ECMA v1. Implemented by Netscape 4.5.</td>
</tr>
<tr>
<td style="text-align:center">JavaScript 1.4</td>
<td style="text-align:left">Implemented only in Netscape server products.</td>
</tr>
<tr>
<td style="text-align:center">JavaScript 1.5</td>
<td style="text-align:left">Introduced exception handling. Compliant with ECMA v3. Implemented by Mozilla and Netscape 6.</td>
</tr>
<tr>
<td style="text-align:center">JScript 1.0</td>
<td style="text-align:left">Roughly equivalent to JavaScript 1.0. Implemented by early releases of IE 3.</td>
</tr>
<tr>
<td style="text-align:center">JScript 2.0</td>
<td style="text-align:left">Roughly equivalent to JavaScript 1.1. Implemented by later releases of IE 3.</td>
</tr>
<tr>
<td style="text-align:center">JScript 3.0</td>
<td style="text-align:left">Roughly equivalent to JavaScript 1.3. Compliant with ECMA v1. Implemented by IE 4.</td>
</tr>
<tr>
<td style="text-align:center">JScript 4.0</td>
<td style="text-align:left">Not implemented by any web browser.</td>
</tr>
<tr>
<td style="text-align:center">JScript 5.0</td>
<td style="text-align:left">Supported exception handling. Partially compliant with ECMA v3. Implemented by IE 5.</td>
</tr>
<tr>
<td style="text-align:center">JScript 5.5</td>
<td style="text-align:left">Roughly equivalent to JavaScript 1.5. Fully compliant with ECMA v3. Implemented by IE 5.5 and IE 6. (IE 6 actually implements JScript 5.6, but 5.6 is not different from 5.5 in any way that is relevant to client-side JavaScript programmers.)</td>
</tr>
<tr>
<td style="text-align:center">ECMA v1</td>
<td style="text-align:left">The first standard version of the language. Standardized the basic features of JavaScript 1.1 and added a few new features. Did not standardize the <code>switch</code> statement or regular expression support. Conformant implementations are JavaScript 1.3 and JScript 3.0.</td>
</tr>
<tr>
<td style="text-align:center">ECMA v2</td>
<td style="text-align:left">A maintenance release of the standard that included clarifications but defined no new features.</td>
</tr>
<tr>
<td style="text-align:center">ECMA v3</td>
<td style="text-align:left">Standardized the <code>switch</code> statement, <strong>regular expressions</strong>, and exception handling. Conformant implementations are JavaScript 1.5 and JScript 5.5.</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
  </entry>
  <entry>
    <title>Hello Raspberry</title>
    <url>/2017/02/11/Hello-Raspberry/</url>
    <content><![CDATA[<h3 id="First-Git-commit-by-raspberry"><a href="#First-Git-commit-by-raspberry" class="headerlink" title="First Git commit by raspberry"></a>First Git commit by raspberry</h3><p>Interesting! a lot of fun<br>Bug in 2017-02-02<br>Raspberry Pi -Read 20Mb/s Write 20Mb/s in board tf card</p>
<h4 id="change-keyboard-layout"><a href="#change-keyboard-layout" class="headerlink" title="change keyboard layout"></a>change keyboard layout</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/default/keyboard</span><br><span class="line"></span><br><span class="line">XKBLAYOUT=&quot;us&quot;</span><br></pre></td></tr></table></figure>
<h4 id="setting-location-amp-timezone"><a href="#setting-location-amp-timezone" class="headerlink" title="setting location&amp;timezone"></a>setting location&amp;timezone</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo raspi-config</span><br></pre></td></tr></table></figure>
<h4 id="wireless-ctl"><a href="#wireless-ctl" class="headerlink" title="wireless ctl"></a>wireless ctl</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/wpa_supplicant/wpa_supplicant.conf</span><br><span class="line">network=&#123;</span><br><span class="line">	ssid=&quot;TP-LINK XXX&quot;</span><br><span class="line">	psk=&quot;i&apos;m password&quot;</span><br><span class="line">	key_mgmt=WPA-PSK</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>if not work first check ssid &amp; passwd correct<br>then ckeck net card status<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iwconfig</span><br><span class="line">ifconfig wlan0</span><br></pre></td></tr></table></figure></p>
<p>try manually restart the interface with<br><code>sudo ifdown wlan0</code> and <code>sudo ifup wlan0</code><br>at last try <code>sudo reboot</code></p>
]]></content>
      <categories>
        <category>raspberry</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>first</tag>
      </tags>
  </entry>
  <entry>
    <title>Keyboard special characters</title>
    <url>/2017/02/14/Keyboard-special-characters/</url>
    <content><![CDATA[<p><em><strong>sign</strong></em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">|</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">|</span><br></pre></td></tr></table></figure>
<div class="table-container">
<table>
<thead>
<tr>
<th>a</th>
<th>b</th>
</tr>
</thead>
<tbody>
<tr>
<td>`</td>
<td>backquote 反引号</td>
</tr>
<tr>
<td>~</td>
<td>tilde</td>
</tr>
<tr>
<td>!</td>
<td>exclam</td>
</tr>
<tr>
<td>@</td>
<td>at</td>
</tr>
<tr>
<td>#</td>
<td>numbersign,英语国家是hash&lt;/br&gt;美语是pound&lt;/br&gt;音乐里作sharp,如C#</td>
</tr>
<tr>
<td>$</td>
<td>dollar</td>
</tr>
<tr>
<td>%</td>
<td>percent</td>
</tr>
<tr>
<td>^</td>
<td>caret</td>
</tr>
<tr>
<td>&amp;</td>
<td>ampersand</td>
</tr>
<tr>
<td>*</td>
<td>asterisk,star(美语),数学公式中作multiply</td>
</tr>
<tr>
<td>(</td>
<td>parenleft,opening parentheses</td>
</tr>
<tr>
<td>)</td>
<td>parenright,closing paretheses</td>
</tr>
<tr>
<td>-</td>
<td>minus;hyphen连字符,不读</td>
</tr>
<tr>
<td>_</td>
<td>underscore</td>
</tr>
<tr>
<td>+</td>
<td>plus</td>
</tr>
<tr>
<td>=</td>
<td>equal</td>
</tr>
<tr>
<td>[</td>
<td>bracketleft,opening bracket</td>
</tr>
<tr>
<td>]</td>
<td>bracketright,closing bracket</td>
</tr>
<tr>
<td>{</td>
<td>braceleft</td>
</tr>
<tr>
<td>}</td>
<td>braceright</td>
</tr>
<tr>
<td>;</td>
<td>semicolon</td>
</tr>
<tr>
<td>:</td>
<td>colon</td>
</tr>
<tr>
<td>‘</td>
<td>quote</td>
</tr>
<tr>
<td>“</td>
<td>doublequote</td>
</tr>
<tr>
<td>/</td>
<td>slash</td>
</tr>
<tr>
<td>\</td>
<td>backslash 反斜杠</td>
</tr>
<tr>
<td>&#124;</td>
<td>bar</td>
</tr>
<tr>
<td>,</td>
<td>comma</td>
</tr>
<tr>
<td>&lt;</td>
<td>less  angle brackets</td>
</tr>
<tr>
<td>&gt;</td>
<td>greater  angle brackets</td>
</tr>
<tr>
<td>.</td>
<td>period</td>
</tr>
<tr>
<td>?</td>
<td>question</td>
</tr>
<tr>
<td></td>
<td>space</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>symbol</tag>
      </tags>
  </entry>
  <entry>
    <title>Lazy Greedy Selfish</title>
    <url>/2017/02/14/Lazy-Greedy-Selfish/</url>
    <content><![CDATA[<h3 id="Repeat-Certain-Number"><a href="#Repeat-Certain-Number" class="headerlink" title="Repeat Certain Number"></a>Repeat Certain Number</h3><h4 id="Hexadecimal-number"><a href="#Hexadecimal-number" class="headerlink" title="Hexadecimal number"></a>Hexadecimal number</h4><p><code>\b[a-f0-9]{1,8}\b</code></p>
<ul>
<li>Regex options: Case insensitive</li>
<li>Regex flavors: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby</li>
</ul>
<h4 id="Floating-point-number"><a href="#Floating-point-number" class="headerlink" title="Floating-point number"></a>Floating-point number</h4><p><code>\d*\.\d+(e\d+)?</code></p>
<ul>
<li>Regex options: Case insensitive</li>
<li>Regex flavors: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby</li>
</ul>
<h2 id="Lazy-quantifiers"><a href="#Lazy-quantifiers" class="headerlink" title="Lazy quantifiers"></a>Lazy quantifiers</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*?</span><br><span class="line">+?</span><br><span class="line">??</span><br><span class="line">&#123;7,42&#125;?</span><br></pre></td></tr></table></figure>
<ol>
<li><em>any times</em>, one after another, the less the better</li>
<li><em>more than one time</em>, one after another, the less the better</li>
<li><em>have or not have</em>, not have first</li>
<li><em>seven to fourtytwo times</em>, the less the better</li>
</ol>
<p>In <strong>default repeat</strong> like <code>*</code> <code>+</code> <code>?</code> <code>{}</code> after match unit are all greedy[<strong><em>greedy is not selfish</em></strong>]</p>
<h2 id="Possessive-quantifiers"><a href="#Possessive-quantifiers" class="headerlink" title="Possessive quantifiers"></a>Possessive quantifiers</h2><p><strong><em>Possessive quantifiers is greedy and selfish</em></strong><br>It’s <strong>greedy and selfish</strong>, when it matches, it wouldn’t care other expressions’ express.<br>In other words, it <strong>wouldn’t Backtracking</strong> when matches.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*+</span><br><span class="line">++</span><br><span class="line">?+</span><br><span class="line">&#123;7,42&#125;+</span><br></pre></td></tr></table></figure>
<ol>
<li><em>any times</em>, block reduce to match, the more the better, no backtracking</li>
<li><em>more than one time</em>, the more the better, no backtracking</li>
<li><em>have or not have</em>, the more the better, no backtracking</li>
<li><em>seven to fourtytwo times</em>, the more the better, no backtracking</li>
</ol>
<p><code>\b\d++\b</code></p>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: Java, PCRE, Perl 5.10, Ruby 1.9</li>
</ul>
<p><code>\b(?&gt;\d+)\b</code></p>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java, PCRE, Perl, Ruby</li>
</ul>
<p>ps. <code>(?&gt;\d+)</code> is an atomic group that essentially is a <strong>noncapturing group</strong>,<br>with the extra job of <strong>refusing to backtrack</strong>.</p>
<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><p><code>\w++\d++</code> <strong>can’t mathes</strong> “123abc”<br>Because <code>\w++</code> <strong>selfishly occupy</strong> “123abc”, don’t care \d++ failed to match.<br>When use <code>(\w+)(\d+)</code> to match “123abc”, i found <em>gourp \1</em> matches “12”<br>and <em>group \2</em> matches “3”, <strong>so greedy works</strong>.<br>It’s <strong>not mean selfish is bad</strong>, but only unusual work in <strong>simply task</strong>.</p>
<h2 id="Prevent-Runaway-Repetition"><a href="#Prevent-Runaway-Repetition" class="headerlink" title="Prevent Runaway Repetition"></a>Prevent Runaway Repetition</h2><p>Why prevent? because in some complex condition, expression will complex the same.<br>In these condition <code>Possessive quantifiers</code> is necessary.</p>
<h3 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h3><p><em>Match a html’s origin code</em><br>Solution<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;(?&gt;.*?&lt;head&gt;)(?&gt;.*?&lt;title&gt;)(?&gt;.*?&lt;/title&gt;)↵</span><br><span class="line">(?&gt;.*?&lt;/head&gt;)(?&gt;.*?&lt;body[^&gt;]*&gt;)(?&gt;.*?&lt;/body&gt;).*?&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>
<ul>
<li>Regex options: Case insensitive, dot matches line breaks</li>
<li>Regex flavors: .NET, Java, PCRE, Perl, Ruby</li>
</ul>
<p>ps.If some <strong>tag properties</strong> need be matched, please modify expression.</p>
<p>This regular expression has a worst-case complexity$^3$ of $O(n^7)$<br>If the file is <strong>twice the size</strong>, the regex can need up to <strong>128 times</strong><br>as many steps to figure out it doesn’t match.</p>
<h2 id="Example-1"><a href="#Example-1" class="headerlink" title="Example"></a>Example</h2><p><code>(x+x+)+y</code> to matches “xxxxxxxxxx”<br>It should not matches, watching the operation progress.<br>This regex is $O(2^n)$, if one more ‘x’ is added, the regex can need up to <strong>2times</strong></p>
]]></content>
      <categories>
        <category>regex</category>
      </categories>
  </entry>
  <entry>
    <title>Group match</title>
    <url>/2017/02/13/Group-match/</url>
    <content><![CDATA[<h3 id="Group-number-rules"><a href="#Group-number-rules" class="headerlink" title="Group number rules"></a>Group number rules</h3><p><code>\b(\d\d(\d\d))-\2-\2\b</code><br>From outer to inner , from left to right number increase start from 1.</p>
<h3 id="Noncapturing-group"><a href="#Noncapturing-group" class="headerlink" title="Noncapturing group"></a>Noncapturing group</h3><p><code>\b(?i:Mary|Jane|Sue)\b</code></p>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java, PCRE, Perl, Ruby</li>
</ul>
<p><code>(?i-sm:Mary.*?\r\n)</code></p>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java, PCRE, Perl, Ruby</li>
</ul>
<p><strong>Inner config</strong> the group capture options<br>parentheses start like ‘?:’ ‘?xxx:’, means group <strong>match but no capture</strong>.</p>
<h2 id="Match-Previously-Matched-Again"><a href="#Match-Previously-Matched-Again" class="headerlink" title="Match Previously Matched Again"></a>Match Previously Matched Again</h2><p><code>\b\d\d(\d\d)-\1-\1\b</code></p>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby</li>
</ul>
<blockquote>
<p>\01 is either an <em>octal escape</em> or an <em>error</em>, <strong>dont’t use it</strong>.<br>\xFF <em>hexadecimal</em> escapes are much easier to understand</p>
<p>JavaScript if the <code>\1</code> appear in front of group it match like a zero-length<br><code>\d\d\1-\1-(\d\d)</code> can match <code>12--34</code><br>after ‘2’ and ‘-‘ two zero-length position matches.</p>
</blockquote>
<h2 id="Name-the-capture-group"><a href="#Name-the-capture-group" class="headerlink" title="Name the capture group"></a>Name the capture group</h2><h3 id="Named-capture"><a href="#Named-capture" class="headerlink" title="Named capture"></a>Named capture</h3><p><code>\b(?&lt;year&gt;\d\d\d\d)-(?&lt;month&gt;\d\d)-(?&lt;day&gt;\d\d)\b</code></p>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java 7, XRegExp, PCRE 7, Perl 5.10, Ruby 1.9</li>
</ul>
<p><code>\b(?&#39;year&#39;\d\d\d\d)-(?&#39;month&#39;\d\d)-(?&#39;day&#39;\d\d)\b</code></p>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, PCRE 7, Perl 5.10, Ruby 1.9</li>
</ul>
<p><code>\b(?P&lt;year&gt;\d\d\d\d)-(?P&lt;month&gt;\d\d)-(?P&lt;day&gt;\d\d)\b</code></p>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: PCRE 4 and later, Perl 5.10, Python</li>
</ul>
<h3 id="Named-backreferences"><a href="#Named-backreferences" class="headerlink" title="Named backreferences"></a>Named backreferences</h3><p><code>\b\d\d(?&lt;magic&gt;\d\d)-\k&lt;magic&gt;-\k&lt;magic&gt;\b</code></p>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java 7, XRegExp, PCRE 7, Perl 5.10, Ruby 1.9</li>
</ul>
<p><code>\b\d\d(?&#39;magic&#39;\d\d)-\k&#39;magic&#39;-\k&#39;magic&#39;\b</code></p>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, PCRE 7, Perl 5.10, Ruby 1.9</li>
</ul>
<p><code>\b\d\d(?P&lt;magic&gt;\d\d)-(?P=magic)-(?P=magic)\b</code></p>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: PCRE 4 and later, Perl 5.10, Python</li>
</ul>
<p>Group’s <strong>name must</strong> consist of word characters matched by <code>\w</code></p>
<p>Angle brackets not friend in xml style environment.<br>So some language support use in <code>&#39;</code> <strong>single quotes</strong> instead of angle brackets.</p>
<p>Use <strong>same name</strong> in expression is not recommanded</p>
<h2 id="Syntax-history"><a href="#Syntax-history" class="headerlink" title="Syntax history"></a>Syntax history</h2><p><em>Python</em> was the <strong>first</strong> regular expression flavor to support named capture.</p>
<p>Perhaps due to .NET’s <strong>popularity over</strong> Python, the .NET syntax seems to be the one<br>that other regex library developers <strong>prefer to copy</strong>. <code>Perl 5.10</code> and later have it, and so<br>does the Oniguruma engine in <code>Ruby 1.9</code>. <code>Perl 5.10</code> and <code>Ruby 1.9</code> support both the syntax<br>using angle brackets and single quotes. <strong>Java 7</strong> also copied the <code>.NET syntax</code>, but only<br>the variant using angle brackets. Standard JavaScript does not support named capture.<br>XRegExp adds support for named capture using the .NET syntax, but only the variant<br>with angle brackets.</p>
<p>PCRE copied Python’s syntax long ago, at a time when Perl did not support named<br>capture at all. <code>PCRE 7</code>, the version that adds the new features in <code>Perl 5.10</code>, supports<br><strong>both</strong> the .NET syntax and the Python syntax. Perhaps as a testament to the success of<br>PCRE, in a reverse compatibility move, <code>Perl 5.10</code> also supports the Python syntax. In<br>PCRE and Perl 5.10, <em>the functionality of the .NET syntax and the Python syntax for<br>named capture is identical.</em></p>
]]></content>
      <categories>
        <category>regex</category>
      </categories>
  </entry>
  <entry>
    <title>Linux display power management</title>
    <url>/2017/02/16/Linux-display-power-management/</url>
    <content><![CDATA[<h3 id="Gnome"><a href="#Gnome" class="headerlink" title="Gnome"></a>Gnome</h3><p><code>/etc/profile.d</code></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>a</th>
<th>b</th>
</tr>
</thead>
<tbody>
<tr>
<td>xset -q</td>
<td>查询</td>
</tr>
<tr>
<td>xset s off</td>
<td>禁用屏幕保护</td>
</tr>
<tr>
<td>xset s 3600 3600</td>
<td>设置空闲时间为1小时</td>
</tr>
<tr>
<td>xset -dpms</td>
<td>关闭 DPMS[电源之星]</td>
</tr>
<tr>
<td>xset +dpms</td>
<td>开启 DPMS[电源之星]</td>
</tr>
<tr>
<td>xset s off -dpms</td>
<td>禁用 DPMS 并阻止屏幕进入空闲</td>
</tr>
<tr>
<td>xset dpms force off</td>
<td>立即关闭屏幕</td>
</tr>
<tr>
<td>xset dpms force standby</td>
<td>强制屏幕进入待命状态</td>
</tr>
<tr>
<td>xset dpms force suspend</td>
<td>强制屏幕进入暂停状态</td>
</tr>
<tr>
<td>xset dpms 600 900 1200</td>
<td>三个数值分别为  Standby Suspend Off[s]</td>
</tr>
</tbody>
</table>
</div>
<h3 id="Command-line"><a href="#Command-line" class="headerlink" title="Command line"></a>Command line</h3><p>Raspbian &amp; Archlinux -&gt; /etc/bash.bashrc<br>CentOS -&gt; /etc/bashrc</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">setterm -blank [0-60|force|poke]</span><br><span class="line">setterm -powersave [on|vsync|hsync|powerdown|off]</span><br><span class="line">setterm -powerdown [0-60]</span><br></pre></td></tr></table></figure>
<p><code>setterm -blank 0 -powerdown 0</code><br><strong>No protect mode , no powerdown close display</strong></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>command</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux init task</title>
    <url>/2017/02/15/Linux-init-task/</url>
    <content><![CDATA[<h2 id="Modify-rc-local"><a href="#Modify-rc-local" class="headerlink" title="Modify rc.local"></a>Modify rc.local</h2><p><code>/etc/rc.local</code> add command before <code>exit 0</code><br>script must have execute authority <code>x</code></p>
<h2 id="update-rc-d-command"><a href="#update-rc-d-command" class="headerlink" title="update-rc.d command"></a>update-rc.d command</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo cp -f /home/pi/autowifi.sh /etc/init.d/</span><br><span class="line">[ln -s /home/pi/autowifi.sh /etc/init.d/autowifi]</span><br><span class="line">sudo chmod +x /etc/init.d/autowifi.sh</span><br><span class="line">sudo chown root:root /etc/init.d/autowifi.sh</span><br><span class="line">sudo update-rc.d autowifi.sh defaults 99</span><br><span class="line">sudo update-rc.d -f autowifi.sh remove</span><br></pre></td></tr></table></figure>
<ol>
<li>add file or link to <code>/etc/init.d</code></li>
<li>add execute authority to script</li>
<li>add user authority to script</li>
<li>command add script to init start</li>
<li>defaults [num] mean start sequence, the bigger the latter.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">update-rc.d [-n] [-f] name remove</span><br><span class="line">update-rc.d [-n] name default [NN | SS KK]</span><br></pre></td></tr></table></figure>
<ul>
<li><code>-n</code> do nothing, only preview.</li>
<li><code>-f</code> delete link, even script remain in <code>/etc/init.d</code></li>
<li><code>NN</code> execute sequence</li>
<li><code>SS</code> begin sequence <code>KK</code> end sequence</li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>command</tag>
      </tags>
  </entry>
  <entry>
    <title>Match based on condition</title>
    <url>/2017/02/20/Match-based-on-condition/</url>
    <content><![CDATA[<h3 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h3><p>Create a regular expression that matches a comma-delimited list of the words <strong>one</strong>,<br><strong>two</strong>, and <strong>three</strong>. Each word can occur <strong>any number of times</strong> in the list, and the words<br>can occur in any order, but each word <strong>must appear at least once</strong>.</p>
<h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p><code>\b(?:(?:(one)|(two)|(three))(?:,|\b)){3,}(?(1)|(?!))(?(2)|(?!))(?(3)|(?!))</code></p>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, PCRE, Perl, Python</li>
</ul>
<p>First an words anchor, then no capture group, inside <strong>three possible group</strong> anticipate be matched.<br>Behind is a comma <code>,</code> or an anchor, these pattern happen at <strong>least three times</strong>.<br>If group <code>1th</code> <code>2th</code> <code>3th</code> group exists then txt matched.<br>if not then <code>(?!)</code> anticipate it’s back is not a null, so definitely fail, no matched.</p>
<hr>
<p><code>\b(?:(?:(one)|(two)|(three))(?:,|\b)){3,}</code></p>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby</li>
</ul>
<h3 id="Discussion"><a href="#Discussion" class="headerlink" title="Discussion"></a>Discussion</h3><ul>
<li><em>.NET</em>, <em>Python</em>, and <em>PCRE 6.7</em> <code>(?(name)then|else)</code></li>
<li><em>Perl 5.10</em> <code>(?(&lt;name&gt;)then|else)</code> or <code>(?(&#39;name&#39;)then|else)</code></li>
<li><em>PCRE 7.0</em> supports <em>Perl’s</em> syntax for named conditional,  <em>.NET</em>, <em>Python</em> as well.</li>
<li><em>.NET</em>, <em>PCRE</em>, and <em>Perl</em> support lookaround <code>(?(?=if)then|else)</code> or <code>(?(?&lt;=if)then|else)</code></li>
</ul>
<h4 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h4><p><code>(a)?b(?(1)c|d)1</code> matches <code>abc</code> and <code>bd</code><br><code>(a)?b(?(?&lt;=ab)c|d)</code> matches <code>abc</code> and <code>bd</code></p>
<h4 id="tip"><a href="#tip" class="headerlink" title="tip"></a>tip</h4><p>lookaround can be written without the conditional as <code>(?=if)then|(?!if)else</code></p>
<p><code>(a)?b((?&lt;=ab)c|(?&lt;!ab)d)</code> matches <code>abc</code> and <code>bd</code></p>
]]></content>
      <categories>
        <category>regex</category>
      </categories>
      <tags>
        <tag>anchor</tag>
      </tags>
  </entry>
  <entry>
    <title>Lookahead and lookbehind</title>
    <url>/2017/02/19/Lookahead-and-lookbehind/</url>
    <content><![CDATA[<p><code>(?&lt;=&lt;b&gt;)\w+(?=&lt;/b&gt;)</code></p>
<ul>
<li>Regex options: Case insensitive</li>
<li>Regex flavors: .NET, Java, PCRE, Perl, Python, Ruby 1.9</li>
</ul>
<p><em>JavaScript</em> and <em>Ruby 1.8</em> support the lookahead <code>(?=&lt;/b&gt;)</code><br>, but not the lookbehind <code>(?&lt;=&lt;b&gt;)</code></p>
<ul>
<li>I prefer call lookbehind that where ahead cursor is something</li>
<li>I prefer call lookahead that where behind cursor is something</li>
</ul>
<h2 id="Positive-lookaround"><a href="#Positive-lookaround" class="headerlink" title="Positive lookaround"></a>Positive lookaround</h2><ul>
<li><p>Essentially, lookaround checks whether certain text can be<br>matched <strong>without actually matching it</strong>.</p>
</li>
<li><p><em>lookbehind (?&lt;=…)</em> is <strong>the only</strong> regular expression construct that<br>will traverse the text <strong>right to left</strong> instead of from left to right</p>
</li>
<li><p>Lookaround constructs are therefore called <strong>zero-length assertions</strong>.</p>
</li>
</ul>
<h2 id="Negative-lookaround"><a href="#Negative-lookaround" class="headerlink" title="Negative lookaround"></a>Negative lookaround</h2><ul>
<li><p><code>(?!...) (?&lt;!...)</code>, with an <strong>exclamation point</strong><br>instead of an <strong>equals sign</strong>, is <strong>negative lookaround</strong>.</p>
</li>
<li><p><code>negative lookaround</code> <strong>matches</strong> when the regex inside the<br><code>lookaround</code> <strong>fails to match</strong>.</p>
</li>
</ul>
<h3 id="Different-levels-of-lookbehind"><a href="#Different-levels-of-lookbehind" class="headerlink" title="Different levels of lookbehind"></a>Different levels of lookbehind</h3><ul>
<li><p>lookahead is completely compatible, even<br>lookahead or lookbehind nested in lookahead.</p>
</li>
<li><p>lookbehind is different, because regex is design traverse<br>from <strong>left to right</strong>, but lookbehind needs <strong>right to left</strong></p>
</li>
</ul>
<hr>
<ol>
<li><p><code>Perl</code> and <code>Python</code> still require lookbehind to have a <strong>fixed length</strong></p>
</li>
<li><p><code>PCRE</code> and <code>Ruby 1.9</code> <strong>allow alternatives</strong> of <strong>different lengths</strong> inside lookbehind<br>notepad++ use <code>PCRE7.2</code> regular expression engine?</p>
</li>
<li><p><code>Java</code> takes lookbehind one step further, allows any <strong>finite-length</strong><br>regular expression <code>‹*›, ‹+›, and ‹{42,}›</code> inside lookbehind</p>
</li>
<li><p><code>.NET Framework</code> is the only one in the world<br>that can actually apply a <strong>full regular expression</strong> from <strong>right to left</strong>.</p>
</li>
</ol>
<hr>
<h3 id="Lookaround-is-atomic"><a href="#Lookaround-is-atomic" class="headerlink" title="Lookaround is atomic"></a>Lookaround is atomic</h3><p><code>(?=(\d+))\w+\1</code></p>
<ul>
<li>Regex options: None</li>
<li>Regex flavors: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby</li>
</ul>
<p>The group capture inside the lookaround is <strong>same as usual group</strong>,<br>numbered from outter to inner , left to right</p>
<h2 id="Alternative-to-Lookbehind"><a href="#Alternative-to-Lookbehind" class="headerlink" title="Alternative to Lookbehind"></a>Alternative to Lookbehind</h2><p><code>&lt;b&gt;\K\w+(?=&lt;/b&gt;)</code></p>
<ul>
<li>Regex options: Case insensitive</li>
<li>Regex flavors: PCRE 7.2, Perl 5.10</li>
</ul>
<p>Match with ‘\K’, string in front of it will <strong>not be pattern</strong>.<br>It matches like a block, no recursive, no loop, no backtrack.</p>
<p>For example:<br>when <code>(?&lt;=a)a</code> matches the string ‘aaaa’, three <code>a</code> be matched,<br>the <strong>2th/ 3th/ 4th</strong> <code>a</code>. Lookbehind will track to left one matched then next.</p>
<p>But <code>a\Ka</code> matches two <code>a</code>, <strong>the 2th and the 4th</strong>.<br>when first/second <code>a</code> captured, abandon first, then second matches.<br>Then begin next matching, third/fourth <code>a</code> captured, abandon thrid.</p>
<h3 id="Solution-Without-Lookbehind"><a href="#Solution-Without-Lookbehind" class="headerlink" title="Solution Without Lookbehind"></a>Solution Without Lookbehind</h3><p>In Ruby 1.8 or JavaScript there is no lookbehind can be use.<br>Solution:</p>
<ul>
<li>use a common expression to suit, <strong>group them</strong>, just pick the group you want.</li>
<li>If replace operation needed, use group number to replace<br>which place you don’t want be changed <code>\1</code> or <code>\kxxx</code>.</li>
</ul>
<h4 id="simulate-lookbehind"><a href="#simulate-lookbehind" class="headerlink" title="simulate lookbehind"></a>simulate lookbehind</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var mainregexp = /\w+(?=&lt;\/b&gt;)/;</span><br><span class="line">var lookbehind = /&lt;b&gt;$/;</span><br><span class="line">if (match = mainregexp.exec(&quot;My &lt;b&gt;cat&lt;/b&gt; is furry&quot;)) &#123;</span><br><span class="line">	// Found a word before a closing tag &lt;/b&gt;</span><br><span class="line">	var potentialmatch = match[0];</span><br><span class="line">	var leftContext = match.input.substring(0, match.index);</span><br><span class="line">	if (lookbehind.exec(leftContext)) &#123;</span><br><span class="line">		// Lookbehind matched:</span><br><span class="line">		// potentialmatch occurs between a pair of &lt;b&gt; tags</span><br><span class="line">	&#125; else &#123;</span><br><span class="line">		// Lookbehind failed: potentialmatch is no good</span><br><span class="line">	&#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">	// Unable to find a word before a closing tag &lt;/b&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>first find the target location with Lookahead, remove it.</li>
<li>second if the forepart is end with what you <strong>lookbehind anticipated</strong> <code>&lt;b&gt;</code>, then lookbehind matched.</li>
</ul>
]]></content>
      <categories>
        <category>regex</category>
      </categories>
      <tags>
        <tag>anchor</tag>
      </tags>
  </entry>
  <entry>
    <title>Python rename files</title>
    <url>/2017/02/21/Python-rename-files/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> os.path</span><br><span class="line"></span><br><span class="line"><span class="comment"># point to the target directory</span></span><br><span class="line">dirpath = <span class="string">'F:\\a\\'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># loop begin</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> os.listdir(dirpath):</span><br><span class="line">  <span class="comment"># if it's a file</span></span><br><span class="line">	<span class="keyword">if</span> os.path.isfile(os.path.join(dirpath, file)) == <span class="literal">True</span>:</span><br><span class="line">		newname = <span class="string">'[BOMB.tv]'</span> + file</span><br><span class="line">    <span class="comment">#rename it</span></span><br><span class="line">		os.rename(os.path.join(dirpath, file),os.path.join(dirpath, newname))</span><br><span class="line">		<span class="keyword">print</span> (file,<span class="string">'ok'</span>)</span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">dirpath = <span class="string">'F:\\a\\'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#three parameters: parent directory, all directory name, all file names</span></span><br><span class="line"><span class="keyword">for</span> parent,dirnames,filenames <span class="keyword">in</span> os.walk(dirpath):</span><br><span class="line">	<span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">    <span class="comment"># format output</span></span><br><span class="line">		old = <span class="string">"%s/%s"</span> %(dirpath, filename)</span><br><span class="line">		new = <span class="string">"%s/%s"</span> %(dirpath, <span class="string">"[BOMB.tv]"</span> + filename)</span><br><span class="line">		os.rename(old, new)</span><br><span class="line"></span><br><span class="line">	<span class="comment"># output directory info</span></span><br><span class="line">	<span class="keyword">for</span> dirname <span class="keyword">in</span> dirnames:</span><br><span class="line">		<span class="keyword">print</span> (<span class="string">"parent is:"</span> + parent)</span><br><span class="line">		<span class="keyword">print</span> (<span class="string">"dirname is:"</span> + dirname)</span><br><span class="line"></span><br><span class="line">	<span class="comment"># output file info</span></span><br><span class="line">	<span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">		<span class="keyword">print</span> (<span class="string">"parent is:"</span> + parent)</span><br><span class="line">		<span class="keyword">print</span> (<span class="string">"filename is:"</span> + filename)</span><br><span class="line">		<span class="keyword">print</span> (<span class="string">"the full name of the file is:"</span> + os.path.join(parent,filename))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>io</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello crawler</title>
    <url>/2017/02/22/Hello-crawler/</url>
    <content><![CDATA[<h2 id="Urllib"><a href="#Urllib" class="headerlink" title="Urllib"></a>Urllib</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"></span><br><span class="line">response = urllib2.urlopen(<span class="string">"http://www.linchenguang.com"</span>)</span><br><span class="line"><span class="keyword">print</span> response.read()</span><br></pre></td></tr></table></figure>
<h3 id="analysis"><a href="#analysis" class="headerlink" title="analysis"></a>analysis</h3><p>urlopen(url)<br>urlopen(url, data, timeout)<br>urlopen(Request)</p>
<ul>
<li><em>Is this a multi status in python</em></li>
<li>timeout in default is <strong>socket._GLOBAL_DEFAULT_TIMEOUT</strong></li>
<li>data in default is null</li>
</ul>
<p><code>request = urllib2.Request(&quot;http://www.linchenguang.com&quot;)</code></p>
<h3 id="Get"><a href="#Get" class="headerlink" title="Get"></a>Get</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"></span><br><span class="line">values=&#123;&#125;</span><br><span class="line">values[<span class="string">'username'</span>] = <span class="string">"admin"</span></span><br><span class="line">values[<span class="string">'password'</span>] = <span class="string">"admin"</span></span><br><span class="line"><span class="comment">#values = &#123;"username":"admin","password":"admin"&#125;</span></span><br><span class="line">data = urllib.urlencode(values)</span><br><span class="line">url = <span class="string">"http://passport.csdn.net/account/login"</span></span><br><span class="line">geturl = url + <span class="string">"?"</span>+data</span><br><span class="line">request = urllib2.Request(geturl)</span><br><span class="line">response = urllib2.urlopen(request)</span><br><span class="line"><span class="keyword">print</span> response.read()</span><br></pre></td></tr></table></figure>
<ul>
<li>data compatible with json, <strong>array style</strong> is similar with js</li>
<li>data <strong>need urlencode</strong> prevent unreserved characters ambiguity</li>
<li>data parameters connect with url with <code>?</code></li>
</ul>
<h3 id="Post"><a href="#Post" class="headerlink" title="Post"></a>Post</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"></span><br><span class="line">values = &#123;<span class="string">"username"</span>:<span class="string">"admin"</span>,<span class="string">"password"</span>:<span class="string">"admin"</span>&#125;</span><br><span class="line">data = urllib.urlencode(values)</span><br><span class="line">url = <span class="string">"https://passport.csdn.net/account/login"</span></span><br><span class="line">request = urllib2.Request(url,data)</span><br><span class="line">response = urllib2.urlopen(request)</span><br><span class="line"><span class="keyword">print</span> response.read()</span><br></pre></td></tr></table></figure>
<ul>
<li>data <strong>be referenced</strong> in Request method as a parameter</li>
<li>post has <strong>two phase</strong> transport progress</li>
</ul>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>first</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis parameterType</title>
    <url>/2017/02/24/Mybatis-parameterType/</url>
    <content><![CDATA[<h2 id="Primary-data-type"><a href="#Primary-data-type" class="headerlink" title=". Primary data type"></a>. Primary data type</h2><ul>
<li><p>mapper interface</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User selectByPrimaryKey(Integer id);</span><br></pre></td></tr></table></figure>
</li>
<li><p>sql mapping</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;select id=&quot;selectByPrimaryKey&quot; resultMap=&quot;BaseResultMap&quot; parameterType=&quot;java.lang.Integer&quot; &gt;</span><br><span class="line">  select</span><br><span class="line">  &lt;include refid=&quot;Base_Column_List&quot; /&gt;</span><br><span class="line">  from user</span><br><span class="line">  where id = #&#123;id,jdbcType=INTEGER&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>The <code>id</code> in this condition can be <strong>any name</strong>, it all represent the Integer parameter.</p>
<h3 id="Discuss"><a href="#Discuss" class="headerlink" title="Discuss"></a>Discuss</h3><p>if Integer argument need be judge use <code>_parameter</code> represent it in tag <code>&lt;if&gt;</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;select id=&quot;selectByPrimaryKey&quot; resultMap=&quot;BaseResultMap&quot; parameterType=&quot;java.lang.Integer&quot; &gt;</span><br><span class="line">  select</span><br><span class="line">  &lt;include refid=&quot;Base_Column_List&quot; /&gt;</span><br><span class="line">  from tb_user</span><br><span class="line">  &lt;if test=&quot;_parameter != 0&quot;&gt;</span><br><span class="line">  where id = #&#123;id,jdbcType=INTEGER&#125;</span><br><span class="line">  &lt;/if&gt;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="Object-data-type"><a href="#Object-data-type" class="headerlink" title="Object data type"></a>Object data type</h2><ul>
<li><p>mapper interface</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int insert(User user);</span><br></pre></td></tr></table></figure>
</li>
<li><p>sql mapping</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;insert id=&quot;insert&quot; parameterType=&quot;User&quot; useGeneratedKeys=&quot;true&quot; keyProperty=&quot;id&quot;&gt;</span><br><span class="line">  insert into tb_user (name)</span><br><span class="line">  values (#&#123;name,jdbcType=CHAR&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>The <strong>name</strong> in value must be the User object’s property name</p>
</li>
<li>If <code>&lt;if&gt;</code> tag want to judge whether user is null, <code>_parameter</code> variable need be used. like above discuss content.</li>
</ul>
<h2 id="Map-data-type"><a href="#Map-data-type" class="headerlink" title="Map data type"></a>Map data type</h2><ul>
<li><p>mapper interface</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int updateByExample(@Param(&quot;user&quot;) User user, @Param(&quot;condition&quot;) Condition condition);</span><br></pre></td></tr></table></figure>
</li>
<li><p>sql mapping</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;update id=&quot;updateByCondition&quot; parameterType=&quot;map&quot; &gt;</span><br><span class="line">  update tb_user</span><br><span class="line">  set id = #&#123;user.id,jdbcType=INTEGER&#125;,</span><br><span class="line">  ...</span><br><span class="line">  &lt;if test=&quot;condition != null&quot; &gt;</span><br><span class="line">    &lt;include refid=&quot;Update_By_Condition_Where_Clause&quot; /&gt;</span><br><span class="line">  &lt;/if&gt;</span><br><span class="line">  &lt;if test=&quot;_parameter != null&quot; &gt;</span><br><span class="line">    &lt;include refid=&quot;Update_By_Default_Where_Clause&quot; /&gt;</span><br><span class="line">  &lt;/if&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>use <code>#{keyname}</code> to reference target</p>
</li>
<li>@Param(“…”) is alias manule point the map key name</li>
<li>Multi argument will auto box into a map</li>
</ul>
<h2 id="Collection-data-type"><a href="#Collection-data-type" class="headerlink" title="Collection data type"></a>Collection data type</h2><blockquote>
<p>You can pass a List instance or an Array to MyBatis as a parameter object. When you do, MyBatis will <strong>automatically wrap it in a Map</strong>, and key it <strong>by name</strong>. List instances will be keyed to <strong>the name “list”</strong> and array instances will be keyed to <strong>the name “array”</strong>.</p>
</blockquote>
<hr>
<ul>
<li><p>mapper interface</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">List&lt;User&gt; selectUserInList(List&lt;Interger&gt; ids);</span><br></pre></td></tr></table></figure>
</li>
<li><p>sql mapping</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;select id=&quot;selectUserInList&quot; resultType=&quot;User&quot;&gt;</span><br><span class="line">  select * from user</span><br><span class="line">  where id in</span><br><span class="line">  &lt;foreach item=&quot;item&quot; index=&quot;index&quot; collection=&quot;list&quot;</span><br><span class="line">      open=&quot;(&quot; separator=&quot;,&quot; close=&quot;)&quot;&gt;</span><br><span class="line">        #&#123;item&#125;</span><br><span class="line">  &lt;/foreach&gt;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Object’s-collection"><a href="#Object’s-collection" class="headerlink" title="Object’s collection"></a>Object’s collection</h2><ul>
<li><p>mapper interface</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">List&lt;User&gt; selectByCondition(Condition condition)</span><br></pre></td></tr></table></figure>
</li>
<li><p>sql mapping</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;where &gt;</span><br><span class="line">  &lt;foreach collection=&quot;threshold&quot; item=&quot;limit&quot; separator=&quot;or&quot; &gt;</span><br><span class="line">    &lt;if test=&quot;limit.value &gt; 10&quot; &gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>threshold</code> is a collection property in condition</p>
</li>
<li><code>limit</code> represent the item in collection</li>
</ul>
<hr>
<p><strong>link:</strong><br><a href="http://openwares.net/database/mybatis_parametertype.html" target="_blank" rel="noopener"> MyBatis input argument and parameterType</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title>Raspberry nginx + php5</title>
    <url>/2017/02/25/Raspberry-nginx-php5/</url>
    <content><![CDATA[<h3 id="1-update"><a href="#1-update" class="headerlink" title="1. update"></a>1. update</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<h3 id="2-nginx"><a href="#2-nginx" class="headerlink" title="2. nginx"></a>2. nginx</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nginx</span><br></pre></td></tr></table></figure>
<h3 id="3-php"><a href="#3-php" class="headerlink" title="3. php"></a>3. php</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install php5-fpm</span><br><span class="line">sudo apt-get install php-apc</span><br><span class="line">sudo apt-get install php5-gd</span><br><span class="line">sudo apt-get php-apc php5-common</span><br><span class="line">sudo apt-get install php5-cli php5-cgi</span><br></pre></td></tr></table></figure>
<p><code>php5-mysql</code> when mysql need<br><code>php5-mcrypt</code> when phpMyAdmin need</p>
<h3 id="4-Nginx"><a href="#4-Nginx" class="headerlink" title="4. Nginx"></a>4. Nginx</h3><ul>
<li><p>Static type file no log, one day expired</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location ~* ^.+.(jpg|jpeg|gif|css|png|js|ico|xml)$ &#123;</span><br><span class="line">	access_log	off;</span><br><span class="line">	expires	1d;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>The data type root directory could request</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">	# First attempt to serve request as file, then</span><br><span class="line">	# as directory, then fall back to displaying a 404.</span><br><span class="line">	#try_files $uri $uri/ =404;</span><br><span class="line">	index index.html index.htm index.php default.html default.htm default.php;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Php type files’ deal process config</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">		fastcgi_split_path_info ^(.+\.php)(/.+)$;</span><br><span class="line">	#       # NOTE: You should have &quot;cgi.fix_pathinfo = 0;&quot; in php.ini</span><br><span class="line">	#</span><br><span class="line">	#       # With php5-cgi alone:</span><br><span class="line">	#       fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">	#       # With php5-fpm:</span><br><span class="line">	        fastcgi_pass unix:/var/run/php5-fpm.sock;</span><br><span class="line">	        fastcgi_index index.php;</span><br><span class="line">		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">	        include fastcgi_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>If php no this config, script may not work.<br><strong>fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</strong></p>
<h3 id="5-Restart-amp-Test"><a href="#5-Restart-amp-Test" class="headerlink" title="5. Restart &amp; Test"></a>5. Restart &amp; Test</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo /etc/init.d/nginx restart</span><br><span class="line">sudo /etc/init.d/php5-fpm restart</span><br><span class="line">sudo nginx restart</span><br><span class="line">sudo php5-fpm restart</span><br></pre></td></tr></table></figure>
<p>try request this script in browser<br><code>&lt;?php phpinfo(); ?&gt;</code></p>
]]></content>
      <categories>
        <category>raspberry</category>
      </categories>
      <tags>
        <tag>nginx</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello PhotoSwipe</title>
    <url>/2017/02/26/Hello-PhotoSwipe/</url>
    <content><![CDATA[<p><a href="http://photoswipe.com/documentation/getting-started.html" target="_blank" rel="noopener">Phtoswipe documentation</a></p>
<h2 id="Primer"><a href="#Primer" class="headerlink" title="Primer"></a>Primer</h2><h3 id="Add-src"><a href="#Add-src" class="headerlink" title="Add src"></a>Add src</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Core CSS file --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"path/to/photoswipe.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Skin CSS file (styling of UI - buttons, caption, etc.)</span></span><br><span class="line"><span class="comment">     In the folder of skin CSS file there are also:</span></span><br><span class="line"><span class="comment">     - .png and .svg icons sprite,</span></span><br><span class="line"><span class="comment">     - preloader.gif (for browsers that do not support CSS animations) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"path/to/default-skin/default-skin.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Core JS file --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"path/to/photoswipe.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- UI JS file --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"path/to/photoswipe-ui-default.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="Add-tag-to-DOM"><a href="#Add-tag-to-DOM" class="headerlink" title="Add tag to DOM"></a>Add tag to DOM</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Root element of PhotoSwipe. Must have class pswp. --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span> <span class="attr">role</span>=<span class="string">"dialog"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Background of PhotoSwipe.</span></span><br><span class="line"><span class="comment">         It's a separate element as animating opacity is faster than rgba(). --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__bg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Slides wrapper with overflow:hidden. --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__scroll-wrap"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Container that holds slides.</span></span><br><span class="line"><span class="comment">            PhotoSwipe keeps only 3 of them in the DOM to save memory.</span></span><br><span class="line"><span class="comment">            Don't modify these 3 pswp__item elements, data is added later on. --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__container"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__ui pswp__ui--hidden"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__top-bar"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">&lt;!--  Controls are self-explanatory. Order can be changed. --&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__counter"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"pswp__button pswp__button--close"</span> <span class="attr">title</span>=<span class="string">"Close (Esc)"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"pswp__button pswp__button--share"</span> <span class="attr">title</span>=<span class="string">"Share"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"pswp__button pswp__button--fs"</span> <span class="attr">title</span>=<span class="string">"Toggle fullscreen"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"pswp__button pswp__button--zoom"</span> <span class="attr">title</span>=<span class="string">"Zoom in/out"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">&lt;!-- Preloader demo http://codepen.io/dimsemenov/pen/yyBWoR --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- element will get class pswp__preloader - - active when preloader is running --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__preloader"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__preloader__icn"</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__preloader__cut"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__preloader__donut"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__share-modal pswp__share-modal--hidden pswp__single-tap"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__share-tooltip"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"pswp__button pswp__button--arrow--left"</span> <span class="attr">title</span>=<span class="string">"Previous (arrow left)"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"pswp__button pswp__button--arrow--right"</span> <span class="attr">title</span>=<span class="string">"Next (arrow right)"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__caption"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pswp__caption__center"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="Initialize"><a href="#Initialize" class="headerlink" title="Initialize"></a>Initialize</h3><p>Put this part to the <strong>end of the dom</strong> because if no dom, js can’t find the target element. Or register this part as an event after dom be loaded.<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> pswpElement = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.pswp'</span>)[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// build items array</span></span><br><span class="line"><span class="keyword">var</span> items = [</span><br><span class="line">    &#123;</span><br><span class="line">        src: <span class="string">'https://placekitten.com/600/400'</span>,</span><br><span class="line">        w: <span class="number">600</span>,</span><br><span class="line">        h: <span class="number">400</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        src: <span class="string">'https://placekitten.com/1200/900'</span>,</span><br><span class="line">        w: <span class="number">1200</span>,</span><br><span class="line">        h: <span class="number">900</span></span><br><span class="line">    &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// define options (if needed)</span></span><br><span class="line"><span class="keyword">var</span> options = &#123;</span><br><span class="line">    <span class="comment">// optionName: 'option value'</span></span><br><span class="line">    <span class="comment">// for example:</span></span><br><span class="line">    index: <span class="number">0</span> <span class="comment">// start at first slide</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Initializes and opens PhotoSwipe</span></span><br><span class="line"><span class="keyword">var</span> gallery = <span class="keyword">new</span> PhotoSwipe( pswpElement, PhotoSwipeUI_Default, items, options);</span><br><span class="line">gallery.init();</span><br></pre></td></tr></table></figure></p>
<h2 id="Creating-an-Array-of-Slide-Objects"><a href="#Creating-an-Array-of-Slide-Objects" class="headerlink" title="Creating an Array of Slide Objects"></a>Creating an Array of Slide Objects</h2><h3 id="Data-structure"><a href="#Data-structure" class="headerlink" title="Data structure"></a>Data structure</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> slides = [</span><br><span class="line">    <span class="comment">// slide 1</span></span><br><span class="line">    &#123;</span><br><span class="line">        src: <span class="string">'path/to/image1.jpg'</span>, <span class="comment">// path to image</span></span><br><span class="line">        w: <span class="number">1024</span>, <span class="comment">// image width</span></span><br><span class="line">        h: <span class="number">768</span>, <span class="comment">// image height</span></span><br><span class="line"></span><br><span class="line">        msrc: <span class="string">'path/to/small-image.jpg'</span>, <span class="comment">// small image placeholder,</span></span><br><span class="line">                        <span class="comment">// main (large) image loads on top of it,</span></span><br><span class="line">                        <span class="comment">// if you skip this parameter - grey rectangle will be displayed,</span></span><br><span class="line">                        <span class="comment">// try to define this property only when small image was loaded before</span></span><br><span class="line"></span><br><span class="line">        title: <span class="string">'Image Caption'</span>  <span class="comment">// used by Default PhotoSwipe UI</span></span><br><span class="line">                                <span class="comment">// if you skip it, there won't be any caption</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// You may add more properties here and use them.</span></span><br><span class="line">        <span class="comment">// For example, demo gallery uses "author" property, which is used in the caption.</span></span><br><span class="line">        <span class="comment">// author: 'John Doe'</span></span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// slide 2</span></span><br><span class="line">    &#123;</span><br><span class="line">        src: <span class="string">'path/to/image2.jpg'</span>,</span><br><span class="line">        w: <span class="number">600</span>,</span><br><span class="line">        h: <span class="number">600</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// etc.</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// etc.</span></span><br><span class="line"></span><br><span class="line">];</span><br></pre></td></tr></table></figure>
<h3 id="DOM-for-build"><a href="#DOM-for-build" class="headerlink" title="DOM for build"></a>DOM for build</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"my-gallery"</span> <span class="attr">itemscope</span> <span class="attr">itemtype</span>=<span class="string">"http://schema.org/ImageGallery"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">figure</span> <span class="attr">itemprop</span>=<span class="string">"associatedMedia"</span> <span class="attr">itemscope</span> <span class="attr">itemtype</span>=<span class="string">"http://schema.org/ImageObject"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"large-image.jpg"</span> <span class="attr">itemprop</span>=<span class="string">"contentUrl"</span> <span class="attr">data-size</span>=<span class="string">"600x400"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"small-image.jpg"</span> <span class="attr">itemprop</span>=<span class="string">"thumbnail"</span> <span class="attr">alt</span>=<span class="string">"Image description"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">figcaption</span> <span class="attr">itemprop</span>=<span class="string">"caption description"</span>&gt;</span>Image caption<span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">figure</span> <span class="attr">itemprop</span>=<span class="string">"associatedMedia"</span> <span class="attr">itemscope</span> <span class="attr">itemtype</span>=<span class="string">"http://schema.org/ImageObject"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"large-image.jpg"</span> <span class="attr">itemprop</span>=<span class="string">"contentUrl"</span> <span class="attr">data-size</span>=<span class="string">"600x400"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"small-image.jpg"</span> <span class="attr">itemprop</span>=<span class="string">"thumbnail"</span> <span class="attr">alt</span>=<span class="string">"Image description"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">figcaption</span> <span class="attr">itemprop</span>=<span class="string">"caption description"</span>&gt;</span>Image caption<span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>Bind <strong>click event</strong> to links/thumbnails.</li>
<li>After user clicked on on thumbnail, find its <strong>index</strong>.</li>
<li>Create an array of slide objects from DOM elements – <strong>loop through</strong> all links<br>and retrieve <code>href</code> attribute (large image url), <code>data-size</code> attribute (its size), <code>src</code> of thumbnail, and contents of caption.</li>
</ul>
<h3 id="JS-implementation"><a href="#JS-implementation" class="headerlink" title="JS implementation"></a>JS implementation</h3><p><strong>pure Vanilla JS support IE8</strong><br>The same in front, script execute need be after dom be loaded.<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// define a macro function</span></span><br><span class="line"><span class="keyword">var</span> initPhotoSwipeFromDOM = <span class="function"><span class="keyword">function</span>(<span class="params">gallerySelector</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// parse slide data (url, title, size ...) from DOM elements</span></span><br><span class="line">    <span class="comment">// (children of gallerySelector)</span></span><br><span class="line">    <span class="comment">// Used to anaylsis the dom attributes</span></span><br><span class="line">    <span class="keyword">var</span> parseThumbnailElements = <span class="function"><span class="keyword">function</span>(<span class="params">el</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> thumbElements = el.childNodes,</span><br><span class="line">            numNodes = thumbElements.length,</span><br><span class="line">            items = [],</span><br><span class="line">            figureEl,</span><br><span class="line">            linkEl,</span><br><span class="line">            size,</span><br><span class="line">            item;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; numNodes; i++) &#123;</span><br><span class="line"></span><br><span class="line">            figureEl = thumbElements[i]; <span class="comment">// &lt;figure&gt; element</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// include only element nodes</span></span><br><span class="line">            <span class="keyword">if</span>(figureEl.nodeType !== <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            linkEl = figureEl.children[<span class="number">0</span>]; <span class="comment">// &lt;a&gt; element</span></span><br><span class="line"></span><br><span class="line">            size = linkEl.getAttribute(<span class="string">'data-size'</span>).split(<span class="string">'x'</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// create slide object</span></span><br><span class="line">            item = &#123;</span><br><span class="line">                src: linkEl.getAttribute(<span class="string">'href'</span>),</span><br><span class="line">                w: <span class="built_in">parseInt</span>(size[<span class="number">0</span>], <span class="number">10</span>),</span><br><span class="line">                h: <span class="built_in">parseInt</span>(size[<span class="number">1</span>], <span class="number">10</span>)</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(figureEl.children.length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">// &lt;figcaption&gt; content</span></span><br><span class="line">                item.title = figureEl.children[<span class="number">1</span>].innerHTML;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(linkEl.children.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// &lt;img&gt; thumbnail element, retrieving thumbnail url</span></span><br><span class="line">                item.msrc = linkEl.children[<span class="number">0</span>].getAttribute(<span class="string">'src'</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            item.el = figureEl; <span class="comment">// save link to element for getThumbBoundsFn</span></span><br><span class="line">            items.push(item);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> items;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// find nearest parent element</span></span><br><span class="line">    <span class="keyword">var</span> closest = <span class="function"><span class="keyword">function</span> <span class="title">closest</span>(<span class="params">el, fn</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> el &amp;&amp; ( fn(el) ? el : closest(el.parentNode, fn) );</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// triggers when user clicks on thumbnail</span></span><br><span class="line">    <span class="comment">// register the click event</span></span><br><span class="line">    <span class="keyword">var</span> onThumbnailsClick = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        e = e || <span class="built_in">window</span>.event;</span><br><span class="line">        e.preventDefault ? e.preventDefault() : e.returnValue = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> eTarget = e.target || e.srcElement;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// find root element of slide</span></span><br><span class="line">        <span class="keyword">var</span> clickedListItem = closest(eTarget, <span class="function"><span class="keyword">function</span>(<span class="params">el</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (el.tagName &amp;&amp; el.tagName.toUpperCase() === <span class="string">'FIGURE'</span>);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!clickedListItem) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// find index of clicked item by looping through all child nodes</span></span><br><span class="line">        <span class="comment">// alternatively, you may define index via data- attribute</span></span><br><span class="line">        <span class="keyword">var</span> clickedGallery = clickedListItem.parentNode,</span><br><span class="line">            childNodes = clickedListItem.parentNode.childNodes,</span><br><span class="line">            numChildNodes = childNodes.length,</span><br><span class="line">            nodeIndex = <span class="number">0</span>,</span><br><span class="line">            index;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; numChildNodes; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(childNodes[i].nodeType !== <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(childNodes[i] === clickedListItem) &#123;</span><br><span class="line">                index = nodeIndex;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            nodeIndex++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(index &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// open PhotoSwipe if valid index found</span></span><br><span class="line">            openPhotoSwipe( index, clickedGallery );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// parse picture index and gallery index from URL (#&amp;pid=1&amp;gid=2)</span></span><br><span class="line">    <span class="keyword">var</span> photoswipeParseHash = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> hash = <span class="built_in">window</span>.location.hash.substring(<span class="number">1</span>),</span><br><span class="line">        params = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(hash.length &lt; <span class="number">5</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> params;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> vars = hash.split(<span class="string">'&amp;'</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; vars.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!vars[i]) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> pair = vars[i].split(<span class="string">'='</span>);  </span><br><span class="line">            <span class="keyword">if</span>(pair.length &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;           </span><br><span class="line">            params[pair[<span class="number">0</span>]] = pair[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(params.gid) &#123;</span><br><span class="line">            params.gid = <span class="built_in">parseInt</span>(params.gid, <span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> params;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> openPhotoSwipe = <span class="function"><span class="keyword">function</span>(<span class="params">index, galleryElement, disableAnimation, fromURL</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> pswpElement = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.pswp'</span>)[<span class="number">0</span>],</span><br><span class="line">            gallery,</span><br><span class="line">            options,</span><br><span class="line">            items;</span><br><span class="line"></span><br><span class="line">        items = parseThumbnailElements(galleryElement);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// define options (if needed)</span></span><br><span class="line">        options = &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// define gallery index (for URL)</span></span><br><span class="line">            galleryUID: galleryElement.getAttribute(<span class="string">'data-pswp-uid'</span>),</span><br><span class="line"></span><br><span class="line">            getThumbBoundsFn: <span class="function"><span class="keyword">function</span>(<span class="params">index</span>) </span>&#123;</span><br><span class="line">                <span class="comment">// See Options -&gt; getThumbBoundsFn section of documentation for more info</span></span><br><span class="line">                <span class="keyword">var</span> thumbnail = items[index].el.getElementsByTagName(<span class="string">'img'</span>)[<span class="number">0</span>], <span class="comment">// find thumbnail</span></span><br><span class="line">                    pageYScroll = <span class="built_in">window</span>.pageYOffset || <span class="built_in">document</span>.documentElement.scrollTop,</span><br><span class="line">                    rect = thumbnail.getBoundingClientRect();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> &#123;<span class="attr">x</span>:rect.left, <span class="attr">y</span>:rect.top + pageYScroll, <span class="attr">w</span>:rect.width&#125;;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// PhotoSwipe opened from URL</span></span><br><span class="line">        <span class="keyword">if</span>(fromURL) &#123;</span><br><span class="line">            <span class="keyword">if</span>(options.galleryPIDs) &#123;</span><br><span class="line">                <span class="comment">// parse real index when custom PIDs are used</span></span><br><span class="line">                <span class="comment">// http://photoswipe.com/documentation/faq.html#custom-pid-in-url</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; items.length; j++) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(items[j].pid == index) &#123;</span><br><span class="line">                        options.index = j;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// in URL indexes start from 1</span></span><br><span class="line">                options.index = <span class="built_in">parseInt</span>(index, <span class="number">10</span>) - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            options.index = <span class="built_in">parseInt</span>(index, <span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// exit if index not found</span></span><br><span class="line">        <span class="keyword">if</span>( <span class="built_in">isNaN</span>(options.index) ) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(disableAnimation) &#123;</span><br><span class="line">            options.showAnimationDuration = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Pass data to PhotoSwipe and initialize it</span></span><br><span class="line">        gallery = <span class="keyword">new</span> PhotoSwipe( pswpElement, PhotoSwipeUI_Default, items, options);</span><br><span class="line">        gallery.init();</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// loop through all gallery elements and bind events</span></span><br><span class="line">    <span class="keyword">var</span> galleryElements = <span class="built_in">document</span>.querySelectorAll( gallerySelector );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>, l = galleryElements.length; i &lt; l; i++) &#123;</span><br><span class="line">        galleryElements[i].setAttribute(<span class="string">'data-pswp-uid'</span>, i+<span class="number">1</span>);</span><br><span class="line">        galleryElements[i].onclick = onThumbnailsClick;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Parse URL and open gallery if it contains #&amp;pid=3&amp;gid=1</span></span><br><span class="line">    <span class="keyword">var</span> hashData = photoswipeParseHash();</span><br><span class="line">    <span class="keyword">if</span>(hashData.pid &amp;&amp; hashData.gid) &#123;</span><br><span class="line">        openPhotoSwipe( hashData.pid ,  galleryElements[ hashData.gid - <span class="number">1</span> ], <span class="literal">true</span>, <span class="literal">true</span> );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// execute above function</span></span><br><span class="line">initPhotoSwipeFromDOM(<span class="string">'.my-gallery'</span>);</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>hello</tag>
      </tags>
  </entry>
  <entry>
    <title>php 5.3 &amp; 5.6</title>
    <url>/2017/02/27/php-5-3-5-6/</url>
    <content><![CDATA[<ul>
<li>In PHP 5.3</li>
</ul>
<p><code>imagejpeg($image, &#39;&#39;, 100);</code></p>
<ul>
<li>In PHP 5.4</li>
</ul>
<p><code>imagejpeg($image, NULL, 100);</code></p>
<hr>
<ul>
<li><p>In PHP 5.3</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$current_gallery = array_pop(preg_split(&quot;/[\/]/&quot;, dirname($img)));</span><br></pre></td></tr></table></figure>
</li>
<li><p>In PHP 5.4</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$some_path_array = preg_split(&quot;/[\/]/&quot;, dirname($img));</span><br><span class="line">$current_gallery = array_pop($some_path_array);</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>difference</tag>
      </tags>
  </entry>
  <entry>
    <title>querySelector and querySelectorAll</title>
    <url>/2017/02/28/querySelector-and-querySelectorAll/</url>
    <content><![CDATA[<h3 id="javascript-advance-selector"><a href="#javascript-advance-selector" class="headerlink" title="javascript advance selector"></a>javascript advance selector</h3><p>Define in <code>W3C Selectors API</code>, used to locate element in document by <code>CSS rule</code>.</p>
<p>IE &gt;= 8, Firefox, Chrome, Safari, Opera support them.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">module dom &#123;</span><br><span class="line">  [Supplemental, NoInterfaceObject]</span><br><span class="line">  interface NodeSelector &#123;</span><br><span class="line">     Element querySelector(in DOMString selectors);</span><br><span class="line">     NodeList querySelectorAll(in DOMString selectors);</span><br><span class="line">  &#125;;</span><br><span class="line">  Document implements NodeSelector;</span><br><span class="line">  DocumentFragment implements NodeSelector;</span><br><span class="line">  Element implements NodeSelector;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>Document, DocumentFragment, Element implements NodeSelector interface.<br>The difference is querySelector return <code>an object</code>, querySelectorAll return a <code>collection</code>(NodeList).</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">document.getElementById(&quot;test&quot;);</span><br><span class="line">document.querySelector(&quot;#test&quot;);</span><br><span class="line">document.querySelectorAll(&quot;#test&quot;)[0];</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">document.getElementsByClassName(&apos;red&apos;)</span><br><span class="line">document.querySelector(&apos;.red&apos;)</span><br><span class="line">document.querySelectorAll(&apos;.red&apos;)</span><br></pre></td></tr></table></figure>
<h3 id="Difference-between-jQuery-element-find-selector"><a href="#Difference-between-jQuery-element-find-selector" class="headerlink" title="Difference between jQuery(element).find(selector)"></a>Difference between <code>jQuery(element).find(selector)</code></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"test1"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.linchenguang.com/"</span>&gt;</span>lcg<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"bar"</span>&gt;</span>I'm a bar<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> d1 = <span class="built_in">document</span>.getElementById(<span class="string">'test1'</span>),</span></span><br><span class="line"><span class="javascript">obj1 = d1.querySelector(<span class="string">'div a'</span>),</span></span><br><span class="line"><span class="javascript">obj2 = d1.querySelectorAll(<span class="string">'div a'</span>);</span></span><br><span class="line"><span class="javascript">obj3 = $(d1).find(<span class="string">'div a'</span>);</span></span><br><span class="line"><span class="javascript"><span class="comment">//&lt;a href="http://www.linchenguang.com/"&gt;lcg&lt;/a&gt;</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(obj1)</span></span><br><span class="line"><span class="javascript"><span class="comment">//1</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(obj2.length)</span></span><br><span class="line"><span class="javascript"><span class="comment">//null</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(obj3)</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>querySelectorAll</code> find element in DOM, contain Element it’s self.<br><code>jQuery(element).find(selector)</code> find element in DOM, not contain Element it’s self.</p>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>function</tag>
      </tags>
  </entry>
  <entry>
    <title>Python write file</title>
    <url>/2017/03/02/Python-write-file/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = open(<span class="string">"out.txt"</span>, <span class="string">"a"</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">102</span>):</span><br><span class="line">	<span class="comment"># something before write here</span></span><br><span class="line">	<span class="keyword">if</span> i&lt;<span class="number">10</span>:</span><br><span class="line">		f.write(<span class="string">"00"</span>)</span><br><span class="line">		f.write(str(i))</span><br><span class="line">		f.write(<span class="string">".jpg\n"</span>)</span><br><span class="line">	<span class="keyword">elif</span> i&lt;<span class="number">100</span>:</span><br><span class="line">		f.write(<span class="string">"0"</span>)</span><br><span class="line">		f.write(str(i))</span><br><span class="line">		f.write(<span class="string">".jpg\n"</span>)</span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		f.write(str(i))</span><br><span class="line">		f.write(<span class="string">".jpg\n"</span>)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>
<ul>
<li>open file get a file variable</li>
<li>write data from range of int</li>
<li>after written close file</li>
</ul>
<p>string -&gt; char bunch slice method<br><code>target = src[0:len(src)-5]</code></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>io</tag>
      </tags>
  </entry>
  <entry>
    <title>RSA Principle 1</title>
    <url>/2017/03/02/RSA-Principle-1/</url>
    <content><![CDATA[<h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><p><img src="/2017/03/02/RSA-Principle-1/bg2013062702.jpg" alt="bg2013062702.jpg"><br>In 1977, three mathematician <strong>Rivest Shamir</strong> and <strong>Adleman</strong> designed the <code>RSA</code> algorithm.</p>
<h2 id="Coprime-relation"><a href="#Coprime-relation" class="headerlink" title="Coprime relation"></a>Coprime relation</h2><p>If two positive integer <strong>no other common elements</strong> except <code>1</code>,<br>then these two number be called have coprime relation.</p>
<ul>
<li><strong>any two coprime number</strong> compose to coprime relation</li>
<li>one coprime another is <strong>not multiple with</strong> the privous one then coprime relation.</li>
<li>if the <strong>bigger one</strong> in two number is <strong>coprime number</strong>, then these two compose to coprime relation.</li>
<li><code>1</code> with <strong>any nature number</strong> is coprime relation.</li>
<li>p is integer bigger than <code>1</code>, <strong>p and p-1</strong> is coprime relation.</li>
<li>p is <strong>odd number</strong> bigger than <code>1</code>, <strong>p and p-2</strong> is coprime relation.</li>
</ul>
<h2 id="Euler-formula-function"><a href="#Euler-formula-function" class="headerlink" title="Euler formula(function)"></a>Euler formula(function)</h2><h3 id="Condition-1"><a href="#Condition-1" class="headerlink" title="Condition 1"></a>Condition 1</h3><script type="math/tex; mode=display">
\phi(1) = 1</script><p><code>1</code> with any nature number is coprime relation.</p>
<h3 id="Condition-2"><a href="#Condition-2" class="headerlink" title="Condition 2"></a>Condition 2</h3><script type="math/tex; mode=display">
\phi(n) = n - 1</script><p>If n is coprime number than every number <strong>lower than n</strong> is coprime relation with n.</p>
<h3 id="Condition-3"><a href="#Condition-3" class="headerlink" title="Condition 3"></a>Condition 3</h3><script type="math/tex; mode=display">
\phi(p^k) = p^k - p^{k-1} = p^k(1-\frac{1}{p})</script><p>If number n is some coprime number’s times square than.</p>
<p>For example:</p>
<script type="math/tex; mode=display">
\varphi(16) = \varphi(2^4) = 2^4 - 2^3 = 8</script><p>In 1 -&gt; 16 totle 2^3 is multiple with <code>2</code>.<br>So the number coprime relation with 16 is 8;<br>1 3 5 7 9 11 13 15</p>
<h3 id="Condition-4"><a href="#Condition-4" class="headerlink" title="Condition 4"></a>Condition 4</h3><p>If number can be separate into<br>two number that have coprime relation.</p>
<script type="math/tex; mode=display">
n = p1 \times p2</script><p>Then:</p>
<script type="math/tex; mode=display">
\phi(n) = \phi(p1) \times \phi(p2)</script><p>For example:</p>
<script type="math/tex; mode=display">
\varphi(72) = \varphi(9) \times \varphi(8) = 32</script><h3 id="Condition-5"><a href="#Condition-5" class="headerlink" title="Condition 5"></a>Condition 5</h3><p>Any positive integer can be separate into<br>a series of coprime number’s accumulate.</p>
<script type="math/tex; mode=display">
n = p_{1}^{k1} p_{2}^{k2}... p_{r}^{kr}</script><p>based on proposition 4 -&gt;</p>
<script type="math/tex; mode=display">
\phi(n) = \phi(p_{1}^{k1}) \phi(p_{2}^{k2})... \phi(p_{r}^{kr})</script><p>based on proposition 3-&gt;</p>
<script type="math/tex; mode=display">
\phi(n) = p_{1}^{k1} p_{2}^{k2}... p_{r}^{kr}(1-\frac{1}{p_1})(1-\frac{1}{p_2})...(1-\frac{1}{p_r})</script><p>then -&gt;</p>
<script type="math/tex; mode=display">
\phi(n) = n(1-\frac{1}{p_1})(1-\frac{1}{p_2})...(1-\frac{1}{p_r})</script><p>This is the Euler’s common formula , for example</p>
<script type="math/tex; mode=display">
\varphi(11025) = \varphi(7^2 \times 5^2 \times 3^2)
= 11025 \times (1-\frac{1}{7}) \times (1-\frac{1}{5}) \times (1-\frac{1}{3}) = 720</script><h2 id="Euler-proposition"><a href="#Euler-proposition" class="headerlink" title="Euler proposition"></a>Euler proposition</h2><script type="math/tex; mode=display">
a^{\phi(n)} \equiv 1 \quad ( mod \quad n)</script><p>Special Condition<br>If p is a coprime number than:</p>
<script type="math/tex; mode=display">
a^{p-1} \equiv 1 \quad ( mod \quad p)</script><ul>
<li>Fermat little theorem</li>
<li>Fermat euler theorem</li>
</ul>
<h2 id="Mod-inverse-element"><a href="#Mod-inverse-element" class="headerlink" title="Mod inverse element"></a>Mod inverse element</h2><p>If two number <code>a</code> and <code>n</code> is coprime relation<br>than definitely could find a number <code>b</code> that $ab \quad mod \quad n = 1$</p>
<p>Call <code>b</code> is a’s mod reserve element</p>
<p>For example:<br>3 and 5 is coprime relation , set a=3, n=5, then a’s mod reserve element is 7.<br>7 {+-} kn[-4, 7, 12, 17] is all a’s mod reserve element.</p>
<hr>
<p>Euler proposition proves mod reserve element definitely exists.</p>
<script type="math/tex; mode=display">
a^{\phi(n)} = a \times a^{\phi(n)-1} \equiv  1 \quad ( mod \quad n)</script><script type="math/tex; mode=display">
a^{\phi(n)-1}
$$ is a's mod reserve element
Like above a=3 and n=5, a's mod reserve elementis</script><p>a^{\phi(5)-1} = 3^3 = 27</p>
<p>$$</p>
]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>rsa</tag>
        <tag>algorithm</tag>
        <tag>cryptograpy</tag>
      </tags>
  </entry>
  <entry>
    <title>RSA Principle 3</title>
    <url>/2017/03/04/RSA-Principle-3/</url>
    <content><![CDATA[<h2 id="RSA’s-Reliability"><a href="#RSA’s-Reliability" class="headerlink" title="RSA’s Reliability"></a>RSA’s Reliability</h2><p>In principle 2 total 6 number appear<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">p     53</span><br><span class="line">　　q     271</span><br><span class="line">　　n     14363</span><br><span class="line">　　φ(n)  14040</span><br><span class="line">　　e     97</span><br><span class="line">　　d     9553</span><br></pre></td></tr></table></figure></p>
<p>Public key use 2 of them, <code>n</code> and <code>e</code>.<br>The rest of them do not public. The most important number above<br>is <code>d</code>, because <code>n</code> and <code>d</code> compose to private key.</p>
<h3 id="Discuss"><a href="#Discuss" class="headerlink" title="Discuss"></a>Discuss</h3><p><strong>How to compute <code>d</code>, only know <code>n</code> and <code>e</code></strong></p>
<ol>
<li><p>$ed \equiv 1 \quad (mod \quad \phi(n))$<br>Only know <code>e</code> and <script type="math/tex">\phi(n)</script> than know what <code>d</code> is,<br>among them, <code>e</code> is public.</p>
</li>
<li><p>$\phi(n) = (p-1) \times (q-1)$<br>Need know what <code>p</code> and <code>q</code> is.</p>
</li>
<li><p>$n = p \times q$<br>Only <code>n</code> factorization, than got what <code>p</code> <code>q</code> probaly is.</p>
</li>
</ol>
<p>Conclusion: If number n could be factorization, than<br><code>d</code> [mod inverse element] could be found.<br>That mean private key be hacked.</p>
<h3 id="Think"><a href="#Think" class="headerlink" title="Think"></a>Think</h3><p>Extremely large number’s mod inverse element possible is extremely large as well. The difficulty in factorizing two coprime number that the mod inverse element possible number mod by public key <code>e</code> rest got <code>1</code>, the more difficulty it is, the more security key is.</p>
<p>Human’s power only solve number factorization max to 232 in decimal, 768 in binary.<br>So at present, 768 bits[96 bytes] is the longest RSA key length be breaked.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">12301866845301177551304949</span><br><span class="line">　　58384962720772853569595334</span><br><span class="line">　　79219732245215172640050726</span><br><span class="line">　　36575187452021997864693899</span><br><span class="line">　　56474942774063845925192557</span><br><span class="line">　　32630345373154826850791702</span><br><span class="line">　　61221429134616704292143116</span><br><span class="line">　　02221240479274737794080665</span><br><span class="line">　　351419597459856902143413</span><br><span class="line">   =</span><br><span class="line">33478071698956898786044169</span><br><span class="line">　　84821269081770479498371376</span><br><span class="line">　　85689124313889828837938780</span><br><span class="line">　　02287614711652531743087737</span><br><span class="line">　　814467999489</span><br><span class="line">　　　　×</span><br><span class="line">　　36746043666799590428244633</span><br><span class="line">　　79962795263227915816434308</span><br><span class="line">　　76426760322838157396665112</span><br><span class="line">　　79233373417143396810270092</span><br><span class="line">　　798736308917</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>rsa</tag>
        <tag>algorithm</tag>
        <tag>cryptograpy</tag>
      </tags>
  </entry>
  <entry>
    <title>RSA Principle 2</title>
    <url>/2017/03/03/RSA-Principle-2/</url>
    <content><![CDATA[<h2 id="Generate-cipher-code"><a href="#Generate-cipher-code" class="headerlink" title="Generate cipher code"></a>Generate cipher code</h2><h3 id="Step-1-Choose-two-coprime-number-randomly"><a href="#Step-1-Choose-two-coprime-number-randomly" class="headerlink" title="Step 1 Choose two coprime number randomly"></a>Step 1 Choose two coprime number randomly</h3><p> <code>53</code> and <code>271</code></p>
<p>The bigger these number is the more difficulty to break it.</p>
<h3 id="Step-2-First-number-multiplied-by-second-number"><a href="#Step-2-First-number-multiplied-by-second-number" class="headerlink" title="Step 2 First number multiplied by second number"></a>Step 2 First number multiplied by second number</h3><script type="math/tex; mode=display">
n = 53 \times 271 = 14363 = 11100000011011</script><p>totle 14bits<br>In daily application use <strong>1024 bits[128bytes]</strong> usually.<br>In some important application use <strong>2048 bits[256bytes]</strong> usually.</p>
<h3 id="Step-3-Calculate-n’s-Euler-function"><a href="#Step-3-Calculate-n’s-Euler-function" class="headerlink" title="Step 3 Calculate n’s Euler function"></a>Step 3 Calculate n’s Euler function</h3><script type="math/tex; mode=display">
\phi(n) = (p-1)(q-1) = 52 \times 270 = 14040</script><h3 id="Step-4-Choose-a-number-e"><a href="#Step-4-Choose-a-number-e" class="headerlink" title="Step 4 Choose a number e"></a>Step 4 Choose a number <code>e</code></h3><script type="math/tex; mode=display">
1 < e < \varphi(n)</script><p>and the number <code>e</code> has <strong>coprime relation</strong> with</p>
<script type="math/tex; mode=display">
\varphi(n)</script><p>Choose between (1, 14040), suppose <code>97</code> as <code>e</code>;</p>
<h3 id="Step-5-Calculate-mod-inverse-element"><a href="#Step-5-Calculate-mod-inverse-element" class="headerlink" title="Step 5 Calculate mod inverse element"></a>Step 5 Calculate mod inverse element</h3><p>Calculate the mod inverse element <code>d</code> for <code>e</code> with</p>
<script type="math/tex; mode=display">
\varphi(n)</script><script type="math/tex; mode=display">
ed \equiv 1 \quad (mod \quad \phi(n))</script><p>-&gt;</p>
<script type="math/tex; mode=display">
ed -1 = k\phi(n)</script><p>-&gt;</p>
<script type="math/tex; mode=display">
ex + \phi(n)y = 1</script><p>-&gt;</p>
<script type="math/tex; mode=display">
97x + 14040y = 1</script><p>Based on Extended Euclidean algorithm<br>x = -4487, y = 31 -&gt; (-4487, 31) is a solution pair<br>positive <code>d</code><br>(-4487, 31) -&gt; (9553, -66)</p>
<h3 id="Step-6-Packaging"><a href="#Step-6-Packaging" class="headerlink" title="Step 6 Packaging"></a>Step 6 Packaging</h3><p>Pack <code>n</code> and <code>e</code> into public key,<code>n</code> and <code>d</code> into private key<br>n = 14040 e = 97 d = 9953 and k = -66</p>
<p>So , <strong>(14363, 97)</strong> is public key, <strong>(14363, 9553)</strong> is private key.</p>
]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>rsa</tag>
        <tag>algorithm</tag>
        <tag>cryptograpy</tag>
      </tags>
  </entry>
  <entry>
    <title>RSA Principle 4</title>
    <url>/2017/03/05/RSA-Principle-4/</url>
    <content><![CDATA[<h2 id="Encryption-and-decryption"><a href="#Encryption-and-decryption" class="headerlink" title="Encryption and decryption"></a>Encryption and decryption</h2><p>Pub Key: (14363, 97)<br>Prv Key: (14363, 9553)</p>
<p>If <code>A</code> want send message <code>m</code> to <code>B</code>.<br>A need use B’s public key to encrypt M[Integer and M &lt; n].</p>
<script type="math/tex; mode=display">
m^e \equiv c \quad(mod \quad n)</script><p>Suppose A want send “Hello B” to B, the first alphabet ‘H’ should be encrypt like this.</p>
<script type="math/tex; mode=display">
c = 72^{97} \quad mod \quad 14363</script><p>The <strong>ciphertext</strong> <code>c</code> is 5769</p>
<p>B received A’s <code>message</code> 5769, B use private key to decrypt it.</p>
<script type="math/tex; mode=display">
c^d \equiv m \quad(mod \quad n)</script><p>-&gt;</p>
<script type="math/tex; mode=display">
M = 5769^{9553} \quad mod \quad 14363</script><p>The <strong>text</strong> is 72[ ‘H’ in ASCII ]</p>
<h2 id="Signatures-and-signed-inspection-certificate"><a href="#Signatures-and-signed-inspection-certificate" class="headerlink" title="Signatures and signed inspection certificate"></a>Signatures and signed inspection certificate</h2><p>It’s a opposite progress of above one.</p>
<p>Sender in order to show it’s identity, it need to use it’s private key to encrypt[autograph] abstract message like hash code or mac code.</p>
<p>Receiver got message, use public key to decrypt[certificate] the signature, than contract the clear text with message’s abstract.</p>
]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>rsa</tag>
        <tag>algorithm</tag>
        <tag>cryptograpy</tag>
      </tags>
  </entry>
  <entry>
    <title>RSA Principle 5</title>
    <url>/2017/03/05/RSA-Principle-5/</url>
    <content><![CDATA[<h2 id="Proving"><a href="#Proving" class="headerlink" title="Proving"></a>Proving</h2><p>Why?</p>
<script type="math/tex; mode=display">
c^d \equiv m \quad (mod \quad n)</script><p>Base on encrypt rule:</p>
<script type="math/tex; mode=display">
m^e \equiv c \quad (mod \quad n)</script><p>-&gt;</p>
<script type="math/tex; mode=display">
c = m^e - kn</script><p>Put it into the target</p>
<script type="math/tex; mode=display">
(m^e - kn)^d \equiv m \quad (mod \quad n)</script><p>The <strong>n in left part</strong> of equal could all be divided by n. So it’s same as this:</p>
<script type="math/tex; mode=display">
m^{ed} \equiv m \quad (mod \quad n)</script><p>Bacause</p>
<script type="math/tex; mode=display">
ed \equiv 1 \quad(mod \quad\phi(n))</script><p>-&gt;</p>
<script type="math/tex; mode=display">
ed = h\phi(n) + 1</script><p>Put it into above, <strong>prove this work</strong></p>
<script type="math/tex; mode=display">
m^{h\phi(n) + 1} \equiv m \quad (mod \quad n)</script><p>Then divide into two condition</p>
<h3 id="m-and-n-has-coprime-relation"><a href="#m-and-n-has-coprime-relation" class="headerlink" title="m and n has coprime relation"></a><code>m</code> and <code>n</code> has coprime relation</h3><p>In this condition base on euler theorem</p>
<script type="math/tex; mode=display">
m^{\phi(n)} \equiv 1 \quad (mod \quad n)</script><p>Put it into above:</p>
<script type="math/tex; mode=display">
(m^{\phi(n)})^h \times m \equiv m \quad (mod \quad n)</script><p>Proved</p>
<h3 id="m-and-n-has-no-coprime-relation"><a href="#m-and-n-has-no-coprime-relation" class="headerlink" title="m and n has no coprime relation"></a><code>m</code> and <code>n</code> has no coprime relation</h3><p>In this condition, bacause <code>m</code> and <code>n</code> has no coprime relation, so <code>m</code> and <code>n</code> must have <strong>common factor</strong> that is not <code>1</code>.<br><code>n</code> come from two coprime factor <code>p</code> and <code>q</code>, so <code>m</code> must <strong>multiply with</strong> <code>p</code> or <code>q</code>.<br><code>m = kp</code> or <code>m = kq</code></p>
<p>Choose <code>m = kp</code> for example<br>Because <code>q</code> is a <strong>coprime number</strong>, and <code>k</code> has <strong>no possible</strong> multiply <code>q</code>[or will cross <code>m</code>], so <code>k</code> and <code>q</code> has coprime relation.<br>Base on euler theorem:</p>
<script type="math/tex; mode=display">
\varphi(q) = q-1</script><script type="math/tex; mode=display">
(kp)^{q-1} \equiv 1 \quad (mod \quad q)</script><p>Further</p>
<script type="math/tex; mode=display">
[(kp)^{q-1}]^{h(q-1)} \times kp \equiv kp \quad (mod \quad q)</script><p>Bascause</p>
<script type="math/tex; mode=display">
ed = h\phi(n) + 1</script><p>so:</p>
<script type="math/tex; mode=display">
(kp)^{ed} \equiv kp \quad (mod \quad q)</script><script type="math/tex; mode=display">
(kp)^{ed} = kp + tq</script><p>This time <code>t</code> definitely could be divided be <code>p</code>. Why?</p>
<script type="math/tex; mode=display">
p((kp)^{ed-1}-k) = tq</script><p>$((kp)^{ed-1}-k)$ is an integer and <code>p</code> <code>q</code> has coprime relation<br>So definitely has integer $t’ = t/p$</p>
<script type="math/tex; mode=display">
(kp)^{ed} = kp + t'pq</script><p><code>m=kp</code>, <code>n=pq</code> then:</p>
<script type="math/tex; mode=display">
m^{ed} = m \quad (mod \quad n)</script><p>Proved</p>
]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>rsa</tag>
        <tag>algorithm</tag>
        <tag>cryptograpy</tag>
      </tags>
  </entry>
  <entry>
    <title>Euclidean algorithm</title>
    <url>/2017/03/09/Euclidean-algorithm/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">return</span> gcd(b,a%b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="1-Make"><a href="#1-Make" class="headerlink" title="1. Make"></a>1. Make</h3><script type="math/tex; mode=display">
c=gcd(a,b)</script><p>-</p>
<script type="math/tex; mode=display">
a=mc</script><p>-</p>
<script type="math/tex; mode=display">
b=nc</script><p><code>c</code> is the biggest divisor</p>
<h3 id="2-Got"><a href="#2-Got" class="headerlink" title="2. Got"></a>2. Got</h3><script type="math/tex; mode=display">
r=a-kb=mc-knc=(m-kn)c</script><h3 id="3-c-is-a-divisor-of-r-as-well"><a href="#3-c-is-a-divisor-of-r-as-well" class="headerlink" title="3. c is a divisor of r as well."></a>3. <code>c</code> is a divisor of <code>r</code> as well.</h3><h3 id="4-m-kn-and-n-definitely-has-coprime-relation"><a href="#4-m-kn-and-n-definitely-has-coprime-relation" class="headerlink" title="4. m-kn and n definitely has coprime relation"></a>4. <code>m-kn</code> and <code>n</code> definitely has coprime relation</h3><h4 id="proof-by-contradiction"><a href="#proof-by-contradiction" class="headerlink" title="proof by contradiction"></a>proof by contradiction</h4><ol>
<li><p>setting they are no coprime relation</p>
<script type="math/tex; mode=display">
m-kn=xd</script><p>-<br><script type="math/tex">n=yd</script> (d&gt;1)</p>
</li>
<li><p>then</p>
<script type="math/tex; mode=display">
m=kn+xd=kyd+xd=(ky+x)d</script><p>-</p>
<script type="math/tex; mode=display">
a=mc=(ky+x)dc</script><p>-</p>
<script type="math/tex; mode=display">
b=nc=ydc</script></li>
<li><code>a</code> and <code>b</code> ‘s biggest divisor is not <code>c</code>. so step 4 proved.</li>
</ol>
<h3 id="5-c-is-biggest-divisor-in-b-and-r-as-well"><a href="#5-c-is-biggest-divisor-in-b-and-r-as-well" class="headerlink" title="5. c is biggest divisor in b and r as well."></a>5. <code>c</code> is biggest divisor in <code>b</code> and <code>r</code> as well.</h3><script type="math/tex; mode=display">
gcd(b, r)=c</script><p>-</p>
<script type="math/tex; mode=display">
gcd(a, b)=gcd(b, r)</script>]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>Quicksort compare analysis</title>
    <url>/2017/03/10/Quicksort-compare-analysis/</url>
    <content><![CDATA[<blockquote>
<p>Quicksort user $~2NlnN$ compares to sort<br>an array of N distinct keys on average<br>(one-sixth that many exchanges)</p>
</blockquote>
<h2 id="Proof"><a href="#Proof" class="headerlink" title="Proof"></a>Proof</h2><p>Let $C_N$ be the average number of compares need to sort N items<br>with distinct values.<br>We have $C_0=C_1=0$ for $N&gt;1$</p>
<h3 id="Express-the-average-compare"><a href="#Express-the-average-compare" class="headerlink" title="Express the average compare"></a>Express the average compare</h3><script type="math/tex; mode=display">
C_N = N + 1 + (C_0+C_1+...+C_{N-2}+C_{N-1})/N + (C_{N-1}+C_{N-2}+...+C_0)/N</script><ol>
<li>cost of partitioning<br><code>N-1</code> compares two partition with flag<br><code>1 more</code> compare in <code>each part</code> breakpoint compare</li>
</ol>
<ol>
<li><p>left subarray sort</p>
<script type="math/tex; mode=display">
(C_0+C_1+...+C_{N-2}+C_{N-1})/N</script></li>
<li><p>right subarray sort</p>
<script type="math/tex; mode=display">
(C_{N-1}+C_{N-2}+...+C_1+C_0)/N</script></li>
</ol>
<h3 id="Rearrange-terms"><a href="#Rearrange-terms" class="headerlink" title="Rearrange terms"></a>Rearrange terms</h3><ol>
<li>Multiplying by <code>N</code></li>
</ol>
<script type="math/tex; mode=display">
NC_N = N(N+1) + 2(C_0+C_1+...+C_{N-2}+C_{N-1})</script><ol>
<li>Subtracting with same equation of <code>N-1</code></li>
</ol>
<script type="math/tex; mode=display">
NC_N - (N-1)C_{N-1} = N(N+1)-(N-1)N +</script><script type="math/tex; mode=display">
2(C_0+C_1+...+C_{N-2}+C_{N-1}) - 2(C_0+C_1+...+C_{N-2})</script><script type="math/tex; mode=display">
\Rightarrow</script><script type="math/tex; mode=display">
NC_N - (N-1)C_{N-1} = 2N + 2C_{N-1}</script><ol>
<li>Each item dividing by N(N+1) leaves</li>
</ol>
<script type="math/tex; mode=display">
C_N/(N+1) = C_{N-1}/N + 2/(N+1)</script><ol>
<li>Add same equation from <code>1</code></li>
</ol>
<script type="math/tex; mode=display">
C_N/(N+1) = C_{N-1}/N + 2/(N+1)</script><script type="math/tex; mode=display">
+</script><script type="math/tex; mode=display">
C_{N-1}/(N) = C_{N-2}/(N-1) + 2/(N)</script><script type="math/tex; mode=display">
\cdots</script><script type="math/tex; mode=display">
C_3/(4) = C_2/3 + 2/4</script><script type="math/tex; mode=display">
+</script><script type="math/tex; mode=display">
C_2/(3) = C_1/2 + 2/3</script><script type="math/tex; mode=display">
\Rightarrow</script><script type="math/tex; mode=display">
\frac{C_2}{3} + \frac{C_3}{4}+...+\frac{C_{N-1}}{N} + \frac{C_N}{N+1}=</script><script type="math/tex; mode=display">
\frac{C_1}{2} + \frac{C_2}{3}+...+\frac{C_{N-2}}{N-1} + \frac{C_{N-1}}{N}
+
\frac{2}{3} + \frac{3}{4}+...+\frac{2}{N} + \frac{2}{N+1}</script><script type="math/tex; mode=display">
\Rightarrow</script><script type="math/tex; mode=display">
\frac{C_N}{(N+1)} = \frac{C_1}{2}+\frac{2}{3} + \frac{3}{4}+...+\frac{2}{N+1}</script><script type="math/tex; mode=display">
\Rightarrow</script><script type="math/tex; mode=display">
C_N \sim 2(N+1)(\frac{1}{3}+\frac{1}{4}+...+\frac{1}{N+1})</script><ol>
<li>Further integration</li>
</ol>
<script type="math/tex; mode=display">
\frac{1}{3}+\frac{1}{4}+...+\frac{1}{N+1} \sim ln(N)</script><script type="math/tex; mode=display">
\Rightarrow</script><script type="math/tex; mode=display">
C_N \sim 2NlnN \approx 1.39lgN</script><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><script type="math/tex; mode=display">
1+\frac{1}{2}+\frac{1}{3}+...+\frac{1}{N}>ln(1+1)+ln(1+\frac{1}{2})+</script><script type="math/tex; mode=display">
...+ln(1+\frac{1}{N-1})+ln(1+\frac{1}{N})</script><script type="math/tex; mode=display">
\Rightarrow</script><script type="math/tex; mode=display">
1+\frac{1}{2}+\frac{1}{3}+...+\frac{1}{N} > ln[2 \times \frac{3}{2} \times \frac{4}{3} \times ...\frac{N}{N-1} \times \frac{N+1}{N}] \approx ln(N)</script>]]></content>
      <categories>
        <category>algorithm</category>
      </categories>
      <tags>
        <tag>math</tag>
        <tag>sort</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello hbase</title>
    <url>/2017/03/15/Hello-hbase/</url>
    <content><![CDATA[<h2 id="Download-Configure"><a href="#Download-Configure" class="headerlink" title="Download Configure"></a>Download Configure</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo curl -O http://mirrors.hust.edu.cn/apache/hbase/1.3.0/hbase-1.3.0-bin.tar.gz</span><br><span class="line"></span><br><span class="line">sudo tar -xzvf hbase-1.3.0-bin.tar.gz</span><br><span class="line"></span><br><span class="line">sudo vim conf/hbase-env.sh</span><br><span class="line"><span class="meta"> &gt;</span><span class="bash"> <span class="built_in">export</span> JAVA_HOME=/usr/lib/jdk1.8.0_121</span></span><br><span class="line"><span class="meta"> &gt;</span><span class="bash"> <span class="built_in">export</span> HBASE_CLASSPATH=/usr/lib/hbase-1.3.0/lib</span></span><br><span class="line"></span><br><span class="line">sudo bash bin/start-hbase.sh</span><br><span class="line"></span><br><span class="line">more logs/hbase-root-master-raspberrypi.log</span><br></pre></td></tr></table></figure>
<h2 id="Have-a-try"><a href="#Have-a-try" class="headerlink" title="Have a try"></a>Have a try</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bin/hbase shell</span><br><span class="line"></span><br><span class="line">create &apos;PageViews&apos;, &apos;info&apos;</span><br><span class="line"></span><br><span class="line">list</span><br><span class="line"></span><br><span class="line">descibe &apos;PageViews&apos;</span><br><span class="line"></span><br><span class="line">put &apos;PageViews&apos;, &apos;rowkey1&apos;, &apos;info:page&apos;, &apos;/mypage&apos;</span><br><span class="line"></span><br><span class="line">put &apos;PageViews&apos;, &apos;rowkey1&apos;, &apos;info:count&apos;, &apos;7&apos;</span><br><span class="line"></span><br><span class="line">get &apos;PageViews&apos;, &apos;rowkey1&apos;</span><br><span class="line"></span><br><span class="line">put &apos;PageViews&apos;, &apos;rowkey2&apos;, &apos;info:page&apos;, &apos;/myotherpage&apos;</span><br><span class="line"></span><br><span class="line">put &apos;PageViews&apos;, &apos;srowkey2&apos;, &apos;info:page&apos;, &apos;/myotherpage&apos;</span><br><span class="line"></span><br><span class="line">scan &apos;PageViews&apos;, &#123;STARTROW=&gt;&apos;r&apos;, ENDROW=&gt;&apos;s&apos;&#125;</span><br><span class="line"></span><br><span class="line">scan &apos;PageViews&apos;, &#123;STARTROW=&gt;&apos;r&apos;&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>first</tag>
      </tags>
  </entry>
  <entry>
    <title>Random event</title>
    <url>/2017/03/11/Random-event/</url>
    <content><![CDATA[<p>All sample’s collection be called sample zone.</p>
<script type="math/tex; mode=display">
\Omega_1=\{ 1, 2, 3, 4, 5, 6 \}</script><script type="math/tex; mode=display">
\Omega_2=\{ t \quad| t\ge0\}</script><h3 id="Contain-relation"><a href="#Contain-relation" class="headerlink" title="Contain relation"></a>Contain relation</h3><script type="math/tex; mode=display">
\emptyset \subset A \subset B</script><script type="math/tex; mode=display">
A \subset B \quad B \subset C \Rightarrow A \subset C</script><h3 id="Equal-realtion"><a href="#Equal-realtion" class="headerlink" title="Equal realtion"></a>Equal realtion</h3><script type="math/tex; mode=display">
A \subset B \quad \&\& \quad B \subset A</script><h3 id="Events-sum"><a href="#Events-sum" class="headerlink" title="Events sum"></a>Events sum</h3><script type="math/tex; mode=display">
A_1 \bigcup A_2 ... \bigcup A_n</script><p>or</p>
<script type="math/tex; mode=display">
\bigcup_{i=1}^nA_i</script><h3 id="Events-product"><a href="#Events-product" class="headerlink" title="Events product"></a>Events product</h3><script type="math/tex; mode=display">
A_1 \bigcap A_2 ... \bigcap A_n</script><p>or</p>
<script type="math/tex; mode=display">
\bigcap_{i=1}^nA_i</script><h3 id="Mutex-events"><a href="#Mutex-events" class="headerlink" title="Mutex events"></a>Mutex events</h3><script type="math/tex; mode=display">
AB = \emptyset</script><h3 id="Oppose-events"><a href="#Oppose-events" class="headerlink" title="Oppose events"></a>Oppose events</h3><script type="math/tex; mode=display">
AB = \emptyset \quad \&\& \quad A \bigcup B = \Omega</script><script type="math/tex; mode=display">
A = \overline B \quad B = \overline A</script><h3 id="Events-difference"><a href="#Events-difference" class="headerlink" title="Events difference"></a>Events difference</h3><script type="math/tex; mode=display">
A - B = A \overline B = A - (AB)</script><h3 id="Complete-event-group"><a href="#Complete-event-group" class="headerlink" title="Complete event group"></a>Complete event group</h3><script type="math/tex; mode=display">
\bigcup_{i=1}^nA_i=\Omega \quad \&\& \quad A_i \bigcap A_j=\emptyset (i \neq j)</script>]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>probability</tag>
      </tags>
  </entry>
  <entry>
    <title>Inverse function</title>
    <url>/2017/03/14/Inverse-function/</url>
    <content><![CDATA[<script type="math/tex; mode=display">
\phi^{-1}(y) = \frac{1}{9}y^{3}</script><script type="math/tex; mode=display">
\downarrow</script><script type="math/tex; mode=display">
\phi(x) = 9x^{\frac{1}{3}}</script><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plot</span><br><span class="line">N = <span class="number">10000</span></span><br><span class="line">X0 = np.random.rand(N)</span><br><span class="line">X1 = <span class="number">3</span>*X0</span><br><span class="line">Y = np.power(<span class="number">9</span>*X1, <span class="number">1.0</span>/<span class="number">3</span>)</span><br><span class="line">t = np.arange(<span class="number">0.0</span>, <span class="number">3.0</span>, <span class="number">0.01</span>)</span><br><span class="line">y = t*t/<span class="number">9</span></span><br><span class="line">plot.plot(t, y, <span class="string">'r-'</span>, linewidth=<span class="number">1</span>)</span><br><span class="line">plot.hist(Y, bins=<span class="number">50</span>, normed=<span class="number">1</span>, facecolor=<span class="string">'green'</span>, alpha=<span class="number">0.75</span>)</span><br><span class="line">plot.show()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>function</tag>
        <tag>math</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello elasticsearch</title>
    <url>/2017/03/19/Hello-elasticsearch/</url>
    <content><![CDATA[<h3 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.2.2.tar.gz</span><br><span class="line"></span><br><span class="line">sudo tar -xzvf elasticsearch-5.2.2.tar.gz</span><br><span class="line"></span><br><span class="line">sudo chown -R pi:pi elasticsearch-5.2.2</span><br></pre></td></tr></table></figure>
<p>If not change directory’s owner, user command <code>sudo -E ./bin/elasticsearch</code> execute the script, or the java path can’t be find.</p>
<h3 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h3><p>./bin/elasticsearch<br><strong>dispatch memory</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ES_JAVA_OPTS=&quot;-Xms70m -Xmx70m&quot;</span><br></pre></td></tr></table></figure></p>
<p>./config/elasticsearch.yml<br><strong>set bootstrap to single machine mode</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cluster.name: elastic-pi</span><br><span class="line"></span><br><span class="line">bootstrap.memory_lock: false</span><br><span class="line">bootstrap.system_call_filter: false</span><br><span class="line"></span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">http.port: 9200</span><br><span class="line"></span><br><span class="line">#http.cors.enabled: true  </span><br><span class="line">#http.cors.allow-origin: &quot;*&quot;</span><br></pre></td></tr></table></figure></p>
<p>If exception happen like this<br><code>max virtual memory areas vm.max_map_count [65530] likely too low, increase to at least [262144]</code><br>In single machine mode looks like no this problem<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo echo &quot;vm.max_map_count=262144&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line">sudo sysctl -p</span><br></pre></td></tr></table></figure></p>
<h3 id="Plugin"><a href="#Plugin" class="headerlink" title="Plugin"></a>Plugin</h3><p><a href="https://github.com/medcl/elasticsearch-analysis-ik" target="_blank" rel="noopener">elasticsearch-analysis-ik</a></p>
<p>Pharse process plugin<br><strong>release to plugin directory</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -O https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v5.2.2/elasticsearch-analysis-ik-5.2.2.zip</span><br><span class="line"></span><br><span class="line">unzip elasticsearch-analysis-ik-5.2.2.zip</span><br></pre></td></tr></table></figure></p>
<h4 id="head"><a href="#head" class="headerlink" title="head"></a>head</h4><p>install npm/ nodejs/ elasticsearch-head</p>
<h3 id="Exception"><a href="#Exception" class="headerlink" title="Exception"></a>Exception</h3><p><code>org.elasticsearch.indices.IndexClosedException: closed</code></p>
<p>delete the origin index and rebuild index, it works.</p>
<p><code>Could not find any executable java binary. Please install java in your PATH or set JAVA_HOME</code></p>
<p>make sure java be right configed, and current user has privilege to use elasticsearch/ environment variable</p>
<h3 id="Operate"><a href="#Operate" class="headerlink" title="Operate"></a>Operate</h3><ol>
<li><p>start<br>nohup ./bin/elasticsearch&amp;<br>./bin/elasticsearch -d</p>
</li>
<li><p>stop<br>ps -ef|grep elastic<br>kill -9 51271</p>
</li>
</ol>
]]></content>
      <categories>
        <category>search</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>first</tag>
        <tag>elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>Elasticsearch demo</title>
    <url>/2017/03/20/Elasticsearch-demo/</url>
    <content><![CDATA[<h3 id="Create-a-new-index"><a href="#Create-a-new-index" class="headerlink" title="Create a new index"></a>Create a new index</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -XDELETE http://192.168.3.11:9200/policy</span><br><span class="line"></span><br><span class="line">curl -XPUT http://192.168.3.11:9200/policy</span><br></pre></td></tr></table></figure>
<h3 id="A-new-field-mapping"><a href="#A-new-field-mapping" class="headerlink" title="A new field mapping"></a>A new field mapping</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -XPOST http://192.168.3.11:9200/policy/fulltext/_mapping -d&apos;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;fulltext&quot;: &#123;</span><br><span class="line">            &quot;_all&quot;: &#123;</span><br><span class="line">            &quot;analyzer&quot;: &quot;ik_max_word&quot;,</span><br><span class="line">            &quot;search_analyzer&quot;: &quot;ik_max_word&quot;,</span><br><span class="line">            &quot;term_vector&quot;: &quot;no&quot;,</span><br><span class="line">            &quot;store&quot;: &quot;false&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;properties&quot;: &#123;</span><br><span class="line">            &quot;content&quot;: &#123;</span><br><span class="line">                &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">                &quot;analyzer&quot;: &quot;ik_max_word&quot;,</span><br><span class="line">                &quot;search_analyzer&quot;: &quot;ik_max_word&quot;,</span><br><span class="line">                &quot;include_in_all&quot;: &quot;true&quot;,</span><br><span class="line">                &quot;boost&quot;: 8</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;&apos;</span><br></pre></td></tr></table></figure>
<h3 id="Add-data"><a href="#Add-data" class="headerlink" title="Add data"></a>Add data</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -XPOST http://192.168.3.11:9200/policy/fulltext/1 -d&apos;</span><br><span class="line">&#123;&quot;content&quot;:&quot;2017年1月1日起全国实行国Ⅴ排放标准&quot;&#125;</span><br><span class="line">&apos;</span><br><span class="line">curl -XPOST http://192.168.3.11:9200/policy/fulltext/2 -d&apos;</span><br><span class="line">&#123;&quot;content&quot;:&quot;2017年1月1日起实施:车内空气质量强制达标&quot;&#125;</span><br><span class="line">&apos;</span><br><span class="line">curl -XPOST http://192.168.3.11:9200/policy/fulltext/3 -d&apos;</span><br><span class="line">&#123;&quot;content&quot;:&quot;2017年试行新能源汽车碳配额管理&quot;&#125;</span><br><span class="line">&apos;</span><br><span class="line">curl -XPOST http://192.168.3.11:9200/policy/fulltext/4 -d&apos;</span><br><span class="line">&#123;&quot;content&quot;:&quot;新能源车生产企业准入规则 有望于2017年正式实施&quot;&#125;</span><br><span class="line">&apos;</span><br><span class="line">curl -XPOST http://192.168.3.11:9200/policy/fulltext/5 -d&apos;</span><br><span class="line">&#123;&quot;content&quot;:&quot;电池行业新规范 有望于2017年全面执行&quot;&#125;</span><br><span class="line">&apos;</span><br><span class="line">curl -XPOST http://192.168.3.11:9200/policy/fulltext/6 -d&apos;</span><br><span class="line">&#123;&quot;content&quot;:&quot;新能源补贴新政即将出炉 2017年将实施&quot;&#125;</span><br><span class="line">&apos;</span><br><span class="line">curl -XPOST http://192.168.3.11:9200/policy/fulltext/7 -d&apos;</span><br><span class="line">&#123;&quot;content&quot;:&quot;《外商投资产业指导目录》修订版将执行 合资车企股比不会放开&quot;&#125;</span><br><span class="line">&apos;</span><br></pre></td></tr></table></figure>
<h3 id="Have-a-search"><a href="#Have-a-search" class="headerlink" title="Have a search"></a>Have a search</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -XPOST http://192.168.3.11:9200/policy/fulltext/_search  -d&apos;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot; : &#123; &quot;match&quot; : &#123; &quot;content&quot; : &quot;能源&quot; &#125;&#125;,</span><br><span class="line">    &quot;highlight&quot; : &#123;</span><br><span class="line">        &quot;pre_tags&quot; : [&quot;&lt;tag1&gt;&quot;, &quot;&lt;tag2&gt;&quot;],</span><br><span class="line">        &quot;post_tags&quot; : [&quot;&lt;/tag1&gt;&quot;, &quot;&lt;/tag2&gt;&quot;],</span><br><span class="line">        &quot;fields&quot; : &#123;</span><br><span class="line">            &quot;content&quot; : &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&apos;</span><br></pre></td></tr></table></figure>
<h3 id="Check-engine-status"><a href="#Check-engine-status" class="headerlink" title="Check engine status"></a>Check engine status</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -XGET http://192.168.3.11:9200/policy/_analyze?text=2017&amp;tokenizer=ik_max_word</span><br><span class="line"></span><br><span class="line">curl -XGET http://192.168.3.11:9200/_cluster/health?pretty=true</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>search</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>first</tag>
        <tag>elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>Elasticsearch cluster status</title>
    <url>/2017/03/21/Elasticsearch-cluster-status/</url>
    <content><![CDATA[<h3 id="Terminology"><a href="#Terminology" class="headerlink" title="Terminology"></a>Terminology</h3><p>An Elasticsearch cluster is made up of one or more <strong>nodes</strong>.<br>Each of these nodes contains indexes which are split into multiple <strong>shards</strong>.<br>Elasticsearch makes copies of these shards called <strong>replicas</strong>.<br>These (primary) shards and replicas are then placed on various nodes throughout the cluster.</p>
<h3 id="Status"><a href="#Status" class="headerlink" title="Status"></a>Status</h3><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-health.html" target="_blank" rel="noopener"> Cluster Health API</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -XGET http://192.168.3.11:9200/_cluster/health</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;cluster_name&quot; : &quot;testcluster&quot;,</span><br><span class="line">  &quot;status&quot; : &quot;yellow&quot;,</span><br><span class="line">  &quot;timed_out&quot; : false,</span><br><span class="line">  &quot;number_of_nodes&quot; : 1,</span><br><span class="line">  &quot;number_of_data_nodes&quot; : 1,</span><br><span class="line">  &quot;active_primary_shards&quot; : 5,</span><br><span class="line">  &quot;active_shards&quot; : 5,</span><br><span class="line">  &quot;relocating_shards&quot; : 0,</span><br><span class="line">  &quot;initializing_shards&quot; : 0,</span><br><span class="line">  &quot;unassigned_shards&quot; : 5,</span><br><span class="line">  &quot;delayed_unassigned_shards&quot;: 0,</span><br><span class="line">  &quot;number_of_pending_tasks&quot; : 0,</span><br><span class="line">  &quot;number_of_in_flight_fetch&quot;: 0,</span><br><span class="line">  &quot;task_max_waiting_in_queue_millis&quot;: 0,</span><br><span class="line">  &quot;active_shards_percent_as_number&quot;: 50.0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>RED:<br>Damnit. Some or all of (primary) shards are not ready.</p>
</li>
<li><p>YELLOW:<br>Elasticsearch has allocated all of the primary shards, but some/all of the replicas have not been allocated.</p>
</li>
<li><p>GREEN:<br>Great. Your cluster is fully operational. Elasticsearch is able to allocate all shards and replicas to machines within the cluster.</p>
</li>
</ul>
<h3 id="Request-Parameters"><a href="#Request-Parameters" class="headerlink" title="Request Parameters"></a>Request Parameters</h3><ul>
<li>level<br>Can be one of <strong>cluster, indices or shards</strong>. Controls the details level of the health information returned. Defaults to cluster.</li>
<li>wait_for_status<br>One of <strong>green, yellow or red</strong>. Will wait (until the timeout provided) until the status of the cluster changes to the one provided or better, i.e. green &gt; yellow &gt; red. By default, will not wait for any status.</li>
<li>wait_for_no_relocating_shards<br>A boolean value which controls <strong>whether to wait</strong> (until the timeout provided) for the cluster to have no shard relocations. Defaults to false, which means it will <strong>not wait for relocating shards</strong>.</li>
<li>wait_for_active_shards<br>A number controlling to <strong>how many active shards</strong> to wait for, all to wait for all shards in the cluster to be active, or 0 to not wait. Defaults to 0.</li>
<li>wait_for_nodes<br>The request waits until the <strong>specified number N of nodes is available</strong>. It also accepts &gt;=N, &lt;=N, &gt;N and &lt;N. Alternatively, it is possible to use ge(N), le(N), gt(N) and lt(N) notation.</li>
<li>timeout<br>A time based parameter controlling <strong>how long to wait</strong> if one of the wait_for_XXX are provided. <strong>Defaults to 30s</strong>.</li>
<li>local<br>If true returns the local node information and does not provide the state from master node. Default: false.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -XGET http://192.168.3.11:9200/_cluster/health?wait_for_status=yellow&amp;timeout=50s</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>search</category>
      </categories>
      <tags>
        <tag>elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>Latex source file</title>
    <url>/2017/03/22/Latex-source-file/</url>
    <content><![CDATA[<h3 id="blank-space-distance"><a href="#blank-space-distance" class="headerlink" title="blank space distance"></a>blank space distance</h3><p>Blank space and table sign are same in Latex as a space.<br>The multi blank characters and a new line will be seem as one space.<br>The head blank space will be ignore normally.</p>
<p>The new line mean an old paragraph ended and a new paragraph begin.</p>
<blockquote>
<p>It does not matter whether you<br>enter one or several     spaces<br>after a word.<br>An empty line starts a new<br>paragraph.</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">It does not matter whether you enter one or several spaces</span><br><span class="line">after a word.</span><br><span class="line">An empty line starts a new paragraph.</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>latex</tag>
      </tags>
  </entry>
  <entry>
    <title>Latex source file</title>
    <url>/2017/03/25/Latex-source-file-1/</url>
    <content><![CDATA[<h3 id="Latex’s-reserved-characters"><a href="#Latex’s-reserved-characters" class="headerlink" title="Latex’s reserved characters"></a>Latex’s reserved characters</h3><p><code># $ % ^ &amp; _ { } \</code></p>
<p>They have specal meaning in latex.<br>Use backslash to output them</p>
<p><code>\# \$ \% \^{} \&amp; \_ \{ \} \ {}</code></p>
<p>The backslash it’s self can’t be output by add another backslash.<br>Have a try <script type="math/tex">\backslash</script>.</p>
<p>The <code>\\</code> is used to take a newline.</p>
<h3 id="Commands"><a href="#Commands" class="headerlink" title="Commands"></a>Commands</h3><p>Command start with <code>\</code> backslash</p>
<p>You can \textsl{lean} on me!<br>-&gt;<br>You can <em>lean</em> on me!</p>
<hr>
<p>Please, start a new line right here!\newline Thank you!<br>Please, start a new line right here!\ Thank you!<br>-&gt;<br>Please, start a new line right here!<br>Thank you!</p>
<h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><p>If Latex meet a ‘%’ percent sign, it will ignore words behind it.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">This is an % stupid</span><br><span class="line">% Better: instructive &lt;----</span><br><span class="line">example: Supercal%</span><br><span class="line">ifragilist%</span><br><span class="line">icexpialidocious</span><br></pre></td></tr></table></figure>
<p>This is an example: Supercalifragilisticexpialidocious</p>
<hr>
<p>If comment content is very long, try verbatim macro package’s comment environment.<br>In document’s guid space declare <code>\usepackage{verbatim}</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">This is another</span><br><span class="line">\begin&#123;comment&#125;</span><br><span class="line">rather stupid,</span><br><span class="line">but helpful</span><br><span class="line">\end&#123;comment&#125;</span><br><span class="line">example for embedding</span><br><span class="line">comments in your document.</span><br></pre></td></tr></table></figure>
<p>This is another example for embedding comments in your document.</p>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>symbol</tag>
        <tag>latex</tag>
      </tags>
  </entry>
  <entry>
    <title>Mapper anaylsis</title>
    <url>/2017/04/10/Mapper-anaylsis/</url>
    <content><![CDATA[<h2 id="Package"><a href="#Package" class="headerlink" title="Package"></a>Package</h2><p><strong>org.apache.ibatis.binding</strong></p>
<ul>
<li>BindingException.java<br>When <em>MapperRegistry</em> Or <em>MapperMethod</em> bind interface with<br>target class object failed throw the Exception with exception message.</li>
<li>MapperMethod.java<br>Execute with <em>Command pattern</em>, behind proxy, bind the input interface with it.</li>
<li>MapperProxy.java<br>The agent, for all interface define in workspace.</li>
<li>MapperProxyFactory.java<br>To create generic class MapperProxy for all interface,<br>load interface’s method cache</li>
<li>MapperRegistry.java<br>Store all MapperProxyFactory in resource, mapping annotation?</li>
<li>package-info.java</li>
</ul>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><h3 id="MapperMethod"><a href="#MapperMethod" class="headerlink" title="MapperMethod"></a>MapperMethod</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MapperMethod</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> SqlCommand command;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> MethodSignature method;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">MapperMethod</span><span class="params">(Class&lt;?&gt; mapperInterface, Method method, Configuration config)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.command = <span class="keyword">new</span> SqlCommand(config, mapperInterface, method);</span><br><span class="line">    <span class="keyword">this</span>.method = <span class="keyword">new</span> MethodSignature(config, mapperInterface, method);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Object <span class="title">execute</span><span class="params">(SqlSession sqlSession, Object[] args)</span> </span>&#123;</span><br><span class="line">    Object result;</span><br><span class="line">    <span class="keyword">switch</span> (command.getType()) &#123;</span><br><span class="line">      <span class="keyword">case</span> INSERT: &#123;<span class="comment">/***/</span>&#125;</span><br><span class="line">      <span class="keyword">case</span> UPDATE: &#123;<span class="comment">/***/</span>&#125;</span><br><span class="line">      <span class="keyword">case</span> DELETE: &#123;<span class="comment">/***/</span>&#125;</span><br><span class="line">      <span class="keyword">case</span> SELECT:</span><br><span class="line">        <span class="keyword">if</span> (method.returnsVoid() &amp;&amp; method.hasResultHandler()) &#123;</span><br><span class="line">          executeWithResultHandler(sqlSession, args);</span><br><span class="line">          result = <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method.returnsMany()) &#123;</span><br><span class="line">          <span class="comment">// example -------------------------------</span></span><br><span class="line">          result = executeForMany(sqlSession, args);</span><br><span class="line">          <span class="comment">// ---------------------------------------</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method.returnsMap()) &#123;</span><br><span class="line">          result = executeForMap(sqlSession, args);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method.returnsCursor()) &#123;</span><br><span class="line">          result = executeForCursor(sqlSession, args);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          Object param = method.convertArgsToSqlCommandParam(args);</span><br><span class="line">          result = sqlSession.selectOne(command.getName(), param);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> FLUSH:</span><br><span class="line">        result = sqlSession.flushStatements();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BindingException(<span class="string">"Unknown execution method for: "</span> + command.getName());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (result == <span class="keyword">null</span> &amp;&amp; method.getReturnType().isPrimitive() &amp;&amp; !method.returnsVoid()) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> BindingException(<span class="string">"Mapper method '"</span> + command.getName()</span><br><span class="line">          + <span class="string">" attempted to return null from a method with a primitive return type ("</span> + method.getReturnType() + <span class="string">")."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ......</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> &lt;E&gt; <span class="function">Object <span class="title">executeForMany</span><span class="params">(SqlSession sqlSession, Object[] args)</span> </span>&#123;</span><br><span class="line">    List&lt;E&gt; result;</span><br><span class="line">    Object param = method.convertArgsToSqlCommandParam(args);</span><br><span class="line">    <span class="keyword">if</span> (method.hasRowBounds()) &#123;</span><br><span class="line">      RowBounds rowBounds = method.extractRowBounds(args);</span><br><span class="line">      result = sqlSession.&lt;E&gt;selectList(command.getName(), param, rowBounds);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      result = sqlSession.&lt;E&gt;selectList(command.getName(), param);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// issue #510 Collections &amp; arrays support</span></span><br><span class="line">    <span class="keyword">if</span> (!method.getReturnType().isAssignableFrom(result.getClass())) &#123;</span><br><span class="line">      <span class="keyword">if</span> (method.getReturnType().isArray()) &#123;</span><br><span class="line">        <span class="keyword">return</span> convertToArray(result);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> convertToDeclaredCollection(sqlSession.getConfiguration(), result);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ......</span><br></pre></td></tr></table></figure>
<ul>
<li><em>SqlCommand</em> an inner static class represent the sql command</li>
<li><em>MethodSignature</em> interface’s method parameters</li>
<li><em>executeForMany</em> method used to execute commander’s command.</li>
</ul>
<h3 id="MapperProxy-lt-T-gt"><a href="#MapperProxy-lt-T-gt" class="headerlink" title="MapperProxy&lt;T&gt;"></a>MapperProxy&lt;T&gt;</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MapperProxy</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">InvocationHandler</span>, <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">6424540398559729838L</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> SqlSession sqlSession;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Class&lt;T&gt; mapperInterface;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;Method, MapperMethod&gt; methodCache;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">MapperProxy</span><span class="params">(SqlSession sqlSession, Class&lt;T&gt; mapperInterface, Map&lt;Method, MapperMethod&gt; methodCache)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.sqlSession = sqlSession;</span><br><span class="line">    <span class="keyword">this</span>.mapperInterface = mapperInterface;</span><br><span class="line">    <span class="keyword">this</span>.methodCache = methodCache;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (Object<span class="class">.<span class="keyword">class</span>.<span class="title">equals</span>(<span class="title">method</span>.<span class="title">getDeclaringClass</span>())) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> method.invoke(<span class="keyword">this</span>, args);</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isDefaultMethod(method)) &#123;</span><br><span class="line">        <span class="keyword">return</span> invokeDefaultMethod(proxy, method, args);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable t) &#123;</span><br><span class="line">      <span class="keyword">throw</span> ExceptionUtil.unwrapThrowable(t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// transform to the real mapper method</span></span><br><span class="line">    <span class="keyword">final</span> MapperMethod mapperMethod = cachedMapperMethod(method);</span><br><span class="line">    <span class="keyword">return</span> mapperMethod.execute(sqlSession, args);</span><br><span class="line">    <span class="comment">// -------------------------------------</span></span><br><span class="line">  &#125;</span><br><span class="line">  ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>the front agent</li>
<li>used to handle the mapper stuff</li>
<li>record all mapper method in cache</li>
<li><em>SqlSession</em> from constructor, used in <em>MapperMethod</em></li>
</ul>
<h3 id="MapperProxyFactory-lt-T-gt"><a href="#MapperProxyFactory-lt-T-gt" class="headerlink" title="MapperProxyFactory&lt;T&gt;"></a>MapperProxyFactory&lt;T&gt;</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MapperProxyFactory</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Class&lt;T&gt; mapperInterface;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;Method, MapperMethod&gt; methodCache = <span class="keyword">new</span> ConcurrentHashMap&lt;Method, MapperMethod&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">MapperProxyFactory</span><span class="params">(Class&lt;T&gt; mapperInterface)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.mapperInterface = mapperInterface;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Class&lt;T&gt; <span class="title">getMapperInterface</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> mapperInterface;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Map&lt;Method, MapperMethod&gt; <span class="title">getMethodCache</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> methodCache;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">protected</span> T <span class="title">newInstance</span><span class="params">(MapperProxy&lt;T&gt; mapperProxy)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (T) Proxy.newProxyInstance(mapperInterface.getClassLoader(), <span class="keyword">new</span> Class[] &#123; mapperInterface &#125;, mapperProxy);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> T <span class="title">newInstance</span><span class="params">(SqlSession sqlSession)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> MapperProxy&lt;T&gt; mapperProxy = <span class="keyword">new</span> MapperProxy&lt;T&gt;(sqlSession, mapperInterface, methodCache);</span><br><span class="line">    <span class="keyword">return</span> newInstance(mapperProxy);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>used to create generic mapper proxy object</li>
<li>a reference to method cache parse to <em>MapperProxy</em></li>
<li>new instance the agent object</li>
</ul>
<h3 id="MapperRegistry"><a href="#MapperRegistry" class="headerlink" title="MapperRegistry"></a>MapperRegistry</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MapperRegistry</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Configuration config;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;Class&lt;?&gt;, MapperProxyFactory&lt;?&gt;&gt; knownMappers = <span class="keyword">new</span> HashMap&lt;Class&lt;?&gt;, MapperProxyFactory&lt;?&gt;&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">MapperRegistry</span><span class="params">(Configuration config)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.config = config;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">  <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">getMapper</span><span class="params">(Class&lt;T&gt; type, SqlSession sqlSession)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> MapperProxyFactory&lt;T&gt; mapperProxyFactory = (MapperProxyFactory&lt;T&gt;) knownMappers.get(type);</span><br><span class="line">    <span class="keyword">if</span> (mapperProxyFactory == <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> BindingException(<span class="string">"Type "</span> + type + <span class="string">" is not known to the MapperRegistry."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> mapperProxyFactory.newInstance(sqlSession);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> BindingException(<span class="string">"Error getting mapper instance. Cause: "</span> + e, e);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> &lt;T&gt; <span class="function"><span class="keyword">boolean</span> <span class="title">hasMapper</span><span class="params">(Class&lt;T&gt; type)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> knownMappers.containsKey(type);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> &lt;T&gt; <span class="function"><span class="keyword">void</span> <span class="title">addMapper</span><span class="params">(Class&lt;T&gt; type)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (type.isInterface()) &#123;</span><br><span class="line">      <span class="keyword">if</span> (hasMapper(type)) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BindingException(<span class="string">"Type "</span> + type + <span class="string">" is already known to the MapperRegistry."</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">boolean</span> loadCompleted = <span class="keyword">false</span>;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        knownMappers.put(type, <span class="keyword">new</span> MapperProxyFactory&lt;T&gt;(type));</span><br><span class="line">        <span class="comment">// It's important that the type is added before the parser is run</span></span><br><span class="line">        <span class="comment">// otherwise the binding may automatically be attempted by the</span></span><br><span class="line">        <span class="comment">// mapper parser. If the type is already known, it won't try.</span></span><br><span class="line">        MapperAnnotationBuilder parser = <span class="keyword">new</span> MapperAnnotationBuilder(config, type);</span><br><span class="line">        parser.parse();</span><br><span class="line">        loadCompleted = <span class="keyword">true</span>;</span><br><span class="line">      &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!loadCompleted) &#123;</span><br><span class="line">          knownMappers.remove(type);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>record every mapper’s proxy factory</li>
<li>parse mapper’s annotation?</li>
</ul>
<h2 id="Discuss"><a href="#Discuss" class="headerlink" title="Discuss"></a>Discuss</h2><ul>
<li>Mybatis could use interface to execute sql is base on java’s<br>dynamic invoke.</li>
<li><em>SqlSession</em> is come from <em>MapperRegistry</em> getMapper method’s<br>input parameter.</li>
<li>At last the <em>SqlSession</em> execute Object’s sql</li>
</ul>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title>Java dynamic proxy</title>
    <url>/2017/03/26/Java-dynamic-proxy/</url>
    <content><![CDATA[<h3 id="Use-scope"><a href="#Use-scope" class="headerlink" title="Use scope"></a>Use scope</h3><ul>
<li>Java AOP is base on dynamic proxy</li>
<li>Plug in, for increasing function of package already exists.</li>
<li>Framework, for some abstract programming level.</li>
</ul>
<h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><h3 id="1-an-Interface"><a href="#1-an-Interface" class="headerlink" title="1. an Interface"></a>1. an Interface</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Interface</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">hi</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">String <span class="title">sayHello</span><span class="params">(String arg)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>first interface used to call a method<br>  that has <strong>no arguments and return</strong></li>
<li>second interface used to call a method<br>  that has <strong>a argument and return string</strong></li>
</ul>
<h3 id="2-an-implements-class"><a href="#2-an-implements-class" class="headerlink" title="2. an implements class"></a>2. an implements class</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloProxy</span> <span class="keyword">implements</span> <span class="title">Interface</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello world"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(String arg)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello "</span> + arg);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello "</span> + arg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>Geet to world</li>
<li>Geet to the input argument and return</li>
</ul>
<h3 id="3-an-InvocationHandler"><a href="#3-an-InvocationHandler" class="headerlink" title="3. an InvocationHandler"></a>3. an InvocationHandler</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DynamicProxyHandler</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Object proxied;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DynamicProxyHandler</span><span class="params">(Object proxied)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.proxied = proxied;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (args != <span class="keyword">null</span> &amp;&amp; args.length &gt; <span class="number">0</span> &amp;&amp; args[<span class="number">0</span>] != <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Invoke "</span> + method.invoke(proxied, args);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>The handler implements InvocationHandler is the key<br>  to dynamic call the target methods or fields.</p>
</li>
<li><p>All the call in handler would be redirect to a <code>call processor</code>.</p>
</li>
<li><p><em>The first argument</em> in method invoke is used to deal the<br>  <strong>manual call</strong> object.</p>
</li>
<li><p><em>The second argument</em> is the method you call in a<br>  <strong>uppper reference</strong> or a <strong>maunal call</strong> method.</p>
</li>
<li><p><em>The third argument</em> is the arguments you want to input,<br>  the processor would distinguish the method sign may be -_-.<br>  <strong>uppper input</strong> or <strong>maunal input</strong> arguments.</p>
</li>
</ul>
<h3 id="4-have-a-try"><a href="#4-have-a-try" class="headerlink" title="4. have a try"></a>4. have a try</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Interface hello = (Interface) Proxy.newProxyInstance(</span><br><span class="line">                HelloProxy<span class="class">.<span class="keyword">class</span>.<span class="title">getClassLoader</span>(),</span></span><br><span class="line">                new Class[] &#123; Interface.class &#125;,</span><br><span class="line">                <span class="keyword">new</span> DynamicProxyHandler(<span class="keyword">new</span> HelloProxy()));</span><br><span class="line"></span><br><span class="line">        hello.hi();</span><br><span class="line">        System.out.println(hello.sayHello(<span class="string">"proxy"</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>The <code>newProxyInstance</code> will create a subClass of the second argument<br>  so the <code>$proxy0</code> can be transform to the <code>Interface</code>.</p>
</li>
<li><p>The first argument <code>classLoader</code> is to point which class is agent.</p>
</li>
<li><p>The third argument is the handler we created in <strong>step 3</strong><br>  take a <strong>proxied hello interface implement</strong> into it’s constructor.</p>
</li>
<li><p>The result in <code>sayHello</code> has been deal by handler.</p>
</li>
</ul>
<p>Result:</p>
<blockquote>
<p>Hello world<br>Hello proxy<br>Invoke Hello proxy</p>
</blockquote>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>Traversal in freemarker</title>
    <url>/2017/04/19/Traversal-in-freemarker/</url>
    <content><![CDATA[<p><code>List&lt;Question&gt; question = new ArrayList&lt;Question&gt;();</code><br><code>Map&lt;Question, List&lt;Option&gt;&gt; mapping = new LinkedHashMap&lt;Question, List&lt;Option&gt;&gt;();</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;#if question??&gt;</span><br><span class="line">  &lt;#list question as ask&gt;</span><br><span class="line">    &lt;#list options[ask.id?c] as option&gt;</span><br><span class="line">      &lt;#if option.status = 0&gt;right&lt;#else&gt;false&lt;/#if&gt;</span><br><span class="line">    &lt;/#list&gt;</span><br><span class="line">  &lt;/#list&gt;</span><br><span class="line">&lt;/#if&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>Is freemarker’s key <strong>only be String</strong> -_- shit.</li>
<li>Why can’t use object as a key</li>
<li>Use <code>?c</code> transform int varable to string</li>
</ul>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>hello</tag>
      </tags>
  </entry>
  <entry>
    <title>Introduce Shiro</title>
    <url>/2017/04/24/Introduce-Shiro/</url>
    <content><![CDATA[<p><img src="/2017/04/24/Introduce-Shiro/d59f6d02-1f45-3285-8983-4ea5f18111d5.png" alt="d59f6d02-1f45-3285-8983-4ea5f18111d5.png"><br><strong>Shiro can be used in</strong></p>
<ul>
<li><em>Authentication</em> check current <code>user</code> has identity</li>
<li><em>Authorization</em> check <code>user</code>‘s priority, what he can do</li>
<li><em>Session management</em> when <code>user</code> not logout, it’s info will be storage in session.</li>
<li><em>Cryptography</em> protect data, like password.</li>
<li><em>Web support</em> easy integrate in web environment</li>
<li><em>caching</em> like <code>user</code>‘s role/priority, for improve performence.</li>
<li><em>Concurrency</em> support mulity thread priority share.</li>
<li><em>Testing</em> test support.</li>
<li><em>Run as</em> for <code>user</code> use other user’s mask</li>
<li><em>Remember me</em> next time come, no more login.</li>
</ul>
<p><strong>Shiro wouldn’t maintain user/priority info</strong></p>
<h2 id="See-shiro-from-outside"><a href="#See-shiro-from-outside" class="headerlink" title="See shiro from outside"></a>See shiro from outside</h2><p><img src="/2017/04/24/Introduce-Shiro/5e0e9b41-0cca-367f-8c87-a8398910e7a6.png" alt="5e0e9b41-0cca-367f-8c87-a8398910e7a6.png"></p>
<ul>
<li><em>Subject</em> represent a request entry from net, like user/ robot/ crawler</li>
<li><em>SecurityManager</em> it’s the core of shiro, it’s the security executor.</li>
<li><em>Realm</em> it’s the security data, like a class of user.</li>
</ul>
<p><strong>1. Use Subject to authentication and authorization, Subject entrust to SecurityManager</strong><br><strong>2. SecurityManager need Realm to judge whether a user is the use</strong></p>
<h2 id="See-shiro-from-inside"><a href="#See-shiro-from-inside" class="headerlink" title="See shiro from inside"></a>See shiro from inside</h2><p><img src="/2017/04/24/Introduce-Shiro/9b959a65-799d-396e-b5f5-b4fcfe88f53c.png" alt="9b959a65-799d-396e-b5f5-b4fcfe88f53c.png"></p>
<ul>
<li><em>Subject</em> framework’s main body</li>
<li><em>SecurityManager</em> like <code>DispatcherServlet</code> in SpringMVC, he controlls global; it’s shiro’s heart.</li>
<li><em>Authenticator</em> this is a extention point</li>
<li><em>Authrizer</em> the request controller, determain whether subject has priority to do so.</li>
<li><em>Realm</em> maybe JDBC/ LDAP/ CAS</li>
<li><em>SessionManager</em> manage session’s life cycle.</li>
<li><em>SessionDAO</em> if we wan’t to put session into redis, we can implements SessionDao in ourselves.</li>
<li><em>CacheManager</em> put user/role/priority into it, for improving performence.</li>
<li><em>Cryptography</em> shiro improve some encryption module.</li>
</ul>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>shiro</tag>
      </tags>
  </entry>
  <entry>
    <title>Hash index in mysql</title>
    <url>/2017/05/01/Hash-index-in-mysql/</url>
    <content><![CDATA[<p>Just like the hash function in java<br>Dispatch field’s row pointer to a slot by field’s hash code.<br>If some rows have same hash code, then storage pointer to a list.</p>
<h2 id="Prepare"><a href="#Prepare" class="headerlink" title="Prepare"></a>Prepare</h2><p>Create a table like this:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE animal (</span><br><span class="line">   name   VARCHAR(50)   NOT NULL,</span><br><span class="line">   weight DOUBLE(11, 3) NOT NULL,</span><br><span class="line">   KEY `name` (`name`) USING HASH</span><br><span class="line">) ENGINE=MEMORY;</span><br></pre></td></tr></table></figure></p>
<p>mysql&gt; select * from animal;<br>+————+————-+<br>| name   | weight  |<br>+————+————-+<br>| python |  20.500 |<br>| bear   | 321.720 |<br>| lion   | 221.980 |<br>| rabbit |   7.123 |<br>+————+————-+</p>
<h2 id="Try"><a href="#Try" class="headerlink" title="Try"></a>Try</h2><p><code>f</code> represent the hash function:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">f(&apos;python&apos;) = 2123</span><br><span class="line">f(&apos;bear&apos;)   = 6417</span><br><span class="line">f(&apos;lion&apos;)   = 8771</span><br><span class="line">f(&apos;rabbit&apos;) = 2359</span><br></pre></td></tr></table></figure></p>
<p>then:</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Slot</th>
<th>Hash value</th>
</tr>
</thead>
<tbody>
<tr>
<td>2123</td>
<td>point to row 1</td>
</tr>
<tr>
<td>2359</td>
<td>point to row 4</td>
</tr>
<tr>
<td>6417</td>
<td>point to row 2</td>
</tr>
<tr>
<td>8771</td>
<td>point to row 3</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>Mysql calculate query’s hash value to decide<br>which pointer or a pointer list, sql want.</li>
<li>Because index it’s self only store a <code>short</code> value,<br>so hash code’s length is not determined by data type.</li>
</ul>
<h2 id="Some-limit"><a href="#Some-limit" class="headerlink" title="Some limit"></a>Some limit</h2><ol>
<li>Index only have hash code, so can’t avoid table space i/o.<br>But if table engine is memory, that’s not affected much.</li>
<li>Hash index can’t be used to sort query collection.</li>
<li>Not support part match, it only rely on hash code.</li>
<li>Only support <code>equal</code> operation like:<br><code>=</code> <code>&lt;&gt;</code> <code>in()</code> <code>not in()</code></li>
</ol>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>structure</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>raspberry home media</title>
    <url>/2017/04/30/raspberry-home-media/</url>
    <content><![CDATA[<h2 id="Install-package-NTFS-exFAT"><a href="#Install-package-NTFS-exFAT" class="headerlink" title="Install package(NTFS/exFAT)"></a>Install package(NTFS/exFAT)</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># if exfat</span><br><span class="line">sudo apt-get install exfat-fuse</span><br><span class="line"></span><br><span class="line"># add this at the end(exfat)</span><br><span class="line">/dev/sda1 /mnt/usbdisk vfat rw,defaults 0 0</span><br><span class="line"></span><br><span class="line"># if ntfs</span><br><span class="line">sudo apt-get install fuse-utils ntfs-3g</span><br><span class="line">modprobe fuse</span><br><span class="line">sudo nano /etc/fstab</span><br><span class="line"></span><br><span class="line"># add this at the end(ntfs)</span><br><span class="line">/dev/sda1 /mnt/myusbdrive ntfs-3g defaults,noexec,umask=0000 0 0</span><br></pre></td></tr></table></figure>
<ul>
<li><code>umask=0000</code> mean to all user <code>rwx</code></li>
<li><code>0</code> followed mean no backup</li>
<li><code>0</code> at last mean no <code>fsck</code> sequential check.</li>
</ul>
<h2 id="Mount-disk"><a href="#Mount-disk" class="headerlink" title="Mount disk"></a>Mount disk</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo mkdir /mnt/seagate_2.5_80</span><br><span class="line">sudo mount -o uid=pi,gid=pi /dev/sda1 /mnt/seagate_2.5_80</span><br><span class="line">sudo umount /mnt/seagate_2.5_80</span><br></pre></td></tr></table></figure>
<p><code>sda1</code>:</p>
<ul>
<li><code>sd</code> mean usb equipment</li>
<li><code>a</code> mean first equipment</li>
<li><code>1</code> mean the first partition</li>
</ul>
<p><a href="http://elinux.org/RPi_Adding_USB_Drives" target="_blank" rel="noopener">http://elinux.org/RPi_Adding_USB_Drives</a><br><a href="http://shumeipai.nxez.com/2013/09/08/raspberry-pi-to-mount-the-removable-hard-disk.html#comments" target="_blank" rel="noopener">raspberry-pi-to-mount-the-removable-hard-disk</a></p>
<h2 id="Install-MiniDLNA"><a href="#Install-MiniDLNA" class="headerlink" title="Install MiniDLNA"></a>Install MiniDLNA</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install minidlna</span><br></pre></td></tr></table></figure>
<h3 id="config-file"><a href="#config-file" class="headerlink" title="config file"></a>config file</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/minidlna.conf</span><br><span class="line">media_dir=/mnt/seagate_2.5_80</span><br><span class="line">db_dir=/var/lib/minidlna</span><br><span class="line">listening_ip=192.168.3.1</span><br><span class="line">port=8200</span><br><span class="line">friendly_name=DLNA</span><br></pre></td></tr></table></figure>
<h3 id="commands"><a href="#commands" class="headerlink" title="commands"></a>commands</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># start</span><br><span class="line">sudo service minidlna start</span><br><span class="line"># stop</span><br><span class="line">sudo service minidlna stop</span><br><span class="line">sudo killall minidlna</span><br><span class="line"># uninstall</span><br><span class="line">sudo apt-get remove --purge minidlna</span><br><span class="line"># auto load</span><br><span class="line">sudo update-rc.d minidlna defaults</span><br><span class="line"># cancel auto load</span><br><span class="line">sudo update-rc.d -f minidlna remove</span><br><span class="line"># reflesh resouces</span><br><span class="line">sudo service minidlna force-reload</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>raspberry</category>
      </categories>
      <tags>
        <tag>command</tag>
      </tags>
  </entry>
  <entry>
    <title>B-Tree index in mysql</title>
    <url>/2017/04/29/B-Tree-index-in-mysql/</url>
    <content><![CDATA[<p>Create a table like this:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE People (</span><br><span class="line">   last_name  varchar(50)    not null,</span><br><span class="line">   first_name varchar(50)    not null,</span><br><span class="line">   birthday   date           not null,</span><br><span class="line">   gender     enum(&apos;m&apos;, &apos;f&apos;) not null,</span><br><span class="line">   key(last_name, first_name, dob)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p>
<p>Create a b-tree index by two name and birthday.</p>
<p><strong>B-Tree structure’s data is Sequential</strong></p>
<h2 id="Use-B-Tree-index"><a href="#Use-B-Tree-index" class="headerlink" title="Use B-Tree index"></a>Use B-Tree index</h2><blockquote>
<p>First of all query’s sequential is required<br>    last_name -&gt; first_name -&gt; birthday<br>    if miss a key then the later condition is invalid.</p>
</blockquote>
<ol>
<li><strong>Match the full value</strong> to all fields specific val.</li>
<li><strong>Match a leftmost prefix</strong> search the the man who’s last_name is ‘Leon’</li>
<li><strong>Match a column prefix</strong> last_name like ‘L%’<br>ps. the follow condition will be useless</li>
<li><strong>Match a range of values</strong><br>date_format(birthday, ‘%Y-%m-%d’) &gt; ‘2017-04-29’ and<br>date_format(birthday, ‘%Y-%m-%d’) &lt; ‘2017-05-01’</li>
<li><strong>Match one part exactly and match a range on another part</strong><br>last_name=’Leon’ and first_name like ‘L%’</li>
</ol>
<h2 id="Rule"><a href="#Rule" class="headerlink" title="Rule"></a>Rule</h2><ol>
<li>Sql condition in B-Tree index must use the first field in index first.</li>
<li>Sequential search condition, jump is useless(follower)</li>
<li>Put range search condtion to the end of where<br>the follow index field is invalid</li>
</ol>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>structure</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>High performance strategy in mysql</title>
    <url>/2017/05/01/High-performance-strategy-in-mysql/</url>
    <content><![CDATA[<h2 id="Clustered-Indexes"><a href="#Clustered-Indexes" class="headerlink" title="Clustered Indexes"></a>Clustered Indexes</h2><p><code>solidDB</code> and <code>innoDB</code> support clustered index.<br>It make sure the similar key’s row’s physical position similar too.<br>The field type ‘char’ or ‘varchar’ is not suitable for building clustered index.<br>Especially the field storage random char. It will lead to alot of movements.</p>
<p><code>innoDB</code> will build a clustered index on primary key<br>If it not exists, system will replace it by a hidden primary key.</p>
<p>Ordinary speak, DBMS will use clustered index to storage data<br>Second level index is base on it.</p>
<h2 id="Structure"><a href="#Structure" class="headerlink" title="Structure"></a>Structure</h2><h3 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a>MyISAM</h3><p><img src="/2017/05/01/High-performance-strategy-in-mysql/mysql02-09.JPG" alt><br>Contain row’s num and row’s value, it’s no difference with orther index.<br>It’s only a primary key named PRIMARY index(clustered index).</p>
<h3 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h3><p><img src="/2017/05/01/High-performance-strategy-in-mysql/mysql02-08.JPG" alt></p>
<ul>
<li><code>TID</code> transaction id (transaction)</li>
<li><code>RP</code> rollback pointer (MVCC)</li>
</ul>
<p>InnoDB’s secondary index have no need to maintain index<br>when base data moved or data splited.</p>
<p>Because secondary storage <strong>primary key</strong> not <strong>row num</strong></p>
<h3 id="Difference"><a href="#Difference" class="headerlink" title="Difference"></a>Difference</h3><p><img src="/2017/05/01/High-performance-strategy-in-mysql/mysql02-10.JPG" alt></p>
<h2 id="Balance"><a href="#Balance" class="headerlink" title="Balance"></a>Balance</h2><div class="table-container">
<table>
<thead>
<tr>
<th>Describe</th>
<th>Clustered</th>
<th>Not clustered</th>
</tr>
</thead>
<tbody>
<tr>
<td>Offen group and sort</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>Return range data</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>very little differ values</td>
<td>no</td>
<td>no</td>
</tr>
<tr>
<td>little differ values</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>big differ values</td>
<td>no</td>
<td>yes</td>
</tr>
<tr>
<td>offen update field</td>
<td>no</td>
<td>yes</td>
</tr>
<tr>
<td>foreign key field</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>primary key field</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>Offen modify index field</td>
<td>no</td>
<td>yes</td>
</tr>
</tbody>
</table>
</div>
<h3 id="when-not"><a href="#when-not" class="headerlink" title="when not"></a>when not</h3><ul>
<li>query quantity is very low.<br>If build a index, it will affect performance alot.</li>
<li>table data is very low, should not build as will.</li>
<li><code>text</code> <code>image</code> <code>bit</code> <code>blob</code>, should not build.</li>
<li><code>INSERT</code> <code>DELETE</code> <code>UPDATE</code>, much more than <code>SELECT</code> operation.<br>They are mutex operation to each other.</li>
</ul>
<h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><ul>
<li>build index on field always used to search/ link/ group.</li>
<li><p>don’t calculate on index field behind <code>where</code>.</p>
</li>
<li><p>build and maintain will take time<br>and it’s proportional with table data quantity.</p>
</li>
<li>index file will obtain physical space.</li>
<li>when <code>INSERT</code> <code>DELETE</code> <code>UPDATE</code> it needs to dynamic maintain index.</li>
</ul>
<p>If <code>CRUD</code> is balance in field search, the dynamic cost maybe worth while.<br>Because the other three except <code>Retrieve</code>, need to find operation target as will.</p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>NIO in java</title>
    <url>/2017/05/02/NIO-in-java/</url>
    <content><![CDATA[<h2 id="Introduce"><a href="#Introduce" class="headerlink" title="Introduce"></a>Introduce</h2><p><code>NIO</code> is make up for <code>IO</code>‘s lack</p>
<p>NIO have some new characters:<br>no block i/o, selector, buffer and channel<br><code>Channel</code> <code>Buffer</code> <code>Selector</code> is the main force.</p>
<ul>
<li><p><code>Channel</code> like Stream in traditional style java.</p>
</li>
<li><p><code>Buffer</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ByteBuffer    byte</span><br><span class="line">CharBuffer    char</span><br><span class="line">ShortBuffer   short</span><br><span class="line">IntBuffer     int</span><br><span class="line">LongBuffer    long</span><br><span class="line">FloatBuffer   float</span><br><span class="line">DoubleBuffer  double</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>Selector</code><br>Used to listen mulity channel’s <strong>event</strong>.<br>In traditional tyle when i/o unblock, we know we can i/o.<br>But use NIO, we need this equipment to manage i/o.</p>
</li>
</ul>
<h2 id="The-difference"><a href="#The-difference" class="headerlink" title="The difference"></a>The difference</h2><ol>
<li>IO is design for <strong>stream</strong>, NIO is design for <strong>block</strong>.<br>IO stream operate a byte every time, it lead to low efficiency.</li>
</ol>
<p>NIO operate a type of data block, it’s <em>bigger</em> than a byte[maybe].</p>
<ol>
<li>IO is block, NIO is unblock<br>Traditional IO when a thread call <code>read()</code> or <code>write()</code>,<br>thread need to waiting for <strong>data operation finished</strong>.<br>During this time thread will be hang on? nothing it can be done.</li>
</ol>
<p>To NIO when a thread send a request, but no response.<br>It’s a free, it can do any other tasks, until <strong>selector call</strong>.</p>
<h2 id="Scene"><a href="#Scene" class="headerlink" title="Scene"></a>Scene</h2><p>NIO’s disadvantage is it need to check buffer space everytime.<br>Because it design for block, if block is not completed,<br>there is no meaning to operate data.</p>
<p>NIO fit for thousands short link and <strong>little data</strong>.<br>IO fit for few long link and <strong>big data</strong>.</p>
<h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Three guys got a task, to drink <strong>50L water</strong>.<br>They all got a 100ml break. Have three water taps, it has <strong>no valve</strong>,<br><strong>occasionally</strong> 100ml water flow out.</p>
<p>So these three poor guys have to <strong>wait until</strong> drink 500 cup of break.</p>
<h3 id="Fantasy"><a href="#Fantasy" class="headerlink" title="Fantasy"></a>Fantasy</h3><p>But if they have a plumber to <strong>manage</strong> these water tap, thing wil be big different.</p>
<ul>
<li>First he can prepare three <strong>big bucket</strong> maybe 1L capacity each.</li>
<li>Second he can install a <strong>valve</strong> in each tap.</li>
<li>Third every guy told plumber their <strong>phone number</strong>,<br>when bucket filled with water, plumber call them to come, and close valve.</li>
</ul>
<p>Use this mechanism guy need to come and drink <strong>5 times bucket</strong>.</p>
<h3 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h3><p>If the water tap’s water <strong>flow</strong> is very strong,<br>  then this mechanism is not good.<br>Because plumber’s manage tap <strong>needs time</strong>, and it’s buckets <strong>needs space</strong>.<br>So in this condition, these guys waiting for break<br>  be filled with water and drink is <strong>a better chooice</strong>.</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title>How to leak memory in java</title>
    <url>/2017/05/03/How-to-leak-memory-in-java/</url>
    <content><![CDATA[<h2 id="Create-some-ghost-memory"><a href="#Create-some-ghost-memory" class="headerlink" title="Create some ghost memory"></a>Create some ghost memory</h2><ol>
<li>Create a long exist thread or thread pool.</li>
<li>Load a class through <code>ClassLoader</code>.</li>
<li>Distribute a <strong>big block memory</strong> to a static strong reference.<br>Then use <code>ThreadLocal</code> storage [thread reference?] or [object reference?]</li>
<li>Thread clean selfdefine class or <strong>load this class’s loader</strong>.</li>
<li>repeat these steps.</li>
</ol>
<h2 id="Some-mistake"><a href="#Some-mistake" class="headerlink" title="Some mistake"></a>Some mistake</h2><ol>
<li><p>static reference hold container.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Holder &#123;</span><br><span class="line">    static final List list = new ArrayList(100);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>call long String’s <code>intern()</code> method</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">String src = &quot;......&quot;;</span><br><span class="line">str.intern();</span><br></pre></td></tr></table></figure>
</li>
<li><p>forgot release resource</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">try &#123;</span><br><span class="line">    BufferedReader br = new BufferedReader(new FileReader(&quot;...&quot;));</span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">    e.printStacktrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>forgot close door</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">try &#123;</span><br><span class="line">    Connection conn = ConnectionFactory.getConnection();</span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">    e.printStacktrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>GC can’t reach like <code>native</code> true memory</p>
</li>
<li><p>Web container in application context<br><code>getServletContext().setAttribute(&quot;rubbish&quot;, map);</code><br>no <strong>reboot</strong> and not <strong>remove rubbish</strong>.</p>
</li>
<li><p>Web container in session context<br><code>session.setAttribute(&quot;rubbish&quot;, map);</code><br>no <strong>reboot</strong> / not <strong>invalid</strong> and not <strong>remove rubbish</strong>.</p>
</li>
<li><p>Not right JVM option<br><strong>IBM JDK</strong> <code>noclassgc</code> option, it stop no use class’s garbage collect.</p>
</li>
</ol>
<h2 id="Bean-not-define-properly"><a href="#Bean-not-define-properly" class="headerlink" title="Bean not define properly"></a>Bean not define properly</h2><p>If HashSet’s element object have <strong>no standard implement</strong><br>  or no implement of <code>equals()</code> and <code>hashCode()</code>.<br>Collection can’t <strong>ignore repeated element</strong>.</p>
<h2 id="Thread-relevant"><a href="#Thread-relevant" class="headerlink" title="Thread relevant"></a>Thread relevant</h2><ol>
<li>Create but not start thread.</li>
<li><p>Thread inherited <code>ContextClassLoader</code> or <code>ccessControlContext</code>,<br>and use <code>ThreadGroup</code> or <code>InheritedThreadLocal</code>.<br>They affect <code>java.util.concurrent.Executor</code></p>
</li>
<li><p>Not use <code>ThreadLocal</code> <strong>as cache</strong> unless truly necessary.<br>If thread not in it’s life cycle, load <code>ContextClassLoader</code>, gc can’t reach it.</p>
</li>
<li><p>When <code>ThreadGroup</code> have no subThread<br>but have <code>sub ThreadGroup</code> call <code>ThreadGroup.destroy()</code>.<br>It lead to this <code>sub ThreadGroup</code> <strong>can’t remove</strong> from it’s <code>parent ThreadGroup</code>.</p>
</li>
<li><p>use WeakHashMap, value hold key reference..</p>
</li>
</ol>
]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title>Difference between redis and memcached</title>
    <url>/2017/05/07/Difference-between-redis-and-memcached/</url>
    <content><![CDATA[<h2 id="IO-Model"><a href="#IO-Model" class="headerlink" title="IO Model"></a>IO Model</h2><p>Memcached is <strong>multi-thread</strong>, not block reuse IO net model.<br>it has main listen thread main worker sub thread.<br>‘leader’ listened net connnect, dispatch to worker thread.<br>In network layer, memcached use libevent package event.<br>But this bring concurrency and lock problem, like <code>stats</code> command.</p>
<p>Redis reuse <strong>single thread</strong> IO model, it’s self package a AeEvent event framework.<br>It implements <code>epoll</code> <code>kqueue</code> <code>select</code> event,<br>for simple IO operation, single thread can reach the top speed.<br>But for some calc operation, this affect global throughput alot.</p>
<h2 id="Memory-manage"><a href="#Memory-manage" class="headerlink" title="Memory manage"></a>Memory manage</h2><p>Memcached use prepare way to manage memory.<br>In this way memory pool can avoid the cost in apply and release memory.</p>
<p>Redis use real-time way to manage memory.</p>
<h2 id="Data-consistency"><a href="#Data-consistency" class="headerlink" title="Data consistency"></a>Data consistency</h2><p>Memcached provide <code>cas</code> command, it can make sure data consistency.</p>
<p>Redis has no <code>cas</code> command, but it provide transaction function.<br>It make sure series of commands’ <strong>atomicity</strong>, it wouldn’t be interrupted.</p>
<h2 id="Storage-way"><a href="#Storage-way" class="headerlink" title="Storage way"></a>Storage way</h2><p>Memcached only support <code>key-value</code> storage,<br>not support enumerate / persistence/ copy and so on function.</p>
<p>Redis support except <code>key-value</code> way, but <code>list</code> <code>set</code> <code>sorted</code> <code>set</code> <code>hash</code>.<br>In other hand, redis support data persistence, copy and so on function.</p>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><ol>
<li><p>When data in-memory use Redis is better.</p>
</li>
<li><p>Redis in alot of place play a role in replace Memcached.</p>
</li>
<li><p>When need other data structure, Redis is better.</p>
</li>
<li><p>When storage data can’t be remove, Redis is better.</p>
</li>
</ol>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>difference</tag>
        <tag>redis</tag>
        <tag>memcached</tag>
      </tags>
  </entry>
  <entry>
    <title>How to import big out resource data</title>
    <url>/2017/05/08/How-to-import-big-out-resource-data/</url>
    <content><![CDATA[<p>For example, when a sheet have about 1 million record need import in to database.<br>How to do this.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">insert into zoo_sea (id, name, age, birthday, status)</span><br><span class="line">  select 1, &apos;dog&apos;, &apos;2017-05-01&apos;, 1 from dual</span><br><span class="line">union all select 2, &apos;dog&apos;, &apos;2017-05-02&apos;, 2 from dual</span><br><span class="line">union all select 3, &apos;dog&apos;, &apos;2017-05-03&apos;, 1 from dual</span><br><span class="line">union all select 4, &apos;dog&apos;, &apos;2017-05-04&apos;, 3 from dual</span><br><span class="line">union all select 5, &apos;dog&apos;, &apos;2017-05-05&apos;, 2 from dual</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>make 1 million data into 10000 sql command, insert can finish with in 20 minutes.</p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
  </entry>
  <entry>
    <title>ORA-00257</title>
    <url>/2017/05/08/ORA-00257/</url>
    <content><![CDATA[<p><code>ORA-00257: archiver error. Connect internal only, until freed</code></p>
<ol>
<li><p>login in <code>sys</code><br><code>sqlplus sys/pass@tt as sysdba</code></p>
</li>
<li><p>find <code>archiv log</code> position<br><code>SQL&gt; show parameter log_archive_dest;</code></p>
</li>
<li><p>if value is null, check directory<br><code>SQL&gt; archive log list;</code></p>
</li>
<li><p>check <code>flash recovery area</code> use condition<br><code>SQL&gt; select * from V$FLASH_RECOVERY_AREA_USAGE;</code></p>
</li>
<li><p>find recovery directory<br><code>SQL&gt; show parameter recover;</code></p>
</li>
<li><p>remove log file in no use.<br>caution: reserver file remain in time.</p>
</li>
<li><p>rman maintain<br><code>rman target sys/pass</code></p>
</li>
<li><p>check archivelog in no use<br><code>RMAN&gt; crosscheck archivelog all;</code></p>
</li>
<li><p>delete expired file in db<br><code>RMAN&gt; delete expired archivelog all;</code><br><code>RMAN&gt; delete archivelog until time &#39;sysdate-1&#39;;</code></p>
</li>
<li><p>check again<br><code>SQL&gt; select * from V$FLASH_RECOVERY_AREA_USAGE;</code></p>
</li>
</ol>
<h3 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h3><p>if <code>archive log</code> model can’t startup,<br>recover to <code>noarchive log</code> startup then shutdown.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">shutdown immediate;</span><br><span class="line">startup mount;</span><br><span class="line">alter database noarchivelog;</span><br><span class="line">alter database open;</span><br><span class="line">shutdown immediate;</span><br></pre></td></tr></table></figure>
<p>turn to <code>archive log</code> again</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">shutdown immediate;</span><br><span class="line">startup mount;</span><br><span class="line">show parameter log_archive_dest;</span><br><span class="line">alter database archivelog;</span><br><span class="line">archive log list;</span><br><span class="line">alter database open;</span><br></pre></td></tr></table></figure>
<p>If still can’t modify startup.<br>Try to delete more log or expand space.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## check log group</span><br><span class="line">SQL&gt; select group#,sequence# from v$log;</span><br><span class="line"></span><br><span class="line">## clean more space</span><br><span class="line">SQL&gt; alter database clear unarchived logfile group 1;</span><br><span class="line">alter database open;</span><br><span class="line"></span><br><span class="line">## change storage position</span><br><span class="line">select name from v$datafile;</span><br><span class="line">alter system set log_archive_dest=&apos;/opt/app/oracle/oradata/usagedb/arch&apos; scope=spfile</span><br><span class="line"></span><br><span class="line">## expand space</span><br><span class="line">SQL&gt; alter system set db_recovery_file_dest_size=3G scope=both;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>ORA-12154</title>
    <url>/2017/05/08/ORA-12154/</url>
    <content><![CDATA[<p>Oracle is different with Mysql or sqlServer, it need client connect to DB server. But mysql or sqlServer can connect DB server with specific ip connect.</p>
<h3 id="Install-oracle-instance-client"><a href="#Install-oracle-instance-client" class="headerlink" title="Install oracle instance client"></a>Install oracle instance client</h3><p>open <code>Net Manager</code> <code>Oracle Net Config</code> <code>Local</code> <code>Service Naming</code><br>click <code>add</code> config new net service.</p>
<p>It actually add a config in this file:<br><code>E:\Oracle\product\10.2.0\client_1\NETWORK\ADMIN\tnsnames.ora</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">ORCL =</span><br><span class="line">  (DESCRIPTION =</span><br><span class="line">    (ADDRESS_LIST =</span><br><span class="line">      (ADDRESS = (PROTOCOL = TCP)(HOST = 127.0.0.1)(PORT = 1521))</span><br><span class="line">    )</span><br><span class="line">    (CONNECT_DATA =</span><br><span class="line">      (SERVICE_NAME = ORCL)</span><br><span class="line">    )</span><br><span class="line">  )</span><br></pre></td></tr></table></figure>
<h3 id="Problem-1"><a href="#Problem-1" class="headerlink" title="Problem 1"></a>Problem 1</h3><p>If install server and client in one machine, server directory will have same config file.</p>
<p><code>D:\Oracle\product\10.2.0\db_1\NETWORK\ADMIN\tnsnames.ora</code></p>
<p>So when config done <code>Net Manager</code> connnet to oracle, <code>ORA-12154</code> may happen.<br>Then you should doubt, which config PL/SQL use.<br>In this time use <code>tnsping</code> command.</p>
<ol>
<li>copy config file content, make two file synchronized.</li>
<li>move path position, put client before db service.</li>
</ol>
<p>This problem coursed by <strong>install sequence</strong><br>If <strong>install DB service first</strong>, Client next, then this problem will not happen**</p>
<h3 id="Problem-2"><a href="#Problem-2" class="headerlink" title="Problem 2"></a>Problem 2</h3><p>If PL/SQL’s insatll directory have <code>()</code> like 64bit system <code>Program Files (x86)</code>,<br>then no matter how you adjust config, it always alert <code>ORA-12154</code>.<br>So check software’s <strong>insatll path</strong> can avoid this problem.</p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>Difference between ibatis and mybatis</title>
    <url>/2017/05/09/Difference-between-ibatis-and-mybatis/</url>
    <content><![CDATA[<p>ibatis3.x change name to mybatis.</p>
<h3 id="Object-relation-mapping-optimize"><a href="#Object-relation-mapping-optimize" class="headerlink" title="Object relation mapping optimize"></a>Object relation mapping optimize</h3><p>mybatis could package <code>N+1</code> query problem, in <code>&lt;association&gt;</code> and <code>&lt;collection&gt;</code><br>ibatis2 use <code>nest query</code> is a brute method, we can package in DAO or service as will.</p>
<p>But mybatis <code>N+1</code> query not support paging query.<br>May be 1 to many is difficult to implements in framework,<br>and the number you want can’t be predict.</p>
<h3 id="Mybatis-implements-interface-binding"><a href="#Mybatis-implements-interface-binding" class="headerlink" title="Mybatis implements interface binding"></a>Mybatis implements interface binding</h3><p>In ibatis2.x, we need to write<br>which xml mapping file is the DAO implements class binding.</p>
<p>In mybatis DAO interface’s name automatically binding<br>implements with xml file.</p>
<p>ps. although mybatis support annotation way config DAO,<br>but it loose flexibility, and invade code too much.</p>
<h3 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h3><h4 id="In-config"><a href="#In-config" class="headerlink" title="In config"></a>In config</h4><ol>
<li>dtd restraint file is different.</li>
<li>ibatis root element is <code>sqlMapConfig</code>, mybatis is <code>configuration</code></li>
<li>global setting properties is different.</li>
<li>ibatis use <code>sqlMap</code>，mybatis use <code>mappers</code>.</li>
</ol>
<h4 id="In-mapping-table"><a href="#In-mapping-table" class="headerlink" title="In mapping table"></a>In mapping table</h4><ol>
<li><p>in ibatis namespace is not necessary, and has no meaning.<br>in mybatis it mean file’s corresponding DAO interface.</p>
</li>
<li><p>ibatis has <code>resultMap</code> <code>resultClass</code> two return types<br><code>resultMap</code> mean self define class, <code>resultClass</code> nean java class.<br>mybatis union these too <code>resultType</code>.</p>
</li>
<li><p>ibatis use <code>parameterClass</code>, mybatis use <code>parameterType</code></p>
</li>
<li><p>parameter difference<br>mybatis use <code>OGNL</code> expression.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># ibatis</span><br><span class="line">WHERE ID = #id:VARCHAR#</span><br><span class="line"></span><br><span class="line"># mybatis</span><br><span class="line">where ID = #&#123;id,jdbcType=VARCHAR&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="CLR"><a href="#CLR" class="headerlink" title="CLR"></a>CLR</h4><p>ibatis use <code>&lt;procedure&gt;</code> tag call precedure process.<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parameterMap</span> <span class="attr">id</span>=<span class="string">"reduceParameters"</span> <span class="attr">class</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parameter</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">jdbcType</span>=<span class="string">"INTEGER"</span> <span class="attr">javaType</span>=<span class="string">"java.lang.Integer"</span> <span class="attr">mode</span>=<span class="string">"IN"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parameter</span> <span class="attr">property</span>=<span class="string">"firstName"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> <span class="attr">javaType</span>=<span class="string">"java.lang.String"</span> <span class="attr">mode</span>=<span class="string">"IN"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parameter</span> <span class="attr">property</span>=<span class="string">"lastName"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> <span class="attr">javaType</span>=<span class="string">"java.lang.String"</span> <span class="attr">mode</span>=<span class="string">"IN"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parameterMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">procedure</span> <span class="attr">id</span>=<span class="string">"reduceGroupNumber"</span> <span class="attr">parameterMap</span>=<span class="string">"reduceParameters"</span>&gt;</span></span><br><span class="line">&#123;call reduce_group_number (?, ?, ?)&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">procedure</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p> In mybatis <code>&lt;proccedure&gt;</code> has been removed,<br> <code>&lt;select&gt;</code> <code>&lt;insert&gt;</code> <code>&lt;update&gt;</code> replaced.</p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"reduceGroupNumber"</span> <span class="attr">parameterMap</span>=<span class="string">"reduceParameters"</span> <span class="attr">statementType</span>=<span class="string">"CALLABLE"</span>&gt;</span></span><br><span class="line">&#123; ? = call reduce_group_number (?,?,?)&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>statementType=&quot;CALLABLE&quot;</code> show it’s not a usual sql request.</p>
<h4 id="Integration-difference"><a href="#Integration-difference" class="headerlink" title="Integration difference"></a>Integration difference</h4><p>ibatis:<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlMapClient"</span> <span class="attr">class</span>=<span class="string">"org.springframework.orm.ibatis.SqlMapClientFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:sqlMap-config.xml"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>mybatis:<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:com/leon/core/config/mybatis-config.xml"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mapperLocations"</span> <span class="attr">value</span>=<span class="string">"classpath*:com/leon/**/*Mapper.xml"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<ol>
<li>implements machine from <code>SqlMapClient</code> to <code>SqlSessionFactory</code></li>
<li>class processor interface from <code>TypeHandlerCallback</code> to <code>TypeHandler</code></li>
<li><code>DataSourceFactory</code> move to <code>org.apache.ibatis.datasource</code> package</li>
</ol>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title>FIND_IN_SET(Var, Field)</title>
    <url>/2017/05/10/FIND-IN-SET-Var-Field/</url>
    <content><![CDATA[<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user_org`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">30</span>)  <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`organizations`</span> <span class="built_in">varchar</span>(<span class="number">60</span>)  <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> user_org (<span class="keyword">name</span>, organizations) <span class="keyword">values</span>(<span class="string">'Betty'</span>, <span class="string">'1001,1002,1003'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> user_org (<span class="keyword">name</span>, organizations) <span class="keyword">values</span>(<span class="string">'William'</span>, <span class="string">'1001,1002'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> user_org (<span class="keyword">name</span>, organizations) <span class="keyword">values</span>(<span class="string">'Thomas'</span>, <span class="string">'1002,1003'</span>);</span><br></pre></td></tr></table></figure>
<h3 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h3><p>User <code>find_in_set</code> function directly.<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> user_org <span class="keyword">where</span> find_in_set(<span class="string">'1003'</span>, organizations);</span><br></pre></td></tr></table></figure></p>
<h3 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h3><ol>
<li>Use <code>LIKE</code> key word:<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> user_org <span class="keyword">where</span> organizations <span class="keyword">like</span> <span class="string">'%1003%'</span>;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>this may mis match, if element length are not fixed.</p>
<ol>
<li>Create a function</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span></span><br><span class="line"><span class="keyword">FUNCTION</span> FIND_IN_SET(piv_str1 <span class="built_in">varchar2</span>, piv_str2 <span class="built_in">varchar2</span>, p_sep <span class="built_in">varchar2</span> := <span class="string">','</span>)</span><br><span class="line"><span class="keyword">RETURN</span> <span class="built_in">NUMBER</span> <span class="keyword">IS</span></span><br><span class="line">  l_idx       <span class="built_in">number</span>:=<span class="number">0</span>;      <span class="comment">-- 用于计算piv_str2中分隔符的位置</span></span><br><span class="line">  str         varchar2(500);  <span class="comment">-- 根据分隔符截取的子字符串</span></span><br><span class="line">  piv_str     varchar2(500) := piv_str2; <span class="comment">-- 将piv_str2赋值给piv_str</span></span><br><span class="line">  res         number:=0;      <span class="comment">-- 返回结果</span></span><br><span class="line">  res_place   number:=0;      <span class="comment">-- 原字符串在目标字符串中的位置</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="comment">-- 如果piv_str中没有分割符，直接判断piv_str1和piv_str是否相等，相等 res_place=1</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">instr</span>(piv_str, p_sep, <span class="number">1</span>) = <span class="number">0</span><span class="keyword">THEN</span></span><br><span class="line">   <span class="keyword">IF</span> piv_str = piv_str1 <span class="keyword">THEN</span></span><br><span class="line">      res_place:=<span class="number">1</span>;</span><br><span class="line">   <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">ELSE</span><br><span class="line"> <span class="comment">-- 循环按分隔符截取piv_str</span></span><br><span class="line">LOOP</span><br><span class="line">    l_idx := instr(piv_str,p_sep);</span><br><span class="line">    <span class="comment">--</span></span><br><span class="line">    res_place := res_place + 1;</span><br><span class="line">    <span class="comment">-- 当piv_str中还有分隔符时</span></span><br><span class="line">      IF l_idx &gt; 0THEN</span><br><span class="line">      <span class="comment">-- 截取第一个分隔符前的字段str</span></span><br><span class="line">         str:= substr(piv_str,1,l_idx-1);</span><br><span class="line">         <span class="comment">-- 判断 str 和piv_str1 是否相等，相等则结束循环判断</span></span><br><span class="line">         IF str = piv_str1 THEN</span><br><span class="line">           res:= res_place;</span><br><span class="line">           EXIT;</span><br><span class="line">         <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">        piv_str := substr(piv_str,l_idx+length(p_sep));</span><br><span class="line">      ELSE</span><br><span class="line">      <span class="comment">-- 当截取后的piv_str 中不存在分割符时，判断piv_str和piv_str1是否相等，相等 res=res_path</span></span><br><span class="line">        IF piv_str = piv_str1 THEN</span><br><span class="line">           res:= res_place;</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">        <span class="comment">-- no matter what jump out</span></span><br><span class="line">        EXIT;</span><br><span class="line">      <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"> <span class="keyword">END</span> <span class="keyword">LOOP</span>;</span><br><span class="line"> <span class="comment">-- stoped</span></span><br><span class="line"> <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"> res := res_place;</span><br><span class="line"> <span class="comment">-- return</span></span><br><span class="line"> RETURN res;</span><br><span class="line"><span class="keyword">END</span> FIND_IN_SET;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello Servlet</title>
    <url>/2017/05/11/Hello-Servlet/</url>
    <content><![CDATA[<h3 id="Create-structure"><a href="#Create-structure" class="headerlink" title="Create structure:"></a>Create structure:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── pom.xml</span><br><span class="line">├── src/</span><br><span class="line">│   ├── main/</span><br><span class="line">│   │   ├── com/</span><br><span class="line">│   │   │   └── leon/</span><br><span class="line">│   │   │       └── Hello.java</span><br><span class="line">│   │   └── resources/</span><br><span class="line">│   └── test/</span><br><span class="line">│       ├── java/</span><br><span class="line">│       └── resources/</span><br><span class="line">└── web/</span><br><span class="line">    ├── WEB-INF/</span><br><span class="line">    │   └── web.xml</span><br><span class="line">    └── hello.jsp</span><br></pre></td></tr></table></figure>
<h3 id="pom-xml-web-xml"><a href="#pom-xml-web-xml" class="headerlink" title="pom.xml web.xml"></a>pom.xml web.xml</h3><p>add dependency</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.leon<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>hello Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.apache.org<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>add app config</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;web-app xmlns=&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span><br><span class="line">         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;</span><br><span class="line">         version=&quot;3.1&quot;&gt;</span><br><span class="line">&lt;/web-app&gt;</span><br></pre></td></tr></table></figure>
<h3 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h3><p>container action</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leon;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"hello"</span>, urlPatterns = &#123;<span class="string">"/"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> <span class="keyword">extends</span> <span class="title">javax</span>.<span class="title">servlet</span>.<span class="title">http</span>.<span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.getWriter().print(<span class="string">"Hello World"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="IntelliJ-IDEA"><a href="#IntelliJ-IDEA" class="headerlink" title="IntelliJ IDEA"></a>IntelliJ IDEA</h3><ol>
<li>Open Module Setting</li>
<li>Set Project SDK/ Product/ Artifact direcotry</li>
<li>Set Module <strong>resource folder</strong>, compile dependencies.</li>
<li>Set Facets/ Artifact</li>
</ol>
<h3 id="test"><a href="#test" class="headerlink" title="test"></a>test</h3><p><a href="http://localhost:8080/" target="_blank" rel="noopener">http://localhost:8080/</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>first</tag>
      </tags>
  </entry>
  <entry>
    <title>Zookeeper Example</title>
    <url>/2017/05/13/Zookeeper-Example/</url>
    <content><![CDATA[<p><a href="https://zookeeper.apache.org/doc/r3.5.2-alpha/javaExample.html" target="_blank" rel="noopener">https://zookeeper.apache.org/doc/r3.5.2-alpha/javaExample.html</a></p>
<h3 id="Executor"><a href="#Executor" class="headerlink" title="Executor"></a>Executor</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Executor</span></span></span><br><span class="line"><span class="class">    <span class="keyword">implements</span> <span class="title">Watcher</span>, <span class="title">Runnable</span>,</span></span><br><span class="line"><span class="class">        <span class="title">DataMonitor</span>.<span class="title">DataMonitorListener</span></span></span><br></pre></td></tr></table></figure>
<p>Declare class first, implements Zookeeper <code>Watcher</code><br>, thread Runnable and DataMonitor’s inner interface Listener.</p>
<hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">new</span> Executor(hostPort, znode, filename, exec).run();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Arguments sequence is</p>
<ol>
<li>host:port</li>
<li>znode path</li>
<li>process output file path</li>
<li>process command array</li>
</ol>
<hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Executor</span><span class="params">(String hostPort, String znode, String filename,</span></span></span><br><span class="line"><span class="function"><span class="params">            String exec[])</span> <span class="keyword">throws</span> KeeperException, IOException </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.filename = filename;</span><br><span class="line">    <span class="keyword">this</span>.exec = exec;</span><br><span class="line">    zk = <span class="keyword">new</span> ZooKeeper(hostPort, <span class="number">3000</span>, <span class="keyword">this</span>);</span><br><span class="line">    dm = <span class="keyword">new</span> DataMonitor(zk, znode, <span class="keyword">null</span>, <span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In constuctor, <code>Executor</code> use it’s Object self as a parameter.<br>ZooKeeper need a <code>Watch</code> in third parameter, it triger<br>Executor’s implements to triger <code>Monitor</code> again.</p>
<p>DataMonitor need a <code>DataMonitorListener</code> to know what<br>operation need to notify when event happen.</p>
<hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span> (!dm.dead) &#123;</span><br><span class="line">                wait();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>It’s Runnable implements.<br>When <code>Executor</code> be created and run in main, it check monitor’s status.<br>When first initiated, monitor dead should in false, main thread will wait for zookeeper client to wake it up.</p>
<hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">"Starting child"</span>);</span><br><span class="line">    child = Runtime.getRuntime().exec(exec);</span><br><span class="line">    <span class="keyword">new</span> StreamWriter(child.getInputStream(), System.out);</span><br><span class="line">    <span class="keyword">new</span> StreamWriter(child.getErrorStream(), System.err);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>local process executed here, it’s output will be write into file path.</p>
<hr>
<p>feedbackTarget.sh<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">"hello zookeeper"</span> &gt;&amp;1</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">"hello error"</span> &gt;&amp;2</span><br><span class="line">	sleep 3s</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure></p>
<p><code>192.168.3.11:2181 /key ./example/leon sh ./example/feedbackTarget.sh</code></p>
<h3 id="DataMonitor"><a href="#DataMonitor" class="headerlink" title="DataMonitor"></a>DataMonitor</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class DataMonitor implements Watcher, StatCallback</span><br></pre></td></tr></table></figure>
<p>implements <code>Watcher</code> as a watcher, but not use as watcher.<br>implements <code>StatCallback</code>, zookeeper client should callback this monitor when node status changed.</p>
<hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">process</span><span class="params">(WatchedEvent event)</span> </span>&#123;</span><br><span class="line">    String path = event.getPath();</span><br><span class="line">    <span class="keyword">if</span> (event.getType() == Event.EventType.None) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (event.getState()) &#123;</span><br><span class="line">        <span class="keyword">case</span> SyncConnected:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> Expired:</span><br><span class="line">            dead = <span class="keyword">true</span>;</span><br><span class="line">            listener.closing(KeeperException.Code.SessionExpired);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (path != <span class="keyword">null</span> &amp;&amp; path.equals(znode)) &#123;</span><br><span class="line">            zk.exists(znode, <span class="keyword">true</span>, <span class="keyword">this</span>, <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (chainedWatcher != <span class="keyword">null</span>) &#123;</span><br><span class="line">        chainedWatcher.process(event);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Monitor feedback what it seen to the listener,<br>and register the next chainedWatcher if exitst.</p>
<hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">processResult</span><span class="params">(<span class="keyword">int</span> rc, String path, Object ctx, Stat stat)</span> </span>&#123;</span><br><span class="line">  ...</span><br><span class="line">  b = zk.getData(znode, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">  ...</span><br><span class="line">  listener.exists(b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Put zookeeper client’s callback to executor.</p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>first</tag>
      </tags>
  </entry>
  <entry>
    <title>zookeeper-3.5.2-alpha</title>
    <url>/2017/05/13/zookeeper-3-5-2-alpha/</url>
    <content><![CDATA[<h3 id="Decompression"><a href="#Decompression" class="headerlink" title="Decompression"></a>Decompression</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -xvf zookeeper-3.5.2-alpha.tar.gz</span><br><span class="line">cp zoo_sample.cfg zoo.cfg</span><br><span class="line"></span><br><span class="line">vim zoo.cfg</span><br><span class="line"># modify config</span><br><span class="line">admin.serverPort=8081</span><br><span class="line">dataDir=/home/xxx/zookeeper-3.5.2-alpha/data  </span><br><span class="line"></span><br><span class="line"># check java version</span><br><span class="line">echo $JAVA_HOME</span><br><span class="line">java -version</span><br></pre></td></tr></table></figure>
<h3 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./zkServer.sh start</span><br><span class="line"># check</span><br><span class="line">ps -ef|grep zookeeper</span><br><span class="line"></span><br><span class="line"># if no progress</span><br><span class="line">./zkServer.sh start-foreground</span><br><span class="line"></span><br><span class="line"># shell client</span><br><span class="line">./zkCli.sh</span><br><span class="line">...</span><br><span class="line">[zk: localhost:2181(CONNECTED) 0] create /key &quot;hello zookeeper&quot;</span><br><span class="line">Created /key</span><br><span class="line">[zk: localhost:2181(CONNECTED) 1] quit</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>hello</tag>
      </tags>
  </entry>
  <entry>
    <title>How to close port in windows</title>
    <url>/2017/05/14/How-to-close-port-in-windows/</url>
    <content><![CDATA[<h3 id="Control-port-in-linux"><a href="#Control-port-in-linux" class="headerlink" title="Control port in linux"></a>Control port in linux</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># status</span><br><span class="line">netstat -anp</span><br><span class="line"></span><br><span class="line"># close</span><br><span class="line">iptables -A INPUT -p tcp --drop 8080 -j DROP</span><br><span class="line">iptables -A OUTPUT -p tcp --dport 8080 -j DROP</span><br><span class="line"></span><br><span class="line"># open</span><br><span class="line">iptables -A INPUT -ptcp --dport 8080 -j ACCEPT</span><br></pre></td></tr></table></figure>
<h3 id="Control-port-in-windows"><a href="#Control-port-in-windows" class="headerlink" title="Control port in windows"></a>Control port in windows</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># status</span><br><span class="line">netstat -ano</span><br><span class="line"></span><br><span class="line"># find program name</span><br><span class="line">tasklist|findstr &quot;3624&quot;</span><br><span class="line"></span><br><span class="line"># kill it</span><br><span class="line">taskkill /f /t /im Dandelion.exe</span><br></pre></td></tr></table></figure>
<ol>
<li><p>open <code>control-panel -&gt; manage-tool</code> open <code>local safety policy</code><br>choose <code>Ip safety policy</code> to create a new ip policy.</p>
</li>
<li><p>remove <code>use add guide</code>, click <code>add new rule</code>, then add a new filter.</p>
</li>
<li><p>edit filter properties, src is <code>any ip address</code>, target is <code>my id address</code>.<br>in <code>protocol</code> tab, <code>protocol type</code> choose <code>TCP</code>, <code>to this port</code> input <code>135</code>.</p>
</li>
<li>repeat <code>UDP</code> port in [135, 139, 445]<br><code>TCP</code> port in [135, 137, 139, 445, 593, 1025, 2745, 3127, 6129, 3389]</li>
<li>in new <code>rule</code> dialog, the <code>filter operation</code> choose <strong>forbidden</strong>.</li>
<li>confirm new <code>rule</code>, in <code>ip policy</code> right click <code>rule</code> choose <code>dispatch</code>.</li>
<li>restart computer.</li>
</ol>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
  </entry>
  <entry>
    <title>Java ClassLoader 1</title>
    <url>/2017/05/15/Java-ClassLoader-1/</url>
    <content><![CDATA[<h3 id="Class"><a href="#Class" class="headerlink" title="Class"></a>Class</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassLoader</span> </span>&#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> Class&lt;?&gt; defineClass(String name, <span class="keyword">byte</span>[] b, <span class="keyword">int</span> off, <span class="keyword">int</span> len)</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">public</span> Class&lt;?&gt; loadClass(String name) &#123;...&#125;</span><br><span class="line">  ...</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> ClassLoader <span class="title">getParent</span><span class="params">()</span> </span>&#123;...&#125;</span><br><span class="line">  ...</span><br><span class="line">  <span class="function"><span class="keyword">public</span> URL <span class="title">getResource</span><span class="params">(String name)</span> </span>&#123;...&#125;</span><br><span class="line">  ...</span><br><span class="line">  <span class="function"><span class="keyword">public</span> Enumeration&lt;URL&gt; <span class="title">getResources</span><span class="params">(String name)</span> </span>&#123;...&#125;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>Most important method is <code>loadClass(arg)</code> ,<br>it accept a class’s <strong>full name</strong>, and return it’s instance.</p>
</li>
<li><p><code>defineClass(arg)</code> accept a byte array, turn it into instance.<br>Usually, it <strong>load a file</strong> from disk, then pass file byte into JVM.<br>Instantiate Class into a instance through JVM’s(<strong>native method</strong>) define to Class.</p>
</li>
<li><code>getResource()</code> and <code>getResources</code> search URL from repository.<br>They have agent mechanism as well as loadClass, like:<br><code>defineClass(getResource(name).getBytes())</code></li>
</ul>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><p>Because Java <strong>late binding</strong> and <strong>explain</strong> character,<br>Classes’ will be load when it needed like<br>static method/ construct method or direct allocate in field.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">xxx</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    B b = <span class="keyword">new</span> B();</span><br><span class="line">    b.xxoo();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>They are same when <code>B</code> have default constructor.<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">B b = <span class="keyword">new</span> B();</span><br><span class="line"></span><br><span class="line">B b = Class.forName(<span class="string">"B"</span>, <span class="keyword">false</span>,</span><br><span class="line">    A<span class="class">.<span class="keyword">class</span>.<span class="title">getClassLoader</span>()).<span class="title">newInstance</span>()</span>;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title>Java ClassLoader 2</title>
    <url>/2017/05/16/Java-ClassLoader-2/</url>
    <content><![CDATA[<h3 id="Inheritance-system"><a href="#Inheritance-system" class="headerlink" title="Inheritance system"></a>Inheritance system</h3><p>When JVM start, <code>bookstrap</code> class loader will be loaded into java core.<br>like class in rt.jar.bookstrap is other ClassLoader’s parent,<br>it is the only loader has <strong>no parent</strong>.</p>
<p>Then the <code>extension</code> class loader, it’s parent is bookstrap,<br>it used to load class from java’s environment path java.ext.dir.</p>
<p>Third the most important class loader, the <code>system classpath</code><br>class loader, developer’s self define class.<br>It’s parent is extension, it load class from<br>java’s environment path <code>java.class.path</code>.<br>Path can be set in <code>-classpath</code> parameter in command.</p>
<h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><p>The system is not <code>Inheritance</code> but <code>Delegation</code><br>Most loader will find resource in it’s parents, if not find in local.<br>Actually it ensure the high level loader’s class<br>can be assign with lower level loader’s type.</p>
<p>The motivation of <code>Delegation</code> is avoid load same class multi times.<br>When in 1995, java be used in <code>Applet</code>.<br>At that time the network bandwidth has priority, so program load class<br>when class be used then load it. Model is load parent first.</p>
<p>But in this time java show it’s power in server part.<br>Server need loader follow <strong>reverse delegation priciple</strong>,<br>to load local class first, if can’t load class in parent.</p>
<h3 id="JavaEE-Delegation-model"><a href="#JavaEE-Delegation-model" class="headerlink" title="JavaEE Delegation model"></a>JavaEE Delegation model</h3><p>Tomcat class load sequence(delegation model)</p>
<ol>
<li>Bookstrap  @rt.jar</li>
<li>Extension  @lib/ext</li>
<li>System     @%catalina_home%/bin/bootstrap.jar</li>
<li>Common     @%catalina_home%/lib</li>
<li>Webapp     @WEB-INF/lib</li>
</ol>
<p>In tomcat default model,<br>try to load class in Bootstrap and Extension first.<br>If can’t load, try to load class in Webapp<br>If still can’t load, load in Common.</p>
<p>In Ali’s tomcat, it is in delegate model, so parent has priority.<br>So use Common loader first, then Webapp loader.</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title>ip2region file structure and principle</title>
    <url>/2017/05/16/ip2region-file-structure-and-principle/</url>
    <content><![CDATA[<p>ip2region - 最自由的ip地址查询库，ip到地区的映射库，提供Binary,B树和纯内存三种查询算法，妈妈再也不用担心我的ip地址定位。</p>
<p><strong>1. 99.9%准确率，定时更新：</strong></p>
<p>数据聚合了一些知名ip到地名查询提供商的数据，这些是他们官方的的准确率，经测试着实比纯真啥的准确多了。<br><br>每次聚合一下数据需要1-2天，会不定时更新。</p>
<p><strong>2. 标准化的数据格式：</strong></p>
<p>每条ip数据段都固定了格式：<em>城市Id|国家|区域|省份|城市|ISP</em></p>
<p>只有中国的数据精确到了城市，其他国家只能定位到国家，后前的选项全部是0，已经包含了全部你能查到的大大小小的国家。<br>（请忽略前面的城市Id，个人项目需求）</p>
<p><strong>3. 体积小：</strong></p>
<p>生成的数据库文件ip2region.db只有1.5M（1.2版本前是3.5M）</p>
<p><strong>4. 多查询客户端的支持，0.0x毫秒级别的查询</strong></p>
<p>已经集成的客户端有：java, php, c, python，nodejs，php扩展(支持linux, php5, php7版本已支持)，golang。</p>
<pre><code>提供了两种查询算法，响应时间如下：
客户端/binary算法/b-tree算法/Memory算法：
java/0.x毫秒/0.x毫秒/0.1x毫秒 (使用RandomAccessFile)
php/0.x毫秒/0.1x毫秒/0.1x毫秒
c/0.0x毫秒/0.0x毫秒/0.00x毫秒(b-tree算法基本稳定在0.02x毫秒级别)
python/0.x毫秒/0.1x毫秒/未知
</code></pre><p>任何客户端b-tree都比binary算法快，当然Memory算法固然是最快的！</p>
<p><strong>5. 测试程序：</strong><br>java:</p>
<pre><code>cd binding/java
ant all
java -jar ip2region-{version}.jar ./data/ip2region.db
</code></pre><p>php:</p>
<pre><code>php binding/php/testSearcher ./data/ip2region.db
</code></pre><p>c:</p>
<pre><code>cd binding/c/
gcc -g -O2 testSearcher.c ip2region.c
./a.out ../../data/ip2region.db
</code></pre><p>python:</p>
<pre><code>python binding/python/testSearcher ./data/ip2region.db
</code></pre><p>均会看到如下界面：</p>
<pre><code>initializing  B-tree ...
+----------------------------------+
| ip2region test script            |
| Author: chenxin619315@gmail.com  |
| Type &#39;quit&#39; to exit program      |
+----------------------------------+
p2region&gt;&gt; 101.105.35.57
2163|中国|华南|广东省|深圳市|鹏博士 in 0.02295 millseconds
</code></pre><p>输入ip地址开始测试，第一次会稍微有点慢，在运行命令后面接入binary,memory来尝试其他算法，建议使用b-tree算法，速度和并发需求的可以使用memory算法。</p>
<p>具体集成请参考不同客户端的测试源码。</p>
<p><strong>6. 如何生成ip2region.db文件</strong></p>
<p>从ip2region 1.2.2版本开始里面提交了一个dbMaker-{version}.jar的可以执行jar文件，用它来完成这个工作：</p>
<ul>
<li>1, 确保你安装好了java环境（不玩Java的童鞋就自己谷歌找找拉，临时用一用，几分钟的事情）</li>
<li>2, cd到ip2region的根目录，然后运行如下命令：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">java -jar dbMaker-&#123;version&#125;.jar -src 文本数据文件 -region 地域csv文件 [-dst 生成的ip2region.db文件的目录]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 文本数据文件：db文件的原始文本数据文件路径，自带的ip2region.db文件就是/data/ip.merge.txt生成而来的，你可以换成自己的或者更改/data/ip.merge.txt重新生成</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 地域csv文件：该文件目的是方便配置ip2region进行数据关系的存储，得到的数据包含一个city_id，这个直接使用/data/origin/global_region.csv文件即可</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ip2region.db文件的目录：是可选参数，没有指定的话会在当前目录生成一份./data/ip2region.db文件</span></span><br></pre></td></tr></table></figure>
<ul>
<li>3, 获取生成的ip2region.db文件覆盖原来的ip2region.db文件即可</li>
<li>4, 默认的ip2region.db文件生成命令:</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ip2region项目根目录</span><br><span class="line">java -jar dbMaker-1.2.2.jar -src ./data/ip.merge.txt ./data/global_region.csv</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 会看到一大片的输出</span></span><br></pre></td></tr></table></figure>
<ul>
<li>5, 数据库文件的结构和原理请阅读 @冬芽 的blog：<a href="http://dongyado.com/tools/2016/08/18/structure-of-ip2region-database-file/" target="_blank" rel="noopener">“ip2region数据库文件的结构和原理”</a></li>
</ul>
<h1 id="一-源数据如何存储到ip2region-db"><a href="#一-源数据如何存储到ip2region-db" class="headerlink" title="一. 源数据如何存储到ip2region.db"></a>一. 源数据如何存储到ip2region.db</h1><h2 id="1-源数据来源与结构"><a href="#1-源数据来源与结构" class="headerlink" title="1. 源数据来源与结构"></a>1. 源数据来源与结构</h2><p>ip2region 的ip数据来自纯真和淘宝的ip数据库，每次抓取完成之后会生成 ip.merge.txt， 再通过程序根据这个源文件生成ip2region.db 文件。</p>
<p>ip.merge.txt 中每一行对应一条完整记录，每一条记录由ip段和数据组成，格式如下：</p>
<p>0.0.0.0|0.255.255.255|未分配或者内网IP|0|0|0|0<br>1.0.0.0|1.0.0.255|澳大利亚|0|0|0|0<br>1.0.1.0|1.0.3.255|中国|华东|福建省|福州市|电信<br>1.0.4.0|1.0.7.255|澳大利亚|0|0|0|0<br>1.0.8.0|1.0.15.255|中国|华南|广东省|广州市|电信<br>1.0.16.0|1.0.31.255|日本|0|0|0|0<br>1.0.32.0|1.0.63.255|中国|华南|广东省|广州市|电信<br>1.0.64.0|1.0.127.255|日本|0|0|0|0<br>1.0.128.0|1.0.255.255|泰国|0|0|0|0<br>1.1.0.0|1.1.0.255|中国|华东|福建省|福州市|电信<br>从左到右分别表示： 起始ip,结束ip,国家，区域，省份，市，运营商。无数据区域默认为0。</p>
<p>最新的ip.merge.txt 有122474条记录，并且根据开始ip地址升序排列。</p>
<h2 id="2-如何生成ip2region-db"><a href="#2-如何生成ip2region-db" class="headerlink" title="2. 如何生成ip2region.db"></a>2. 如何生成ip2region.db</h2><p>给定一个ip，如何快速从ip.merge.txt中找到该ip所属记录？最简单的办法就是顺序遍历，当该ip在某条记录起始和结束ip之间时，即命中。</p>
<p>这是低效的做法，如何提高查询性能？用过mysql和其他数据库的的都知道，使用索引。所以ip2region.db使用了内建索引，直接将性能提升到0.0x毫秒级别。</p>
<p>根据ip.merge.txt，为所有数据生成一份索引，并和数据地址组成一个索引项(index block), 然后按起始ip升序排列组成索引，并存储到数据文件的末尾，最终生成的ip2region.db文件大小只有3.5M。</p>
<p>此时的数据库文件中的每一条索引都指向一条对应的数据，也就是说如</p>
<p>|中国|华南|广东省|广州市|电信<br>这样的数据在文件中被重复存储了很多次，再经过去重优化之后，ip2region.db只有1.5M了，此时把数据库文件全部读取到内存再查找都是非常可行的。</p>
<h1 id="二-ip2region-db-结构"><a href="#二-ip2region-db-结构" class="headerlink" title="二. ip2region.db 结构"></a>二. ip2region.db 结构</h1><p>生成 ip2region.db 的时候，首先会在首部预留 8 bytes 的SUPER BLOCK 和 8k 的 HEADER INDEX。</p>
<p>再根据ip.merge.txt，依据每一条记录的起始ip, 结束ip和数据，生成一个index block， 前四个字节存储起始ip, 中间四个字节存储结束ip, 后四个字节存储已经计算出的数据地址，并暂存到INDEX区。</p>
<p>当 INDEX 索引区和 DATA 数据区确定下来之后，再把 INDEX 的起始位置存储到 SUPER BLOCK 的前四个字节，结束位置存储到 SUPER BLOCK 的后四个字节。</p>
<p>再把 INDEX 分成大小为 4K 的索引分区，把每个分区起始位置的索引的起始ip和该索引的位置存入一个 header index block, 组成 HEADER INDEX 区域, 最后写入ip2region.db。</p>
<ul>
<li>SUPER BLOCK</li>
</ul>
<p>用来保存 INDEX 的起始地址和结束地址，first index ptr 指向INDEX起始位置的index block， last index ptr 指向最后一个index block的地址。这样查询的时候直接读取superblock 8个字节，就能快速获取 INDEX 索引区域的地址。</p>
<ul>
<li>HEADER INDEX</li>
</ul>
<p>HEADER INDEX 区是对 INDEX 区的二级索引， INDEX总长度除以 4K 就是 HEADER INDEX 的实际索引数。</p>
<p>该区域长度为8k, 由 8 bytes 的 header index block 组成。</p>
<p>header index block 前四个字节存储每个4K分区起始位置的index block 的起始ip值，后四个字节指向该index block的地址。</p>
<p>把HEADER INDEX 区定义为8k，可以通过一次磁盘读取读取整个HEADER INDEX 区，然后在内存中进行查询，查询的结果可以确定该ip在INDEX区的某个4k分区内，然后再根据地址一次读取4k index 到内存，再在内存中查询，从而减少磁盘读取的次数。</p>
<ul>
<li>DATA</li>
</ul>
<p>保存的数据，数据格式如下：</p>
<p>  2163|中国|华南|广东省|深圳市|鹏博士<br>分别表示 城市ip,国家，区域，省份，城市，运营商</p>
<ul>
<li>INDEX</li>
</ul>
<p>索引区域，索引元素为 index block (12 字节)， 分成三个部分，起始ip, 结束ip, 数据信息, 每一条 index block 对应 ip.merge.txt 中的一条记录。</p>
<p>数据信息：前一个字节保存数据长度， 后三个字节保存数据地址（DATA中）。</p>
<p>每个index block 表示一个ip段的索引。当指定ip 在某个 index block 的起始ip和结束ip中间，即表示命中索引。</p>
<p>再通过 index block 中的数据地址和数据长度，就能从ip2region.db读取对应的地址。</p>
<h1 id="三-搜索方法"><a href="#三-搜索方法" class="headerlink" title="三. 搜索方法"></a>三. 搜索方法</h1><h2 id="binary搜索"><a href="#binary搜索" class="headerlink" title="binary搜索"></a>binary搜索</h2><ul>
<li>把ip值通过ip2long方法转为长整型</li>
<li>通过 SUPER BLOCK 拿到INDEX的起始位置和结束位置</li>
<li>相减+1得出index block 总数</li>
<li>采用二分法直接求解，比较 index block 和当前ip的大小，即可找到该ip属于的 index block</li>
<li>拿到该 index block 的后面四个字节， 分别得到数据长度和数据地址</li>
<li>从数据地址读取拿到的所得长度的字节，即是搜索结果</li>
</ul>
<h2 id="b-tree-搜索"><a href="#b-tree-搜索" class="headerlink" title="b-tree 搜索"></a>b-tree 搜索</h2><ul>
<li>把ip值通过ip2long 转为长整型</li>
<li>使用二分法在 HEADER INDEX 中搜索，比较得到对应的 header index block</li>
<li>header index block 指向 INDEX 中的一个 4K 分区，所以直接把搜索范围降低到 4K</li>
<li>采用二分法在获取到的 4K 分区搜索，得到对应的 index block</li>
<li>拿到该 index block 的后面四个字节， 分别得到数据长度和数据地址</li>
<li>从数据地址读取拿到的所得长度的字节，即是搜索结果</li>
</ul>
]]></content>
      <categories>
        <category>db</category>
      </categories>
  </entry>
  <entry>
    <title>Java ClassLoader 3</title>
    <url>/2017/05/17/Java-ClassLoader-3/</url>
    <content><![CDATA[<h3 id="NoClassDefFoundError"><a href="#NoClassDefFoundError" class="headerlink" title="NoClassDefFoundError"></a>NoClassDefFoundError</h3><p>When JavaEE load big quantity package in develop environment,<br>mantain dependency will become hard.<br>Especially JavaEE have alot of ClassLoader now.</p>
<p>When developing in IDE, package can be found, but can’t found class in deploy status.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"NoClassDefFoundErrorServlet"</span>, urlPatterns = <span class="string">"/noClassDefFoundError.do"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NoClassDefFoundErrorServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        resp.getWriter().println(TestCase<span class="class">.<span class="keyword">class</span>.<span class="title">toString</span>())</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>When <code>TestCase.class</code> from junit package, it’s scope is <code>provider</code>.<br>Junit package will not be depolyed,<br>so loader can’t find class in <code>WEB-INF/lib</code>.</p>
<h3 id="NoSuchMethodError"><a href="#NoSuchMethodError" class="headerlink" title="NoSuchMethodError"></a>NoSuchMethodError</h3><p>This Error mean project included package version wrong.<br>The resource code use the high version package in IDE,<br>but package low level package in deploy environment.</p>
<p>Use <code>-verbose:class</code> to judge which version package jvm loaded.</p>
<h3 id="ClassCastException"><a href="#ClassCastException" class="headerlink" title="ClassCastException"></a>ClassCastException</h3><p>When more than one class loader loaded same class,<br>and use them to do operation, this problem may happen.<br>Because delegate model is different.</p>
<p>when in tradition <code>delegate</code> model this problem will not happen,<br>in JavaEE environment, module load it’s self resource first.<br>Although direct point outside resource, but use it’s parent loader’s resource first.</p>
<p>In JVM, how make sure a implement is the class’s implement?<br>JVM find a implement by ClassLoader + class full name.<br>class be define in a data structure named <code>SystemDictionary</code>.<br>This structure accept a ClassLoader and a name as parameters,<br>and return a class’s implement in call.</p>
<h3 id="LinkageError"><a href="#LinkageError" class="headerlink" title="LinkageError"></a>LinkageError</h3><p>Different ClassLoader’s class, the method be overrided.<br><code>LinkageError</code> is essentially same with <code>LinkageError</code>.</p>
<h3 id="IllegalAccessError"><a href="#IllegalAccessError" class="headerlink" title="IllegalAccessError"></a>IllegalAccessError</h3><p>The implement has no privilege to access method or field.<br>When class be loaded in a Unanticipated package, this problem happens</p>
<h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><div class="table-container">
<table>
<thead>
<tr>
<th>can’t find</th>
<th>not right</th>
<th>more than one</th>
</tr>
</thead>
<tbody>
<tr>
<td>ClassNotFoundException NoClassDefFoundError</td>
<td>IncompatibleClassChangeError NoSuchMethodError NoSuchFieldError IllegalAccessError</td>
<td>ClassCastException LinkageError</td>
</tr>
<tr>
<td>Ctrl+Shift+T</td>
<td>-verbose:class</td>
<td>-verbose:class</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title>The structure of the JVM overview 1</title>
    <url>/2017/05/19/The-structure-of-the-JVM-overview-1/</url>
    <content><![CDATA[<h2 id="Run-Time-Data-Areas"><a href="#Run-Time-Data-Areas" class="headerlink" title="Run-Time Data Areas"></a>Run-Time Data Areas</h2><h3 id="The-pc-Register"><a href="#The-pc-Register" class="headerlink" title="The pc Register"></a>The pc Register</h3><p>JVM can support many thread run at once.<br>Each JVM thread has <strong>it’s own</strong> <code>pc register</code>.</p>
<p>At any point,thread executing the code of a <strong>single method</strong> ,<br>called the current method for that thread.</p>
<p>If the method is a <code>native</code> method, <code>pc register</code> is undefined,<br>else the <code>pc register</code> contains the address of <strong>JVM instruction</strong> current being executed.</p>
<p>It is wide enough to hold a <code>returnAddress</code> or a <code>native pointer</code> on the specific platform.</p>
<h3 id="Java-Virtual-Machine-Stacks"><a href="#Java-Virtual-Machine-Stacks" class="headerlink" title="Java Virtual Machine Stacks"></a>Java Virtual Machine Stacks</h3><p>Each Java Virtual Machine thread has a private <code>JVM stack</code></p>
<p>A <code>JVM stack</code> stores frames, frames may be heap allocated.</p>
<ul>
<li><p>Requires a larger JVM stack than is permitted<br><code>StackOverflowError</code> in <strong>infinite recursion</strong> this error happen.</p>
</li>
<li><p>Stacks dynamically expanded, and expansion is attempted but<br>  insufficient memory can be made available to effect the expansion.<br><code>OutOfMemoryError</code> in <strong>fames too many?</strong> in stack this error may happen.</p>
</li>
</ul>
<h3 id="Heap"><a href="#Heap" class="headerlink" title="Heap"></a>Heap</h3><p>The heap is the run-time data area, it’s a ‘public area’.<br><code>GC</code> be appointed to manage this area.</p>
<p><code>OutOfMemoryError</code> when frame need memory size over the <strong>maximum heap size</strong>.</p>
<h3 id="Method-Area"><a href="#Method-Area" class="headerlink" title="Method Area"></a>Method Area</h3><p><code>Method Area</code> is a ‘public area’ as well.</p>
<p>It stores</p>
<ol>
<li><code>per-class structures</code> such as the <strong>run-time constant pool</strong></li>
<li>field and method data</li>
<li>the code for methods and constructors, including<br>the <code>special methods</code> (§2.9) used in class and instance initialization<br>and interface initialization.</li>
</ol>
<p>Accturally it is the <strong>origin class library</strong> of all programes in JVM.</p>
<p><code>OutOfMemoryError</code> expansion/initialization is attempted<br>but insufficient memory can be made available</p>
<h3 id="Run-Time-Constant-Pool"><a href="#Run-Time-Constant-Pool" class="headerlink" title="Run-Time Constant Pool"></a>Run-Time Constant Pool</h3><p>Each run-time constant pool is allocated from the JVM’s <code>method area</code>.</p>
<p>The run-time constant pool serves a function similar to<br>that of <strong>a symbol table</strong> for a programming language</p>
<p><code>OutOfMemoryError</code> expansion/initialization is attempted<br>but insufficient memory can be made available</p>
<h3 id="Native-Method-Stacks"><a href="#Native-Method-Stacks" class="headerlink" title="Native Method Stacks"></a>Native Method Stacks</h3><p>JVM may use conventional stacks,<br>colloquially called <code>C stacks</code> to support <strong>native method</strong>.</p>
<p>Also be used by the implementation of <strong>an interpreter</strong> for the JVM’s<br>instruction set in a language such as C.</p>
<p>If JVM rely on conventional stack, it need not supply native method stacks.</p>
<p>If supplied, native method stacks are<br>typically allocated per thread when <strong>each thread</strong> is created.</p>
<ul>
<li><code>StackOverflowError</code> thread requires a larger native method stack than <strong>is permitted</strong></li>
<li><code>OutOfMemoryError</code> expansion/initialization is attempted<br>but insufficient memory can be made available</li>
</ul>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>jvm</tag>
      </tags>
  </entry>
  <entry>
    <title>The structure of the JVM overview 2</title>
    <url>/2017/05/21/The-structure-of-the-JVM-overview-2/</url>
    <content><![CDATA[<h2 id="Frames"><a href="#Frames" class="headerlink" title="Frames"></a>Frames</h2><h3 id="Local-Variables"><a href="#Local-Variables" class="headerlink" title="Local Variables"></a>Local Variables</h3><p>Each frame contains <strong>an array of variables</strong> known as its <code>local variables</code>.</p>
<ul>
<li><p>one can hold<br>&gt;<br>boolean, byte, char, short, int,<br>float, reference, returnAddress</p>
</li>
<li><p>a pair can hold <code>long or double</code></p>
</li>
</ul>
<p>JVM uses local variables to pass parameters on method invocation.</p>
<p>On instance method invocation, <strong>local variable 0</strong> is always used to pass<br>a reference to instance it’self(<code>this</code>).</p>
<h3 id="Operand-Stacks"><a href="#Operand-Stacks" class="headerlink" title="Operand Stacks"></a>Operand Stacks</h3><p>Each frame contains a last-in-first-out (LIFO) stack known as its operand stack.</p>
<p>Used to push or pop constant or values from variable or method.</p>
<p>Values from the operand stack must be operated upon in ways <strong>appropriate to their types</strong>.</p>
<p>These restrictions on operand stack manipulation are enforced through <strong>class file verification</strong>.</p>
<h3 id="Dynamic-Linking"><a href="#Dynamic-Linking" class="headerlink" title="Dynamic Linking"></a>Dynamic Linking</h3><p>Each frame contains a reference to the <code>run-time constant pool</code> for<br>the type of the current method to support <code>dynamic linking</code> of the method code.</p>
<p><code>invoke</code> <code>InvocationHandler</code> in java ?</p>
<p>Used to reduce the <strong>invasive</strong> of the code linked code,<br>keep current code shape and solid.</p>
<p>Dynamic linking translates these <code>symbolic
method</code> references into <code>concrete method</code> references.</p>
<h3 id="Normal-Method-Invocation-Completion"><a href="#Normal-Method-Invocation-Completion" class="headerlink" title="Normal Method Invocation Completion"></a>Normal Method Invocation Completion</h3><p>A method invocation completes normally if<br>that invocation does <strong>not cause</strong> an exception to be thrown.</p>
<p>The current frame use <code>break</code> characteristic to restore <strong>the state of the invoker</strong><br>for the program counter of the invoker appropriately incremented to <strong>skip past</strong><br>the method invocation instruction(PC Register?).</p>
<h3 id="Abrupt-Method-Invocation-Completion"><a href="#Abrupt-Method-Invocation-Completion" class="headerlink" title="Abrupt Method Invocation Completion"></a>Abrupt Method Invocation Completion</h3><p>A method invocation <code>completes abruptly</code> if execution of a JVM<br>instruction within the method causes the JVM to throw an<br>exception, and that exception is <strong>not handled</strong> within the method.</p>
<p>Execution of an <code>athrow</code> instruction also causes an exception to<br>be <code>explicitly thrown</code> and, if the exception is not caught by the<br>current method, results in <strong>abrupt method</strong> invocation completion.</p>
<p>A method invocation that completes abruptly <strong>never returns</strong> a value to its invoker.</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>jvm</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2017/05/22/Hello-World/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">     System.out.println(<span class="string">"hello world"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>invokevirtual</code><br><code>$ javap -c HelloWorld</code><br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Compiled from <span class="string">"HelloWorld.java"</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">HelloWorld</span><span class="params">()</span></span>;</span><br><span class="line">    Code:</span><br><span class="line">       <span class="number">0</span>: aload_0</span><br><span class="line">       <span class="comment">// Method java/lang/Object."&lt;init&gt;":()V</span></span><br><span class="line">       1: invokespecial #1</span><br><span class="line">       <span class="number">4</span>: <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(java.lang.String[])</span></span>;</span><br><span class="line">    Code:</span><br><span class="line">       <span class="comment">// Field java/lang/System.out:Ljava/io/PrintStream;</span></span><br><span class="line">       0: getstatic     #2</span><br><span class="line">       <span class="comment">// String hello world</span></span><br><span class="line">       3: ldc           #3</span><br><span class="line">       <span class="comment">// Method java/io/PrintStream.println:(Ljava/lang/String;)V</span></span><br><span class="line">       5: invokevirtual #4</span><br><span class="line">       <span class="number">8</span>: <span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>The property <code>out</code> in System is a <code>packaged</code> type <code>PrintStream</code>.<br>There is a <code>BufferedOutputStream</code> inside <code>PrintStream</code>.</p>
<hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">System</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> PrintStream out = <span class="keyword">null</span>;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title">setOut0</span><span class="params">(PrintStream out)</span></span>;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initializeSystemClass</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      ...</span><br><span class="line">      FileOutputStream fdOut = <span class="keyword">new</span> FileOutputStream(FileDescriptor.out);</span><br><span class="line">      ...</span><br><span class="line">      setOut0(newPrintStream(fdOut, props.getProperty(<span class="string">"sun.stdout.encoding"</span>)));</span><br><span class="line">      ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The init method called after thread initialization, initialize the system class.</p>
<hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> PrintStream <span class="title">newPrintStream</span><span class="params">(FileOutputStream fos, String enc)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (enc != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> PrintStream(<span class="keyword">new</span> BufferedOutputStream(fos, <span class="number">128</span>), <span class="keyword">true</span>, enc);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException uee) &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> PrintStream(<span class="keyword">new</span> BufferedOutputStream(fos, <span class="number">128</span>), <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>package buffer function into <code>out</code>. base on encoding, create output stream object.</p>
<hr>
<p><img src="/2017/05/22/Hello-World/01.png" alt><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JNIEXPORT void JNICALL</span><br><span class="line">Java_java_lang_System_setOut0(JNIEnv *env, jclass cla, jobject stream)</span><br><span class="line">&#123;</span><br><span class="line">    jfieldID fid =</span><br><span class="line">        (*env)-&gt;GetStaticFieldID(env,cla,&quot;out&quot;,&quot;Ljava/io/PrintStream;&quot;);</span><br><span class="line">    if (fid == 0)</span><br><span class="line">        return;</span><br><span class="line">    (*env)-&gt;SetStaticObjectField(env,cla,fid,stream);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<ul>
<li><p>The native method <code>setOut0</code> will call this c function.</p>
</li>
<li><p><code>fid</code> the member of <code>System</code> the <code>out</code>‘s id.</p>
</li>
<li><p><code>&quot;Ljava/io/PrintStream;&quot;</code> mean <code>java.io.PrintStream</code> object</p>
</li>
</ul>
<p><img src="/2017/05/22/Hello-World/02.png" alt></p>
<p><code>SetStaticObjectField</code> define here.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void (JNICALL *SetStaticObjectField)</span><br><span class="line">      (JNIEnv *env, jclass clazz, jfieldID fieldID, jobject value);</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title>Synchronous primitive in zk</title>
    <url>/2017/05/23/Synchronous-primitive-in-zk/</url>
    <content><![CDATA[<h3 id="Laboratory-structure"><a href="#Laboratory-structure" class="headerlink" title="Laboratory structure"></a>Laboratory structure</h3><ul>
<li><p>Every instance is a watcher, when event be triggered<br>  process method will be <strong>callback</strong>.</p>
<blockquote>
<p>public class SyncPrimitive implements Watcher</p>
</blockquote>
</li>
<li><p><strong>Properties</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// share zk client</span></span><br><span class="line"><span class="keyword">static</span> ZooKeeper zk = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// share lock mointor</span></span><br><span class="line"><span class="keyword">static</span> Integer mutex;</span><br><span class="line"><span class="comment">// instance zk path</span></span><br><span class="line">String root;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Constructor</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">SyncPrimitive(String address) &#123;</span><br><span class="line">    <span class="keyword">if</span>(zk == <span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Starting ZK:"</span>);</span><br><span class="line">            zk = <span class="keyword">new</span> ZooKeeper(address, <span class="number">3000</span>, <span class="keyword">this</span>);</span><br><span class="line">            mutex = <span class="keyword">new</span> Integer(-<span class="number">1</span>);</span><br><span class="line">            System.out.println(<span class="string">"Finished starting ZK: "</span> + zk);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            System.out.println(e.toString());</span><br><span class="line">            zk = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// else mutex = new Integer(-1);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>if the common zk client not exists, create one</li>
<li>create the lock monitor by the way</li>
<li>if not init the propertiy mutex is 0.</li>
</ol>
</li>
<li><p><strong>Implements</strong> abstract method</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">synchronized</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">process</span><span class="params">(WatchedEvent event)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (mutex) &#123;</span><br><span class="line">        mutex.notify();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>If the thread have monitor, call one another.<br>If not, wait for monitor <code>mutex</code> unlock.</p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
  </entry>
  <entry>
    <title>Hello ActiveMq</title>
    <url>/2017/05/26/Hello-ActiveMq/</url>
    <content><![CDATA[<h3 id="Common"><a href="#Common" class="headerlink" title="Common"></a>Common</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// connection's factory[modle]</span></span><br><span class="line">ConnectionFactory connectionFactory = <span class="keyword">new</span> ActiveMQConnectionFactory(</span><br><span class="line">JMSProducer.USERNAME,</span><br><span class="line">JMSProducer.PASSWORD,</span><br><span class="line">JMSProducer.BROKEURL);</span><br><span class="line"><span class="comment">// connection object[don't forget to close it]</span></span><br><span class="line">Connection connection = connectionFactory.createConnection();</span><br><span class="line"><span class="comment">// begin</span></span><br><span class="line">connection.start();</span><br><span class="line"><span class="comment">// communication with MQ[transaction modle, false in consumer]</span></span><br><span class="line">Session session = connection.createSession(<span class="keyword">true</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class="line"><span class="comment">// MQ address object</span></span><br><span class="line">Destination destination;</span><br></pre></td></tr></table></figure>
<p><strong>close connection in final</strong><br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">finally</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">          connection.close();</span><br><span class="line">      &#125; <span class="keyword">catch</span> (JMSException e) &#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="Producer-Consumer"><a href="#Producer-Consumer" class="headerlink" title="Producer-Consumer"></a>Producer-Consumer</h3><p><em>producer</em><br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// the queue's name</span></span><br><span class="line">destination = session.createQueue(<span class="string">"HelloWorld"</span>);</span><br><span class="line"><span class="comment">// the producer object</span></span><br><span class="line">MessageProducer messageProducer = session.createProducer(destination);</span><br><span class="line"><span class="comment">// message</span></span><br><span class="line">TextMessage message = session.createTextMessage(<span class="string">"Hello ActiveMQ"</span>);</span><br><span class="line"><span class="comment">// send</span></span><br><span class="line">messageProducer.send(message);</span><br></pre></td></tr></table></figure></p>
<p><em>consumer</em></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// the queue's name</span></span><br><span class="line">destination = session.createQueue(<span class="string">"HelloWorld"</span>);</span><br><span class="line"><span class="comment">// the producer object</span></span><br><span class="line">messageConsumer = session.createConsumer(destination);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">    <span class="comment">// timeout if no response</span></span><br><span class="line">    TextMessage textMessage = (TextMessage) messageConsumer.receive(<span class="number">100000</span>);</span><br><span class="line">    <span class="keyword">if</span>(textMessage != <span class="keyword">null</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">"recieved:"</span> + textMessage.getText());</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Publish-Subscribe"><a href="#Publish-Subscribe" class="headerlink" title="Publish-Subscribe"></a>Publish-Subscribe</h3><p><strong>publish</strong><br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// give a topic</span></span><br><span class="line">Topic topic = session.createTopic(<span class="string">"HelloTopic"</span>);</span><br><span class="line"><span class="comment">// message</span></span><br><span class="line">TextMessage message = session.createTextMessage(<span class="string">"ActiveMQ Topic"</span>);</span><br><span class="line"><span class="comment">// sender</span></span><br><span class="line">MessageProducer producer = session.createProducer(topic);</span><br><span class="line"><span class="comment">// set tmp data</span></span><br><span class="line">producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);</span><br><span class="line"><span class="comment">// publish</span></span><br><span class="line">producer.send(message);</span><br></pre></td></tr></table></figure></p>
<p><strong>subscribe</strong><br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// got a topic</span></span><br><span class="line">Topic topic = session.createTopic(<span class="string">"HelloTopic"</span>);</span><br><span class="line"><span class="comment">// reciever</span></span><br><span class="line">MessageConsumer consumer = session.createConsumer(topic);</span><br><span class="line"><span class="comment">// set a listener, deal callback</span></span><br><span class="line">consumer.setMessageListener(<span class="keyword">new</span> MessageListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(Message message)</span> </span>&#123;</span><br><span class="line">        TextMessage tmd = (TextMessage) message;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Received message: "</span> + tmd.getText());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JMSException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
  </entry>
  <entry>
    <title>Foundation in compiling</title>
    <url>/2017/05/31/Foundation-in-compiling/</url>
    <content><![CDATA[<h3 id="tradition-loop"><a href="#tradition-loop" class="headerlink" title="tradition loop"></a>tradition loop</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">spin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++) &#123;</span><br><span class="line">	;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In vm there many frame at any point,<br>but only the operand stack in <strong>currrent frame</strong> is active.</p>
<h3 id="javap-c-Spin-class"><a href="#javap-c-Spin-class" class="headerlink" title="javap -c Spin.class"></a>javap -c Spin.class</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public void spin();</span><br><span class="line">    Code:</span><br><span class="line">       0: iconst_0</span><br><span class="line">       1: istore_1</span><br><span class="line">       2: iload_1</span><br><span class="line">       3: bipush        10</span><br><span class="line">       5: if_icmpge     14</span><br><span class="line">       8: iinc          1, 1</span><br><span class="line">      11: goto          2</span><br><span class="line">      14: return</span><br></pre></td></tr></table></figure>
<div class="table-container">
<table>
<thead>
<tr>
<th>a</th>
<th>b</th>
</tr>
</thead>
<tbody>
<tr>
<td>[0]</td>
<td>push int constant 0</td>
</tr>
<tr>
<td>[1]</td>
<td>store into local variable 1 (i=0)</td>
</tr>
<tr>
<td>[2]</td>
<td>push local variable <strong>1</strong> (-&gt; i)</td>
</tr>
<tr>
<td>[3]</td>
<td>push int constant 10</td>
</tr>
<tr>
<td>[5]</td>
<td>break if great or equals (i&gt;=10)</td>
</tr>
<tr>
<td>[8]</td>
<td>increment local variable <strong>1</strong> by 1 (i++)</td>
</tr>
<tr>
<td>[11]</td>
<td>loop</td>
</tr>
<tr>
<td>[14]</td>
<td>return void when done</td>
</tr>
</tbody>
</table>
</div>
<h3 id="Instructions"><a href="#Instructions" class="headerlink" title="Instructions"></a>Instructions</h3><ul>
<li><code>iconst_&lt;i&gt;</code> <strong>push</strong> an int constant to operand stack</li>
<li><code>bipush</code> <strong>immediate push</strong> int constant to operand stack</li>
<li><code>istore_&lt;i&gt;</code> <strong>pops</strong> an int from the operand stack and stores it in local variable <strong>i</strong></li>
<li><code>iload_&lt;i&gt;</code> <strong>pushes</strong> the value in local variable <strong>i</strong> on to the operand stack</li>
</ul>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>jvm</tag>
      </tags>
  </entry>
  <entry>
    <title>ZK barrier</title>
    <url>/2017/05/27/ZK-barrier/</url>
    <content><![CDATA[<p>Zookeeper just like a cow boy, he know how to feed cattle.<br><img src="/2017/05/27/ZK-barrier/01.jpg" alt></p>
<p>Make a crowd of cattle move synchronized is not a easy thing.<br><img src="/2017/05/27/ZK-barrier/02.jpg" alt></p>
<p>To hold cattle, cowboy need barriers.<br><img src="/2017/05/27/ZK-barrier/03.jpg" alt></p>
<h3 id="Barrier"><a href="#Barrier" class="headerlink" title="Barrier"></a>Barrier</h3><ul>
<li><strong>Define</strong></li>
</ul>
<p><code>static public class Barrier extends SyncPrimitive</code></p>
<p>class define in SyncPrimitive, it’s inner static class.</p>
<p>It take it’s outter class as template, take outter class’s<br>static variable as common space.</p>
<ul>
<li><p><strong>Properties</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// max cow number</span><br><span class="line">int size;</span><br><span class="line">// the barrier&apos;s name</span><br><span class="line">String name;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Constructor</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Barrier(String address, String root, <span class="keyword">int</span> size) &#123;</span><br><span class="line">    <span class="comment">// Create barrier node</span></span><br><span class="line">    <span class="keyword">super</span>(address);</span><br><span class="line">    <span class="keyword">this</span>.root = root;</span><br><span class="line">    <span class="keyword">this</span>.size = size;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (zk != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Stat s = zk.exists(root, <span class="keyword">false</span>);</span><br><span class="line">            <span class="keyword">if</span> (s == <span class="keyword">null</span>) &#123;</span><br><span class="line">              <span class="comment">//path, no data, no privilege control, not temple node</span></span><br><span class="line">                zk.create(root, <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">0</span>],</span><br><span class="line">                    Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (KeeperException e) &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// My node name</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        name = <span class="keyword">new</span> String(InetAddress.getLocalHost()</span><br><span class="line">            .getCanonicalHostName().toString());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>Used to create a barrier node in zookeeper.<br><code>super()</code> used to create the zk client object.</p>
<ul>
<li><strong>In</strong></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">enter</span><span class="params">()</span> <span class="keyword">throws</span> KeeperException, InterruptedException</span>&#123;</span><br><span class="line">    String path = zk.create(root + <span class="string">"/"</span> + name, <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">0</span>],</span><br><span class="line">        Ids.OPEN_ACL_UNSAFE,</span><br><span class="line">            CreateMode.EPHEMERAL_SEQUENTIAL);</span><br><span class="line">    name = path.substring(path.lastIndexOf(<span class="string">"/"</span>) + <span class="number">1</span>, path.length());</span><br><span class="line">    <span class="comment">// keep check</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (mutex) &#123;</span><br><span class="line">            <span class="comment">// get current cattles out</span></span><br><span class="line">            List&lt;String&gt; list = zk.getChildren(root, <span class="keyword">true</span>);</span><br><span class="line">            System.out.println(Thread.currentThread()</span><br><span class="line">                .getName() + <span class="string">" "</span> + list.size());</span><br><span class="line">            <span class="comment">// enter when reach the threshold</span></span><br><span class="line">            <span class="keyword">if</span> (list.size() &lt; size) &#123;</span><br><span class="line">                mutex.wait();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Once a cow, check the threshold.<br>If not reach, wait for more cow come, or enter barrier.<br>Loop checking, when wake up the threshold should reached.</p>
<p><code>CreateMode.EPHEMERAL_SEQUENTIAL</code> like this  <code>_1, _2</code></p>
<ul>
<li><strong>Out</strong><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">leave</span><span class="params">()</span> <span class="keyword">throws</span> KeeperException, InterruptedException </span>&#123;</span><br><span class="line">    zk.delete(root + <span class="string">"/"</span> + name, <span class="number">0</span>);</span><br><span class="line">    <span class="comment">// keep check</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (mutex) &#123;</span><br><span class="line">            List&lt;String&gt; list = zk.getChildren(root, <span class="keyword">true</span>);</span><br><span class="line">            <span class="keyword">if</span> (list.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                mutex.wait();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>Once a cow, check the space empty or not.<br>If not empty, wait for more cow leave, or leave barrier.<br>Loop checking, when wake up the threshold should reached.</p>
<h3 id="Test-one-barrier"><a href="#Test-one-barrier" class="headerlink" title="Test one barrier"></a>Test one barrier</h3><ul>
<li>In main<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            barrierTest(args);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).start();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>Simulate three cows.</p>
<ul>
<li>Test method<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">barrierTest</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">    Barrier b = <span class="keyword">new</span> Barrier(args[<span class="number">1</span>], <span class="string">"/b1"</span>, <span class="keyword">new</span> Integer(args[<span class="number">2</span>]));</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> flag = b.enter();</span><br><span class="line">        System.out.println(<span class="string">"Entered barrier: "</span> +</span><br><span class="line">            Thread.currentThread().getName());</span><br><span class="line">        <span class="keyword">if</span>(!flag) System.out.println(<span class="string">"Error when entering the barrier"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// simulate cow sleep</span></span><br><span class="line">        Thread.sleep(<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">        b.leave();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (KeeperException e)&#123;</span><br><span class="line">      ...</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e)&#123;</span><br><span class="line">      ...</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">"Left barrier "</span> +</span><br><span class="line">        Thread.currentThread().getName());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h3><p>This test’s synchroniz is base on cow notify another.<br>So it must make sure when cowboy[zookeeper] tiggered,<br>the transaction have bean done.</p>
<p>In other word, cattles should all enter then all out.<br>If run too fast, the last cattle can’t be notify, keep waiting.<br>If the number equal to the threshold, cattles can’t leave as well.</p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
  </entry>
  <entry>
    <title>ZK queue</title>
    <url>/2017/05/29/ZK-queue/</url>
    <content><![CDATA[<h3 id="Queue"><a href="#Queue" class="headerlink" title="Queue"></a>Queue</h3><ul>
<li><strong>Define</strong></li>
</ul>
<p><code>static public class Queue extends SyncPrimitive</code></p>
<p>class define in SyncPrimitive, it’s inner static class.</p>
<p>same as the previous article <code>ZK barrier</code></p>
<ul>
<li><p><strong>Properties</strong><br>no properties</p>
</li>
<li><p><strong>Constructor</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Queue(String address, String name) &#123;</span><br><span class="line">    <span class="keyword">super</span>(address);</span><br><span class="line">    <span class="keyword">this</span>.root = name;</span><br><span class="line">    <span class="comment">// Create ZK node name</span></span><br><span class="line">    <span class="keyword">if</span> (zk != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Stat s = zk.exists(root, <span class="keyword">false</span>);</span><br><span class="line">            <span class="keyword">if</span> (s == <span class="keyword">null</span>) &#123;</span><br><span class="line">                zk.create(root, <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">0</span>],</span><br><span class="line">                 Ids.OPEN_ACL_UNSAFE,</span><br><span class="line">                        CreateMode.PERSISTENT);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (KeeperException e) &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>the constructor is not same as barrier, it no need common path.</p>
<ul>
<li><strong>push</strong><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">produce</span><span class="params">(<span class="keyword">int</span> i)</span> <span class="keyword">throws</span> KeeperException, InterruptedException</span>&#123;</span><br><span class="line">    ByteBuffer b = ByteBuffer.allocate(<span class="number">4</span>);</span><br><span class="line">    <span class="keyword">byte</span>[] value;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add child with value i</span></span><br><span class="line">    b.putInt(i);</span><br><span class="line">    value = b.array();</span><br><span class="line">    zk.create(root + <span class="string">"/element"</span>, value, Ids.OPEN_ACL_UNSAFE,</span><br><span class="line">                CreateMode.PERSISTENT_SEQUENTIAL);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>create a node with value.</p>
<ul>
<li><strong>pop</strong><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">consume</span><span class="params">()</span> <span class="keyword">throws</span> KeeperException, InterruptedException</span>&#123;</span><br><span class="line">    <span class="keyword">int</span> retvalue = -<span class="number">1</span>;</span><br><span class="line">    Stat stat = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get the first element available</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (mutex) &#123;</span><br><span class="line">            List&lt;String&gt; list = zk.getChildren(root, <span class="keyword">true</span>);</span><br><span class="line">            <span class="keyword">if</span> (list.size() == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"Going to wait"</span>);</span><br><span class="line">                mutex.wait();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                String min = list.get(<span class="number">0</span>).substring(<span class="number">7</span>);</span><br><span class="line">                <span class="keyword">for</span>(String s : list)&#123;</span><br><span class="line">                  String tempValue = s.substring(<span class="number">7</span>);</span><br><span class="line">                  min = tempValue.compareTo(min) &lt; <span class="number">0</span>? tempValue: min;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">"Temporary value: "</span> +</span><br><span class="line">                    root + <span class="string">"/element"</span> + min);</span><br><span class="line">                <span class="keyword">byte</span>[] b = zk.getData(root +</span><br><span class="line">                    <span class="string">"/element"</span> + min, <span class="keyword">false</span>, stat);</span><br><span class="line">                zk.delete(root + <span class="string">"/element"</span> + min, <span class="number">0</span>);</span><br><span class="line">                ByteBuffer buffer = ByteBuffer.wrap(b);</span><br><span class="line">                retvalue = buffer.getInt();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> retvalue;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>Synchronously pop the minimum node name’s node.</p>
<h3 id="Test-queue"><a href="#Test-queue" class="headerlink" title="Test queue"></a>Test queue</h3><ul>
<li><p>a producer</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> String[] args = &#123;<span class="string">"qTest"</span>, <span class="string">"192.168.3.11:2181"</span>, <span class="string">"7"</span>, <span class="string">"p"</span>&#125;;</span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable()&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        queueTest(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure>
</li>
<li><p>few customer</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> String[] args = &#123;<span class="string">"qTest"</span>, <span class="string">"192.168.3.11:2181"</span>, <span class="string">"3"</span>, <span class="string">"c"</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;Integer.valueOf(args[<span class="number">2</span>]); i++) &#123;</span><br><span class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            queueTest(args);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h3><p>Queue’s sequential rely on the node name’s sequential.<br>If nodes’ name sequential messed up, the queue is messed as well.</p>
<p>The queue rely on name form, so the data’s key must all be fetch from zookeeper.<br>If the key quantity is big, the I/O cost well be appreciable.</p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
  </entry>
  <entry>
    <title>Arithmetic in compiling</title>
    <url>/2017/06/01/Arithmetic-in-compiling/</url>
    <content><![CDATA[<h3 id="simple-calc"><a href="#simple-calc" class="headerlink" title="simple calc"></a>simple calc</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> ((i + j - <span class="number">1</span>) &amp; ~(j - <span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>variable 0 is <code>this</code> -&gt; <code>aload_0</code></li>
</ul>
<h3 id="javap-c"><a href="#javap-c" class="headerlink" title="javap -c"></a>javap -c</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int calc(int, int);</span><br><span class="line">    Code:</span><br><span class="line">       0: iload_1</span><br><span class="line">       1: iload_2</span><br><span class="line">       2: iadd</span><br><span class="line">       3: iconst_1</span><br><span class="line">       4: isub</span><br><span class="line">       5: iload_2</span><br><span class="line">       6: iconst_1</span><br><span class="line">       7: isub</span><br><span class="line">       8: iconst_m1</span><br><span class="line">       9: ixor</span><br><span class="line">      10: iand</span><br><span class="line">      11: ireturn</span><br></pre></td></tr></table></figure>
<div class="table-container">
<table>
<thead>
<tr>
<th>a</th>
<th>b</th>
</tr>
</thead>
<tbody>
<tr>
<td>[0]</td>
<td>push <code>i</code> value into stack</td>
</tr>
<tr>
<td>[1]</td>
<td>push <code>j</code> value into stack</td>
</tr>
<tr>
<td>[2]</td>
<td>add; result push stack</td>
</tr>
<tr>
<td>[3]</td>
<td>push constant <code>1</code> into stack</td>
</tr>
<tr>
<td>[4]</td>
<td>subtract; push result</td>
</tr>
<tr>
<td>[5]</td>
<td><code>j</code> value push stack</td>
</tr>
<tr>
<td>[6]</td>
<td>push constant <code>1</code> again</td>
</tr>
<tr>
<td>[7]</td>
<td>subtract; push result</td>
</tr>
<tr>
<td>[8]</td>
<td>push constant <code>-1</code></td>
</tr>
<tr>
<td>[9]</td>
<td>do XOR; push result</td>
</tr>
<tr>
<td>[10]</td>
<td>do AND; push result</td>
</tr>
<tr>
<td>[11]</td>
<td>return int</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li><code>~(j-1)</code> transform into <code>-1^(j-1)</code><br>exclusive or, <code>-1</code> bytes is <strong>all high bit</strong>.<br>any int oxr with all high bit, the high bit will be low, low will be high.</li>
</ul>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>jvm</tag>
      </tags>
  </entry>
  <entry>
    <title>Invoke in compiling</title>
    <url>/2017/06/04/Invoke-in-compiling/</url>
    <content><![CDATA[<h3 id="Normal-method"><a href="#Normal-method" class="headerlink" title="Normal method"></a>Normal method</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123; <span class="keyword">return</span> i+j; &#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> k)</span> </span>&#123; <span class="keyword">return</span> i+j+k; &#125;</span><br></pre></td></tr></table></figure>
<p><strong>javap</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int calc(int, int);</span><br><span class="line">  Code:</span><br><span class="line">     0: iload_1</span><br><span class="line">     1: iload_2</span><br><span class="line">     2: iadd</span><br><span class="line">     3: ireturn</span><br><span class="line"></span><br><span class="line">static int calc(int, int, int);</span><br><span class="line">  Code:</span><br><span class="line">     0: iload_0</span><br><span class="line">     1: iload_1</span><br><span class="line">     2: iadd</span><br><span class="line">     3: iload_2</span><br><span class="line">     4: iadd</span><br><span class="line">     5: ireturn</span><br></pre></td></tr></table></figure>
<h3 id="Nomal-invoke"><a href="#Nomal-invoke" class="headerlink" title="Nomal invoke"></a>Nomal invoke</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">call</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  calc(<span class="number">12</span>, <span class="number">13</span>);</span><br><span class="line">  AboutInvoke.calc(<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>javap</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void call();</span><br><span class="line">    Code:</span><br><span class="line">       0: aload_0</span><br><span class="line">       1: bipush        12</span><br><span class="line">       3: bipush        13</span><br><span class="line">       // Method calc:(II)I</span><br><span class="line">       5: invokevirtual #2</span><br><span class="line">       8: pop</span><br><span class="line">       9: bipush        12</span><br><span class="line">      11: bipush        13</span><br><span class="line">      13: bipush        14</span><br><span class="line">      // Method calc:(III)I</span><br><span class="line">      15: invokestatic  #3</span><br><span class="line">      18: pop</span><br><span class="line">      19: return</span><br></pre></td></tr></table></figure></p>
<p>Compiler generates <strong>symbolic references</strong> to<br>the methods(#2 #3) of an instance(Pointer?).</p>
<p>These symbols are store in <strong>run-time constant pool</strong>.</p>
<p>They are resolved at run-time to determine the <strong>actual method location</strong>.</p>
<h3 id="Special-invoke"><a href="#Special-invoke" class="headerlink" title="Special invoke"></a>Special invoke</h3><p><strong>Father</strong><br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> money = <span class="number">10</span>;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">haveFun</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> getMoney(); &#125;</span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getMoney</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> money; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>Son</strong><br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">havePunk</span><span class="params">()</span> </span>&#123; <span class="keyword">super</span>.haveFun(); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>javap</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// Father play</span><br><span class="line">public int haveFun();</span><br><span class="line">    Code:</span><br><span class="line">       0: aload_0</span><br><span class="line">       // Method getMoney:()I</span><br><span class="line">       1: invokespecial #3</span><br><span class="line">       4: ireturn</span><br><span class="line"></span><br><span class="line">// Son play</span><br><span class="line">void havePunk();</span><br><span class="line">     Code:</span><br><span class="line">        0: aload_0</span><br><span class="line">        // Method Father.haveFun:()I</span><br><span class="line">        1: invokespecial #2</span><br><span class="line">        4: pop</span><br><span class="line">        5: return</span><br></pre></td></tr></table></figure></p>
<p><code>invokespecial</code> instruction always pass <code>this</code> to<br>the invoked method as its <strong>first argument</strong>.<br>As usual, it is received in <strong>local variable 0</strong>(aload_0).</p>
<ol>
<li><p>The method in super class call itself’s instance method.<br>If the method is private , use <code>invokespecial</code>.</p>
</li>
<li><p>If the sub class call super class’s instance method, all use <code>invokespecial</code>.</p>
</li>
</ol>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>jvm</tag>
      </tags>
  </entry>
  <entry>
    <title>Arrays in compiling</title>
    <url>/2017/06/05/Arrays-in-compiling/</url>
    <content><![CDATA[<h3 id="Simple-array"><a href="#Simple-array" class="headerlink" title="Simple array"></a>Simple array</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">daily</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> array[];</span><br><span class="line">  <span class="keyword">int</span> size=<span class="number">10</span>;</span><br><span class="line">  <span class="keyword">int</span> value=<span class="number">123</span>;</span><br><span class="line">  array = <span class="keyword">new</span> <span class="keyword">int</span>[size];</span><br><span class="line">  array[<span class="number">3</span>] = value;</span><br><span class="line">  value = array[<span class="number">5</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>javap</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int[] daily();</span><br><span class="line">    Code:</span><br><span class="line">       0: bipush        10</span><br><span class="line">       2: istore_2</span><br><span class="line">       3: sipush        123</span><br><span class="line">       6: istore_3</span><br><span class="line">       7: iload_2</span><br><span class="line">       8: newarray       int</span><br><span class="line">      10: astore_1</span><br><span class="line">      11: aload_1</span><br><span class="line">      12: iconst_3</span><br><span class="line">      13: iload_3</span><br><span class="line">      14: iastore</span><br><span class="line">      15: aload_1</span><br><span class="line">      16: iconst_5</span><br><span class="line">      17: iaload</span><br><span class="line">      18: istore_3</span><br><span class="line">      19: aload_1</span><br><span class="line">      20: areturn</span><br></pre></td></tr></table></figure></p>
<p>[7] load variable 10 to create a new array.<br>[10] save array’s reference to <code>array</code> variable.<br>Is <code>aload_x</code> show that the primary type array variable is an object ?</p>
<h3 id="Object-array"><a href="#Object-array" class="headerlink" title="Object array"></a>Object array</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Integer[] objectArray()&#123;</span><br><span class="line">  Integer oArray[];</span><br><span class="line">  <span class="keyword">int</span> count = <span class="number">10</span>;</span><br><span class="line">  oArray = <span class="keyword">new</span> Integer[count];</span><br><span class="line">  oArray[<span class="number">0</span>] = <span class="keyword">new</span> Integer(<span class="number">7</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>javap</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java.lang.Integer[] objectArray();</span><br><span class="line">    Code:</span><br><span class="line">       0: bipush        10</span><br><span class="line">       2: istore_2</span><br><span class="line">       3: iload_2</span><br><span class="line">       // class java/lang/Integer</span><br><span class="line">       4: anewarray     #2</span><br><span class="line">       7: astore_1</span><br><span class="line">       8: aload_1</span><br><span class="line">       9: iconst_0</span><br><span class="line">       // class java/lang/Integer</span><br><span class="line">      10: new           #2</span><br><span class="line">      13: dup</span><br><span class="line">      14: bipush        7</span><br><span class="line">      // Method java/lang/Integer.&quot;&lt;init&gt;&quot;:(I)V</span><br><span class="line">      16: invokespecial #3</span><br><span class="line">      20: aload_1</span><br><span class="line">      21: areturn</span><br></pre></td></tr></table></figure></p>
<h3 id="Multianewarray"><a href="#Multianewarray" class="headerlink" title="Multianewarray"></a>Multianewarray</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span>[][][] create3darray() &#123;</span><br><span class="line">  <span class="keyword">int</span> matrix[][][];</span><br><span class="line">  matrix = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>][<span class="number">3</span>][<span class="number">4</span>];</span><br><span class="line">  <span class="keyword">return</span> matrix;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>javap</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int[][][] create3darray();</span><br><span class="line">    Code:</span><br><span class="line">       0: iconst_2</span><br><span class="line">       1: iconst_3</span><br><span class="line">       2: iconst_4</span><br><span class="line">       // class &quot;[[[I&quot;</span><br><span class="line">       3: multianewarray #4,  3</span><br><span class="line">       7: astore_1</span><br><span class="line">       8: aload_1</span><br><span class="line">       9: areturn</span><br></pre></td></tr></table></figure></p>
<p>Three constant used to create the 3 dimensional array.<br>Store to variable <code>matrix</code>, push to the top of stack.</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>jvm</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle query table column comment</title>
    <url>/2017/06/06/Oracle-query-table-column-comment/</url>
    <content><![CDATA[<h3 id="Query-Table"><a href="#Query-Table" class="headerlink" title="Query Table"></a>Query Table</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- current user&apos;s table</span><br><span class="line">select table_name from user_tables;</span><br><span class="line"></span><br><span class="line">-- all user&apos;s table</span><br><span class="line">select table_name from all_tables;</span><br><span class="line"></span><br><span class="line">-- contain system&apos;s table</span><br><span class="line">select table_name from dba_tables;</span><br><span class="line">-- filter</span><br><span class="line">select table_name from dba_tables where owner=&apos;用户名&apos;</span><br></pre></td></tr></table></figure>
<p><strong>user_tables</strong></p>
<h3 id="Query-Column"><a href="#Query-Column" class="headerlink" title="Query Column"></a>Query Column</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from user_tab_columns where Table_Name=&apos;xxx&apos;;</span><br><span class="line">select * from all_tab_columns where Table_Name=&apos;xxx&apos;;</span><br><span class="line">select * from dba_tab_columns where Table_Name=&apos;xxx&apos;;</span><br></pre></td></tr></table></figure>
<p><strong>user_tab_columns</strong></p>
<h3 id="Query-Comment"><a href="#Query-Comment" class="headerlink" title="Query Comment"></a>Query Comment</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">select * from user_tab_comments;</span><br><span class="line">select * from user_tab_comments t where t.COMMENTS like &apos;%shit%&apos; order by t.TABLE_NAME;</span><br><span class="line"></span><br><span class="line">select * from user_col_comments;</span><br><span class="line">select * from user_col_comments t where t.COLUMN_NAME=&apos;xxx&apos;;</span><br><span class="line"></span><br><span class="line">select * from user_tab_comments t1, user_col_comments t2 where t1.TABLE_NAME = t2.TABLE_NAME and t2.COMMENTS like &apos;%shit%&apos;;</span><br></pre></td></tr></table></figure>
<p><strong>user_tab_comments</strong></p>
<p><strong>user_col_comments</strong></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>Throw try catch finally in compiling</title>
    <url>/2017/06/06/Throw-try-catch-finally-in-compiling/</url>
    <content><![CDATA[<h3 id="Throw-an-exception-positively"><a href="#Throw-an-exception-positively" class="headerlink" title="Throw an exception positively"></a>Throw an exception positively</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">noZero</span><span class="params">(<span class="keyword">int</span> i)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(i == <span class="number">0</span>)</span><br><span class="line">		<span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"no zero"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>javap</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void noZero(int) throws java.lang.Exception;</span><br><span class="line">    Code:</span><br><span class="line">       0: iload_1</span><br><span class="line">       1: ifne          14</span><br><span class="line">       // class java/lang/Exception</span><br><span class="line">       4: new           #2</span><br><span class="line">       7: dup</span><br><span class="line">       // String no zero</span><br><span class="line">       8: ldc           #3</span><br><span class="line">       // Method java/lang/Exception.</span><br><span class="line">       //&quot;&lt;init&gt;&quot;:(Ljava/lang/String;)V</span><br><span class="line">      10: invokespecial #4</span><br><span class="line">      13: athrow</span><br><span class="line">      14: return</span><br></pre></td></tr></table></figure></p>
<ol>
<li>if not equals pass the throw part</li>
<li>if equals take constant string as param create a Exception.</li>
<li>throw it to the caller[handler?].</li>
</ol>
<h3 id="Catch-an-exception"><a href="#Catch-an-exception" class="headerlink" title="Catch an exception"></a>Catch an exception</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">e</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">    noZero(<span class="number">0</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span>(ExcpA a) &#123;&#125;</span><br><span class="line">	<span class="keyword">catch</span>(ExcpB b) &#123;&#125;</span><br><span class="line">	<span class="keyword">catch</span>(Exception e) &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>javap</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void e();</span><br><span class="line">    Code:</span><br><span class="line">       0: aload_0</span><br><span class="line">       1: iconst_0</span><br><span class="line">       // Method noZero:(I)V</span><br><span class="line">       2: invokevirtual #5</span><br><span class="line">       5: goto          17</span><br><span class="line">       8: astore_1</span><br><span class="line">       9: goto          17</span><br><span class="line">      12: astore_1</span><br><span class="line">      13: goto          17</span><br><span class="line">      16: astore_1</span><br><span class="line">      17: return</span><br><span class="line">    Exception table:</span><br><span class="line">       from    to  target type</span><br><span class="line">           0     5     8   Class HaveATry$ExcpA</span><br><span class="line">           0     5    12   Class HaveATry$ExcpB</span><br><span class="line">           0     5    16   Class java/lang/Exception</span><br></pre></td></tr></table></figure>
<p><code>excption table</code><br>Every catcher have a chance to catch.</p>
<p><code>astore_1</code><br>Beginning of handler for excpSentry() store thrown value in local var 1.</p>
<h3 id="Finally"><a href="#Finally" class="headerlink" title="Finally"></a>Finally</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">try</span> &#123; noZero(<span class="number">0</span>); &#125;</span><br><span class="line">	<span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">finally</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>javap</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int f();</span><br><span class="line">    Code:</span><br><span class="line">       0: aload_0</span><br><span class="line">       1: iconst_0</span><br><span class="line">       // Method noZero:(I)V</span><br><span class="line">       2: invokevirtual #5</span><br><span class="line">       5: iconst_2</span><br><span class="line">       6: ireturn</span><br><span class="line">       7: astore_1</span><br><span class="line">       8: iconst_1</span><br><span class="line">       9: istore_2</span><br><span class="line">      10: iconst_2</span><br><span class="line">      11: ireturn</span><br><span class="line">      12: astore_3</span><br><span class="line">      13: iconst_2</span><br><span class="line">      14: ireturn</span><br><span class="line">    Exception table:</span><br><span class="line">       from    to  target type</span><br><span class="line">           0     5     7   Class java/lang/Exception</span><br><span class="line">           0     5    12   any</span><br><span class="line">           7    10    12   any</span><br></pre></td></tr></table></figure>
<p>5/6 copy instructions of 13/14.<br>7th is the Exception handler.<br>11th can’t reach.<br>what’s the object of istore_2/ istore_3 ???</p>
<p><code>istore_2</code> the catcher itself’s handler?<br><code>istore_3</code> the finaly’s handler comes from <code>istore_2</code> ?</p>
<p><code>any</code> mean in range instructions finished then goto target.</p>
<p>The final return handle by finally got <code>2</code></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>jvm</tag>
      </tags>
  </entry>
  <entry>
    <title>Synchronization in compiling</title>
    <url>/2017/06/07/Synchronization-in-compiling/</url>
    <content><![CDATA[<h3 id="Synchronous-in-method"><a href="#Synchronous-in-method" class="headerlink" title="Synchronous in method"></a>Synchronous in method</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="function"><span class="keyword">synchronized</span> <span class="keyword">int</span> <span class="title">fun</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> ++i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>javap</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">synchronized int fun();</span><br><span class="line">    Code:</span><br><span class="line">       0: aload_0</span><br><span class="line">       1: dup</span><br><span class="line">       // Field i:I</span><br><span class="line">       2: getfield      #2</span><br><span class="line">       5: iconst_1</span><br><span class="line">       6: iadd</span><br><span class="line">       7: dup_x1</span><br><span class="line">       // Field i:I</span><br><span class="line">       8: putfield      #2</span><br><span class="line">      11: ireturn</span><br></pre></td></tr></table></figure></p>
<p><code>synchronized</code> method is simply distinguished<br>in the run-time constant pool by the <code>ACC_SYNCHRONIZED</code> <strong>flag</strong></p>
<h3 id="Synchronous-in-block"><a href="#Synchronous-in-block" class="headerlink" title="Synchronous in block"></a>Synchronous in block</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(Object obj, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">synchronized</span>(obj) &#123;</span><br><span class="line">		i+=j;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>javap</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void fun(java.lang.Object, int);</span><br><span class="line">    Code:</span><br><span class="line">       0: aload_1</span><br><span class="line">       1: dup</span><br><span class="line">       2: astore_3</span><br><span class="line">       3: monitorenter</span><br><span class="line">       4: aload_0</span><br><span class="line">       5: dup</span><br><span class="line">       // Field i:I</span><br><span class="line">       6: getfield      #2                  </span><br><span class="line">       9: iload_2</span><br><span class="line">      10: iadd</span><br><span class="line">      // Field i:I</span><br><span class="line">      11: putfield      #2</span><br><span class="line">      14: aload_3</span><br><span class="line">      15: monitorexit</span><br><span class="line">      16: goto          26</span><br><span class="line">      19: astore        4</span><br><span class="line">      21: aload_3</span><br><span class="line">      22: monitorexit</span><br><span class="line">      23: aload         4</span><br><span class="line">      25: athrow</span><br><span class="line">      26: return</span><br><span class="line">    Exception table:</span><br><span class="line">       from    to  target type</span><br><span class="line">           4    16    19   any</span><br><span class="line">          19    23    19   any</span><br></pre></td></tr></table></figure></p>
<p><code>monitorexit</code> will be executed definitely<br>If not exit normally, <code>#25</code> will throw exception</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>jvm</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello VC++</title>
    <url>/2017/06/12/Hello-VC/</url>
    <content><![CDATA[<h3 id="Swap-Mouse-Button"><a href="#Swap-Mouse-Button" class="headerlink" title="Swap Mouse Button"></a>Swap Mouse Button</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"windows.h"</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// a handler</span></span><br><span class="line">	HKEY key;</span><br><span class="line">  <span class="comment">// target key</span></span><br><span class="line">	LPCTSTR SubKey = _T(<span class="string">"Control Panel\\Mouse"</span>);</span><br><span class="line">	<span class="keyword">if</span> (::RegOpenKeyEx(HKEY_CURRENT_USER, SubKey, <span class="number">0</span>, KEY_ALL_ACCESS, &amp;key) !=</span><br><span class="line">		ERROR_SUCCESS) &#123;</span><br><span class="line">		::RegCloseKey(key);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> dwValue[<span class="number">256</span>];</span><br><span class="line">	DWORD dwSize = <span class="keyword">sizeof</span>(DWORD);</span><br><span class="line">	DWORD dwType = REG_SZ;</span><br><span class="line">	<span class="keyword">if</span> (::RegQueryValueEx(key, _T(<span class="string">"SwapMouseButtons"</span>), <span class="number">0</span>, &amp;dwType,</span><br><span class="line">		(LPBYTE)&amp;dwValue, &amp;dwSize) != ERROR_SUCCESS) &#123;</span><br><span class="line">		::RegCloseKey(key);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (dwValue[<span class="number">0</span>] == <span class="string">'1'</span>) &#123;</span><br><span class="line"></span><br><span class="line">		DWORD value = <span class="string">'0'</span>;</span><br><span class="line">		<span class="keyword">if</span> (ERROR_SUCCESS</span><br><span class="line">			!= ::RegSetValueEx(key, _T(<span class="string">"SwapMouseButtons"</span>), <span class="number">0</span>, REG_SZ,</span><br><span class="line">			(CONST BYTE*) &amp;value, <span class="number">1</span>)) &#123;</span><br><span class="line">			::RegCloseKey(key);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		SwapMouseButton(<span class="number">0</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		DWORD value = <span class="string">'1'</span>;</span><br><span class="line">		<span class="keyword">if</span> (ERROR_SUCCESS</span><br><span class="line">			!= ::RegSetValueEx(key, _T(<span class="string">"SwapMouseButtons"</span>), <span class="number">0</span>, REG_SZ,</span><br><span class="line">			(CONST BYTE*) &amp;value, <span class="number">1</span>)) &#123;</span><br><span class="line">			::RegCloseKey(key);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		SwapMouseButton(<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">  <span class="comment">// release</span></span><br><span class="line">	::RegCloseKey(key);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>RegOpenKeyEx</code>/ <code>RegQueryValueEx</code>/ <code>RegSetValueEx</code> is register table function.</li>
<li><code>RegCloseKey</code> when function above failed release handler.</li>
<li><code>SwapMouseButton</code> used to control which button’s left right.</li>
</ul>
<h3 id="LPCTSTR"><a href="#LPCTSTR" class="headerlink" title="LPCTSTR"></a>LPCTSTR</h3><ul>
<li><code>L</code> Long no actual meaning</li>
<li><code>P</code> pointer</li>
<li><code>C</code> constant</li>
<li><code>T</code> base on <code>UNICODE</code> macro, define <code>char</code> or <code>wchar_t</code></li>
<li><code>STR</code> string char*</li>
</ul>
<p>So <code>LPCTSTR</code> almost <code>const char*</code></p>
<p>If macro not define <code>UNICODE</code>, lead to</p>
<blockquote>
<p>const char* value can’t initial LPCTSTR instance class.</p>
</blockquote>
<h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;tchar.h&gt;</span><br><span class="line">LPCTSTR SubKey = _T(&quot;Control Panel\\Mouse&quot;);</span><br></pre></td></tr></table></figure>
<p>or<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LPCWSTR SubKey = L&quot;Control Panel\\Mouse&quot;;</span><br></pre></td></tr></table></figure></p>
<p><code>_T(&quot;ABC&quot;)</code> the letter in <code>_T()</code> obtain 2 bytes same as chinese characters.</p>
]]></content>
      <categories>
        <category>c++</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>first</tag>
      </tags>
  </entry>
  <entry>
    <title>Char in MFC</title>
    <url>/2017/06/16/Char-in-MFC/</url>
    <content><![CDATA[<h3 id="character"><a href="#character" class="headerlink" title="character"></a>character</h3><ul>
<li>char：<br>prefix with <code>str</code><br>ANSI: <code>strcat( )</code>, <code>strcpy( )</code>, <code>strlen( )</code></li>
</ul>
<ul>
<li>wchar_t :<br>prefix with <code>wcs</code><br>Unicode: <code>wcscat()</code>, <code>wcscpy()</code>, <code>wcslen()</code></li>
</ul>
<ul>
<li>WCHAR:<br><code>typedef wchar_t WCHAR</code><br><strong>WCHAR == wchar_t</strong><br>macro <code>_UNICODE</code> in <code>c</code>, macro <code>UNICODE</code> in <code>windows</code><br>if no macro defined, system use <code>ANSI</code> compiling and run.</li>
</ul>
<ul>
<li>TCHAR:<br><strong>Condition define type</strong><br>If macro <code>UNICODE</code> defined<br><code>typedef wchar_t TCHAR;</code><br>If not<br><code>typedef char TCHAR;</code></li>
</ul>
<h3 id="checkout"><a href="#checkout" class="headerlink" title="checkout"></a>checkout</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span>   UNICODE</span></span><br><span class="line"><span class="keyword">typedef</span>   <span class="keyword">wchar_t</span>   TCHAR;     </span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="keyword">typedef</span>   <span class="keyword">unsigned</span>   <span class="keyword">char</span>   TCHAR;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span>   <span class="keyword">unsigned</span>   <span class="keyword">char</span>   CHAR;</span><br><span class="line"><span class="keyword">typedef</span>   <span class="keyword">unsigned</span>   <span class="keyword">wchar_t</span>   WCHAR;</span><br></pre></td></tr></table></figure>
<p>From VS2005 C++’s encoding use <code>UNICODE</code> in default.</p>
<h3 id="translate"><a href="#translate" class="headerlink" title="translate"></a>translate</h3><p>char -&gt; wchar_t<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">wchar_t</span>* <span class="title">Util::CharToWchar</span><span class="params">(<span class="keyword">char</span>* c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> length = <span class="built_in">strlen</span>(c) + <span class="number">1</span>;   <span class="comment">// the text end \0 [0x00] [EOF]</span></span><br><span class="line">  <span class="keyword">wchar_t</span> *wide = (<span class="keyword">wchar_t</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">wchar_t</span>)*length);</span><br><span class="line">  <span class="built_in">memset</span>(t, <span class="number">0</span>, length * <span class="keyword">sizeof</span>(<span class="keyword">wchar_t</span>));</span><br><span class="line">  MultiByteToWideChar(CP_ACP, <span class="number">0</span>, c, <span class="built_in">strlen</span>(c), wide, length);</span><br><span class="line">  <span class="comment">//wcout &lt;&lt; wide &lt;&lt; endl;</span></span><br><span class="line">  <span class="keyword">return</span> wide;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>wchar_t -&gt; char<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">Util::WcharToChar</span><span class="params">(<span class="keyword">wchar_t</span>* wc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> length = wcslen(wc) + <span class="number">1</span>;</span><br><span class="line">  	<span class="built_in">cout</span> &lt;&lt; length1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  	<span class="keyword">char</span> *c = <span class="keyword">new</span> <span class="keyword">char</span>[length1];</span><br><span class="line">  	WideCharToMultiByte(CP_ACP, WC_COMPOSITECHECK, wc, <span class="number">-1</span>,</span><br><span class="line">      c, length, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">  	<span class="built_in">cout</span> &lt;&lt; c &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>c++</category>
      </categories>
      <tags>
        <tag>constructure</tag>
      </tags>
  </entry>
  <entry>
    <title>Rtmp in raspberry</title>
    <url>/2017/06/19/Rtmp-in-raspberry/</url>
    <content><![CDATA[<h3 id="install-relay"><a href="#install-relay" class="headerlink" title="install relay"></a>install relay</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install build-essential libpcre3 libpcre3-dev libssl-dev</span><br></pre></td></tr></table></figure>
<h3 id="install-nginx"><a href="#install-nginx" class="headerlink" title="install nginx"></a>install nginx</h3><p>prepare</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo wget http://nginx.org/download/nginx-1.13.1.tar.gz</span><br><span class="line"></span><br><span class="line">tar -zxvf nginx-1.13.1.tar.gz</span><br><span class="line"></span><br><span class="line">sudo wget https://github.com/arut/nginx-rtmp-module/archive/master.zip</span><br><span class="line"></span><br><span class="line">unzip master.zip</span><br><span class="line"></span><br><span class="line">cd nginx-1.13.1</span><br></pre></td></tr></table></figure>
<p>compile &amp; install</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo ./configure --with-http_ssl_module --add-module=../nginx-rtmp-module-master</span><br><span class="line">sudo make</span><br><span class="line">sudo sudo make install</span><br></pre></td></tr></table></figure>
<h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rtmp &#123;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 1935;</span><br><span class="line">        chunk_size 4096;</span><br><span class="line">        application live &#123;</span><br><span class="line">            live on;</span><br><span class="line">            record off;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a href="http://blog.csdn.net/defonds/article/details/9274479/" target="_blank" rel="noopener">http://blog.csdn.net/defonds/article/details/9274479/</a></p>
<h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h3><p>restart<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo /usr/local/nginx/sbin/nginx -s stop</span><br><span class="line">sudo /usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ps -ef|grep nginx</span><br><span class="line">kill -QUIT xxx</span><br><span class="line">/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure>
<h3 id="test"><a href="#test" class="headerlink" title="test"></a>test</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ffmpeg -re -i &quot;/mnt/pny/T25.mp4&quot; -vcodec libx264 -r 15 -vprofile baseline -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -b:v 500k -s 360x240 -q 10 rtmp://192.168.xxx.xxx:1935/live/demo</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>raspberry</category>
      </categories>
  </entry>
  <entry>
    <title>Annotation in java</title>
    <url>/2017/06/21/Annotation-in-java/</url>
    <content><![CDATA[<h3 id="Create-Annotation"><a href="#Create-Annotation" class="headerlink" title="Create Annotation"></a>Create Annotation</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Target</span>(ElementType.TYPE)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> DBTable &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>Target and Retention is meta annotation</li>
<li>Target point the annotation’s place in law[SOURCE in default]</li>
<li>Retention point the annotation avaliable time</li>
</ol>
<h3 id="Create-More"><a href="#Create-More" class="headerlink" title="Create More"></a>Create More</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Target</span>(ElementType.FIELD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Constraints &#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">primaryKey</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">false</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">nullable</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">true</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">unique</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">false</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>annotation interface’s method will become ture annotation’s <code>property</code></li>
<li>interface need a default value</li>
<li>type support <code>Primary Type</code> <code>Class</code> <code>String</code> <code>Enum</code> <code>Annotation</code></li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Target</span>(ElementType.FIELD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ConstraintsMore &#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Constraints <span class="title">constraints</span><span class="params">()</span> <span class="keyword">default</span></span></span><br><span class="line"><span class="function">     @<span class="title">Constraints</span><span class="params">(nullable=<span class="keyword">false</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>Annotation not support inherit</strong><br>use default value implements inheritage</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Target</span>(ElementType.FIELD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> SqlInteger &#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">length</span><span class="params">()</span> <span class="keyword">default</span> 0</span>;</span><br><span class="line">    <span class="function">Constraints <span class="title">constraints</span><span class="params">()</span> <span class="keyword">default</span> @Constraints</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Target</span>(ElementType.FIELD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> SqlString &#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">length</span><span class="params">()</span> <span class="keyword">default</span> 0</span>;</span><br><span class="line">    <span class="function">Constraints <span class="title">constraints</span><span class="params">()</span> <span class="keyword">default</span> @Constraints</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h3><p><code>Alternative way</code></p>
<ol>
<li><p>Use enumeration type to define the type in DB<br>but this way lose agility.</p>
</li>
<li><p>Use String to describe the type you want to define<br>but ths way bind handler with DB, if DB changes<br>java need to modify and recompile.</p>
</li>
<li><p>Define some annotation more, to describe what you want<br>this is good, but maybe a little confusion</p>
</li>
</ol>
]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title>Hello Ant</title>
    <url>/2017/06/29/Hello-Ant/</url>
    <content><![CDATA[<h3 id="Create-project"><a href="#Create-project" class="headerlink" title="Create project"></a>Create project</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir hello</span><br><span class="line">mkdir src</span><br><span class="line">cd src</span><br><span class="line">vim Hello.java</span><br></pre></td></tr></table></figure>
<p>Say hello to ant.</p>
<h3 id="Build-xml"><a href="#Build-xml" class="headerlink" title="Build.xml"></a>Build.xml</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd ..</span><br><span class="line">vim Build.xml</span><br></pre></td></tr></table></figure>
<p>Set up properties<br>the source file path/ class path/ jar path and so on.<br>the trigger target is <code>rerun</code><br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">name</span>=<span class="string">"hello"</span> <span class="attr">default</span>=<span class="string">"rerun"</span> <span class="attr">basedir</span>=<span class="string">"."</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"src"</span> <span class="attr">value</span>=<span class="string">"src"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dest"</span> <span class="attr">value</span>=<span class="string">"classes"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jar_path"</span> <span class="attr">value</span>=<span class="string">"hello.jar"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>
<hr>
<p>Define the init method<br>clean workspace first<br>print a log and make classes directory<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"init"</span> <span class="attr">depends</span>=<span class="string">"clean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">echo</span>&gt;</span>+---------------------------------------------------+<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">echo</span>&gt;</span>| |<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">echo</span>&gt;</span>| B U I L D I N G $&#123;dest&#125; |<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">echo</span>&gt;</span>| |<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">echo</span>&gt;</span>+---------------------------------------------------+<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mkdir</span> <span class="attr">dir</span>=<span class="string">"$&#123;dest&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<hr>
<p>compile project use javac command<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"compile"</span> <span class="attr">depends</span>=<span class="string">"init"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javac</span> <span class="attr">srcdir</span>=<span class="string">"$&#123;src&#125;"</span> <span class="attr">destdir</span>=<span class="string">"$&#123;dest&#125;"</span> <span class="attr">includeAntRuntime</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<hr>
<p>package project target to a jar and execute<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"build"</span> <span class="attr">depends</span>=<span class="string">"compile"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jar</span> <span class="attr">jarfile</span>=<span class="string">"$&#123;jar_path&#125;"</span> <span class="attr">basedir</span>=<span class="string">"$&#123;dest&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"run"</span> <span class="attr">depends</span>=<span class="string">"build"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java</span> <span class="attr">classname</span>=<span class="string">"Hello"</span> <span class="attr">classpath</span>=<span class="string">"$&#123;jar_path&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<hr>
<p>delete build files<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"clean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">dir</span>=<span class="string">"$&#123;dest&#125;"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">file</span>=<span class="string">"$&#123;jar_path&#125;"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">echo</span>&gt;</span>x<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<hr>
<p>rerun the process<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"rerun"</span> <span class="attr">depends</span>=<span class="string">"clean,run"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ant</span> <span class="attr">target</span>=<span class="string">"run"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ant</span> <span class="attr">target</span>=<span class="string">"clean"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">echo</span>&gt;</span>xx<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="Procedure"><a href="#Procedure" class="headerlink" title="Procedure"></a>Procedure</h3><ol>
<li>clean</li>
<li>init</li>
<li>compile</li>
<li>build</li>
<li>run</li>
<li>1 -&gt; 5</li>
<li>clean</li>
</ol>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>first</tag>
      </tags>
  </entry>
  <entry>
    <title>Quantum machine</title>
    <url>/2017/07/08/Quantum-machine/</url>
    <content><![CDATA[<p><img src="/2017/07/08/Quantum-machine/snow-hill.jpg" alt></p>
<h3 id="Offical-introduce"><a href="#Offical-introduce" class="headerlink" title="Offical introduce"></a>Offical introduce</h3><p>In nature world, things tend to evolve toward their lowest energy.<br>hot thing cool down, snow slide down hills and so on.</p>
<p>Image a kind of problem, which valley is the lowest?<br>or which space snowslide is the easiest?</p>
<p>Classical algorithms seek the lowest valley by send traveler to landscape<br>and move base on logical. This is generally most efficient to move(best track), but he is easy be traped and<br>can’t see the global view, only got tiny space’s solution</p>
<p>In contrast, quantum seek by a team, contact each other by a phenomenon called <code>Quantum superposition</code>.<br>They can <code>feel</code> each other, the solution is their <code>feeling</code><br>Another phenomenon called <code>Quantum tunneling</code>, they can <code>cross</code> the hill<br>rather than forced to climb them.</p>
<p><img src="/2017/07/08/Quantum-machine/cooling-201508.png" alt></p>
<h3 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h3><p><code>Quantum tunneling</code> used this phenomenon to simulate nature[maybe god].<br><code>Quantum superposition</code> soldiers used to simulation.<br><code>Quantum annealing</code> is an algorithm to simulate the <code>rule</code> behind the problem.</p>
<p>More qubits to simulate, quicker to find the turth.</p>
<p>Maybe just like the snow on the hill, they contact with each other.<br>Theirself must know which space’s snow density is the lowest<br>and avalanche probability is the highest.</p>
<p>Quantum machine maybe used special condition/ simulation device/ observe device to get a problem’s solution <strong>by watch</strong>.</p>
]]></content>
      <categories>
        <category>theory</category>
      </categories>
      <tags>
        <tag>algorithm</tag>
        <tag>computer</tag>
      </tags>
  </entry>
  <entry>
    <title>Cryptology in transmission</title>
    <url>/2017/07/23/Cryptology-in-transmission/</url>
    <content><![CDATA[<h2 id="Password"><a href="#Password" class="headerlink" title="Password"></a>Password</h2><p>In application <code>password</code> mean a text string, used to authenticate user identity.</p>
<p>In cryptology <code>cipher</code> mean a series of algorithms.<br><code>encript</code> and <code>decript</code> be called cipher algorithm.</p>
<h2 id="Key"><a href="#Key" class="headerlink" title="Key"></a>Key</h2><p>A parameter in algorithm, participate calculation.<br>In generally bigger length of the key is, the harder to attack brutally</p>
<h2 id="Symmetric-key-algorithm"><a href="#Symmetric-key-algorithm" class="headerlink" title="Symmetric-key algorithm"></a>Symmetric-key algorithm</h2><p>Usual algorithm hava <code>DES</code> <code>3DES</code> <code>AES</code>.<br>advantage of this algorithm is performanc, disadvantage is security problem.</p>
<p>Once the key be attacked, the ciphertext be decripted.<br>So how to securely transfer symmetric key be a big problem.</p>
<h2 id="Public-key-cryptography"><a href="#Public-key-cryptography" class="headerlink" title="Public-key cryptography"></a>Public-key cryptography</h2><p>Who want to make sure security, who generate key pair.<br>Sender use public key to encript, receiver use private key to decript.</p>
<p>The advantage of this cryptograpy is security, disadvantage is performance.</p>
<h2 id="Message-digest"><a href="#Message-digest" class="headerlink" title="Message digest"></a>Message digest</h2><p><code>MD5</code> <code>SHA</code> hash algorithm used to create a fingerprint.<br>It’s an one way hash function, and unreversible.<br>Make sure data not dropping packet, prevent data not be replaced by attacker.</p>
<h2 id="Message-authentication-code"><a href="#Message-authentication-code" class="headerlink" title="Message authentication code"></a>Message authentication code</h2><p>First share common key first.<br>Sender calculate mac code by mac algorithm and key.<br>Receiver calculate as well, check data is not be ‘modified’.</p>
<p>But mac can’t resolve non-repudiation problem. Sender say the <code>key</code> be stolen,<br>the data sended by attacker.</p>
<h2 id="Digital-Signature"><a href="#Digital-Signature" class="headerlink" title="Digital Signature"></a>Digital Signature</h2><p>The way to resolve this problem is use <code>public-key cryptography</code> to calc mac.</p>
<ol>
<li><p>Sender use <code>private key</code> calc mac, send message with mac.</p>
</li>
<li><p>Receiver split data, got message and mac.</p>
</li>
<li><p>receiver check mac by <code>public key</code>, result is same with <code>sender&#39;s mac</code> show success.</p>
</li>
</ol>
<h3 id="Public-key-credential"><a href="#Public-key-credential" class="headerlink" title="Public-key credential"></a>Public-key credential</h3><p>Certification Authority[CA] to manage organization’s public key.</p>
<ol>
<li>Receiver create key pair, private key manage by it’s self, public key pass to CA.</li>
<li>CA check [offline maybe] the key is from the organization.</li>
<li>CA sign the receiver’s public-key by itself’s private-key to generate a <code>PKC</code></li>
<li>fetch <code>PKC</code></li>
<li>Sender use CA’s public-key to check <code>PKC</code>,<br>if successd then the public-key in <code>PKC</code> is the reciver’s.</li>
<li>Encript by <code>public-key</code> send to receiver.</li>
<li>Receive and decript message by <code>private-key</code>.</li>
</ol>
]]></content>
      <categories>
        <category>theory</category>
      </categories>
      <tags>
        <tag>fundamental</tag>
        <tag>cryptograpy</tag>
      </tags>
  </entry>
  <entry>
    <title>Tomcat-ClassLoader</title>
    <url>/2017/08/03/Tomcat-ClassLoader/</url>
    <content><![CDATA[<h2 id="JVM-class-loader"><a href="#JVM-class-loader" class="headerlink" title="JVM class loader"></a>JVM class loader</h2><p>JVM contain loaders:</p>
<ol>
<li>BootStrapClassLoader<br> jvm need foundation class</li>
<li>ExtClassLoader<br> load <code>$JAVA_HOME$/jre/lib/ext</code> jars</li>
<li>AppClassLoader<br> $CLASS_PATH$ and -classpath, and class not be contained above</li>
<li>CustomClassLoader<br> self define class loader[<strong>progress</strong>]</li>
</ol>
<p>different classloader’s class <strong>can’t use in mix</strong>,<br>even if the class is <strong>same package name</strong> and <strong>same class name</strong>.</p>
<p>JVM use delegation model</p>
<ol>
<li>pass request to father <strong>until the top</strong></li>
<li>if top can’t load return to <strong>sub level</strong></li>
<li>if the floor can’t load class throw <strong>ClassNotFoundException</strong></li>
</ol>
<p><a href="2017-05-16 Java-ClassLoader-2">java class loader</a></p>
<p>So if a same path class be put in $CLASS_PATH$ directory, java will load<br>$CLASS_PATH$ class first.</p>
<p><img src="/2017/08/03/Tomcat-ClassLoader/java-classloader.svg" alt></p>
<h2 id="Tomcat-class-loader"><a href="#Tomcat-class-loader" class="headerlink" title="Tomcat class loader"></a>Tomcat class loader</h2><p>Tomcat loader like this:</p>
<ol>
<li>Bootstrap<br> guilde class loader <code>$JAVA_HOME$/jre/lib/ext</code> jars</li>
<li>System<br> tomcat container loading <code>$CATALINA_HOME$/bin</code> jars</li>
<li>Common<br> app common use class <code>$CATALINA_HOME$/lib</code> jars</li>
<li>WebApp<br> <code>WEB-INF/classes</code> and <code>WEB-INF/lib</code> developer’s workspace</li>
</ol>
<p><img src="/2017/08/03/Tomcat-ClassLoader/tomcat-classloader.svg" alt></p>
<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>When developing throw an exception from java.io.ObjectStreamClass</p>
<p><em>row:2034</em><br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ClassCastException(</span><br><span class="line">  <span class="string">"cannot assign instance of "</span> +</span><br><span class="line">  val.getClass().getName() + <span class="string">" to field "</span> +</span><br><span class="line">  f.getDeclaringClass().getName() + <span class="string">"."</span> +</span><br><span class="line">  f.getName() + <span class="string">" of type "</span> +</span><br><span class="line">  f.getType().getName() + <span class="string">" in instance of "</span> +</span><br><span class="line">  obj.getClass().getName());</span><br></pre></td></tr></table></figure></p>
<p>From inspect the class type is a blank type only a path name.<br>Manually change the Class type suppress exception then jump breakpoint<br>the throw a exception like this:</p>
<p><img src="/2017/08/03/Tomcat-ClassLoader/TIM-20170802190442.png" alt></p>
<h3 id="Key-Point"><a href="#Key-Point" class="headerlink" title="Key Point"></a>Key Point</h3><p>The Class used to communication is for other application use,<br>but the class contain a property that is from acceptor’s offical workspace.</p>
<p>Two application use a same tomcat and<br>put the dependent jar in <code>$CATALINA_HOME$/lib</code>.</p>
<p>It lead to a problem, the acceptor’s application load object and it’s field<br>class in two different classloader. one is <code>WebAppClassLoader</code>, on is <code>bootstrap</code></p>
<ol>
<li>In object receive acceptor object use the common class jar[find in floor level]</li>
<li>When object comes the property field’s class be found in workspace<br> but object’s classloader can’t see,<br> so as it’s sign target field class is just a shell.</li>
<li>When suppress exception and jump breakpoint,<br> the business class violate the loader constraint.</li>
</ol>
]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title>Raspberry ap mode</title>
    <url>/2017/08/05/Raspberry-ap-mode/</url>
    <content><![CDATA[<h3 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h3><p>upgrade system &amp;&amp; update apt-get resources<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/etc/apt/sources.list</span><br><span class="line"></span><br><span class="line">deb http://mirrors.zju.edu.cn/raspbian/raspbian/ jessie main contrib non-free rpi</span><br><span class="line"># Uncomment line below then &apos;apt-get update&apos; to enable &apos;apt-get source&apos;</span><br><span class="line"></span><br><span class="line">#deb-src http://mirrors.zju.edu.cn/raspbian/raspbian/ jessie main contrib non-free rpi</span><br><span class="line">#deb http://mirror.nus.edu.sg/raspbian/raspbian wheezy main contrib non-free rpi</span><br><span class="line">#deb http://mirrordirector.raspbian.org/raspbian/ jessie main contrib non-free rpi</span><br><span class="line"># Uncomment line below then &apos;apt-get update&apos; to enable &apos;apt-get source&apos;</span><br><span class="line">#deb-src http://archive.raspbian.org/raspbian/ jessie main contrib non-free rpi</span><br></pre></td></tr></table></figure></p>
<p>software<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/oblique/create_ap.git</span><br></pre></td></tr></table></figure></p>
<p>dependencies<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install util-linux procps iproute2 iw haveged hostapd dnsmasq</span><br></pre></td></tr></table></figure></p>
<p><strong>hostapd</strong> is the daemon thread of <code>Host Access Point</code><br>used to provide <code>WPA2</code> token check and authentication</p>
<p><strong>dnsmasq</strong> used to config <code>DNS</code> provide <code>DHCP</code> service</p>
<h3 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h3><p><a href="https://github.com/oblique/create_ap" target="_blank" rel="noopener">Config Git Page</a></p>
<h3 id="Wlan-config"><a href="#Wlan-config" class="headerlink" title="Wlan config"></a>Wlan config</h3><p>dispatch wlan0 a static ip address<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/dhcpcd.conf</span><br><span class="line"></span><br><span class="line">interface wlan0</span><br><span class="line">    static ip_address=192.168.0.1/24</span><br></pre></td></tr></table></figure></p>
<p>comments the wlan0 wpa-conf to prevent distribute host mode<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/network/interfaces</span><br><span class="line"></span><br><span class="line">allow-hotplug wlan0</span><br><span class="line">iface wlan0 inet manual</span><br><span class="line">#    wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf</span><br></pre></td></tr></table></figure></p>
<p>restart raspberry<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo service dhcpcd restart</span><br><span class="line">sudo reboot</span><br><span class="line">sudo init 0</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="Host-config"><a href="#Host-config" class="headerlink" title="Host config"></a>Host config</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/hostapd/hostapd.conf</span><br><span class="line"></span><br><span class="line">interface=wlan0</span><br><span class="line">driver=nl80211</span><br><span class="line">ssid=pi3ap</span><br><span class="line">hw_mode=g</span><br><span class="line">channel=6</span><br><span class="line">wmm_enabled=1</span><br><span class="line">macaddr_acl=0</span><br><span class="line">auth_algs=1</span><br><span class="line">ignore_broadcast_ssid=0</span><br><span class="line"># WPA2 mode</span><br><span class="line">wpa=2</span><br><span class="line">wpa_passphrase=12345678</span><br><span class="line">wpa_key_mgmt=WPA-PSK</span><br><span class="line">rsn_pairwise=CCMP</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="Web-config"><a href="#Web-config" class="headerlink" title="Web config"></a>Web config</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line"># remove comment</span><br><span class="line">net.ipv4.ip_forward=1</span><br></pre></td></tr></table></figure>
<p>if not want to reboot raspberry<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo sh -c &quot;echo 1 &gt;/proc/sys/net/ipv4/ip_forward&quot;</span><br></pre></td></tr></table></figure></p>
<p>For config <code>NAT</code>, config firewall first<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo iptables -t nat -APOSTROUTING -o eth0 -j MASQUERADE</span><br><span class="line">sudo iptables -A FORWARD -i eth0-o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br><span class="line">sudo iptables -A FORWARD -i wlan0-o eth0 -j ACCEPT</span><br></pre></td></tr></table></figure></p>
<p>set rule autostart<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo sh -c &quot;iptables-save&gt; /etc/iptables.ipv4.nat&quot;</span><br></pre></td></tr></table></figure></p>
<p>run <code>NAT</code> by <code>DHCPCD</code> need a new config<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano /lib/dhcpcd/dhcpcd-hooks/70-ipv4-nat</span><br><span class="line">iptables-restore &lt;/etc/iptables.ipv4.nat</span><br></pre></td></tr></table></figure></p>
<p>restart<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo service hostapdstart</span><br><span class="line">sudo service dnsmasq start</span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>raspberry</category>
      </categories>
  </entry>
  <entry>
    <title>Spring Structure</title>
    <url>/2017/08/10/Spring-Structure/</url>
    <content><![CDATA[<p><img src="/2017/08/10/Spring-Structure/spring-structure.svg" alt="spring structure"></p>
<ol>
<li><em>AliasRegistry</em><br>定义对 <code>Alias</code> 的简单增删改操作</li>
</ol>
<ol>
<li>SimpleAliasRegistry  &lt;—1<br>实现 <code>Alias</code> 缓存，实现 <em>AliasRegistry</em></li>
</ol>
<ol>
<li>DefaultSingletonBeanRegistry  &lt;-2  &lt;—9<br>实现 <em>SingletonBeanRegistry</em></li>
</ol>
<ol>
<li>FactoryBeanRegistrySupport  &lt;-3<br>增加了对 <code>FactoryBean</code> 的特殊处理 <code>Util</code>?</li>
</ol>
<ol>
<li>AbstractBeanFactory  &lt;-4  &lt;—12<br>综合 <code>注册器</code> <code>可配置定义</code> 的功能</li>
</ol>
<ol>
<li>AbstractAutowireCapableBeanFactory  &lt;-5  &lt;—15<br>综合 <code>Bean工厂</code> <code>Bean特性定义</code> 的功能</li>
</ol>
<ol>
<li>DefaultListableBeanFactory  &lt;-6  &lt;—8  &lt;—10<br>综合所有功能 主要实现Bean处理</li>
</ol>
<ol>
<li><em>BeanDifinitionRegistry</em>  &lt;-1</li>
</ol>
<ol>
<li><em>SingletonBeanRegistry</em><br>定义 <code>单例</code> 注册 获取</li>
</ol>
<ol>
<li><em>BeanFactory</em><br>定义 获取Bean Bean的属性</li>
</ol>
<ol>
<li><em>HierarchicalBeanFactory</em>  &lt;-10<br>定义 <code>父工厂</code> 的支持</li>
</ol>
<ol>
<li><em>ConfigurableBeanFactory</em>  &lt;-9 &lt;-11<br>定义 <code>配置工厂</code> 的各种方法</li>
</ol>
<ol>
<li><em>ListableBeanFactory</em>  &lt;-10<br>定义 条件取Bean <code>配置清单</code> 的方法</li>
</ol>
<ol>
<li><em>ConfigurableListableBeanFactory</em>  &lt;-12  &lt;-13 &lt;-10<br>定义 指定 <code>忽略类型、接口</code> 等</li>
</ol>
<ol>
<li><em>AutowireCapableBeanFactory</em>  &lt;-10<br>定义 Bean 操作 及 回调处理</li>
</ol>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>structure</tag>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>python basic 1</title>
    <url>/2017/08/19/python-basic-1/</url>
    <content><![CDATA[<h2 id="Replace-String"><a href="#Replace-String" class="headerlink" title="Replace String"></a>Replace String</h2><ol>
<li><p>replace function</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a = &apos;hello word&apos;</span><br><span class="line">b = a.replace(&apos;word&apos;,&apos;python&apos;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>regex</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import re</span><br><span class="line">a = &apos;hello word&apos;</span><br><span class="line">pattern = re.compile(&apos;word&apos;)</span><br><span class="line">b = pattern.sub(&apos;python&apos;,a)</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Change-line-inside"><a href="#Change-line-inside" class="headerlink" title="Change line inside"></a>Change line inside</h2><ol>
<li>three single qute ‘’’</li>
<li>three double qute “””</li>
<li>one backslash \</li>
</ol>
<h2 id="Thread-sleep"><a href="#Thread-sleep" class="headerlink" title="Thread sleep"></a>Thread sleep</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import time</span><br><span class="line">time.sleep(7)</span><br></pre></td></tr></table></figure>
<h2 id="Real-time-print"><a href="#Real-time-print" class="headerlink" title="Real time print"></a>Real time print</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import time</span><br><span class="line">import sys</span><br><span class="line">print &apos;hello word&apos;</span><br><span class="line">sys.stdout.flush()</span><br><span class="line">time.sleep(7)</span><br></pre></td></tr></table></figure>
<h2 id="Basic-function"><a href="#Basic-function" class="headerlink" title="Basic function"></a>Basic function</h2><h3 id="type-transfer"><a href="#type-transfer" class="headerlink" title="type transfer"></a>type transfer</h3><ul>
<li><p>int()</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int(&apos;7&apos;)</span><br><span class="line">int(&apos;17&apos;, 16)</span><br></pre></td></tr></table></figure>
</li>
<li><p>str()</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">str(7)</span><br><span class="line">hex(17)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="string"><a href="#string" class="headerlink" title="string"></a>string</h3><ol>
<li><p>remove blank / special characters<br><code>s.strip().lstrip().rstrip(&#39;,&#39;)</code></p>
</li>
<li><p>copy</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#strcpy(sStr1,sStr2)</span></span><br><span class="line">sStr1 = <span class="string">'strcpy'</span></span><br><span class="line">sStr2 = sStr1</span><br><span class="line">sStr1 = <span class="string">'strcpy2'</span></span><br><span class="line"><span class="keyword">print</span> sStr2</span><br></pre></td></tr></table></figure>
</li>
<li><p>concat</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#strcat(sStr1,sStr2)</span></span><br><span class="line">sStr1 = <span class="string">'strcat'</span></span><br><span class="line">sStr2 = <span class="string">'append'</span></span><br><span class="line">sStr1 += sStr2</span><br><span class="line"><span class="keyword">print</span> sStr1</span><br></pre></td></tr></table></figure>
</li>
<li><p>find</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#strchr(sStr1,sStr2)</span></span><br><span class="line"><span class="comment"># &lt; 0 not found</span></span><br><span class="line">sStr1 = <span class="string">'strchr'</span></span><br><span class="line">sStr2 = <span class="string">'s'</span></span><br><span class="line">nPos = sStr1.index(sStr2)</span><br><span class="line"><span class="keyword">print</span> nPos</span><br></pre></td></tr></table></figure>
</li>
<li><p>compare</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#strcmp(sStr1,sStr2)</span></span><br><span class="line">sStr1 = <span class="string">'strchr'</span></span><br><span class="line">sStr2 = <span class="string">'strch'</span></span><br><span class="line"><span class="keyword">print</span> cmp(sStr1,sStr2)</span><br></pre></td></tr></table></figure>
</li>
<li><p>scan 4 contain</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#strspn(sStr1,sStr2)</span></span><br><span class="line">sStr1 = <span class="string">'12345678'</span></span><br><span class="line">sStr2 = <span class="string">'456'</span></span><br><span class="line"><span class="comment">#sStr1 and chars both in sStr1 and sStr2</span></span><br><span class="line"><span class="keyword">print</span> len(sStr1 <span class="keyword">and</span> sStr2)</span><br></pre></td></tr></table></figure>
</li>
<li><p>length</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#strlen(sStr1)</span></span><br><span class="line">sStr1 = <span class="string">'strlen'</span></span><br><span class="line"><span class="keyword">print</span> len(sStr1)</span><br></pre></td></tr></table></figure>
</li>
<li><p>case</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#strlwr(sStr1)</span></span><br><span class="line">sStr1 = <span class="string">'JCstrlwr'</span></span><br><span class="line">sStr1 = sStr1.upper()</span><br><span class="line"><span class="comment">#sStr1 = sStr1.lower()</span></span><br><span class="line"><span class="keyword">print</span> sStr1</span><br></pre></td></tr></table></figure>
</li>
<li><p>add pointed string</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#strncat(sStr1,sStr2,n)</span></span><br><span class="line">sStr1 = <span class="string">'12345'</span></span><br><span class="line">sStr2 = <span class="string">'abcdef'</span></span><br><span class="line">n = <span class="number">3</span></span><br><span class="line">sStr1 += sStr2[<span class="number">0</span>:n]</span><br><span class="line"><span class="keyword">print</span> sStr1</span><br></pre></td></tr></table></figure>
</li>
<li><p>compare pointed string</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#strncmp(sStr1,sStr2,n)</span></span><br><span class="line">sStr1 = <span class="string">'12345'</span></span><br><span class="line">sStr2 = <span class="string">'123bc'</span></span><br><span class="line">n = <span class="number">3</span></span><br><span class="line"><span class="keyword">print</span> cmp(sStr1[<span class="number">0</span>:n],sStr2[<span class="number">0</span>:n])</span><br></pre></td></tr></table></figure>
</li>
<li><p>copy pointed string</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#strncpy(sStr1,sStr2,n)</span></span><br><span class="line">sStr1 = <span class="string">''</span></span><br><span class="line">sStr2 = <span class="string">'12345'</span></span><br><span class="line">n = <span class="number">3</span></span><br><span class="line">sStr1 = sStr2[<span class="number">0</span>:n]</span><br><span class="line"><span class="keyword">print</span> sStr1</span><br></pre></td></tr></table></figure>
</li>
<li><p>replace pointed string</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#strnset(sStr1,ch,n)</span></span><br><span class="line">sStr1 = <span class="string">'12345'</span></span><br><span class="line">ch = <span class="string">'r'</span></span><br><span class="line">n = <span class="number">3</span></span><br><span class="line">sStr1 = n * ch + sStr1[<span class="number">3</span>:]</span><br><span class="line"><span class="keyword">print</span> sStr1</span><br></pre></td></tr></table></figure>
</li>
<li><p>scan string</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#strpbrk(sStr1,sStr2)</span></span><br><span class="line">sStr1 = <span class="string">'cekjgdklab'</span></span><br><span class="line">sStr2 = <span class="string">'gka'</span></span><br><span class="line">nPos = <span class="number">-1</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> sStr1:</span><br><span class="line">    <span class="keyword">if</span> c <span class="keyword">in</span> sStr2:</span><br><span class="line">        nPos = sStr1.index(c)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">print</span> nPos</span><br></pre></td></tr></table></figure>
</li>
<li><p>reverse string</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#strrev(sStr1)</span></span><br><span class="line">sStr1 = <span class="string">'abcdefg'</span></span><br><span class="line">sStr1 = sStr1[::<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">print</span> sStr1</span><br></pre></td></tr></table></figure>
</li>
<li><p>split string</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#strtok(sStr1,sStr2)</span></span><br><span class="line">sStr1 = <span class="string">'ab,cde,fgh,ijk'</span></span><br><span class="line">sStr2 = <span class="string">','</span></span><br><span class="line">sStr1 = sStr1[sStr1.find(sStr2) + <span class="number">1</span>:]</span><br><span class="line"><span class="keyword">print</span> sStr1</span><br><span class="line"><span class="comment">#or</span></span><br><span class="line">s = <span class="string">'ab,cde,fgh,ijk'</span></span><br><span class="line">print(s.split(<span class="string">','</span>))</span><br></pre></td></tr></table></figure>
</li>
<li><p>connect string</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">delimiter = <span class="string">','</span></span><br><span class="line">mylist = [<span class="string">'Brazil'</span>, <span class="string">'Russia'</span>, <span class="string">'India'</span>, <span class="string">'China'</span>]</span><br><span class="line"><span class="keyword">print</span> delimiter.join(mylist)</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>Tomcat static resources</title>
    <url>/2017/08/20/Tomcat-static-resources/</url>
    <content><![CDATA[<h3 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h3><p><code>$CATALINA_HOME\conf\web.conf</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt;default&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;org.apache.catalina.servlets.DefaultServlet&lt;/servlet-class&gt;</span><br><span class="line">    &lt;init-param&gt;</span><br><span class="line">        &lt;param-name&gt;debug&lt;/param-name&gt;</span><br><span class="line">        &lt;param-value&gt;0&lt;/param-value&gt;</span><br><span class="line">    &lt;/init-param&gt;</span><br><span class="line">    &lt;init-param&gt;</span><br><span class="line">        &lt;param-name&gt;listings&lt;/param-name&gt;</span><br><span class="line">        &lt;param-value&gt;false&lt;/param-value&gt;</span><br><span class="line">    &lt;/init-param&gt;</span><br><span class="line">    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</span><br><span class="line">&lt;/servlet&gt;</span><br></pre></td></tr></table></figure>
<p>When param <code>listings</code> is true, <code>/</code> can list all files</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- The mapping for the default servlet --&gt;</span><br><span class="line">&lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;default&lt;/servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/&lt;/url-pattern&gt;</span><br><span class="line">&lt;/servlet-mapping&gt;</span><br></pre></td></tr></table></figure>
<p>The pattern mapping is this, for all no mapping <code>servlet-mapping</code> request.</p>
<h3 id="Process"><a href="#Process" class="headerlink" title="Process"></a>Process</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protected void doGet(HttpServletRequest request,</span><br><span class="line">  HttpServletResponse response)</span><br><span class="line">    throws IOException, ServletException &#123;</span><br><span class="line">      // Serve the requested resource, including the data content</span><br><span class="line">      serveResource(request, response, true, fileEncoding);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>judge resource existence</li>
<li>judge file readable</li>
<li>set response head <code>content-type</code> base on file type</li>
<li>judge file time</li>
<li>set response timeout</li>
<li>stream operation</li>
</ol>
<p><img src="/2017/08/20/Tomcat-static-resources/tomcat.png" alt="tomcat"></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title>python edit file</title>
    <url>/2017/08/21/python-edit-file/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> os.path</span><br><span class="line"></span><br><span class="line">dirpath = <span class="string">'F:\\Users'</span></span><br><span class="line">pattern = <span class="string">'&lt;/head&gt;'</span></span><br><span class="line">css = <span class="string">'&lt;link rel="stylesheet" href="./style.css"&gt;&lt;/head&gt;'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> os.listdir(dirpath):</span><br><span class="line">    <span class="comment"># read all text</span></span><br><span class="line">    origin = open(os.path.join(dirpath, file), <span class="string">'r+'</span>).readlines()</span><br><span class="line">    <span class="comment"># edit target line</span></span><br><span class="line">    origin[<span class="number">0</span>] = re.compile(pattern).sub(css, origin[<span class="number">0</span>])</span><br><span class="line">    <span class="comment"># rewrite whole file</span></span><br><span class="line">    open(os.path.join(dirpath, file), <span class="string">'w+'</span>).writelines(origin)</span><br></pre></td></tr></table></figure>
<ol>
<li><code>os.listdir(dir)</code> list single node’s sub directory</li>
<li><code>os.path.join(a, b)</code> conbine two path string</li>
<li><code>re.compile(pattern).sub(result, src)</code> replace string</li>
</ol>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>Java memory anaylsis</title>
    <url>/2017/08/22/Java-memory-anaylsis/</url>
    <content><![CDATA[<h3 id="Machine-addresses"><a href="#Machine-addresses" class="headerlink" title="Machine addresses"></a>Machine addresses</h3><p>Many data structures involve representation of machine addresses.</p>
<p>The typical x64 architectures we widely used, need <strong>8 bytes</strong> to represent address.</p>
<p>Many older machines use a 32-bit architecture that<br>would involve just <strong>4 bytes</strong> per machine address.</p>
<h3 id="Primary-type"><a href="#Primary-type" class="headerlink" title="Primary type"></a>Primary type</h3><div class="table-container">
<table>
<thead>
<tr>
<th>type</th>
<th>bytes</th>
</tr>
</thead>
<tbody>
<tr>
<td>byte</td>
<td>1</td>
</tr>
<tr>
<td>boolean</td>
<td>1</td>
</tr>
<tr>
<td>char</td>
<td>2</td>
</tr>
<tr>
<td>int</td>
<td>4</td>
</tr>
<tr>
<td>float</td>
<td>4</td>
</tr>
<tr>
<td>double</td>
<td>8</td>
</tr>
<tr>
<td>long</td>
<td>8</td>
</tr>
</tbody>
</table>
</div>
<hr>
<h3 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h3><p><img src="/2017/08/22/Java-memory-anaylsis/object.svg" alt="Object"></p>
<p>The <code>overhead</code> includes:</p>
<ul>
<li>a reference to the object’s class</li>
<li>garbage collection information</li>
<li>synchronization information</li>
</ul>
<hr>
<h3 id="List"><a href="#List" class="headerlink" title="List"></a>List</h3><h4 id="LinkedList"><a href="#LinkedList" class="headerlink" title="LinkedList:"></a>LinkedList:</h4><p><img src="/2017/08/22/Java-memory-anaylsis/linkedlist.svg" alt="Object"></p>
<p>Instance :</p>
<ul>
<li>16 bytes of object overhead</li>
<li>8 bytes for first node reference</li>
<li>4 bytes counter</li>
<li>4 bytes padding</li>
</ul>
<p>Node :</p>
<ul>
<li>16 bytes of object overhead</li>
<li>8 bytes for the <strong>references</strong> to the Item</li>
<li>8 bytes for the <strong>next</strong> to the Item</li>
<li>8 bytes for the extra overhead</li>
</ul>
<p>total :<br><strong>32 + (40 + size(Ojbect)) * N</strong></p>
<h4 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h4><p><img src="/2017/08/22/Java-memory-anaylsis/array.svg" alt="Object"></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>type</th>
<th>bytes</th>
</tr>
</thead>
<tbody>
<tr>
<td>int[N]</td>
<td>24 + 4N</td>
</tr>
<tr>
<td>Integer[N]</td>
<td>24 + 32N</td>
</tr>
<tr>
<td>int[M][N]</td>
<td>24 + 8 * (24 + 4N)</td>
</tr>
<tr>
<td>Integer[M][N]</td>
<td>24 + 8 * (24 + 32N)</td>
</tr>
</tbody>
</table>
</div>
<hr>
<h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 16 bytes</span><br><span class="line">public class String &#123;</span><br><span class="line">  // reference 8 bytes</span><br><span class="line">  // 24 + 2N bytes</span><br><span class="line">  private char[] value;</span><br><span class="line">  // 4 bytes</span><br><span class="line">  private int offset;</span><br><span class="line">  // 4 bytes</span><br><span class="line">  private int count;</span><br><span class="line">  // 4 bytes</span><br><span class="line">  private int hash;</span><br><span class="line">  ...</span><br><span class="line">  // padding 4 bytes</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>Total : 64 + 2N</strong></p>
<hr>
<h3 id="HashMap"><a href="#HashMap" class="headerlink" title="HashMap"></a>HashMap</h3><p><img src="/2017/08/22/Java-memory-anaylsis/hashmap.svg" alt="Object"><br>array length : M<br>average node size : N<br><strong>Total[structure] : 64M + 48N</strong></p>
<hr>
<h3 id="Tree"><a href="#Tree" class="headerlink" title="Tree"></a>Tree</h3><p><img src="/2017/08/22/Java-memory-anaylsis/tree.svg" alt="Object"><br><strong>Total[structure] : 56N</strong></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>constructure</tag>
      </tags>
  </entry>
  <entry>
    <title>linux execute in background</title>
    <url>/2017/08/30/linux-execute-in-background/</url>
    <content><![CDATA[<p><a href="http://blog.csdn.net/zstu_zlj/article/details/51783937" target="_blank" rel="noopener">link</a></p>
<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>Always meet problem like this:<br>Login in by <code>telnet/ssh</code>, run some time costs task<br>But be interrupted, cause by the net problem.</p>
<p>How to deal this kind problem, let task run background</p>
<h2 id="Command-nohup-setsid-amp"><a href="#Command-nohup-setsid-amp" class="headerlink" title="Command nohup/setsid/&amp;"></a>Command <code>nohup/setsid/&amp;</code></h2><ol>
<li><strong>nohup</strong></li>
</ol>
<blockquote>
<p>in early version UNIX terminal communicate with system by<br>modem[cat?]. when logout or disconnect, modem send a hang up<br>signal to system to close current session process and all sub processes.</p>
</blockquote>
<p>When terminal logout or connect broke, terminal recieves a ‘HUP[hangup]’ signal.<br>So we have two solutions</p>
<ul>
<li>let process ignore ‘HUP’ signal</li>
<li>change process’s owner</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nohup ./sunny.sh clientid xxxxx &amp;</span><br><span class="line">nohup ./sunny.sh clientid &gt; sunny.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>
<ol>
<li><strong>setsid</strong></li>
</ol>
<p>Change process’s owner to process id ‘1’</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">setid ./sunny.sh clientid xxxxx</span><br></pre></td></tr></table></figure>
<ol>
<li><strong>&amp;</strong></li>
</ol>
<p>When command put in <code>()</code> , command can be run in sub shell.<br>Put <code>&amp;</code> into <code>()</code> as well, the commited job wouldn’t be add in job list.<br>So command can ignore the <code>HUP</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(./sunny.sh clientid xxxxx &amp;)</span><br></pre></td></tr></table></figure>
<ol>
<li><strong>disown</strong></li>
</ol>
<p>If a process already running</p>
<ul>
<li><code>disown -h</code> make a job ignore signal</li>
<li><code>disown -ah</code> make all jobs ignore signal</li>
<li><code>disown -rh</code> make running jobs ignore signal</li>
</ul>
<p>if job already run in background<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./sunny.sh clientid xxxxx &amp;</span><br><span class="line"></span><br><span class="line">[1]+  Running                 ./sunny.sh clientid xxxxx &amp;</span><br><span class="line"></span><br><span class="line">disown -h %1</span><br><span class="line"></span><br><span class="line">ps -ef |grep sunny</span><br></pre></td></tr></table></figure></p>
<p>if job already run in front<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./sunny.sh clientid xxxxx</span><br><span class="line"></span><br><span class="line"># [ctrl + z]</span><br><span class="line">[1]+  Stopped                 ./sunny.sh clientid xxxxx</span><br><span class="line"></span><br><span class="line"># put to background</span><br><span class="line">bg %1</span><br><span class="line">[1]+  Running                 ./sunny.sh clientid xxxxx &amp;</span><br><span class="line"></span><br><span class="line">disown -h %1</span><br><span class="line"></span><br><span class="line">ps -ef |grep sunny</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>command</tag>
      </tags>
  </entry>
  <entry>
    <title>linux process job session control</title>
    <url>/2017/08/31/linux-process-job-session-control/</url>
    <content><![CDATA[<h2 id="Process-group"><a href="#Process-group" class="headerlink" title="Process group"></a>Process group</h2><p>Every process have a process id and a process group id<br>Every process group have a leader process[id is same as group]</p>
<p>Each process in group have relations, like a family tree.</p>
<p>All processes’ root is <code>init</code> process which id is <strong>1</strong><br>Process group will exist when process exist in group.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pi@raspberrypi:~ $ ps axj |grep &quot;\s1\s&quot;</span><br><span class="line">    0     1     1     1 ?           -1 Ss       0   2:25 /sbin/init</span><br><span class="line">    1   145   145   145 ?           -1 Ss       0   0:27 /lib/systemd/systemd-journald</span><br><span class="line">    1   150   150   150 ?           -1 Ss       0   0:00 /lib/systemd/systemd-udevd</span><br><span class="line">    ......</span><br><span class="line">    1   853   853   853 ?           -1 Ss       0   0:00 /usr/sbin/sshd -D</span><br></pre></td></tr></table></figure>
<h2 id="Jobs"><a href="#Jobs" class="headerlink" title="Jobs"></a>Jobs</h2><p><code>Shell</code> control frontground and background by <code>job</code> or <code>process group</code> but not process.</p>
<p>A job can be composed by one or more process group.</p>
<p>A shell can run a frontground job and multi background jobs.</p>
<p>Use pip command <code>|</code> run multi process, <code>&amp;</code> make job background.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pi@raspberrypi:~ $ sleep 1000|more|less &amp;</span><br><span class="line">[1] 12033</span><br><span class="line">pi@raspberrypi:~ $ ps axj | head -n1</span><br><span class="line"> PPID   PID  PGID   SID TTY      TPGID STAT   UID   TIME COMMAND</span><br><span class="line">pi@raspberrypi:~ $ ps axj |grep 12033</span><br><span class="line">12031 12033 12033 12033 pts/0    12068 Ss    1000   0:00 -bash</span><br><span class="line">12033 12061 12061 12033 pts/0    12068 T     1000   0:00 sleep 1000</span><br><span class="line">12033 12062 12061 12033 pts/0    12068 T     1000   0:00 more</span><br><span class="line">12033 12063 12061 12033 pts/0    12068 T     1000   0:00 less</span><br><span class="line">12033 12068 12068 12033 pts/0    12068 R+    1000   0:00 ps axj</span><br><span class="line">12033 12069 12068 12033 pts/0    12068 S+    1000   0:00 grep --color=auto 12033</span><br><span class="line"></span><br><span class="line">pi@raspberrypi:~ $ ps axj |grep 12031</span><br><span class="line">12024 12031 12024 12024 ?           -1 S     1000   0:00 sshd: pi@pts/0      </span><br><span class="line">12031 12033 12033 12033 pts/0    12070 Ss    1000   0:00 -bash</span><br><span class="line">12033 12071 12070 12033 pts/0    12070 S+    1000   0:00 grep --color=auto 12031</span><br><span class="line"></span><br><span class="line">pi@raspberrypi:~ $ ps axj |grep 12024</span><br><span class="line">  853 12024 12024 12024 ?           -1 Ss       0   0:00 sshd: pi [priv]     </span><br><span class="line">12024 12031 12024 12024 ?           -1 S     1000   0:00 sshd: pi@pts/0      </span><br><span class="line">12033 12074 12073 12033 pts/0    12073 S+    1000   0:00 grep --color=auto 12024</span><br><span class="line"></span><br><span class="line">pi@raspberrypi:~ $ ps axj |grep 853</span><br><span class="line">    1   853   853   853 ?           -1 Ss       0   0:00 /usr/sbin/sshd -D</span><br><span class="line">  853 12024 12024 12024 ?           -1 Ss       0   0:00 sshd: pi [priv]     </span><br><span class="line">12033 12076 12075 12033 pts/0    12075 S+    1000   0:00 grep --color=auto 853</span><br></pre></td></tr></table></figure>
<p>Difference between job and process group:<br>Sub process not belong to main process’s job alone.</p>
<h2 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h2><p>Session composed by one or more process group.[job?]<br>A session can have control terminal.</p>
<p>Builde a connection and connect with terminal’s session fist<br>process be called the <code>control process</code> <code>bash</code> in normal.</p>
<ul>
<li>one control process <code>bash</code></li>
<li>one frontground process</li>
<li>any number background process</li>
</ul>
<h2 id="Job-control"><a href="#Job-control" class="headerlink" title="Job control"></a>Job control</h2><p><code>job control</code> is new charcter be added in 1980 by BSD.<br>It allow terminal execute multi process group.</p>
<ul>
<li>need job control shell</li>
<li>kernal’s terminal driver support job control</li>
<li>kernal support job’s control signal</li>
</ul>
<h3 id="Signal"><a href="#Signal" class="headerlink" title="Signal"></a>Signal</h3><div class="table-container">
<table>
<thead>
<tr>
<th>name</th>
<th>opt</th>
<th>signal</th>
</tr>
</thead>
<tbody>
<tr>
<td>Interrupt</td>
<td>Ctrl + c</td>
<td>SIGINT</td>
</tr>
<tr>
<td>Quit</td>
<td>Ctrl + \</td>
<td>SIGQUIT</td>
</tr>
<tr>
<td>Hang up</td>
<td>Ctrl + z</td>
<td>SIGSTP</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Input-Output"><a href="#Input-Output" class="headerlink" title="Input Output"></a>Input Output</h2><p><strong>Only frontground process can read terminal’s input data.</strong></p>
<p>When background process want to read data from terminal<br>it is not a error behaviour, just not be allowed.</p>
<p>When kernal driver detected background process want read<br>it will send a <code>SIGTSTP</code> signal to background job to stop process.</p>
<p>Then use <code>fg</code> command change process to front and run<br>[change to front and put <code>SIGCONT</code> signal to this group]</p>
<p><strong>Background process write data to terminal can be selfdefine</strong><br><code>stty tostop</code> command formidden background write data to terminal.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> args[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;args);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,args);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>997.2 vs 997.1 Turbo</title>
    <url>/2017/09/07/997.2-vs-997.1-Turbo/</url>
    <content><![CDATA[<p>(6speedonline)[<a href="https://www.6speedonline.com/forums/997-turbo-gt2/257577-997-2-vs-997-1-turbo.html" target="_blank" rel="noopener">https://www.6speedonline.com/forums/997-turbo-gt2/257577-997-2-vs-997-1-turbo.html</a>]<br>997.2 vs 997.1 Turbo<br>In a recent discussion, someone asked me about 997.2 versus 997.1 Turbo.<br>Up until now, I have thought that any new model Porsche will be “better” than<br>previous model and will at least make it <em>look</em> obsolete.<br>(And if you’ve read my criticism of stock 997.1 Turbo’s suspension and exhaust,<br>you know I don’t pull punches just because I own this car.) It seemed the answer<br>should be obvious, newer is better. However the 997.1 Turbo has a huge trump card,<br>and that is the <strong>Mezger engine</strong>. Read up on google but essentially the Mezger engine<br>of 997.1 (named after the engineer who designed it) is easily Porsche’s most famous<br>engine in its storied history, with tremendous pedigree and heritage.<br>It is race derived, responsible for many victories, and its worth is well proven over<br>many years by Porsche’s racing teams. Between new turbo engine of 997.2<br>versus old Mezger turbo engine of 997.1, I used to think I don’t care which<br>engine as long as power is delivered, but the more I think about it, the<br>more I am leaning towards changing my opinion.<br>In another thread upgrading 997.2 turbo 6speed manual Tom of Champion was talking<br>about the internals of 997.2 Turbo engine and mentioned restriction of fuel system<br>and rods testing 25% weaker. What crossed my mind reading his post is…what <em>ELSE</em><br>is weaker in the 997.2 engine?</p>
<p>The only exception I would add is this: with respect to suspension,<br>if you are NOT going to mod the suspension, then the 997.2 Turbo is the better choice.<br>997.2’s PASM system is the <strong>second generation</strong> and is much better than 997.1, which was<br>Porsche’s first attempt at PASM and somewhat of a design flaw<br>(why a number of people here use Bilstein coilover or lowering springs).<br>997.1’s PASM is either way too soft or way too stiff between the 2 suspension settings,<br>997.2’s PASM is a lot more usable and smoother on the stiffer setting.<br>There were a number of other revisions (spring rate, sway bar, PTM system)<br>that make 997.2 better - the advantage of 4 years of experience.<br>In order of suspension ranking I would rank thus, not for everyone,<br>only for those looking for a more aggressive handling car:<br>Bilstein 997.2 &gt; Bilstein 997.1 &gt; stock 997.2 &gt;&gt;&gt; stock 997.1.</p>
<p><strong>So, perhaps 997.1 Turbo, mainly because of the Mezger engine,<br>will go down in history as the best Turbo ever?</strong><br>Perhaps owners of these cars should hold on and not sell?<br>Perhaps potential owners should look for low mileage samples of 997.1,<br>and not 997.2? For sure, for the purpose of modding,<br>there will NEVER again be an engine that is as mod-friendly and as<br>robust as the Mezger engine.(It is simply too expensive to be made nowadays.)<br>Unlike the Mezger GT3 engine, which has problem with RMS leak,<br>the Mezger Turbo is THE perfect engine.</p>
<p><strong>Bottom line: IMHO anyone here looking to buy a used Turbo, if you see a low mile 997.1 Turbo,<br>with PCCB/Chrono/Adaptive Sport Seat — jump on it!</strong> All 3 years of Mezger Turbo’s,<br><strong>2007 to 2009,are remarkably trouble free</strong>. Just look at this board (versus a BMW board for example)<br>then it should become obvious to you. The most common problem is leaking from the powered<br>steering and brake slave cylinder, but this could be easily and cheaply fixed and obviously<br>minor compared to other potential problems with drivetrain, engine, electronics, etc.</p>
<p>In looking at used cars, IMHO it is more important to get the DME readout and<br>check for overrev’s,and look for a CPO, low mileage, non-modded car, preferably with PCCB.<br>2009 is most desirable because it has the new PCM 2 with bluetooth and ipod functions and touchscreen.<br>You <em>can</em> add after-market bluetooth and ipod functions to 2007 and 2008 Turbo’s<br>(I use MoBridge in my 2008, work well in general and do all the functions but I don’t recommend<br>it because it has a beeping noise, a design flaw; Dension is probably the best choice at this point.)<br>but as in all after-market products,<br>they would have glitches here and there and will never be as good as OEM.<br>My opinions-YMMV:</p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
  </entry>
  <entry>
    <title>Intellij IDEA Debug</title>
    <url>/2017/09/07/Intellij-IDEA-Debug/</url>
    <content><![CDATA[<h3 id="Customize-shortcut-keymap"><a href="#Customize-shortcut-keymap" class="headerlink" title="Customize shortcut keymap"></a>Customize shortcut keymap</h3><p><img src="/2017/09/07/Intellij-IDEA-Debug/TIM-20170907141844.png" alt="change keymap"><br><img src="/2017/09/07/Intellij-IDEA-Debug/TIM-20170907142511.png" alt="shortcut key"></p>
<p>change intellij’s keymap to eclipse’s</p>
<ul>
<li><code>F5</code>        step into a method</li>
<li><code>Ctrl + F5</code> smart step in</li>
<li><code>F6</code>        step over a row</li>
<li><code>F7</code>        step out a method</li>
<li><code>Ctrl + R</code>  step to cursor’s raw</li>
</ul>
<h3 id="Samrt-step-in"><a href="#Samrt-step-in" class="headerlink" title="Samrt step in"></a>Samrt step in</h3><p><img src="/2017/09/07/Intellij-IDEA-Debug/TIM-20170907144209.png" alt="smart step in"><br><code>Ctrl + F5</code><br>when a series method link a callback, smart step in debug is useful.</p>
<h3 id="Thread-Block"><a href="#Thread-Block" class="headerlink" title="Thread Block"></a>Thread Block</h3><p><img src="/2017/09/07/Intellij-IDEA-Debug/TIM-20170907142036.png" alt="break point"><br>In default when current thread met breakpoint, other thread will be blocked.<br>Util current debug thread finished.<br>If project need to debug in multi thread, set breakpoint the suspend in thread.</p>
<h3 id="Frames"><a href="#Frames" class="headerlink" title="Frames"></a>Frames</h3><p><img src="/2017/09/07/Intellij-IDEA-Debug/TIM-20170907142731.png" alt="frame opt"><br>Java’s memory model is a thread have multi methods, a method corresponding a frame.<br>Every frame have a private variable array, it’s <code>0</code> index is <code>this</code>.[Stacks Link Invocate]<br>When drop the frame, debug will roll back.</p>
<h3 id="Thread-List"><a href="#Thread-List" class="headerlink" title="Thread List"></a>Thread List</h3><p><img src="/2017/09/07/Intellij-IDEA-Debug/TIM-20170907142354.png" alt="thread list"><br>Show thread list, thread status.</p>
<h3 id="Thread’s-Frames"><a href="#Thread’s-Frames" class="headerlink" title="Thread’s Frames"></a>Thread’s Frames</h3><p><img src="/2017/09/07/Intellij-IDEA-Debug/TIM-20170907144107.png" alt="switch thread"><br>Used to switch thread, but it seem can’t debug a thread’s code alone.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class DebugTest &#123;</span><br><span class="line"></span><br><span class="line">  private static Object lock = new Object();</span><br><span class="line"></span><br><span class="line">  @Test</span><br><span class="line">  public void main() &#123;</span><br><span class="line">      try &#123;</span><br><span class="line">          for(int i=0; i&lt; 3; i++) &#123;</span><br><span class="line">              new Line().start();</span><br><span class="line">              Thread.sleep(1000);</span><br><span class="line">          &#125;</span><br><span class="line">          new LineAnother().start();</span><br><span class="line">          Thread.sleep(100000);</span><br><span class="line">      &#125; catch (InterruptedException e) &#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Line extends Thread &#123;</span><br><span class="line">    public void run() &#123;</span><br><span class="line">        synchronized (lock) &#123;</span><br><span class="line">            // smart step in</span><br><span class="line">            if (Thread.currentThread().getContextClassLoader().equals(new Object()))</span><br><span class="line">                System.out.println(&quot;-_-!&quot;);</span><br><span class="line"></span><br><span class="line">            for (int i = 0; i &lt; 3; i++)</span><br><span class="line">                System.out.println(Thread.currentThread().getId() +</span><br><span class="line">                        &quot;\t&quot; + Thread.currentThread().getName() +</span><br><span class="line">                        &quot;\t&quot; + i);</span><br><span class="line">            test(5);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    // sub frame</span><br><span class="line">    public int test(int i) &#123;</span><br><span class="line">        i -= 1;</span><br><span class="line">        return i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class LineAnother extends Thread &#123;</span><br><span class="line">    public void run() &#123;</span><br><span class="line">        System.out.println(&quot;xxx&quot;);</span><br><span class="line">        System.out.println(&quot;ooo&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>debug</tag>
      </tags>
  </entry>
  <entry>
    <title>tomcat system architecture</title>
    <url>/2017/09/08/tomcat-system-architecture/</url>
    <content><![CDATA[<h3 id="Architecture"><a href="#Architecture" class="headerlink" title="Architecture"></a>Architecture</h3><p><img src="/2017/09/08/tomcat-system-architecture/architecture.svg" alt="tomcat"></p>
<ul>
<li>Server used to manage service, for outside provide a interface’s service<br>for inside maintain service’s collection.<ul>
<li>manage services’ lifecycle</li>
<li>search service for request</li>
<li>stop service so on</li>
</ul>
</li>
<li>Service consist by <code>connector</code> and <code>container</code><ul>
<li>Connector be responsible for <strong>give</strong> request to container</li>
<li>Container be responsible for <strong>deal</strong> with request</li>
</ul>
</li>
</ul>
<h3 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h3><p>Forcus on two method <code>addService(Service service)</code> and <code>findService(String name)</code></p>
<p>org.apache.catalina.core.StandardServer<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add a new Service to the set of defined Services.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> service The Service to be added</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addService</span><span class="params">(Service service)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    service.setServer(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">synchronized</span> (servicesLock) &#123;</span><br><span class="line">        Service results[] = <span class="keyword">new</span> Service[services.length + <span class="number">1</span>];</span><br><span class="line">        System.arraycopy(services, <span class="number">0</span>, results, <span class="number">0</span>, services.length);</span><br><span class="line">        results[services.length] = service;</span><br><span class="line">        services = results;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (getState().isAvailable()) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                service.start();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (LifecycleException e) &#123;</span><br><span class="line">                <span class="comment">// Ignore</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Report this property change to interested listeners</span></span><br><span class="line">        support.firePropertyChange(<span class="string">"service"</span>, <span class="keyword">null</span>, service);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<ul>
<li>set current service’s server</li>
<li>extends service array, place new service in the last index</li>
<li>check service’s lefe state</li>
<li>report event to interested listeners</li>
</ul>
<h4 id="Interface-Lifecycle"><a href="#Interface-Lifecycle" class="headerlink" title="Interface Lifecycle"></a>Interface Lifecycle</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">start()</span><br><span class="line">-----------------------------</span><br><span class="line">|                           |</span><br><span class="line">| init()                    |</span><br><span class="line">NEW -&gt;-- INITIALIZING        |</span><br><span class="line">| |           |              |     ------------------&lt;-----------------------</span><br><span class="line">| |           |auto          |     |                                        |</span><br><span class="line">| |          \|/    start() \|/   \|/     auto          auto         stop() |</span><br><span class="line">| |      INITIALIZED --&gt;-- STARTING_PREP --&gt;- STARTING --&gt;- STARTED --&gt;---  |</span><br><span class="line">| |         |                                                            |  |</span><br><span class="line">| |destroy()|                                                            |  |</span><br><span class="line">| --&gt;-----&lt;--    ------------------------&lt;--------------------------------  ^</span><br><span class="line">|     |          |                                                          |</span><br><span class="line">|     |         \|/          auto                 auto              start() |</span><br><span class="line">|     |     STOPPING_PREP ----&gt;---- STOPPING ------&gt;----- STOPPED -----&gt;-----</span><br><span class="line">|    \|/                               ^                     |  ^</span><br><span class="line">|     |               stop()           |                     |  |</span><br><span class="line">|     |       --------------------------                     |  |</span><br><span class="line">|     |       |                                              |  |</span><br><span class="line">|     |       |    destroy()                       destroy() |  |</span><br><span class="line">|     |    FAILED ----&gt;------ DESTROYING ---&lt;-----------------  |</span><br><span class="line">|     |                        ^     |                          |</span><br><span class="line">|     |     destroy()          |     |auto                      |</span><br><span class="line">|     --------&gt;-----------------    \|/                         |</span><br><span class="line">|                                 DESTROYED                     |</span><br><span class="line">|                                                               |</span><br><span class="line">|                            stop()                             |</span><br><span class="line">---&gt;------------------------------&gt;------------------------------</span><br></pre></td></tr></table></figure>
<ul>
<li><p>Any state can transition to FAILED.</p>
</li>
<li><p>Calling start() while a component is in states STARTING_PREP, STARTING or<br>STARTED has no effect.</p>
</li>
<li><p>Calling start() while a component is in state NEW will cause init() to be<br>called immediately after the start() method is entered.</p>
</li>
<li><p>Calling stop() while a component is in states STOPPING_PREP, STOPPING or<br>STOPPED has no effect.</p>
</li>
<li><p>Calling stop() while a component is in state NEW transitions the component<br>to STOPPED. This is typically encountered when a component fails to start and<br>does not start all its sub-components. When the component is stopped, it will<br>try to stop all sub-components - even those it didn’t start.</p>
</li>
<li><p>Attempting any other transition will throw LifecycleException.</p>
</li>
</ul>
<h4 id="Anaylsis"><a href="#Anaylsis" class="headerlink" title="Anaylsis"></a>Anaylsis</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I Lifecycle</span><br><span class="line">  |</span><br><span class="line">  --- A LifecycleBase</span><br><span class="line">  |     |</span><br><span class="line">  |     --- A LifecycleMBeanBase</span><br><span class="line">  |           |</span><br><span class="line">  |           --- ...</span><br><span class="line">  --- ...</span><br></pre></td></tr></table></figure>
<p>All component in tomcat implemnts <code>Lifecycle</code> interface,<br>father level component manage sub-level component.<br>So when top component changes, state will transmit to all conponments.<br>Focus on anaylsis <code>start</code> progress.</p>
<p>org.apache.catalina.util.LifecycleBase<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> <span class="keyword">throws</span> LifecycleException </span>&#123;</span><br><span class="line"></span><br><span class="line">    ......</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        setStateInternal(LifecycleState.STARTING_PREP, <span class="keyword">null</span>, <span class="keyword">false</span>);</span><br><span class="line">        startInternal();</span><br><span class="line"></span><br><span class="line">        ......</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable t) &#123;</span><br><span class="line">        <span class="comment">// This is an 'uncontrolled' failure so put the component into the</span></span><br><span class="line">        <span class="comment">// FAILED state and throw an exception.</span></span><br><span class="line">        ExceptionUtils.handleThrowable(t);</span><br><span class="line">        setStateInternal(LifecycleState.FAILED, <span class="keyword">null</span>, <span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> LifecycleException(sm.getString(<span class="string">"lifecycleBase.startFail"</span>, toString()), t);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>org.apache.catalina.core.StandardServer<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Start nested components (&#123;<span class="doctag">@link</span> Service&#125;s) and implement the requirements</span></span><br><span class="line"><span class="comment">     * of &#123;<span class="doctag">@link</span> org.apache.catalina.util.LifecycleBase#startInternal()&#125;.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@exception</span> LifecycleException if this component detects a fatal error</span></span><br><span class="line"><span class="comment">     *  that prevents this component from being used</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">startInternal</span><span class="params">()</span> <span class="keyword">throws</span> LifecycleException </span>&#123;</span><br><span class="line"></span><br><span class="line">        fireLifecycleEvent(CONFIGURE_START_EVENT, <span class="keyword">null</span>);</span><br><span class="line">        setState(LifecycleState.STARTING);</span><br><span class="line"></span><br><span class="line">        globalNamingResources.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Start our defined Services</span></span><br><span class="line">        <span class="keyword">synchronized</span> (servicesLock) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; services.length; i++) &#123;</span><br><span class="line">                services[i].start();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>All sub-components will be notify through <code>fireLifecycleEvent</code><br>All registed service will be start.</p>
<p>org.apache.catalina.util.LifecycleSupport<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Notify all lifecycle event listeners that a particular event has</span></span><br><span class="line"><span class="comment">* occurred for this Container.  The default implementation performs</span></span><br><span class="line"><span class="comment">* this notification synchronously using the calling thread.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> type Event type</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> data Event data</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fireLifecycleEvent</span><span class="params">(String type, Object data)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   LifecycleEvent event = <span class="keyword">new</span> LifecycleEvent(lifecycle, type, data);</span><br><span class="line">   LifecycleListener interested[] = listeners;</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; interested.length; i++)</span><br><span class="line">       interested[i].lifecycleEvent(event);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Be called[defined] in <code>LifecycleBase</code> , method name is the same.</p>
<h3 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h3><p>A service packaged multi connector and a container<br>We forcus on <code>addConnector(Connector connector)</code> <code>setContainer(Container container)</code></p>
<p>org.apache.catalina.core.StandardService<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Set the &lt;code&gt;Container&lt;/code&gt; that handles requests for all</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;Connectors&lt;/code&gt; associated with this Service.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> container The new Container</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContainer</span><span class="params">(Container container)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Container oldContainer = <span class="keyword">this</span>.container;</span><br><span class="line">    <span class="keyword">if</span> ((oldContainer != <span class="keyword">null</span>) &amp;&amp; (oldContainer <span class="keyword">instanceof</span> Engine))</span><br><span class="line">        ((Engine) oldContainer).setService(<span class="keyword">null</span>);</span><br><span class="line">    <span class="keyword">this</span>.container = container;</span><br><span class="line">    <span class="keyword">if</span> ((<span class="keyword">this</span>.container != <span class="keyword">null</span>) &amp;&amp; (<span class="keyword">this</span>.container <span class="keyword">instanceof</span> Engine))</span><br><span class="line">        ((Engine) <span class="keyword">this</span>.container).setService(<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">if</span> (getState().isAvailable() &amp;&amp; (<span class="keyword">this</span>.container != <span class="keyword">null</span>)) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.container.start();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (LifecycleException e) &#123;</span><br><span class="line">            <span class="comment">// Ignore</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (getState().isAvailable() &amp;&amp; (oldContainer != <span class="keyword">null</span>)) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            oldContainer.stop();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (LifecycleException e) &#123;</span><br><span class="line">            <span class="comment">// Ignore</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Report this property change to interested listeners</span></span><br><span class="line">    support.firePropertyChange(<span class="string">"container"</span>, oldContainer, <span class="keyword">this</span>.container);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<ol>
<li>set new input container</li>
<li>reversal setting container’s service</li>
<li>if state ok, start container</li>
<li>if old container exists, stop it</li>
<li>report event</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add a new Connector to the set of defined Connectors, and associate it</span></span><br><span class="line"><span class="comment"> * with this Service's Container.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> connector The Connector to be added</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addConnector</span><span class="params">(Connector connector)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">synchronized</span> (connectorsLock) &#123;</span><br><span class="line">        connector.setService(<span class="keyword">this</span>);</span><br><span class="line">        Connector results[] = <span class="keyword">new</span> Connector[connectors.length + <span class="number">1</span>];</span><br><span class="line">        System.arraycopy(connectors, <span class="number">0</span>, results, <span class="number">0</span>, connectors.length);</span><br><span class="line">        results[connectors.length] = connector;</span><br><span class="line">        connectors = results;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (getState().isAvailable()) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connector.start();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (LifecycleException e) &#123;</span><br><span class="line">                log.error(sm.getString(</span><br><span class="line">                        <span class="string">"standardService.connector.startFailed"</span>,</span><br><span class="line">                        connector), e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Report this property change to interested listeners</span></span><br><span class="line">        support.firePropertyChange(<span class="string">"connector"</span>, <span class="keyword">null</span>, connector);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>Setting connector’s service.</li>
<li>Similar with server manage services, use array storage connector.</li>
<li>Extends connector array, place new connector in the last index, implements dynamic array.</li>
<li>start connector, report event.</li>
</ol>
<h3 id="Design-Model"><a href="#Design-Model" class="headerlink" title="Design Model"></a>Design Model</h3><p><img src="/2017/09/08/tomcat-system-architecture/Pattern-Observer.svg" alt="observer"><br>All registed <code>observers</code> listener will be call by reported event<br>Observer may do something, or just ignore.</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title>Tomcat Container</title>
    <url>/2017/09/20/Tomcat-Container/</url>
    <content><![CDATA[<p>Tomcat container is a typical case of <code>Chain of Responsibility pattern</code><br>Container composed by <code>Engine</code> <code>Host</code> <code>Context</code> <code>Wrapper</code></p>
<p><em>connector.getService().getContainer().getPipeline().getFirst().invoke(request, response);</em></p>
<ol>
<li>every container have it’s own pip and valve</li>
<li>getPipeline() got pipline determine data direction</li>
<li>getFirst() got valve determine door open or close</li>
<li>Interface <code>Valve</code> have method <code>invoke</code></li>
</ol>
<h3 id="Engine"><a href="#Engine" class="headerlink" title="Engine"></a>Engine</h3><p>engine is top level container, it dispatch request to host</p>
<h3 id="Host"><a href="#Host" class="headerlink" title="Host"></a>Host</h3><p>a host represent a virtual machine like ‘localhost’, it store host reference info.</p>
<h3 id="Context"><a href="#Context" class="headerlink" title="Context"></a>Context</h3><p>context represent a web project in webapps</p>
<h3 id="Wrapper"><a href="#Wrapper" class="headerlink" title="Wrapper"></a>Wrapper</h3><p>wrapper response for a servlet, like load/ init/ resource recycle</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)</span><br><span class="line">at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)</span><br><span class="line">at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)</span><br><span class="line">at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)</span><br><span class="line">at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)</span><br><span class="line">at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:503)</span><br><span class="line">at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:170)</span><br><span class="line">at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)</span><br><span class="line">at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:950)</span><br><span class="line">at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)</span><br><span class="line">at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:421)</span><br><span class="line">at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1070)</span><br><span class="line">at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:611)</span><br><span class="line">at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:314)</span><br><span class="line">at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</span><br><span class="line">at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</span><br><span class="line">at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)</span><br><span class="line">at java.lang.Thread.run(Thread.java:662)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title>log4j configuration</title>
    <url>/2017/09/18/log4j-configuration/</url>
    <content><![CDATA[<h3 id="level"><a href="#level" class="headerlink" title="level"></a>level</h3><p>log4j.rootLogger = [level],appenderName,appenderName2,…</p>
<p>level show log’s privilege, OFF,TRACE,DEBUG,INFO,WARN,ERROR,FATAL,ALL<br>log4j recommand 4 level, from low to high : DEBUG, INFO, WARN, ERROR</p>
<h3 id="output"><a href="#output" class="headerlink" title="output"></a>output</h3><p>appenderName point logs’ output target<br>log4j.appender.xxx<br>log4j.appender.T.xxx</p>
<p>appender have these</p>
<ol>
<li>org.apache.log4j.ConsoleAppender<br>to console</li>
<li>org.apache.log4j.FileAppender<br>to file</li>
<li>org.apache.log4j.DailyRollingFileAppender<br>create a file everyday</li>
<li>org.apache.log4j.RollingFileAppender<br>to some size make a new file</li>
<li>org.apache.log4j.WriterAppender<br>stream to everywhere</li>
</ol>
<h3 id="ConsoleAppender"><a href="#ConsoleAppender" class="headerlink" title="ConsoleAppender"></a>ConsoleAppender</h3><ul>
<li>-Threshold = DEBUG:log lowest output level</li>
<li>-ImmediateFlush = TRUE:default is <code>true</code>, all log will output immediately</li>
<li>-Target = System.err:default is <code>System.out</code>, out put to console(err is red,out is black)</li>
</ul>
<h3 id="FileAppender"><a href="#FileAppender" class="headerlink" title="FileAppender"></a>FileAppender</h3><ul>
<li>-Threshold = INFO:log lowest output level</li>
<li>-ImmediateFlush = TRUE:default is <code>true</code>, all log will output immediately</li>
<li>-File = log/log4j.log:output file path</li>
<li>-Append = FALSE:default <code>true</code>, add message to file, <code>false</code> override file</li>
<li>-Encoding = UTF-8:appoint file encoding</li>
</ul>
<h3 id="DailyRollingFileAppender"><a href="#DailyRollingFileAppender" class="headerlink" title="DailyRollingFileAppender"></a>DailyRollingFileAppender</h3><ul>
<li>-Threshold = WARN:log lowest output level</li>
<li>-ImmediateFlush = TRUE:default is <code>true</code>, all log will output immediately</li>
<li>-File = log/log4j.log:output file path</li>
<li>-Append = FALSE:default <code>true</code>, add message to file, <code>false</code> override file</li>
<li>-DatePattern=’.’yyyy-ww:every week</li>
<li>‘.’yyyy-MM:month</li>
<li>‘.’yyyy-ww:week</li>
<li>‘.’yyyy-MM-dd:day</li>
<li>‘.’yyyy-MM-dd-a:twice a day</li>
<li>‘.’yyyy-MM-dd-HH:hour</li>
<li>‘.’yyyy-MM-dd-HH-mm:minute</li>
<li>-Encoding = UTF-8:appoint file encoding</li>
</ul>
<h3 id="RollingFileAppender"><a href="#RollingFileAppender" class="headerlink" title="RollingFileAppender"></a>RollingFileAppender</h3><ul>
<li>-Threshold = ERROR:log lowest output level</li>
<li>-ImmediateFlush = TRUE:default is <code>true</code>, all log will output immediately</li>
<li>-File = log/log4j.log:output file path</li>
<li>-Append = FALSE:default <code>true</code>, add message to file, <code>false</code> override file</li>
<li>-MaxFileSize = 100KB:suffix can be <code>KB</code> <code>MB</code> <code>GB</code> when file met the threshold,<br>new file will be created like log4j.log.1 log4j.log.2</li>
<li>-MaxBackupIndex = 2:appoint rolling files’ up limit</li>
<li>-Encoding = UTF-8:appoint file encoding</li>
</ul>
<h3 id="layout"><a href="#layout" class="headerlink" title="layout"></a>layout</h3><ol>
<li>org.apache.log4j.HTMLLayout</li>
<li>org.apache.log4j.PatternLayout<br>customized layout</li>
<li>org.apache.log4j.SimpleLayout<br>contain log level, string so on</li>
<li>org.apache.log4j.TTCCLayout<br>contain time/ thread/ class info so on</li>
<li>org.apache.log4j.xml.XMLLayout</li>
</ol>
<h3 id="HTMLLayout"><a href="#HTMLLayout" class="headerlink" title="HTMLLayout"></a>HTMLLayout</h3><ul>
<li>-LocationInfo = TRUE:default <code>false</code>, output java file and row num</li>
<li>-Title=Struts Log Message:默认值 Log4J Log Messages</li>
</ul>
<h3 id="PatternLayout"><a href="#PatternLayout" class="headerlink" title="PatternLayout"></a>PatternLayout</h3><ul>
<li>-ConversionPattern = %m%n:formatting message [reference to Format]</li>
</ul>
<h3 id="XMLLayout"><a href="#XMLLayout" class="headerlink" title="XMLLayout"></a>XMLLayout</h3><ul>
<li>-LocationInfo = TRUE:default <code>false</code>, output java file and row num</li>
</ul>
<h3 id="Format"><a href="#Format" class="headerlink" title="Format"></a>Format</h3><p>similar with <code>c style</code><br>| a | b |<br>| —- | —- |<br>| %m | message in code |<br>| %p | level:DEBUG,INFO,WARN,ERROR,FATAL |<br>| %r | Millisecond from code to file |<br>| %c | class full name |<br>| %t | Thread |<br>| %n | Windows <code>\r\n</code> Unix <code>\n</code> Max <code>\r</code> |<br>| %d | ISO8601 in default or %d{yyyy-MM-dd HH\:mm\:ss,SSS} like: 2017-09-18 22:10:28,921 |<br>| %l | detail in event like: Testlog.main(TestLog.java:10)|<br>| %F | file name |<br>| %L | code row num |<br>| %x | 输出和当前线程相关联的NDC(嵌套诊断环境),像java servlets多客户多线程的应用中 |<br>| %% | “%” |<br>| %5c | min width right alignment in default |<br>| %-5c | min width <code>-</code> left alignment |<br>| %.5c | max width split left char |<br>| %20.30c | less than 20 add blank, more than 30 split from left |</p>
<h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#OFF,systemOut,logFile,logDailyFile,logRollingFile,logMail,logDB,ALL</span><br><span class="line">log4j.rootLogger =ALL,systemOut,logFile,logDailyFile,logRollingFile,logMail,logDB</span><br><span class="line"></span><br><span class="line">#输出到控制台</span><br><span class="line">log4j.appender.systemOut = org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.systemOut.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.systemOut.layout.ConversionPattern = [%-5p][%-22d&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class="line">#log4j.appender.systemOut.layout.ConversionPattern = %d&#123;yyyy-MM-dd HH\:mm\:ss&#125; %5p %c&#123;1&#125;\: %m%n</span><br><span class="line">#log4j.appender.systemOut.layout.ConversionPattern = %d&#123;yyyy-MM-dd HH\:mm\:ss,SSS&#125; %5p [%t] (%F\:%L) - %m%n</span><br><span class="line">log4j.appender.systemOut.Threshold = DEBUG</span><br><span class="line">log4j.appender.systemOut.ImmediateFlush = TRUE</span><br><span class="line">log4j.appender.systemOut.Target = System.out</span><br><span class="line"></span><br><span class="line">#输出到文件</span><br><span class="line">log4j.appender.logFile = org.apache.log4j.FileAppender</span><br><span class="line">log4j.appender.logFile.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.logFile.layout.ConversionPattern = [%-5p][%-22d&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class="line">log4j.appender.logFile.Threshold = DEBUG</span><br><span class="line">log4j.appender.logFile.ImmediateFlush = TRUE</span><br><span class="line">log4j.appender.logFile.Append = TRUE</span><br><span class="line">log4j.appender.logFile.File = ../Struts2/WebRoot/log/File/log4j_Struts.log</span><br><span class="line">log4j.appender.logFile.Encoding = UTF-8</span><br><span class="line"></span><br><span class="line">#按DatePattern输出到文件</span><br><span class="line">log4j.appender.logDailyFile = org.apache.log4j.DailyRollingFileAppender</span><br><span class="line">log4j.appender.logDailyFile.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.logDailyFile.layout.ConversionPattern = [%-5p][%-22d&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class="line">log4j.appender.logDailyFile.Threshold = DEBUG</span><br><span class="line">log4j.appender.logDailyFile.ImmediateFlush = TRUE</span><br><span class="line">log4j.appender.logDailyFile.Append = TRUE</span><br><span class="line">log4j.appender.logDailyFile.File = ../Struts2/WebRoot/log/DailyFile/log4j_Struts</span><br><span class="line">log4j.appender.logDailyFile.DatePattern = &apos;.&apos;yyyy-MM-dd-HH-mm&apos;.log&apos;</span><br><span class="line">log4j.appender.logDailyFile.Encoding = UTF-8</span><br><span class="line"></span><br><span class="line">#设定文件大小输出到文件</span><br><span class="line">log4j.appender.logRollingFile = org.apache.log4j.RollingFileAppender</span><br><span class="line">log4j.appender.logRollingFile.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.logRollingFile.layout.ConversionPattern = [%-5p][%-22d&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class="line">log4j.appender.logRollingFile.Threshold = DEBUG</span><br><span class="line">log4j.appender.logRollingFile.ImmediateFlush = TRUE</span><br><span class="line">log4j.appender.logRollingFile.Append = TRUE</span><br><span class="line">log4j.appender.logRollingFile.File = ../Struts2/WebRoot/log/RollingFile/log4j_Struts.log</span><br><span class="line">log4j.appender.logRollingFile.MaxFileSize = 1MB</span><br><span class="line">log4j.appender.logRollingFile.MaxBackupIndex = 10</span><br><span class="line">log4j.appender.logRollingFile.Encoding = UTF-8</span><br><span class="line"></span><br><span class="line">#用Email发送日志</span><br><span class="line">log4j.appender.logMail = org.apache.log4j.net.SMTPAppender</span><br><span class="line">log4j.appender.logMail.layout = org.apache.log4j.HTMLLayout</span><br><span class="line">log4j.appender.logMail.layout.LocationInfo = TRUE</span><br><span class="line">log4j.appender.logMail.layout.Title = Struts2 Mail LogFile</span><br><span class="line">log4j.appender.logMail.Threshold = DEBUG</span><br><span class="line">log4j.appender.logMail.SMTPDebug = FALSE</span><br><span class="line">log4j.appender.logMail.SMTPHost = SMTP.163.com</span><br><span class="line">log4j.appender.logMail.From = xxx@163.com</span><br><span class="line">log4j.appender.logMail.To = xxx@gmail.com</span><br><span class="line">#log4j.appender.logMail.Cc = xxx@gmail.com</span><br><span class="line">#log4j.appender.logMail.Bcc = xxx@gmail.com</span><br><span class="line">log4j.appender.logMail.SMTPUsername = leon</span><br><span class="line">log4j.appender.logMail.SMTPPassword = 123456</span><br><span class="line">log4j.appender.logMail.Subject = Log4j Log Messages</span><br><span class="line">#log4j.appender.logMail.BufferSize = 1024</span><br><span class="line">#log4j.appender.logMail.SMTPAuth = TRUE</span><br><span class="line"></span><br><span class="line">#将日志登录到MySQL数据库</span><br><span class="line">log4j.appender.logDB = org.apache.log4j.jdbc.JDBCAppender</span><br><span class="line">log4j.appender.logDB.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.logDB.Driver = com.mysql.jdbc.Driver</span><br><span class="line">log4j.appender.logDB.URL = jdbc:mysql://127.0.0.1:3306/xxx</span><br><span class="line">log4j.appender.logDB.User = root</span><br><span class="line">log4j.appender.logDB.Password = 123456</span><br><span class="line">log4j.appender.logDB.Sql = INSERT INTOT_log4j(project_name,create_date,level,category,file_name,thread_name,line,all_category,message)values(&apos;Struts2&apos;,&apos;%d&#123;yyyy-MM-ddHH:mm:ss&#125;&apos;,&apos;%p&apos;,&apos;%c&apos;,&apos;%F&apos;,&apos;%t&apos;,&apos;%L&apos;,&apos;%l&apos;,&apos;%m&apos;)</span><br></pre></td></tr></table></figure>
<p><a href="http://blog.sina.com.cn/s/blog_5ed94d710101go3u.html" target="_blank" rel="noopener">log4j.properties</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>first</tag>
      </tags>
  </entry>
  <entry>
    <title>Tomcat Connector</title>
    <url>/2017/09/13/Tomcat-Connector/</url>
    <content><![CDATA[<h3 id="Tomcat-do-not-you-have-a-conscience"><a href="#Tomcat-do-not-you-have-a-conscience" class="headerlink" title="Tomcat do not you have a conscience."></a>Tomcat do not you have a conscience.</h3><p><img src="/2017/09/13/Tomcat-Connector/Connector.svg" alt="connector"></p>
<ol>
<li>Create a Connector, construct a Connector object.</li>
<li>Call Connector initIntenal method</li>
<li>ProtocolHanlder init method contain thread pool and a thread deal request</li>
<li>Call Connector startIntenal</li>
<li>Call ProtocolHandler start</li>
<li>Call MapperListener start, listen changes</li>
</ol>
<h3 id="Detail"><a href="#Detail" class="headerlink" title="Detail"></a>Detail</h3><h4 id="Protocol"><a href="#Protocol" class="headerlink" title="Protocol"></a>Protocol</h4><p>Tomcat have two protocol handlers <code>HTTP/1.1</code> <code>AJP/1.3</code><br>config in server.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Connector port=&quot;8080&quot; address=&quot;0.0.0.0&quot; protocol=&quot;HTTP/1.1&quot;</span><br><span class="line">               connectionTimeout=&quot;20000&quot; redirectPort=&quot;8443&quot;/&gt;</span><br><span class="line">&lt;Connector port=&quot;8010&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8444&quot; /&gt;</span><br></pre></td></tr></table></figure></p>
<p>setProtocol(String protocol) set <code>Http11AprProtocol</code> in default.</p>
<h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line">protected void initInternal() throws LifecycleException &#123;</span><br><span class="line">    super.initInternal();</span><br><span class="line">    // Initialize adapter</span><br><span class="line">    adapter = new CoyoteAdapter(this);</span><br><span class="line">    protocolHandler.setAdapter(adapter);</span><br><span class="line">    ......</span><br><span class="line">    try &#123;</span><br><span class="line">        protocolHandler.init();</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">        ......</span><br><span class="line">    &#125;</span><br><span class="line">    mapperListener.init();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Call <code>LifecycleMBeanBase</code>‘s initInternal() regist self.<br>Create <code>Adapter</code> and set into handler<br><code>protocolHandler</code>‘s concrete implements in abstract class <code>AbstractProtocol</code><br>Implemented in <code>AbstractAjpProtocol</code> <code>AbstractHttp11Protocol</code></p>
<p>Focus on <code>AbstractProtocol</code>:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line"> * NOTE: There is no maintenance of state or checking for valid transitions</span><br><span class="line"> * within this class. It is expected that the connector will maintain state</span><br><span class="line"> * and prevent invalid state transitions.</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void init() throws Exception &#123;</span><br><span class="line">    //set names</span><br><span class="line">    ......</span><br><span class="line">    try &#123;</span><br><span class="line">        endpoint.init();</span><br><span class="line">    &#125; catch (Exception ex) &#123;</span><br><span class="line">        ......</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>endpoint.init();</p>
<ol>
<li><p>Setting recevie thread number and biggest connection number</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// Initialize thread count defaults for acceptor</span><br><span class="line">if (acceptorThreadCount == 0) &#123;</span><br><span class="line">    acceptorThreadCount = 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Create thread pool, start listener thread for client request</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// Initialize maxConnections</span><br><span class="line">if (getMaxConnections() == 0) &#123;</span><br><span class="line">    // User hasn&apos;t set a value - use the default</span><br><span class="line">    setMaxConnections(getMaxThreadsInternal());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Start a server socket</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (getAddress() == null) &#123;</span><br><span class="line">    serverSocket = serverSocketFactory.createSocket(getPort(),</span><br><span class="line">            getBacklog());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="Start-Internal"><a href="#Start-Internal" class="headerlink" title="Start Internal"></a>Start Internal</h4><ol>
<li>Connector -&gt; startInternal()<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Begin processing requests via this Connector.</span><br><span class="line"> */</span><br><span class="line">@Override</span><br><span class="line">protected void startInternal() throws LifecycleException &#123;</span><br><span class="line">    // Validate settings before starting</span><br><span class="line">    ......</span><br><span class="line">    setState(LifecycleState.STARTING);</span><br><span class="line">    try &#123;</span><br><span class="line">        protocolHandler.start();</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">        ......</span><br><span class="line">    &#125;</span><br><span class="line">    mapperListener.start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>Call abstract protocol start</p>
<ol>
<li>AbstractProtocol -&gt; start()<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line">public void start() throws Exception &#123;</span><br><span class="line">    ......</span><br><span class="line">    try &#123;</span><br><span class="line">        endpoint.start();</span><br><span class="line">    &#125; catch (Exception ex) &#123;</span><br><span class="line">        ......</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>Call endpoint start</p>
<ol>
<li>AbstractEndpoint -&gt; start()<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public final void start() throws Exception &#123;</span><br><span class="line">   if (bindState == BindState.UNBOUND) &#123;</span><br><span class="line">       bind();</span><br><span class="line">       bindState = BindState.BOUND_ON_START;</span><br><span class="line">   &#125;</span><br><span class="line">   startInternal();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>Call itself’s abstract method startInternal().</p>
<ol>
<li>JIoEndpoint -&gt; startInternal()<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line">public void startInternal() throws Exception &#123;</span><br><span class="line">    if (!running) &#123;</span><br><span class="line">        running = true;</span><br><span class="line">        paused = false;</span><br><span class="line"></span><br><span class="line">        // Create worker collection</span><br><span class="line">        if (getExecutor() == null) &#123;</span><br><span class="line">            createExecutor();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        initializeConnectionLatch();</span><br><span class="line">        startAcceptorThreads();</span><br><span class="line"></span><br><span class="line">        // Start async timeout thread</span><br><span class="line">        Thread timeoutThread = new Thread(new AsyncTimeout(),</span><br><span class="line">                getName() + &quot;-AsyncTimeout&quot;);</span><br><span class="line">        timeoutThread.setPriority(threadPriority);</span><br><span class="line">        timeoutThread.setDaemon(true);</span><br><span class="line">        timeoutThread.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>Initialize connection<br>Start acceptor thread<br>Start an asynchronous thread deal request</p>
<ol>
<li>JIoEndpoint.AsyncTimeout -&gt; run()<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Async timeout thread</span><br><span class="line"> */</span><br><span class="line">protected class AsyncTimeout implements Runnable &#123;</span><br><span class="line">    /**</span><br><span class="line">     * The background thread that checks async requests and fires the</span><br><span class="line">     * timeout if there has been no activity.</span><br><span class="line">     */</span><br><span class="line">    @Override</span><br><span class="line">    public void run() &#123;</span><br><span class="line"></span><br><span class="line">        // Loop until we receive a shutdown command</span><br><span class="line">        while (running) &#123;</span><br><span class="line">            // delay / get socket object/ check timeout</span><br><span class="line">            ......</span><br><span class="line">            while (sockets.hasNext()) &#123;</span><br><span class="line">                SocketWrapper&lt;Socket&gt; socket = sockets.next();</span><br><span class="line">                ......</span><br><span class="line">                    processSocketAsync(socket,SocketStatus.TIMEOUT);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // Loop if endpoint is paused</span><br><span class="line">            ......</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Process an existing async connection. If processing is required, passes</span><br><span class="line"> * the wrapped socket to an executor for processing.</span><br><span class="line"> *</span><br><span class="line"> * @param socket    The socket associated with the client.</span><br><span class="line"> * @param status    Only OPEN and TIMEOUT are used. The others are used for</span><br><span class="line"> *                  Comet requests that are not supported by the BIO (JIO)</span><br><span class="line"> *                  Connector.</span><br><span class="line"> */</span><br><span class="line">@Override</span><br><span class="line">public void processSocketAsync(SocketWrapper&lt;Socket&gt; socket,</span><br><span class="line">        SocketStatus status) &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        synchronized (socket) &#123;</span><br><span class="line">            if (waitingRequests.remove(socket)) &#123;</span><br><span class="line">                SocketProcessor proc = new SocketProcessor(socket,status);</span><br><span class="line">                ClassLoader loader = Thread.currentThread().getContextClassLoader();</span><br><span class="line">                try &#123;</span><br><span class="line">                    //threads should not be created by the webapp classloader</span><br><span class="line">                    ......</span><br><span class="line">                    // During shutdown, executor may be null - avoid NPE</span><br><span class="line">                    if (!running) return;</span><br><span class="line">                    getExecutor().execute(proc);</span><br><span class="line">                    //TODO gotta catch RejectedExecutionException and properly handle it</span><br><span class="line">                &#125; finally &#123;</span><br><span class="line">                    // doPrivileged</span><br><span class="line">                    ......</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; catch (Throwable t) &#123;</span><br><span class="line">        ExceptionUtils.handleThrowable(t);</span><br><span class="line">        // This means we got an OOM or similar creating a thread, or that</span><br><span class="line">        // the pool and its queue are full</span><br><span class="line">        log.error(sm.getString(&quot;endpoint.process.fail&quot;), t);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><code>org.apache.tomcat.util.net.JIoEndpoint.SocketProcessor</code> it’s job is put<br>concrete request dispatch to <code>org.apache.tomcat.util.net.JIoEndpoint.Handler</code>.<br>Then based on <code>handler</code>‘s different return <code>SocketState</code> decide<br>whether close connection or do next loop.</p>
<ol>
<li>JIoEndpoint.SocketProcessor -&gt; run()<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * This class is the equivalent of the Worker, but will simply use in an</span><br><span class="line"> * external Executor thread pool.</span><br><span class="line"> */</span><br><span class="line"> ......</span><br><span class="line">@Override</span><br><span class="line">public void run() &#123;</span><br><span class="line">    boolean launch = false;</span><br><span class="line">    synchronized (socket) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            SocketState state = SocketState.OPEN;</span><br><span class="line"></span><br><span class="line">            try &#123;</span><br><span class="line">                // SSL handshake</span><br><span class="line">                serverSocketFactory.handshake(socket.getSocket());</span><br><span class="line">            &#125; catch (Throwable t) &#123;</span><br><span class="line">                ......</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if ((state != SocketState.CLOSED)) &#123;</span><br><span class="line">                if (status == null) &#123;</span><br><span class="line">                    state = handler.process(socket, SocketStatus.OPEN_READ);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    state = handler.process(socket,status);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if (state == SocketState.CLOSED) &#123;</span><br><span class="line">                // Close socket</span><br><span class="line">                if (log.isTraceEnabled()) &#123;</span><br><span class="line">                    log.trace(&quot;Closing socket:&quot;+socket);</span><br><span class="line">                &#125;</span><br><span class="line">                countDownConnection();</span><br><span class="line">                try &#123;</span><br><span class="line">                    socket.getSocket().close();</span><br><span class="line">                &#125; catch (IOException e) &#123;</span><br><span class="line">                    // Ignore</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; else if (state == SocketState.OPEN ||</span><br><span class="line">                    state == SocketState.UPGRADING ||</span><br><span class="line">                    state == SocketState.UPGRADING_TOMCAT  ||</span><br><span class="line">                    state == SocketState.UPGRADED)&#123;</span><br><span class="line">                socket.setKeptAlive(true);</span><br><span class="line">                socket.access();</span><br><span class="line">                launch = true;</span><br><span class="line">            &#125; else if (state == SocketState.LONG) &#123;</span><br><span class="line">                socket.access();</span><br><span class="line">                waitingRequests.add(socket);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">           ......</span><br><span class="line">    &#125;</span><br><span class="line">    socket = null;</span><br><span class="line">    // Finish up this request</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><code>state = handler.process(socket, SocketStatus.OPEN_READ);</code><br>call process</p>
<ol>
<li>AbstractProtocol.AbstractConnectionHandler -&gt; process()<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public SocketState process(SocketWrapper&lt;S&gt; wrapper,</span><br><span class="line">        SocketStatus status) &#123;</span><br><span class="line">    if (wrapper == null) &#123;</span><br><span class="line">        // Nothing to do. Socket has been closed.</span><br><span class="line">        return SocketState.CLOSED;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    S socket = wrapper.getSocket();</span><br><span class="line">    if (socket == null) &#123;</span><br><span class="line">        // Nothing to do. Socket has been closed.</span><br><span class="line">        return SocketState.CLOSED;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Processor&lt;S&gt; processor = connections.get(socket);</span><br><span class="line">    if (status == SocketStatus.DISCONNECT &amp;&amp; processor == null) &#123;</span><br><span class="line">        // Nothing to do. Endpoint requested a close and there is no</span><br><span class="line">        // longer a processor associated with this socket.</span><br><span class="line">        return SocketState.CLOSED;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    wrapper.setAsync(false);</span><br><span class="line">    ContainerThreadMarker.markAsContainerThread();</span><br><span class="line"></span><br><span class="line">    try &#123;</span><br><span class="line">        if (processor == null) &#123;</span><br><span class="line">            processor = recycledProcessors.poll();</span><br><span class="line">        &#125;</span><br><span class="line">        if (processor == null) &#123;</span><br><span class="line">            processor = createProcessor();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        initSsl(wrapper, processor);</span><br><span class="line"></span><br><span class="line">        SocketState state = SocketState.CLOSED;</span><br><span class="line">        do &#123;</span><br><span class="line">            if (status == SocketStatus.DISCONNECT &amp;&amp;</span><br><span class="line">                    !processor.isComet()) &#123;</span><br><span class="line">                // Do nothing here, just wait for it to get recycled</span><br><span class="line">                // Don&apos;t do this for Comet we need to generate an end</span><br><span class="line">                // event (see BZ 54022)</span><br><span class="line">            &#125; else if (processor.isAsync() || state == SocketState.ASYNC_END) &#123;</span><br><span class="line">                state = processor.asyncDispatch(status);</span><br><span class="line">                if (state == SocketState.OPEN) &#123;</span><br><span class="line">                    // release() won&apos;t get called so in case this request</span><br><span class="line">                    // takes a long time to process, remove the socket from</span><br><span class="line">                    // the waiting requests now else the async timeout will</span><br><span class="line">                    // fire</span><br><span class="line">                    getProtocol().endpoint.removeWaitingRequest(wrapper);</span><br><span class="line">                    // There may be pipe-lined data to read. If the data</span><br><span class="line">                    // isn&apos;t processed now, execution will exit this</span><br><span class="line">                    // loop and call release() which will recycle the</span><br><span class="line">                    // processor (and input buffer) deleting any</span><br><span class="line">                    // pipe-lined data. To avoid this, process it now.</span><br><span class="line">                    state = processor.process(wrapper);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; else if (processor.isComet()) &#123;</span><br><span class="line">                state = processor.event(status);</span><br><span class="line">            &#125; else if (processor.getUpgradeInbound() != null) &#123;</span><br><span class="line">                state = processor.upgradeDispatch();</span><br><span class="line">            &#125; else if (processor.isUpgrade()) &#123;</span><br><span class="line">                state = processor.upgradeDispatch(status);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                state = processor.process(wrapper);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (state != SocketState.CLOSED &amp;&amp; processor.isAsync()) &#123;</span><br><span class="line">                state = processor.asyncPostProcess();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (state == SocketState.UPGRADING) &#123;</span><br><span class="line">                // Get the HTTP upgrade handler</span><br><span class="line">                HttpUpgradeHandler httpUpgradeHandler =</span><br><span class="line">                        processor.getHttpUpgradeHandler();</span><br><span class="line">                // Release the Http11 processor to be re-used</span><br><span class="line">                release(wrapper, processor, false, false);</span><br><span class="line">                // Create the upgrade processor</span><br><span class="line">                processor = createUpgradeProcessor(</span><br><span class="line">                        wrapper, httpUpgradeHandler);</span><br><span class="line">                // Mark the connection as upgraded</span><br><span class="line">                wrapper.setUpgraded(true);</span><br><span class="line">                // Associate with the processor with the connection</span><br><span class="line">                connections.put(socket, processor);</span><br><span class="line">                // Initialise the upgrade handler (which may trigger</span><br><span class="line">                // some IO using the new protocol which is why the lines</span><br><span class="line">                // above are necessary)</span><br><span class="line">                // This cast should be safe. If it fails the error</span><br><span class="line">                // handling for the surrounding try/catch will deal with</span><br><span class="line">                // it.</span><br><span class="line">                httpUpgradeHandler.init((WebConnection) processor);</span><br><span class="line">            &#125; else if (state == SocketState.UPGRADING_TOMCAT) &#123;</span><br><span class="line">                // Get the UpgradeInbound handler</span><br><span class="line">                org.apache.coyote.http11.upgrade.UpgradeInbound inbound =</span><br><span class="line">                        processor.getUpgradeInbound();</span><br><span class="line">                // Release the Http11 processor to be re-used</span><br><span class="line">                release(wrapper, processor, false, false);</span><br><span class="line">                // Create the light-weight upgrade processor</span><br><span class="line">                processor = createUpgradeProcessor(wrapper, inbound);</span><br><span class="line">                inbound.onUpgradeComplete();</span><br><span class="line">            &#125;</span><br><span class="line">            if (getLog().isDebugEnabled()) &#123;</span><br><span class="line">                getLog().debug(&quot;Socket: [&quot; + wrapper +</span><br><span class="line">                        &quot;], Status in: [&quot; + status +</span><br><span class="line">                        &quot;], State out: [&quot; + state + &quot;]&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; while (state == SocketState.ASYNC_END ||</span><br><span class="line">                state == SocketState.UPGRADING ||</span><br><span class="line">                state == SocketState.UPGRADING_TOMCAT);</span><br><span class="line"></span><br><span class="line">        if (state == SocketState.LONG) &#123;</span><br><span class="line">            // In the middle of processing a request/response. Keep the</span><br><span class="line">            // socket associated with the processor. Exact requirements</span><br><span class="line">            // depend on type of long poll</span><br><span class="line">            connections.put(socket, processor);</span><br><span class="line">            longPoll(wrapper, processor);</span><br><span class="line">        &#125; else if (state == SocketState.OPEN) &#123;</span><br><span class="line">            // In keep-alive but between requests. OK to recycle</span><br><span class="line">            // processor. Continue to poll for the next request.</span><br><span class="line">            connections.remove(socket);</span><br><span class="line">            release(wrapper, processor, false, true);</span><br><span class="line">        &#125; else if (state == SocketState.SENDFILE) &#123;</span><br><span class="line">            // Sendfile in progress. If it fails, the socket will be</span><br><span class="line">            // closed. If it works, the socket either be added to the</span><br><span class="line">            // poller (or equivalent) to await more data or processed</span><br><span class="line">            // if there are any pipe-lined requests remaining.</span><br><span class="line">            connections.put(socket, processor);</span><br><span class="line">        &#125; else if (state == SocketState.UPGRADED) &#123;</span><br><span class="line">            // Need to keep the connection associated with the processor</span><br><span class="line">            connections.put(socket, processor);</span><br><span class="line">            // Don&apos;t add sockets back to the poller if this was a</span><br><span class="line">            // non-blocking write otherwise the poller may trigger</span><br><span class="line">            // multiple read events which may lead to thread starvation</span><br><span class="line">            // in the connector. The write() method will add this socket</span><br><span class="line">            // to the poller if necessary.</span><br><span class="line">            if (status != SocketStatus.OPEN_WRITE) &#123;</span><br><span class="line">                longPoll(wrapper, processor);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            // Connection closed. OK to recycle the processor. Upgrade</span><br><span class="line">            // processors are not recycled.</span><br><span class="line">            connections.remove(socket);</span><br><span class="line">            if (processor.isUpgrade()) &#123;</span><br><span class="line">                processor.getHttpUpgradeHandler().destroy();</span><br><span class="line">            &#125; else if (processor instanceof org.apache.coyote.http11.upgrade.UpgradeProcessor) &#123;</span><br><span class="line">                // NO-OP</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                release(wrapper, processor, true, false);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return state;</span><br><span class="line">    &#125; catch(java.net.SocketException e) &#123;</span><br><span class="line">        // SocketExceptions are normal</span><br><span class="line">        getLog().debug(sm.getString(</span><br><span class="line">                &quot;abstractConnectionHandler.socketexception.debug&quot;), e);</span><br><span class="line">    &#125; catch (java.io.IOException e) &#123;</span><br><span class="line">        // IOExceptions are normal</span><br><span class="line">        getLog().debug(sm.getString(</span><br><span class="line">                &quot;abstractConnectionHandler.ioexception.debug&quot;), e);</span><br><span class="line">    &#125;</span><br><span class="line">    // Future developers: if you discover any other</span><br><span class="line">    // rare-but-nonfatal exceptions, catch them here, and log as</span><br><span class="line">    // above.</span><br><span class="line">    catch (Throwable e) &#123;</span><br><span class="line">        ExceptionUtils.handleThrowable(e);</span><br><span class="line">        // any other exception or error is odd. Here we log it</span><br><span class="line">        // with &quot;ERROR&quot; level, so it will show up even on</span><br><span class="line">        // less-than-verbose logs.</span><br><span class="line">        getLog().error(</span><br><span class="line">                sm.getString(&quot;abstractConnectionHandler.error&quot;), e);</span><br><span class="line">    &#125;</span><br><span class="line">    // Make sure socket/processor is removed from the list of current</span><br><span class="line">    // connections</span><br><span class="line">    connections.remove(socket);</span><br><span class="line">    // Don&apos;t try to add upgrade processors back into the pool</span><br><span class="line">    if (!(processor instanceof org.apache.coyote.http11.upgrade.UpgradeProcessor)</span><br><span class="line">            &amp;&amp; !processor.isUpgrade()) &#123;</span><br><span class="line">        release(wrapper, processor, true, false);</span><br><span class="line">    &#125;</span><br><span class="line">    return SocketState.CLOSED;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>Anaylsis request’s head / row/ body</p>
<ol>
<li>AbstractHttp11Processor -&gt; process()<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Process pipelined HTTP requests using the specified input and output</span><br><span class="line"> * streams.</span><br><span class="line"> *</span><br><span class="line"> * @param socketWrapper Socket from which the HTTP requests will be read</span><br><span class="line"> *               and the HTTP responses will be written.</span><br><span class="line"> *</span><br><span class="line"> * @throws IOException error during an I/O operation</span><br><span class="line"> */</span><br><span class="line">@Override</span><br><span class="line">public SocketState process(SocketWrapper&lt;S&gt; socketWrapper)</span><br><span class="line">    throws IOException &#123;</span><br><span class="line">    RequestInfo rp = request.getRequestProcessor();</span><br><span class="line">    rp.setStage(org.apache.coyote.Constants.STAGE_PARSE);</span><br><span class="line"></span><br><span class="line">    // Setting up the I/O</span><br><span class="line">    setSocketWrapper(socketWrapper);</span><br><span class="line">    getInputBuffer().init(socketWrapper, endpoint);</span><br><span class="line">    getOutputBuffer().init(socketWrapper, endpoint);</span><br><span class="line"></span><br><span class="line">    // Flags</span><br><span class="line">    keepAlive = true;</span><br><span class="line">    comet = false;</span><br><span class="line">    openSocket = false;</span><br><span class="line">    sendfileInProgress = false;</span><br><span class="line">    readComplete = true;</span><br><span class="line">    if (endpoint.getUsePolling()) &#123;</span><br><span class="line">        keptAlive = false;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        keptAlive = socketWrapper.isKeptAlive();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (disableKeepAlive()) &#123;</span><br><span class="line">        socketWrapper.setKeepAliveLeft(0);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    while (!getErrorState().isError() &amp;&amp; keepAlive &amp;&amp; !comet &amp;&amp; !isAsync() &amp;&amp;</span><br><span class="line">            upgradeInbound == null &amp;&amp;</span><br><span class="line">            httpUpgradeHandler == null &amp;&amp; !endpoint.isPaused()) &#123;</span><br><span class="line"></span><br><span class="line">        // Parsing the request header</span><br><span class="line">        try &#123;</span><br><span class="line">            setRequestLineReadTimeout();</span><br><span class="line"></span><br><span class="line">            if (!getInputBuffer().parseRequestLine(keptAlive)) &#123;</span><br><span class="line">                if (handleIncompleteRequestLineRead()) &#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (endpoint.isPaused()) &#123;</span><br><span class="line">                // 503 - Service unavailable</span><br><span class="line">                response.setStatus(503);</span><br><span class="line">                setErrorState(ErrorState.CLOSE_CLEAN, null);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                keptAlive = true;</span><br><span class="line">                // Set this every time in case limit has been changed via JMX</span><br><span class="line">                request.getMimeHeaders().setLimit(endpoint.getMaxHeaderCount());</span><br><span class="line">                request.getCookies().setLimit(getMaxCookieCount());</span><br><span class="line">                // Currently only NIO will ever return false here</span><br><span class="line">                if (!getInputBuffer().parseHeaders()) &#123;</span><br><span class="line">                    // We&apos;ve read part of the request, don&apos;t recycle it</span><br><span class="line">                    // instead associate it with the socket</span><br><span class="line">                    openSocket = true;</span><br><span class="line">                    readComplete = false;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">                if (!disableUploadTimeout) &#123;</span><br><span class="line">                    setSocketTimeout(connectionUploadTimeout);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            if (getLog().isDebugEnabled()) &#123;</span><br><span class="line">                getLog().debug(</span><br><span class="line">                        sm.getString(&quot;http11processor.header.parse&quot;), e);</span><br><span class="line">            &#125;</span><br><span class="line">            setErrorState(ErrorState.CLOSE_NOW, e);</span><br><span class="line">            break;</span><br><span class="line">        &#125; catch (Throwable t) &#123;</span><br><span class="line">            ExceptionUtils.handleThrowable(t);</span><br><span class="line">            UserDataHelper.Mode logMode = userDataHelper.getNextMode();</span><br><span class="line">            if (logMode != null) &#123;</span><br><span class="line">                String message = sm.getString(</span><br><span class="line">                        &quot;http11processor.header.parse&quot;);</span><br><span class="line">                switch (logMode) &#123;</span><br><span class="line">                    case INFO_THEN_DEBUG:</span><br><span class="line">                        message += sm.getString(</span><br><span class="line">                                &quot;http11processor.fallToDebug&quot;);</span><br><span class="line">                        //$FALL-THROUGH$</span><br><span class="line">                    case INFO:</span><br><span class="line">                        getLog().info(message, t);</span><br><span class="line">                        break;</span><br><span class="line">                    case DEBUG:</span><br><span class="line">                        getLog().debug(message, t);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            // 400 - Bad Request</span><br><span class="line">            response.setStatus(400);</span><br><span class="line">            setErrorState(ErrorState.CLOSE_CLEAN, t);</span><br><span class="line">            getAdapter().log(request, response, 0);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (!getErrorState().isError()) &#123;</span><br><span class="line">            // Setting up filters, and parse some request headers</span><br><span class="line">            rp.setStage(org.apache.coyote.Constants.STAGE_PREPARE);</span><br><span class="line">            try &#123;</span><br><span class="line">                prepareRequest();</span><br><span class="line">            &#125; catch (Throwable t) &#123;</span><br><span class="line">                ExceptionUtils.handleThrowable(t);</span><br><span class="line">                if (getLog().isDebugEnabled()) &#123;</span><br><span class="line">                    getLog().debug(sm.getString(</span><br><span class="line">                            &quot;http11processor.request.prepare&quot;), t);</span><br><span class="line">                &#125;</span><br><span class="line">                // 500 - Internal Server Error</span><br><span class="line">                response.setStatus(500);</span><br><span class="line">                setErrorState(ErrorState.CLOSE_CLEAN, t);</span><br><span class="line">                getAdapter().log(request, response, 0);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (maxKeepAliveRequests == 1) &#123;</span><br><span class="line">            keepAlive = false;</span><br><span class="line">        &#125; else if (maxKeepAliveRequests &gt; 0 &amp;&amp;</span><br><span class="line">                socketWrapper.decrementKeepAlive() &lt;= 0) &#123;</span><br><span class="line">            keepAlive = false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Process the request in the adapter</span><br><span class="line">        if (!getErrorState().isError()) &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                rp.setStage(org.apache.coyote.Constants.STAGE_SERVICE);</span><br><span class="line">                adapter.service(request, response);</span><br><span class="line">                // Handle when the response was committed before a serious</span><br><span class="line">                // error occurred.  Throwing a ServletException should both</span><br><span class="line">                // set the status to 500 and set the errorException.</span><br><span class="line">                // If we fail here, then the response is likely already</span><br><span class="line">                // committed, so we can&apos;t try and set headers.</span><br><span class="line">                if(keepAlive &amp;&amp; !getErrorState().isError() &amp;&amp; (</span><br><span class="line">                        response.getErrorException() != null ||</span><br><span class="line">                                (!isAsync() &amp;&amp;</span><br><span class="line">                                statusDropsConnection(response.getStatus())))) &#123;</span><br><span class="line">                    setErrorState(ErrorState.CLOSE_CLEAN, null);</span><br><span class="line">                &#125;</span><br><span class="line">                setCometTimeouts(socketWrapper);</span><br><span class="line">            &#125; catch (InterruptedIOException e) &#123;</span><br><span class="line">                setErrorState(ErrorState.CLOSE_NOW, e);</span><br><span class="line">            &#125; catch (HeadersTooLargeException e) &#123;</span><br><span class="line">                getLog().error(sm.getString(&quot;http11processor.request.process&quot;), e);</span><br><span class="line">                // The response should not have been committed but check it</span><br><span class="line">                // anyway to be safe</span><br><span class="line">                if (response.isCommitted()) &#123;</span><br><span class="line">                    setErrorState(ErrorState.CLOSE_NOW, e);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    response.reset();</span><br><span class="line">                    response.setStatus(500);</span><br><span class="line">                    setErrorState(ErrorState.CLOSE_CLEAN, e);</span><br><span class="line">                    response.setHeader(&quot;Connection&quot;, &quot;close&quot;); // TODO: Remove</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (Throwable t) &#123;</span><br><span class="line">                ExceptionUtils.handleThrowable(t);</span><br><span class="line">                getLog().error(sm.getString(&quot;http11processor.request.process&quot;), t);</span><br><span class="line">                // 500 - Internal Server Error</span><br><span class="line">                response.setStatus(500);</span><br><span class="line">                setErrorState(ErrorState.CLOSE_CLEAN, t);</span><br><span class="line">                getAdapter().log(request, response, 0);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Finish the handling of the request</span><br><span class="line">        rp.setStage(org.apache.coyote.Constants.STAGE_ENDINPUT);</span><br><span class="line"></span><br><span class="line">        if (!isAsync() &amp;&amp; !comet) &#123;</span><br><span class="line">            if (getErrorState().isError()) &#123;</span><br><span class="line">                // If we know we are closing the connection, don&apos;t drain</span><br><span class="line">                // input. This way uploading a 100GB file doesn&apos;t tie up the</span><br><span class="line">                // thread if the servlet has rejected it.</span><br><span class="line">                getInputBuffer().setSwallowInput(false);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                // Need to check this again here in case the response was</span><br><span class="line">                // committed before the error that requires the connection</span><br><span class="line">                // to be closed occurred.</span><br><span class="line">                checkExpectationAndResponseStatus();</span><br><span class="line">            &#125;</span><br><span class="line">            endRequest();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        rp.setStage(org.apache.coyote.Constants.STAGE_ENDOUTPUT);</span><br><span class="line"></span><br><span class="line">        // If there was an error, make sure the request is counted as</span><br><span class="line">        // and error, and update the statistics counter</span><br><span class="line">        if (getErrorState().isError()) &#123;</span><br><span class="line">            response.setStatus(500);</span><br><span class="line">        &#125;</span><br><span class="line">        request.updateCounters();</span><br><span class="line"></span><br><span class="line">        if (!isAsync() &amp;&amp; !comet || getErrorState().isError()) &#123;</span><br><span class="line">            if (getErrorState().isIoAllowed()) &#123;</span><br><span class="line">                getInputBuffer().nextRequest();</span><br><span class="line">                getOutputBuffer().nextRequest();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (!disableUploadTimeout) &#123;</span><br><span class="line">            if(endpoint.getSoTimeout() &gt; 0) &#123;</span><br><span class="line">                setSocketTimeout(endpoint.getSoTimeout());</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                setSocketTimeout(0);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        rp.setStage(org.apache.coyote.Constants.STAGE_KEEPALIVE);</span><br><span class="line"></span><br><span class="line">        if (breakKeepAliveLoop(socketWrapper)) &#123;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    rp.setStage(org.apache.coyote.Constants.STAGE_ENDED);</span><br><span class="line"></span><br><span class="line">    if (getErrorState().isError() || endpoint.isPaused()) &#123;</span><br><span class="line">        return SocketState.CLOSED;</span><br><span class="line">    &#125; else if (isAsync() || comet) &#123;</span><br><span class="line">        return SocketState.LONG;</span><br><span class="line">    &#125; else if (isUpgrade()) &#123;</span><br><span class="line">        return SocketState.UPGRADING;</span><br><span class="line">    &#125; else if (getUpgradeInbound() != null) &#123;</span><br><span class="line">        return SocketState.UPGRADING_TOMCAT;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        if (sendfileInProgress) &#123;</span><br><span class="line">            return SocketState.SENDFILE;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            if (openSocket) &#123;</span><br><span class="line">                if (readComplete) &#123;</span><br><span class="line">                    return SocketState.OPEN;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    return SocketState.LONG;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                return SocketState.CLOSED;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>Read http request from socket, anaylsis request head,<br>construct <code>Request</code> <code>Response</code> Object, then call Adapter.service().<br>[raw 1115 <code>adapter.service(request, response);</code>]</p>
<p><code>adapter.service()</code> will finish request row and body anaylsis, put<br>info package into <code>Request</code> <code>Response</code> Object.</p>
<p><code>Adapter</code> <code>org.apache.catalina.connector.CoyoteAdapter</code> is the bridge between<br><code>Connector</code> and <code>Container</code>.</p>
<p>When this step finished request have passed to <code>Container</code> from <code>Connector</code></p>
<p>PS. First deal request with <code>org.apache.coyote.Request</code> is because it’s a<br>light-weight object in Tomcat.<br>It’s memory space can be easy recycle use by JVM.<br>Not put the job to <code>Connector.Request</code> is design for reduce burden[performence].</p>
<p><code>Connector.Request</code> function for servlet is far more conplex than <code>org.apache.coyote.Request</code></p>
<ol>
<li>CoyoteAdapter -&gt; service()<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Service method.</span><br><span class="line"> */</span><br><span class="line">@Override</span><br><span class="line">public void service(org.apache.coyote.Request req,</span><br><span class="line">                    org.apache.coyote.Response res)</span><br><span class="line">    throws Exception &#123;</span><br><span class="line"></span><br><span class="line">    Request request = (Request) req.getNote(ADAPTER_NOTES);</span><br><span class="line">    Response response = (Response) res.getNote(ADAPTER_NOTES);</span><br><span class="line"></span><br><span class="line">    if (request == null) &#123;</span><br><span class="line">        ......</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (connector.getXpoweredBy()) &#123;</span><br><span class="line">        response.addHeader(&quot;X-Powered-By&quot;, POWERED_BY);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    boolean comet = false;</span><br><span class="line">    boolean async = false;</span><br><span class="line">    boolean postParseSuccess = false;</span><br><span class="line"></span><br><span class="line">    try &#123;</span><br><span class="line">        // Parse and set Catalina and configuration specific</span><br><span class="line">        // request parameters</span><br><span class="line">        req.getRequestProcessor().setWorkerThreadName(Thread.currentThread().getName());</span><br><span class="line">        postParseSuccess = postParseRequest(req, request, res, response);</span><br><span class="line">        if (postParseSuccess) &#123;</span><br><span class="line">            //check valves if we support async</span><br><span class="line">            request.setAsyncSupported(connector.getService().getContainer().getPipeline().isAsyncSupported());</span><br><span class="line">            // Calling the container</span><br><span class="line">            connector.getService().getContainer().getPipeline().getFirst().invoke(request, response);</span><br><span class="line">            ......</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        ......</span><br><span class="line">    &#125; catch (IOException e) &#123;</span><br><span class="line">        // Ignore</span><br><span class="line">    &#125; finally &#123;</span><br><span class="line">        ......</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><code>connector.getService().getContainer().getPipeline().getFirst().invoke(request, response);</code><br>pass request to container</p>
<h4 id="Mapper-Listener"><a href="#Mapper-Listener" class="headerlink" title="Mapper Listener"></a>Mapper Listener</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line">public final synchronized void start() throws LifecycleException &#123;</span><br><span class="line"></span><br><span class="line">    if (LifecycleState.STARTING_PREP.equals(state) || LifecycleState.STARTING.equals(state) ||</span><br><span class="line">            LifecycleState.STARTED.equals(state)) &#123;</span><br><span class="line">            ......</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (state.equals(LifecycleState.NEW)) &#123;</span><br><span class="line">        init();</span><br><span class="line">    &#125; else if (state.equals(LifecycleState.FAILED)) &#123;</span><br><span class="line">        stop();</span><br><span class="line">    &#125; else if (!state.equals(LifecycleState.INITIALIZED) &amp;&amp;</span><br><span class="line">            !state.equals(LifecycleState.STOPPED)) &#123;</span><br><span class="line">        invalidTransition(Lifecycle.BEFORE_START_EVENT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    try &#123;</span><br><span class="line">        setStateInternal(LifecycleState.STARTING_PREP, null, false);</span><br><span class="line">        startInternal();</span><br><span class="line">        if (state.equals(LifecycleState.FAILED)) &#123;</span><br><span class="line">            // This is a &apos;controlled&apos; failure. The component put itself into the</span><br><span class="line">            // FAILED state so call stop() to complete the clean-up.</span><br><span class="line">            stop();</span><br><span class="line">        &#125; else if (!state.equals(LifecycleState.STARTING)) &#123;</span><br><span class="line">            // Shouldn&apos;t be necessary but acts as a check that sub-classes are</span><br><span class="line">            // doing what they are supposed to.</span><br><span class="line">            invalidTransition(Lifecycle.AFTER_START_EVENT);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            setStateInternal(LifecycleState.STARTED, null, false);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; catch (Throwable t) &#123;</span><br><span class="line">        ......</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>Regist Connector itself</li>
<li>Add Listener for module</li>
<li>Add Containers’ mapping relation</li>
</ol>
<p>Connctor start finished, damn!!!</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title>find command</title>
    <url>/2017/09/27/find-command/</url>
    <content><![CDATA[<p>find [-H] [-L] [-P] [-D debugopts] [-Olevel] [path…] [expression]</p>
<p>find <path> [path path …] <option> <action></action></option></path></p>
<h3 id="Option"><a href="#Option" class="headerlink" title="Option"></a>Option</h3><ul>
<li><p>-depth step into sub files first, then current directory<br>.The -delete action also implies -depth</p>
</li>
<li><p>-name [-iname] find file by name<br><code>find /etc /root -name passwd</code></p>
</li>
<li><p>-type</p>
<ul>
<li><code>d</code>      directory</li>
<li><code>f</code>      regular file</li>
</ul>
</li>
<li><p>-size</p>
<ul>
<li><code>b</code>    for 512-byte blocks (this is the default if no suffix is used)</li>
<li><code>c</code>    for bytes</li>
<li><code>w</code>    for two-byte words</li>
<li><code>k</code>    for Kilobytes (units of 1024 bytes)</li>
<li><code>M</code>    for Megabytes (units of 1048576 bytes)</li>
<li><code>G</code>    for Gigabytes (units of 1073741824 bytes)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># find files bigger than 30 kilobytes</span><br><span class="line"># %k %b in printf represent different block size</span><br><span class="line"></span><br><span class="line">find -size +30k -printf &apos;%p %k %b \r\n&apos;</span><br></pre></td></tr></table></figure>
</li>
<li><p>-a[and] -o[or] -not logic option</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># find files name end with sh, and belong to user</span><br><span class="line"># ubuntu or group id is 1000</span><br><span class="line">find /usr -name &apos;*.sh&apos; -a -user ubuntu -o -gid 1000</span><br><span class="line"></span><br><span class="line"># find files name not end with class</span><br><span class="line">find . -not -name &apos;*.class&apos;</span><br></pre></td></tr></table></figure>
</li>
<li><p>-atime -mtime -ctime -amin -mmin -cmin<br><code>a</code> access file<br><code>m</code> modify file<br><code>c</code> change property<br><code>time</code> days<br><code>min</code> minutes</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># find files be accessed in last 19 days</span><br><span class="line">find -atime -19 -printf &apos;%p %a %t \r\n&apos;</span><br><span class="line"></span><br><span class="line"># find files not be accessed in last 19 days</span><br><span class="line">find -atime +19 -printf &apos;%p %a %t \r\n&apos;</span><br></pre></td></tr></table></figure>
</li>
<li><p>-newer -anewer -cnewer<br>based on parameter file modify time<br><code>-newer</code> File was modified more recently than file<br><code>-anewer</code> File was last accessed more recently than file was modified.<br><code>-cnewer</code> File’s status was last changed more recently than file was modified.</p>
</li>
<li><p>-perm<br>find files based on privilege</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># find files in current directory which</span><br><span class="line"># permissions is -rwxr-xr-x</span><br><span class="line">find -perm 755</span><br><span class="line"></span><br><span class="line"># at least a kind of user have write privilege</span><br><span class="line">find -perm +444</span><br><span class="line"></span><br><span class="line"># all kind user have write privilege</span><br><span class="line">find -perm -444</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Action"><a href="#Action" class="headerlink" title="Action"></a>Action</h3><ul>
<li><p>-printf format out put</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#   name  depth  space[512-kbytes]  space[1024-kbytes]</span><br><span class="line">#   permissions  access_time  change_time  modify_time</span><br><span class="line">find -user ubuntu -printf &apos;%p %d %b %k %M %a %c %t \r\n&apos;</span><br></pre></td></tr></table></figure>
</li>
<li><p>-ls<br>list in <code>ls</code> command</p>
</li>
<li><p>-ok<br>ask user yes/no execute command</p>
</li>
<li><p>-exec command {} +<br>execute command no asking</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># delete files in current directory no accessed in 30 days</span><br><span class="line">find . -atime +30 –exec rm –rf &#123;&#125;</span><br><span class="line"># same effect</span><br><span class="line">find . -atime +30 | xargs rm -rf</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><a href="http://blog.csdn.net/yanxuex/article/details/17681475" target="_blank" rel="noopener">linux find</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>command</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux memory</title>
    <url>/2017/10/16/Linux-memory/</url>
    <content><![CDATA[<ol>
<li><p>get top memory process</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># +3[CPU]</span><br><span class="line">ps aux|head -1;ps aux|grep -v PID|sort -rn -k +4|head</span><br></pre></td></tr></table></figure>
</li>
<li><p>free</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">free -m</span><br><span class="line">free -b -s5</span><br><span class="line">free -h</span><br><span class="line"></span><br><span class="line">              total       used       free     shared    buffers     cached</span><br><span class="line">Mem:          7.7G       7.6G       133M       164K       190M       3.1G</span><br><span class="line">-/+ buffers/cache:       4.2G       3.5G</span><br><span class="line">Swap:           0B         0B         0B</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>from the point of view of <code>OS</code> buffers and cached memory is used<br>available memory size = free + buffers + cached</p>
<ol>
<li>ps<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ps aux --sort -rss</span><br><span class="line">ps aux | grep xxx</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ul>
<li>USER process’ user</li>
<li>PID process id</li>
<li>%CPU cpu proportion</li>
<li>%MEM memory proportion</li>
<li><strong>VSZ</strong> total VM size in kB</li>
<li><strong>RSS</strong> resident set size</li>
<li>TTY terminal</li>
<li>STAT<ul>
<li>R Running or runnable (on run queue)</li>
<li>S Interruptible sleep (waiting for an event to complete)</li>
</ul>
</li>
<li>START time the command started</li>
<li>TIME run cpu time</li>
<li>COMMAND string as arguments</li>
</ul>
<ol>
<li>/proc<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat /proc/pid/status</span><br><span class="line"></span><br><span class="line">VmPeak:	 5033936 kB</span><br><span class="line">VmSize:	 5033620 kB</span><br><span class="line">VmLck:	       0 kB</span><br><span class="line">VmHWM:	 1151928 kB</span><br><span class="line">VmRSS:	 1151644 kB</span><br><span class="line">VmData:	 4875980 kB</span><br><span class="line">VmStk:	      88 kB</span><br><span class="line">VmExe:	      36 kB</span><br><span class="line">VmLib:	  127412 kB</span><br><span class="line">VmPTE:	    2724 kB</span><br><span class="line">VmSwap:	       0 kB</span><br><span class="line">Threads:	72</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ul>
<li>VmSize(KB) task’s virtual address space size (total_vm-reserved_vm)</li>
<li>VmLck(KB) been locked physical memory size, can’t exchange to hard drive(locked_vm)</li>
<li><strong>VmRSS(KB)</strong> resident set size, physical memory. (rss in ps)</li>
<li><strong>VmData(KB)</strong> program’s data paragraph size (virtual), store initialized data(total_vm-shared_vm-stack_vm)</li>
<li>VmStk(KB) task’s stack size in user(stack_vm)</li>
<li>VmExe(KB) executable virtual memory size, (exclude lib) (end_code-start_code)</li>
<li>VmLib(KB) lib mapping to task memory space size(exec_lib)</li>
<li>VmPTE(KB) this process’s page size</li>
<li>Threads share this signal’s task number(POSIX multi app, thread group use same signal)</li>
</ul>
<ol>
<li>top<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># [shit+m sort by memory]</span><br><span class="line">top -p 6506</span><br><span class="line"></span><br><span class="line">top - 11:14:20 up 125 days,  1:47,  1 user,  load average: 0.00, 0.00, 0.00</span><br><span class="line">Tasks:   1 total,   0 running,   1 sleeping,   0 stopped,   0 zombie</span><br><span class="line">Cpu(s):  0.2%us,  0.1%sy,  0.0%ni, 99.7%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</span><br><span class="line">Mem:   8061396k total,  7925220k used,   136176k free,   194748k buffers</span><br><span class="line">Swap:        0k total,        0k used,        0k free,  3291676k cached</span><br><span class="line"></span><br><span class="line">  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND  </span><br><span class="line"> 3825 root      20   0  164m  41m 1020 S  0.0  0.5 146:54.42 redis-server</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><code>Cpu(s):  0.2%us,  0.1%sy,  0.0%ni, 99.7%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</code></p>
<ul>
<li>us user space cup proportion</li>
<li>sy system core space cup proportion</li>
<li>ni priority changed task cup proportion</li>
<li>id idle cpu proportion</li>
<li>wa waiting IO cpu proportion</li>
<li>hi hard ware cost</li>
<li>si soft ware cost</li>
<li>st steal time</li>
</ul>
<p><code>PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND</code></p>
<ul>
<li>PR priority rank</li>
<li>NI nice value</li>
<li>VIRT virtual memory size</li>
<li>RES not be exchanged memory size</li>
<li>SHR share meory size</li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>command</tag>
      </tags>
  </entry>
  <entry>
    <title>Think in Develop</title>
    <url>/2017/10/27/Think-in-Develop/</url>
    <content><![CDATA[<h2 id="Split-front-and-backgroud"><a href="#Split-front-and-backgroud" class="headerlink" title="Split front and backgroud"></a>Split front and backgroud</h2><p>Now adays the front develop framwork has a great progress,<br>more and more web develop use model/ scriptable develop framwork.</p>
<p>Backgroud no need forcus on how to deal page staff, much more backgroud.<br>More and more <code>POST</code> style backgroud, restructure to <code>REST</code> style.</p>
<h2 id="Front-emphasize-in-rendering"><a href="#Front-emphasize-in-rendering" class="headerlink" title="Front emphasize in rendering"></a>Front emphasize in rendering</h2><p>App’s rendering got a great progress, thanks to mobile equipment popular.<br>Front developer now have more power to deal business with customer,<br>no need to care how hard backgroud gay work.</p>
<h2 id="Backgroud-emphasize-in-usability"><a href="#Backgroud-emphasize-in-usability" class="headerlink" title="Backgroud emphasize in usability"></a>Backgroud emphasize in usability</h2><p>Backgroud’s structure is important, it’s stability/ usability affect<br>user feeling a lot.</p>
<p>Backgroud developer more forcus on data/ model/ resource/ performan…</p>
<h2 id="Develop-now"><a href="#Develop-now" class="headerlink" title="Develop now"></a>Develop now</h2><p>For front developer, MVC is relatively balance.<br>For backgroud developer, <code>V</code> is steal useable in some old style develop<br>project, use script style backgroud language <code>PHP</code> <code>JSP</code> <code>ASP</code> …</p>
<p>But for robust modern business application, B/G have been splitted</p>
<p><a href="https://segmentfault.com/a/1190000004213733" target="_blank" rel="noopener">https://segmentfault.com/a/1190000004213733</a></p>
]]></content>
      <categories>
        <category>theory</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>first</tag>
      </tags>
  </entry>
  <entry>
    <title>sleep in c++</title>
    <url>/2017/11/15/sleep-in-c/</url>
    <content><![CDATA[<h3 id="Introduce"><a href="#Introduce" class="headerlink" title="Introduce"></a>Introduce</h3><p>hang up thread for a while<br>unsigned sleep(unsigned seconds);</p>
<ul>
<li>In VC++ add head file <code>#include &lt;windows.h&gt;</code> or <code>#include &quot;stdafx.h&quot;</code></li>
<li>In GCC add head file <code>#include &lt;unistd.h&gt;</code></li>
</ul>
<h3 id="Caution"><a href="#Caution" class="headerlink" title="Caution"></a>Caution</h3><ul>
<li>In windows <code>Sleep()</code> is first letter upper case, and unit in <code>milliseconds</code></li>
<li>In Linux <code>sleep()</code> is first letter lower case, and unit in <code>seconds</code></li>
</ul>
<p>&lt;/br&gt;<br>&lt;/br&gt;<br>&lt;/br&gt;<br>&lt;/br&gt;<br>&lt;/br&gt;<br>&lt;/br&gt;<br>&lt;/br&gt;</p>
<h3 id="List"><a href="#List" class="headerlink" title="List"></a>List</h3><div class="table-container">
<table>
<thead>
<tr>
<th>a</th>
<th>b</th>
</tr>
</thead>
<tbody>
<tr>
<td>Dos</td>
<td>sleep(1); //停留1秒 &lt;/br&gt;delay(100); //停留100毫秒</td>
</tr>
<tr>
<td>Windows</td>
<td>Sleep(100); //停留100毫秒</td>
</tr>
<tr>
<td>Linux</td>
<td>sleep(1); //停留1秒 &lt;/br&gt;usleep(1000); //停留1毫秒</td>
</tr>
</tbody>
</table>
</div>
<p><a href="http://blog.csdn.net/jiangxinyu/article/details/7754664" target="_blank" rel="noopener">sleep function</a></p>
]]></content>
      <categories>
        <category>c++</category>
      </categories>
      <tags>
        <tag>function</tag>
      </tags>
  </entry>
  <entry>
    <title>Thread security</title>
    <url>/2017/12/02/Thread-security/</url>
    <content><![CDATA[<h2 id="Security-problem-in-java-web"><a href="#Security-problem-in-java-web" class="headerlink" title="Security problem in java web"></a>Security problem in java web</h2><p>In tradition web develop, Servlet implement response to http request.<br>Servlet is one of the important standard of J2EE, it set how java response to Http request.<br>In project, classpath need relay on servlet-api.jar of j2ee.jar.<br>We can interact with web container through <code>HttpServletRequest</code> and <code>HttpServletResponse</code> object.</p>
<p>When container receive a request, container will dispatch a thread that<br>define in advance from main thread(tomcat observer pattern), to deal the mapping servlet implement.<br>When another request come in, main thread will choose thread from threadpool to serve,<br>but it <strong>do not care</strong> is there other threads using this implement.</p>
<p>So web container use <strong>singleton pattern</strong> to implement service object.<br>This pattern can reduce the servlet space waste, and improve response performance.<br>But it lead to security problem, the servlet in container is not thread security save.</p>
<h2 id="HashMap-and-HashTable"><a href="#HashMap-and-HashTable" class="headerlink" title="HashMap and HashTable"></a>HashMap and HashTable</h2><ul>
<li><code>HashMap</code> implement <code>Map</code> interface from java 1.2</li>
<li>a light weight implement of  <code>HashTable</code>, no <code>contains</code> method(avoid confusion)</li>
<li>All key / value in <code>HaspMap</code> entry are object(can be null).</li>
<li><p>not security save</p>
</li>
<li><p><code>HashTable</code> is security save, it’s method is <code>Synchronized</code></p>
</li>
<li><code>HashTable</code> &amp; <code>HashMap</code> hash implement is same, so performance in <code>Synchronized</code> is same too.</li>
</ul>
<h2 id="Theory"><a href="#Theory" class="headerlink" title="Theory"></a>Theory</h2><blockquote>
<p>if multi-thread program run in same code result is same with single thread expect,<br>then thread secure. Thread security is caused by global  or static changeable variable.<br>If only read operation on these variable in program, then no thread security problem in regular.</p>
</blockquote>
<h3 id="Thread-security"><a href="#Thread-security" class="headerlink" title="Thread security"></a>Thread security</h3><p><strong>In multi-thread environment, a class execute method, obtain independent resource</strong></p>
<ul>
<li>method signature variable is save(???)</li>
<li>local variable in method is save</li>
</ul>
<h3 id="ThreadLocal"><a href="#ThreadLocal" class="headerlink" title="ThreadLocal"></a>ThreadLocal</h3><p>ThreadLocal is self is not a thread, it’s static class.<br>It maintain thread’s independent copy <code>ThreadLocalMap</code>.</p>
<p>one side: all thread visit it’s own <code>ThreadLocalMap</code><br>another side: one thread visit it’s own <code>ThreadLocal</code></p>
<h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><ul>
<li><code>ThreadLocal</code> maintain thread’s variable, to deal visit conflict.</li>
<li><code>Synchronized</code> use JVM lock mechanism to make sure resource atomicity(one thread visit in time).</li>
</ul>
<p><code>ThreadLocal</code> use space to exchange time, provide every thread a variable copy, make sure visit concurrent but no conflict.<br><code>Synchronized</code> use time to exchange space, monitor a target, to make thread visit in queue.</p>
<p><a href="http://blog.51cto.com/dongisland/1369375" target="_blank" rel="noopener">http://blog.51cto.com/dongisland/1369375</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>thread</tag>
      </tags>
  </entry>
  <entry>
    <title>Abbreviations and symbols</title>
    <url>/2017/12/21/Abbreviations-and-symbols/</url>
    <content><![CDATA[<h1 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h1><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">a</th>
<th>b</th>
<th>c</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">AR</td>
<td>autoregressive</td>
<td>自回归</td>
</tr>
<tr>
<td style="text-align:left">BBTT</td>
<td>back propagation through time</td>
<td>通过时间的反向传播</td>
</tr>
<tr>
<td style="text-align:left">BM</td>
<td>Boltzmann machine</td>
<td>Boltzmann机</td>
</tr>
<tr>
<td style="text-align:left">BP</td>
<td>back propagation</td>
<td>反向传播</td>
</tr>
<tr>
<td style="text-align:left">b/s</td>
<td>bit per second</td>
<td>每秒比特率</td>
</tr>
<tr>
<td style="text-align:left">BSB</td>
<td>bran-state-in-a-box</td>
<td>盒中脑状态</td>
</tr>
<tr>
<td style="text-align:left">BSS</td>
<td>blind source(signal) separation</td>
<td>盲源（信号）分离</td>
</tr>
<tr>
<td style="text-align:left">cmm</td>
<td>correlation matrix memory</td>
<td>相关矩阵记忆</td>
</tr>
<tr>
<td style="text-align:left">CV</td>
<td>cross-validation</td>
<td>交叉验证</td>
</tr>
<tr>
<td style="text-align:left">DFA</td>
<td>deterministic finite-state automata</td>
<td>确定性有限状态自动机</td>
</tr>
<tr>
<td style="text-align:left">EKF</td>
<td>extended Kalman filter</td>
<td>扩展卡尔曼滤波器</td>
</tr>
<tr>
<td style="text-align:left">EM</td>
<td>expectation-maximization</td>
<td>期望最大化</td>
</tr>
<tr>
<td style="text-align:left">FIR</td>
<td>finite-duration impulse response</td>
<td>有限时间冲击响应</td>
</tr>
<tr>
<td style="text-align:left">FM</td>
<td>frequency-modulated(singal)</td>
<td>频率调制（信号）</td>
</tr>
<tr>
<td style="text-align:left">GCV</td>
<td>generalized cross-validation</td>
<td>广义交叉验证</td>
</tr>
<tr>
<td style="text-align:left">GHA</td>
<td>generalized Hebbian algorithm</td>
<td>广义Hebb算法</td>
</tr>
<tr>
<td style="text-align:left">GSLC</td>
<td>generalized sodelobe canceler</td>
<td>广义旁瓣消除器</td>
</tr>
<tr>
<td style="text-align:left">Hz</td>
<td>hertz</td>
<td>赫兹</td>
</tr>
<tr>
<td style="text-align:left">ICA</td>
<td></td>
<td>独立分量分析</td>
</tr>
<tr>
<td style="text-align:left">Infomax</td>
<td></td>
<td>最大互信息</td>
</tr>
<tr>
<td style="text-align:left">Imax</td>
<td></td>
<td>最大互信息的变体</td>
</tr>
<tr>
<td style="text-align:left">Imin</td>
<td></td>
<td>最大互信息的另一变体</td>
</tr>
<tr>
<td style="text-align:left">KSOM</td>
<td></td>
<td>核自组织映射</td>
</tr>
<tr>
<td style="text-align:left">KHA</td>
<td></td>
<td>核Hebb算法</td>
</tr>
<tr>
<td style="text-align:left">LMS</td>
<td>least-mean-square</td>
<td>最小均方</td>
</tr>
<tr>
<td style="text-align:left">LR</td>
<td></td>
<td>似然比</td>
</tr>
<tr>
<td style="text-align:left">LS</td>
<td>Least-squares</td>
<td>最小二乘</td>
</tr>
<tr>
<td style="text-align:left">LS-TD</td>
<td>Least-squares, temporal-difference</td>
<td>最小二乘，时序差分</td>
</tr>
<tr>
<td style="text-align:left">LTP</td>
<td></td>
<td>长期增强</td>
</tr>
<tr>
<td style="text-align:left">LTD</td>
<td></td>
<td>长期衰减</td>
</tr>
<tr>
<td style="text-align:left">LRT</td>
<td></td>
<td>似然比测试</td>
</tr>
<tr>
<td style="text-align:left">MAP</td>
<td></td>
<td>最大后验估计</td>
</tr>
<tr>
<td style="text-align:left">MCA</td>
<td></td>
<td>次分量分析</td>
</tr>
<tr>
<td style="text-align:left">MCMC</td>
<td>Markov Chain Monte Carlo</td>
<td>马尔可夫链蒙特卡洛</td>
</tr>
<tr>
<td style="text-align:left">MDL</td>
<td></td>
<td>最小描述长度</td>
</tr>
<tr>
<td style="text-align:left">MIMO</td>
<td></td>
<td>多输入多输出</td>
</tr>
<tr>
<td style="text-align:left">ML</td>
<td></td>
<td>最大似然</td>
</tr>
<tr>
<td style="text-align:left">MLP</td>
<td>Multilayer perceptron</td>
<td>多层感知器</td>
</tr>
<tr>
<td style="text-align:left">MRC</td>
<td></td>
<td>模型参考控制</td>
</tr>
<tr>
<td style="text-align:left">NARMA</td>
<td></td>
<td>非线性自回归平滑平均</td>
</tr>
<tr>
<td style="text-align:left">NARX</td>
<td></td>
<td>具有外部输入的非线性自回归</td>
</tr>
<tr>
<td style="text-align:left">NDP</td>
<td></td>
<td>神经动态规划</td>
</tr>
<tr>
<td style="text-align:left">NW</td>
<td></td>
<td>Nadaraya-Watson(估计器)</td>
</tr>
<tr>
<td style="text-align:left">NWKR</td>
<td></td>
<td>Nadaraya-Watson核回归</td>
</tr>
<tr>
<td style="text-align:left">OBD</td>
<td></td>
<td>最优脑损伤</td>
</tr>
<tr>
<td style="text-align:left">OBS</td>
<td></td>
<td>最优脑外科</td>
</tr>
<tr>
<td style="text-align:left">OCR</td>
<td>optical character recognition</td>
<td>光学字符识别</td>
</tr>
<tr>
<td style="text-align:left">PAC</td>
<td></td>
<td>可能近似正确</td>
</tr>
<tr>
<td style="text-align:left">PCA</td>
<td></td>
<td>主分量分析</td>
</tr>
<tr>
<td style="text-align:left">PF</td>
<td></td>
<td>粒子滤波器</td>
</tr>
<tr>
<td style="text-align:left">pdf</td>
<td>probability density function</td>
<td>概率密度函数</td>
</tr>
<tr>
<td style="text-align:left">pmf</td>
<td>probability mass function</td>
<td>概率质量函数</td>
</tr>
<tr>
<td style="text-align:left">QP</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">RBF</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">RLS</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">RLS</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">RMLP</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">RTRL</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">SIMO</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">SIR</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">SIS</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">SISO</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">SNR</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">SOM</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">SRN</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">SVD</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">SVM</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">TD</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">TDNN</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">TLFN</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">VC</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">VLSI</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">XOR</td>
<td>exclusive OR</td>
<td>异或</td>
</tr>
</tbody>
</table>
</div>
<h1 id="符号"><a href="#符号" class="headerlink" title="符号"></a>符号</h1><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">a</th>
<th>b</th>
<th>c</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">$\mathrm{a}$</td>
<td>action</td>
<td>动作</td>
</tr>
<tr>
<td style="text-align:left">$\mathbf{a}^T\mathbf{b}$</td>
<td></td>
<td>向量a和b的内积</td>
</tr>
<tr>
<td style="text-align:left">$\mathbf{ab}^T$</td>
<td></td>
<td>向量a和b的外积</td>
</tr>
<tr>
<td style="text-align:left">$\dbinom{l}{m}$</td>
<td></td>
<td>二项式系数</td>
</tr>
<tr>
<td style="text-align:left">$\mathrm{A}\bigcup\mathrm{B}$</td>
<td></td>
<td>A和B的并集</td>
</tr>
<tr>
<td style="text-align:left">$\mathrm{B}$</td>
<td></td>
<td>温度的逆</td>
</tr>
<tr>
<td style="text-align:left">$\mathrm{b}_k$</td>
<td></td>
<td>神经元k的偏置</td>
</tr>
<tr>
<td style="text-align:left">$\cos(\mathbf{a},\mathbf{b})$</td>
<td></td>
<td>向量a的b夹角余弦</td>
</tr>
<tr>
<td style="text-align:left">$\mathit{c}_{ u, v } (\mathit{u, v})$</td>
<td></td>
<td>系词的概率密度函数</td>
</tr>
<tr>
<td style="text-align:left">$\mathit{D}$</td>
<td></td>
<td>记忆深度</td>
</tr>
<tr>
<td style="text-align:left">$\mathit{D}_{ f &#124; g }$</td>
<td></td>
<td>概率密度函数f和g之间的Kullback-Leibler散度</td>
</tr>
<tr>
<td style="text-align:left">$\tilde{\mathbf{D}}$</td>
<td></td>
<td>算子D的伴随矩阵</td>
</tr>
<tr>
<td style="text-align:left">$\mathit{E}$</td>
<td></td>
<td>能量函数</td>
</tr>
<tr>
<td style="text-align:left">$\mathit{E}_i$</td>
<td></td>
<td>统计力学中的状态i的能量</td>
</tr>
<tr>
<td style="text-align:left">$\mathbb{E}$</td>
<td></td>
<td>统计期望算子</td>
</tr>
<tr>
<td style="text-align:left">$\left\langle \mathit{E} \right\rangle$</td>
<td></td>
<td>平均能量</td>
</tr>
<tr>
<td style="text-align:left">$\exp$</td>
<td></td>
<td>指数</td>
</tr>
<tr>
<td style="text-align:left">$\varepsilon_{av}$</td>
<td></td>
<td>平均平方误差或平方误差和</td>
</tr>
<tr>
<td style="text-align:left">$\varepsilon(n)$</td>
<td></td>
<td>平方误差和的瞬间值</td>
</tr>
<tr>
<td style="text-align:left">$\varepsilon_{total}$</td>
<td></td>
<td>总平方误差和</td>
</tr>
<tr>
<td style="text-align:left">$\mathit{F}$</td>
<td></td>
<td>自由能量</td>
</tr>
<tr>
<td style="text-align:left">$\mathscr{F}*$</td>
<td></td>
<td>经验风险最小的子集（网络）</td>
</tr>
<tr>
<td style="text-align:left">$\mathbf{H}$</td>
<td></td>
<td>Hessian矩阵</td>
</tr>
<tr>
<td style="text-align:left">$\mathbf{H}^{-1}$</td>
<td></td>
<td>Hessian矩阵H的逆</td>
</tr>
<tr>
<td style="text-align:left">$\mathit{i}$</td>
<td></td>
<td>-1的平方根，亦记作j</td>
</tr>
<tr>
<td style="text-align:left">$\mathbf{I}$</td>
<td></td>
<td>单位矩阵</td>
</tr>
<tr>
<td style="text-align:left">$\mathbf{I}$</td>
<td></td>
<td>Fisher信息矩阵</td>
</tr>
<tr>
<td style="text-align:left">$\mathit{J}$</td>
<td></td>
<td>均方误差</td>
</tr>
<tr>
<td style="text-align:left">$\mathbf{J}$</td>
<td></td>
<td>Jacobi矩阵</td>
</tr>
<tr>
<td style="text-align:left">$\mathbf{P}^{1/2}$</td>
<td></td>
<td>矩阵P的方根</td>
</tr>
<tr>
<td style="text-align:left">$\mathbf{P}^{T/2}$</td>
<td></td>
<td>矩阵P的方根转置</td>
</tr>
<tr>
<td style="text-align:left">$\mathbf{P}_{n, n-1}$</td>
<td></td>
<td>卡尔曼滤波理论中的误差协方差矩阵</td>
</tr>
<tr>
<td style="text-align:left">$\mathit{k}_B$</td>
<td></td>
<td>Boltzmann常数</td>
</tr>
<tr>
<td style="text-align:left">$\log$</td>
<td></td>
<td>对数</td>
</tr>
<tr>
<td style="text-align:left">$\mathit{L}(\mathbf{w})$</td>
<td></td>
<td>权值向量w的对数似然函数</td>
</tr>
<tr>
<td style="text-align:left">$\mathscr{L}(\mathbf{w})$</td>
<td></td>
<td>但样本的权值向量w的对数似然函数</td>
</tr>
<tr>
<td style="text-align:left">$\mathbf{M}_c$</td>
<td></td>
<td>可控矩阵</td>
</tr>
<tr>
<td style="text-align:left">$\mathbf{M}_o$</td>
<td></td>
<td>可观察矩阵</td>
</tr>
<tr>
<td style="text-align:left">$\mathrm{n}$</td>
<td></td>
<td>离散时间</td>
</tr>
<tr>
<td style="text-align:left">$\mathit{P}_i$</td>
<td></td>
<td>统计力学中的状态i的概率</td>
</tr>
<tr>
<td style="text-align:left">$\mathit{P}_{ij}$</td>
<td></td>
<td>从状态i到状态j的转移概率</td>
</tr>
<tr>
<td style="text-align:left">$\mathbf{P}$</td>
<td></td>
<td>随机矩阵</td>
</tr>
<tr>
<td style="text-align:left">$\mathrm{P}(e&#124;\mathscr{C})$</td>
<td></td>
<td>从类C中输入时e的条件概率</td>
</tr>
<tr>
<td style="text-align:left">$\mathrm{P}_\alpha^+$</td>
<td></td>
<td>假设网络处于钳制状态（正向阶段）时，Blotzmann机的可见神经元状态为α的概率</td>
</tr>
<tr>
<td style="text-align:left">$\mathrm{P}_\alpha^-$</td>
<td></td>
<td>假设网络处自有运行条件（负向阶段）时，Blotzmann机的可见神经元状态为α的概率</td>
</tr>
<tr>
<td style="text-align:left">$\hat{r}_x(j, k; n)$</td>
<td></td>
<td>xi(n)和xk(n)的自相关函数估计</td>
</tr>
<tr>
<td style="text-align:left">$\hat{r}_{dx}(k; n)$</td>
<td></td>
<td>d(n)和xk(n)的交叉相关函数估计</td>
</tr>
<tr>
<td style="text-align:left">$\mathbf{R}$</td>
<td></td>
<td>输入向量的相关矩阵</td>
</tr>
<tr>
<td style="text-align:left">$\mathrm{t}$</td>
<td></td>
<td>连续时间</td>
</tr>
<tr>
<td style="text-align:left">$\mathit{T}$</td>
<td></td>
<td>温度</td>
</tr>
<tr>
<td style="text-align:left">$\mathscr{T}$</td>
<td></td>
<td>训练集（样本）</td>
</tr>
<tr>
<td style="text-align:left">$\mathrm{tr}$</td>
<td></td>
<td>表示矩阵迹的算子</td>
</tr>
<tr>
<td style="text-align:left">$\mathrm{var}$</td>
<td></td>
<td>方差算子</td>
</tr>
<tr>
<td style="text-align:left">$\mathit{V}(x)$</td>
<td></td>
<td>状态向量x的Lyapunov函数</td>
</tr>
<tr>
<td style="text-align:left">$\mathit{v}_i$</td>
<td></td>
<td>神经元j的诱导局部域或激活位势</td>
</tr>
<tr>
<td style="text-align:left">$\mathbf{w}_v$</td>
<td></td>
<td>突出权值向量的最优值</td>
</tr>
<tr>
<td style="text-align:left">$\mathscr{w}_{kj}$</td>
<td></td>
<td>属于神经元k的突触j的突触权值</td>
</tr>
<tr>
<td style="text-align:left">$\mathbf{w}^*$</td>
<td></td>
<td>最优向量x的平衡值</td>
</tr>
<tr>
<td style="text-align:left">$\bar{\mathbf{x}}$</td>
<td></td>
<td>状态向量x的平衡值</td>
</tr>
<tr>
<td style="text-align:left">$\left\langle \mathit{x}_i \right\rangle$</td>
<td></td>
<td>“热”意义下状态xj的平均</td>
</tr>
<tr>
<td style="text-align:left">$\hat{\mathit{x}}$</td>
<td></td>
<td>x的估计，用加字符号^表示</td>
</tr>
<tr>
<td style="text-align:left">$&#124;\mathit{x}&#124;$</td>
<td></td>
<td>x的绝对值(幅度)</td>
</tr>
<tr>
<td style="text-align:left">$\mathit{x}^*$</td>
<td></td>
<td>状态x的复共轭，用*作上标</td>
</tr>
<tr>
<td style="text-align:left">$&#124;&#124;\mathbf{x}&#124;&#124;$</td>
<td></td>
<td>向量x的欧几里得范数</td>
</tr>
<tr>
<td style="text-align:left">$\mathbf{x}^T$</td>
<td></td>
<td>向量x的转置，用上标T表示</td>
</tr>
<tr>
<td style="text-align:left">$\mathit{z}^{-1}$</td>
<td></td>
<td>单位时间延迟算子</td>
</tr>
<tr>
<td style="text-align:left">$\mathrm{Z}$</td>
<td></td>
<td>部分函数</td>
</tr>
<tr>
<td style="text-align:left">$\delta_j(n)$</td>
<td></td>
<td>神经元j在时刻n的局部梯度</td>
</tr>
<tr>
<td style="text-align:left">$\Delta\mathit{w}$</td>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left">$\nabla$</td>
<td></td>
<td>梯度算子</td>
</tr>
<tr>
<td style="text-align:left">$\nabla^2$</td>
<td></td>
<td>拉普拉斯算子</td>
</tr>
<tr>
<td style="text-align:left">$\nabla_w\mathit{J}$</td>
<td></td>
<td>J关于w的梯度</td>
</tr>
<tr>
<td style="text-align:left">$\nabla \centerdot \mathbf{F}$</td>
<td></td>
<td>向量F的散度</td>
</tr>
<tr>
<td style="text-align:left">$\eta$</td>
<td></td>
<td>学习率参数</td>
</tr>
<tr>
<td style="text-align:left">$\kappa$</td>
<td></td>
<td>累积量</td>
</tr>
<tr>
<td style="text-align:left">$\mu$</td>
<td></td>
<td>策略</td>
</tr>
<tr>
<td style="text-align:left">$\theta_k$</td>
<td></td>
<td>神经元k的阀值（偏置bk的负值）</td>
</tr>
<tr>
<td style="text-align:left">$\lambda$</td>
<td></td>
<td>正则化参数</td>
</tr>
<tr>
<td style="text-align:left">$\lambda_k$</td>
<td></td>
<td>方阵的第k个特征值</td>
</tr>
<tr>
<td style="text-align:left">$\varphi_k(\centerdot)$</td>
<td></td>
<td>神经元k的非线性激活函数</td>
</tr>
<tr>
<td style="text-align:left">$\in$</td>
<td></td>
<td>“属于”符号</td>
</tr>
<tr>
<td style="text-align:left">$\bigcup$</td>
<td></td>
<td>“并”符号</td>
</tr>
<tr>
<td style="text-align:left">$\bigcap$</td>
<td></td>
<td>“交”符号</td>
</tr>
<tr>
<td style="text-align:left">$*$</td>
<td></td>
<td>卷积符号</td>
</tr>
<tr>
<td style="text-align:left">$+$</td>
<td></td>
<td>矩阵伪逆的上标符号</td>
</tr>
<tr>
<td style="text-align:left">$+$</td>
<td></td>
<td>更新估计的上标符号</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>ml</category>
      </categories>
      <tags>
        <tag>symbol</tag>
        <tag>math</tag>
      </tags>
  </entry>
  <entry>
    <title>Determinant (1)</title>
    <url>/2017/12/22/Determinant-1/</url>
    <content><![CDATA[<h2 id="Primary"><a href="#Primary" class="headerlink" title="Primary"></a>Primary</h2><script type="math/tex; mode=display">
\begin{cases}
    a_{11}x_1 + a_{12}x_2 = b_1 \\
    a_{21}x_1 + a_{22}x_2 = b_2
\end{cases}</script><p>消去后当<script type="math/tex">a_{11}a_{22} - a_{12}a_{21} \neq 0</script>时得到：</p>
<script type="math/tex; mode=display">
x1 = \frac {b_1 a_{22} - a_{12} b_2}{a_{11} a_{22} - a_{12} a_{21}}
, x2 = \frac {a_{11} b_2 - b_1 a_{21}}{a_{11}a_{22} - a_{12}a_{21}}</script><p>按方程组中的顺序排好行列：</p>
<script type="math/tex; mode=display">
\begin{vmatrix}
   a_{11} & a_{12} \\
   a_{21} & a_{22}
\end{vmatrix}</script><p>分母即是行列式的主对角线”积” - 副对角线”积”<br>如果定义：</p>
<script type="math/tex; mode=display">
D = \begin{vmatrix}
   a_{11} & a_{12} \\
   a_{21} & a_{22}
\end{vmatrix},
D_1 = \begin{vmatrix}
   b_{1} & a_{12} \\
   b_{2} & a_{22}
\end{vmatrix},
D_2 \begin{vmatrix}
   a_{11} & b_{1} \\
   a_{21} & b_{2}
\end{vmatrix},</script><p>则有：</p>
<script type="math/tex; mode=display">
x_1 = \frac{D_1}{D}, x_2 = \frac{D_2}{D}</script><h3 id="example"><a href="#example" class="headerlink" title="example"></a>example</h3><script type="math/tex; mode=display">
\begin{cases}
    3x_1 - 2x_2 = 1 \\
    6x_1 + 5x_2 = -4
\end{cases}</script><script type="math/tex; mode=display">
D = \begin{vmatrix}
  3  & -2 \\
  6  & 5
\end{vmatrix} = 27 \neq 0

D_1 = \begin{vmatrix}
  1  & -2 \\
  -4 & 5
\end{vmatrix}

D_2 = \begin{vmatrix}
  3  & 1 \\
  6  & -4
\end{vmatrix}</script><script type="math/tex; mode=display">
x_1 = \frac{D_1}{D} = \frac{13}{27}, x_2 = \frac{D_2}{D} = \frac{-30}{27}</script><h2 id="n-Factorial-determinant"><a href="#n-Factorial-determinant" class="headerlink" title="n Factorial determinant"></a>n Factorial determinant</h2><p>In  3 factorial determinant:</p>
<script type="math/tex; mode=display">
\begin{vmatrix}
   a_{11} & a_{12} & a_{13}\\
   a_{21} & a_{22} & a_{23}\\
   a_{31} & a_{32} & a_{33}
\end{vmatrix} = a_{11}a_{22}a_{33} + a_{13}a_{21}a_{32} + a_{12}a_{23}a_{31}
  - a_{13}a_{22}a_{31} - a_{12}a_{21}a_{33} - a_{11}a_{23}a_{32}</script><p>带负号系数的组合都是逆序数为奇数的组合，用p1p2p3来代表某组合矩阵位置有</p>
<script type="math/tex; mode=display">
\begin{vmatrix}
   a_{11} & a_{12} & a_{13}\\
   a_{21} & a_{22} & a_{23}\\
   a_{31} & a_{32} & a_{33}
\end{vmatrix} = \sum_{}{(-1)^ta_{1p_1}a_{2p_2}a_{3p_3}}</script><p>t表示p1p2p3组合时的逆序数，取和即使为矩阵的表示</p>
<h3 id="More-generalizate"><a href="#More-generalizate" class="headerlink" title="More generalizate"></a>More generalizate</h3><script type="math/tex; mode=display">
\sum_{}{(-1)^ta_{1p_1}a_{2p_2}...a_{np_n}}</script><p>简记作$det(a<em>{ij})$, 数$a</em>{ij}$为D的(i, j)元</p>
<h3 id="Prove"><a href="#Prove" class="headerlink" title="Prove"></a>Prove</h3><script type="math/tex; mode=display">
\begin{vmatrix}
 & & & \lambda_1 \\
 & & \lambda_2 & \\
 & ... & & \\
 \lambda_n & & &
\end{vmatrix} = (-1)^{\frac{n(n-1)}{2}}\lambda_1\lambda_2...\lambda_n</script><p>符号代表着副对角线的元素，对$\lambda<em>i$可以用$a</em>{i, n-i+1}$来表示。</p>
<script type="math/tex; mode=display">
\begin{vmatrix}
 & & & \lambda_1 \\
 & & \lambda_2 & \\
 & ... & & \\
 \lambda_n & & &
\end{vmatrix} =
\begin{vmatrix}
 & & & a_{1n} \\
 & & a_{2,n-1} & \\
 & ... & & \\
 a_{n1} & & &
\end{vmatrix} = (-1)^{\frac{n(n-1)}{2}}a_{1n}a_{2,n-1}...a{n1}</script><p>对n n-1 n-2 … 1 组合的元素求逆序数</p>
<script type="math/tex; mode=display">
t = 0 + 1 + 2 ... n-1 = \frac{n(n-1)}{2}</script>]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>linear</tag>
      </tags>
  </entry>
  <entry>
    <title>Determinant(2)</title>
    <url>/2017/12/24/Determinant-2/</url>
    <content><![CDATA[<h2 id="Exchange"><a href="#Exchange" class="headerlink" title="Exchange"></a>Exchange</h2><h3 id="定理一-一个排列的任意两个元素对换，排列改变奇偶性"><a href="#定理一-一个排列的任意两个元素对换，排列改变奇偶性" class="headerlink" title="定理一 一个排列的任意两个元素对换，排列改变奇偶性"></a>定理一 一个排列的任意两个元素对换，排列改变奇偶性</h3><ul>
<li><p>对相邻元素对换有：</p>
<script type="math/tex; mode=display">
a_1 a_2 ... a_n a b b_1 b_2 ... b_n</script><ul>
<li>如果 a &gt; b，则a的逆序数不变，b的逆序数-1</li>
<li>如果 a &lt; b，则a的逆序数+1，b的逆序数不变<br>得到相邻元素兑换排列改变奇偶性</li>
</ul>
</li>
<li><p>基于以上相邻元素对一般情况对换有：</p>
<script type="math/tex; mode=display">
a_1 a_2 ... a_n a b_1 b_2 ... b_n b</script><ul>
<li>将b对换到a后需要n次对换<script type="math/tex; mode=display">
a_1 a_2 ... a_n a b b_1 b_2 ... b_n</script></li>
<li>将a对换到<script type="math/tex">b_n</script>后需要n+1次对换<script type="math/tex; mode=display">
a_1 a_2 ... a_n b b_1 b_2 ... b_n a</script>对换a b对应2n+1次奇偶性改变，排列的奇偶性改变</li>
</ul>
</li>
</ul>
<h3 id="推论-奇排列变成标准排列，对换次数是奇数次；偶排列变成标准排列，对换次数是偶数次"><a href="#推论-奇排列变成标准排列，对换次数是奇数次；偶排列变成标准排列，对换次数是偶数次" class="headerlink" title="推论 奇排列变成标准排列，对换次数是奇数次；偶排列变成标准排列，对换次数是偶数次"></a>推论 奇排列变成标准排列，对换次数是奇数次；偶排列变成标准排列，对换次数是偶数次</h3><script type="math/tex; mode=display">
(-1)^ta_{1p_1}a_{2p_2}...a_{ip_i}...a_{jp_j}...a_{np_n}</script><p>对行列式的排列做一次对换，其中 1 2 … i … j … n 是自然顺序，<br>p1 p2 … pi … pj …pn 是列的某个排列。对换后有：</p>
<script type="math/tex; mode=display">
(-1)^ta_{1p_1}a_{2p_2}...a_{jp_j}...a_{ip_i}...a_{np_n}</script><p>其中 1 2 … j … i … n 的逆序数的奇数r，p1 p2 … pj … pi …pn 的逆序数将反转设其逆序数为t1</p>
<script type="math/tex; mode=display">
(-1)^{t_1} = -(-1)^t     \Longrightarrow  (-1)^t = (-1)^{t_1 + r}</script><p>同时改变行号列号不改变奇偶性，即对调行列式排列元素不会改变符号。</p>
<script type="math/tex; mode=display">p_i = j \to q_j = i</script><p>由此可得出存唯一行序列q1 q2 … qn，使得列序列标准化：</p>
<script type="math/tex; mode=display">
\sum_{}{(-1)^ta_{q_11}a_{q_22}...a_{q_nn}}</script><h3 id="定理二-n阶行列式也可定义为-sum-1-ta-p-11-a-p-22-a-p-nn"><a href="#定理二-n阶行列式也可定义为-sum-1-ta-p-11-a-p-22-a-p-nn" class="headerlink" title="定理二 n阶行列式也可定义为\sum_{}{(-1)^ta_{p_11}a_{p_22}...a_{p_nn}}"></a>定理二 n阶行列式也可定义为<script type="math/tex">\sum_{}{(-1)^ta_{p_11}a_{p_22}...a_{p_nn}}</script></h3><h2 id="Property"><a href="#Property" class="headerlink" title="Property"></a>Property</h2><h3 id="性质1-行列式和它的转置行列式相等"><a href="#性质1-行列式和它的转置行列式相等" class="headerlink" title="性质1 行列式和它的转置行列式相等"></a>性质1 行列式和它的转置行列式相等</h3><p>所有元素行列互换，并不影响行列式的值</p>
<script type="math/tex; mode=display">
D^T = \sum_{}{(-1)^ta_{1p_1}a_{2p_2}...a_{np_n}} = \sum_{}{(-1)^ta_{p_11}a_{p_22}...a_{p_nn}}</script><h3 id="性质2-互换行列式的两行（列），行列式变号"><a href="#性质2-互换行列式的两行（列），行列式变号" class="headerlink" title="性质2 互换行列式的两行（列），行列式变号"></a>性质2 互换行列式的两行（列），行列式变号</h3><p>换行后的行列式表示为</p>
<script type="math/tex; mode=display">
D1 = \sum_{}{(-1)^ta_{1p_1}a_{2p_2}...a_{jP_i}...a_{iP_j}...a_{np_n}} = -D</script><p>互换的行（列）排列变奇偶性，求和后即整体变号</p>
<h3 id="推论-如果有两行（列）完全相同，行列式为0"><a href="#推论-如果有两行（列）完全相同，行列式为0" class="headerlink" title="推论 如果有两行（列）完全相同，行列式为0"></a>推论 如果有两行（列）完全相同，行列式为0</h3><p>互换两行（列）后有 D = -D1， 行列式为0</p>
<h3 id="性质3-行列式某行（列）都乘以k，等于k乘以该行列式"><a href="#性质3-行列式某行（列）都乘以k，等于k乘以该行列式" class="headerlink" title="性质3 行列式某行（列）都乘以k，等于k乘以该行列式"></a>性质3 行列式某行（列）都乘以k，等于k乘以该行列式</h3><p>记作 <script type="math/tex">r_i * k , c_i * k</script><br>提出公因子后记作 <script type="math/tex">r_i \div k , c_i \div k</script></p>
<h3 id="性质4-行列式中如果有两行（列）成比例，行列式为等于零"><a href="#性质4-行列式中如果有两行（列）成比例，行列式为等于零" class="headerlink" title="性质4 行列式中如果有两行（列）成比例，行列式为等于零"></a>性质4 行列式中如果有两行（列）成比例，行列式为等于零</h3><p>根据性质3提出公因子后，两行（列）相同。根据性质2，行列式为0</p>
<h3 id="性质5-如果行列式某行（列）都是两数的和，则可分为两行列式的和"><a href="#性质5-如果行列式某行（列）都是两数的和，则可分为两行列式的和" class="headerlink" title="性质5 如果行列式某行（列）都是两数的和，则可分为两行列式的和"></a>性质5 如果行列式某行（列）都是两数的和，则可分为两行列式的和</h3><script type="math/tex; mode=display">
\begin{vmatrix}
   a_{11} & a_{12} & ... & (a_{1i} + a'_{1i}) & ... & a_{1n}\\
   a_{21} & a_{22} & ... & (a_{2i} + a'_{2i}) & ... & a_{2n}\\
   ... & ... & ... & ... & ... & ... \\
   a_{n1} & a_{n2} & ... & (a_{ni} + a'_{ni}) & ... & a_{nn}
\end{vmatrix}</script><script type="math/tex; mode=display">
D = \begin{vmatrix}
   a_{11} & a_{12} & ... & a_{1i} & ... & a_{1n}\\
   a_{21} & a_{22} & ... & a_{2i} & ... & a_{2n}\\
   ... & ... & ... & ... & ... & ... \\
   a_{n1} & a_{n2} & ... & a_{ni} & ... & a_{nn}
\end{vmatrix} +
\begin{vmatrix}
   a_{11} & a_{12} & ... & a'_{1i} & ... & a_{1n}\\
   a_{21} & a_{22} & ... & a'_{2i} & ... & a_{2n}\\
   ... & ... & ... & ... & ... & ... \\
   a_{n1} & a_{n2} & ... & a'_{ni} & ... & a_{nn}
\end{vmatrix}</script><p>假设组合的第i行元素都可分两数之和：</p>
<script type="math/tex; mode=display">
D = \sum_{}{(-1)^ta_{1p_1}a_{2p_2}...(a_{iP_i} + a'_{iP_i})...a_{np_n}}</script><script type="math/tex; mode=display">
D = \sum_{}{(-1)^ta_{1p_1}a_{2p_2}...a_{iP_i}...a_{np_n}}
+ \sum_{}{(-1)^ta_{1p_1}a_{2p_2}...a'_{iP_i}...a_{np_n}}</script><h3 id="性质6-把行列式某行（列）的元素乘以同一数，加到另一行（列），行列式不变"><a href="#性质6-把行列式某行（列）的元素乘以同一数，加到另一行（列），行列式不变" class="headerlink" title="性质6 把行列式某行（列）的元素乘以同一数，加到另一行（列），行列式不变"></a>性质6 把行列式某行（列）的元素乘以同一数，加到另一行（列），行列式不变</h3><p>根据性质4 和 性质5，将加上的等比例数拆分出另一个行列式，值为0，即不改变行列式</p>
]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>linear</tag>
      </tags>
  </entry>
  <entry>
    <title>determinant(3)</title>
    <url>/2017/12/25/determinant-3/</url>
    <content><![CDATA[<h2 id="Expand-by-row-column"><a href="#Expand-by-row-column" class="headerlink" title="Expand by row(column)"></a>Expand by row(column)</h2><h3 id="表达"><a href="#表达" class="headerlink" title="表达"></a>表达</h3><p>把n阶行列式i行j列的元素划掉后剩下n-1阶行列行列式称为<script type="math/tex">a_{ij}</script>的余子式记作<script type="math/tex">M_{ij}</script></p>
<p>加上符号变化，得到(i, j)元的代数余子式：</p>
<script type="math/tex; mode=display">
A_{ij} = (-1)^{(i + j)}M_{ij}</script><h3 id="引理-一个n阶行列式，如果第i行的元素除了-i-j-元a-ij-外都为0，那么行列式等于a-ij-和它的代数余子式的乘积"><a href="#引理-一个n阶行列式，如果第i行的元素除了-i-j-元a-ij-外都为0，那么行列式等于a-ij-和它的代数余子式的乘积" class="headerlink" title="引理 一个n阶行列式，如果第i行的元素除了(i, j)元a_{ij}外都为0，那么行列式等于a_{ij}和它的代数余子式的乘积"></a>引理 一个n阶行列式，如果第i行的元素除了(i, j)元<script type="math/tex">a_{ij}</script>外都为0，那么行列式等于<script type="math/tex">a_{ij}</script>和它的代数余子式的乘积</h3><script type="math/tex; mode=display">
D = a_{ij}A_{ij}</script><ul>
<li><p>当(i, j)元是(1, 1)时有：</p>
<script type="math/tex; mode=display">
\begin{vmatrix}
   a_{11} & 0 & ... & 0\\
   a_{21} & a_{22} & ... & a_{2n}\\
   ... & ... & ... & ...\\
   a_{31} & a_{32} & ... & a_{3n}
\end{vmatrix}</script><p>参照例10，右上角为0时，行列式等于主对角两行列式的积：</p>
<script type="math/tex; mode=display">D = a_{11}M_{11}</script><script type="math/tex; mode=display">A_{11} = (-1)^2M_{11}</script><script type="math/tex; mode=display">D = a_{11}A_{11}</script></li>
<li><p>当(i, j)为一般情况时有：</p>
<script type="math/tex; mode=display">
\begin{vmatrix}
   a_{11} & ... & a_{1j} & ... & a_{1n}\\
   ... & ... & ... & ... & ... \\
   0 & ... & a_{ij} & ... & 0\\
   ... & ... & ... & ... & ... \\
   a_{n1} & ... & a_{nj} & ... & a_{nn}
\end{vmatrix}</script><p>将(i, j)元对换到(1, 1)位，需要i + j - 2次对换。</p>
<script type="math/tex; mode=display">
D_1 = (-1)^{(i + j - 2)}D = (-1)^{(i + j)}D</script><p>替换到(1, 1)元原行列式变号。所得的余子式，即是(i, j)元的余子式</p>
<script type="math/tex; mode=display">
D = (-1)^{(i + j)}D1 = (-1)^{(i + j)}a_{ij}M_{ij} = a_{ij}A_{ij}</script><p>根据(1, 1)元的结果，<script type="math/tex">D1 = a_{ij}M_{ij}</script><br><script type="math/tex">M_{ij}</script>的变号结果与之前的“换行”变号相销，即得到相同结论。</p>
</li>
</ul>
<h3 id="定理3-行列式等于它的任一行（列）的元素与其对应代数余子式的乘积和"><a href="#定理3-行列式等于它的任一行（列）的元素与其对应代数余子式的乘积和" class="headerlink" title="定理3 行列式等于它的任一行（列）的元素与其对应代数余子式的乘积和"></a>定理3 行列式等于它的任一行（列）的元素与其对应代数余子式的乘积和</h3><p>将i行所有元素都表示为(i, k)元加n-1个0，根据性质5，展开n个行列式。<br>再根据之前的引理，即可得到：</p>
<script type="math/tex; mode=display">
D = a_{i1}A_{i1} + a_{i2}A_{i2} + ... + a_{in}A_{in}</script><p>或是：</p>
<script type="math/tex; mode=display">
D = a_{1i}A_{1i} + a_{2i}A_{2i} + ... + a_{ni}A_{ni}</script><h3 id="范德门德行列式-Vandermonde"><a href="#范德门德行列式-Vandermonde" class="headerlink" title="范德门德行列式(Vandermonde)"></a>范德门德行列式(Vandermonde)</h3><script type="math/tex; mode=display">
D_n = \begin{vmatrix}
   1 & 1 & ... & 1 \\
   x_1 & x_2 & ... & x_n \\
   x^2_1 & x^2_2 & ... & x^2_n \\
   ... & ... & ... & ... \\
   x^{n-1}_1 & x^{n-1}_2 & ... & x^{n-1}_n \\
\end{vmatrix} = \prod_{n \ge i > j \ge 1}(x_i - x_j)</script><p>式子中的符号代表所有同类因子的乘积。<br>当n=2时，行列式结果为  <script type="math/tex">x_2-x_1</script> 符合结论。</p>
<p>当一般情况时，将行列式降阶。将后一行减去前一行的x1倍得到：</p>
<script type="math/tex; mode=display">
\begin{vmatrix}
   1 & 1 & ... & 1 \\
   0 & x_2-x_1 & ... & x_n-x_1 \\
   0 & x_2(x_2-x_1) & ... & x_n(x_n-x_1) \\
   ... & ... & ... & ... \\
   0 & x^{n-2}_2(x_2-x_1) & ... & x^{n-2}_n(x_n-x_1)
\end{vmatrix}</script><p>按第一列展开，将公因子<script type="math/tex">x_i-x_1</script>提出：</p>
<script type="math/tex; mode=display">
D_n = (x_2 - x_1)(x_3 - x1)...(x_n - x1)\begin{vmatrix}
   1 & 1 & ... & 1 \\
   x_2 & x_3 & ... & x_n \\
   x^2_2 & x^2_3 & ... & x^2_n \\
   ... & ... & ... & ... \\
   x^{n-2}_2 & x^{n-2}_3 & ... & x^{n-2}_n
\end{vmatrix}</script><p>右端是n-1阶范德门德行列式，按归纳法有：</p>
<script type="math/tex; mode=display">
D_n = (x_2 - x_1)(x_3 - x1)...(x_n - x1)
= \prod_{n \ge i > j \ge 2}(x_i - x_j)
= \prod_{n \ge i > j \ge 1}(x_i - x_j)</script><p>递推过程中会将<script type="math/tex">x_i-x_j</script>的所有组合乘一遍，所得即是全体同类因子的乘积</p>
<h3 id="推论-行列式某一行（列）元素与另一行（列）元素的对应代数余子式乘积只和等于零"><a href="#推论-行列式某一行（列）元素与另一行（列）元素的对应代数余子式乘积只和等于零" class="headerlink" title="推论 行列式某一行（列）元素与另一行（列）元素的对应代数余子式乘积只和等于零"></a>推论 行列式某一行（列）元素与另一行（列）元素的对应代数余子式乘积只和等于零</h3><script type="math/tex; mode=display">
a_{i1}A_{j1} + a_{i2}A_{j2} + ... + a_{in}A_{jn} = 0, i \neq j</script><p>将行列式<script type="math/tex">D = det(a_{ij})</script>，按第j行展开有：</p>
<script type="math/tex; mode=display">
a_{j1}A_{j1} + a_{j2}A_{j2} + ... + a_{jn}A_{jn} =
\begin{vmatrix}
   a_{11} & ... & a_{1n} \\
   ... & ... & ... \\
   a_{i1} & ... & a_{in} \\
   ... & ... & ... \\
   a_{j1} & ... & a_{jn} \\
   ... & ... & ... \\
   a_{n1} & ... & a_{nn}
\end{vmatrix}</script><p>将aj行换成ai行将导致有两行元素相同，导致行列式等于零。</p>
<script type="math/tex; mode=display">
\sum_{k=1}^{n}a_{ik}A_{jk}
= D\delta_{ij}
= \begin{cases}
   D &\text{if } i = j  \\
   0 &\text{if } i \neq j
\end{cases}</script><script type="math/tex; mode=display">
\delta_{ij}
= \begin{cases}
   1 &\text{if } i = j  \\
   0 &\text{if } i \neq j
\end{cases}</script>]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>linear</tag>
      </tags>
  </entry>
  <entry>
    <title>determinant(4)</title>
    <url>/2017/12/28/determinant-4/</url>
    <content><![CDATA[<h2 id="Kramo-rule"><a href="#Kramo-rule" class="headerlink" title="Kramo rule"></a>Kramo rule</h2><p><strong>如果线性方程组的系数行列式不等于零，则方程组有唯一解</strong></p>
<script type="math/tex; mode=display">
x_1 = \frac {D_1}{D}
, x_2 = \frac {D_2}{D}
...
, x_n = \frac {D_n}{D}</script><p>就方程组右边常数项b1 b2 … bn替换行列式列得到：</p>
<script type="math/tex; mode=display">
D_j = \begin{vmatrix}
   a_{11} & ... & a_{1, j-1} & b_1 & a_{1, j+1} & ... a_{1n} \\
   ... & ... & ... & ... & ... & ... \\
   a_{n1} & ... & a_{n, j-1} & b_n & a_{n, j+1} & ... a_{nn}
\end{vmatrix}</script><h3 id="定理4-如果线性方程组系数行列式D-neq-0，则方程组一定有解，且解唯一"><a href="#定理4-如果线性方程组系数行列式D-neq-0，则方程组一定有解，且解唯一" class="headerlink" title="定理4 如果线性方程组系数行列式D \neq 0，则方程组一定有解，且解唯一"></a>定理4 如果线性方程组系数行列式<script type="math/tex">D \neq 0</script>，则方程组一定有解，且解唯一</h3><h3 id="定理4’-如果方程组无解，或有两个以上的解，则方程组的行列式系数必为零"><a href="#定理4’-如果方程组无解，或有两个以上的解，则方程组的行列式系数必为零" class="headerlink" title="定理4’ 如果方程组无解，或有两个以上的解，则方程组的行列式系数必为零"></a>定理4’ 如果方程组无解，或有两个以上的解，则方程组的行列式系数必为零</h3><h3 id="定理5-如果齐次线性方程组的系数行列式D-neq-0，则方程组没有非零解"><a href="#定理5-如果齐次线性方程组的系数行列式D-neq-0，则方程组没有非零解" class="headerlink" title="定理5 如果齐次线性方程组的系数行列式D \neq 0，则方程组没有非零解"></a>定理5 如果齐次线性方程组的系数行列式<script type="math/tex">D \neq 0</script>，则方程组没有非零解</h3><h3 id="定理5’-如果齐次线性方程组有非零解，则方程组的行列式系数必为零"><a href="#定理5’-如果齐次线性方程组有非零解，则方程组的行列式系数必为零" class="headerlink" title="定理5’ 如果齐次线性方程组有非零解，则方程组的行列式系数必为零"></a>定理5’ 如果齐次线性方程组有非零解，则方程组的行列式系数必为零</h3><h2 id="Exercise"><a href="#Exercise" class="headerlink" title="Exercise"></a>Exercise</h2><ul>
<li><script type="math/tex; mode=display">
\begin{vmatrix}
4 & 1 & 2 & 4 \\
1 & 2 & 0 & 2 \\
10 & 5 & 2 & 0 \\
0 & 1 & 1 & 7
\end{vmatrix}</script></li>
</ul>
<script type="math/tex; mode=display">r_1-2r_4, r_3-2r4</script><script type="math/tex; mode=display">
\begin{vmatrix}
 4 & -1 & 0 & -10 \\
 1 & 2 & 0 & 2 \\
 10 & 3 & 0 & -14 \\
 0 & 1 & 1 & 7
\end{vmatrix} =
(-1)^7
\begin{vmatrix}
 4 & -1 & -10 \\
 1 & 2 & 2 \\
 10 & 3 & -14
\end{vmatrix}</script><script type="math/tex; mode=display">c_2-2c_1, c_3-2c_1</script><script type="math/tex; mode=display">
(-1)^7
\begin{vmatrix}
 4 & -9 & -18 \\
 1 & 0 & 0 \\
 10 & -17 & -34
\end{vmatrix} =
(-1)^7*(-1)^3
\begin{vmatrix}
 -9 & -18 \\
 -17 & -34 \\
\end{vmatrix} = 0</script><p>*</p>
<script type="math/tex; mode=display">
\begin{vmatrix}
 3 & 1 & -1 & 2\\
 -5 & 1 & 3 & -4\\
 2 & 0 & 1 & -1\\
 1 & -5 & 3 & -3
\end{vmatrix}</script><p>求代数余子式</p>
<script type="math/tex; mode=display">
A_{31}+3A_{32}-2A_{33}+2A_{34}</script><p>系数替换对应行列式上的行：</p>
<script type="math/tex; mode=display">
\begin{vmatrix}
 3 & 1 & -1 & 2\\
 -5 & 1 & 3 & -4\\
 1 & 3 & -2 & 2\\
 1 & -5 & 3 & -3
\end{vmatrix}</script><script type="math/tex; mode=display">c_3+c_4, r_2+r_1</script><script type="math/tex; mode=display">
D = \begin{vmatrix}
 3 & 1 & 1 & 2\\
 -2 & 2 & 0 & -2\\
 1 & 3 & 0 & 2\\
 1 & -5 & 0 & -3
\end{vmatrix} = (-1)^4
\begin{vmatrix}
 -2 & 2 & -2\\
 1 & 3 & 2\\
 1 & -5 & -3
\end{vmatrix}</script><script type="math/tex; mode=display">c_2+c_1, c_3-c_1</script><script type="math/tex; mode=display">
D = \begin{vmatrix}
 -2 & 0 & 0\\
 1 & 4 & 1\\
 1 & -4 & -4
\end{vmatrix} = 24</script><p>*</p>
<script type="math/tex; mode=display">
\begin{vmatrix}
 x & -1 & 0 & ... & 0 & 0\\
 0 & x & -1 & ... & 0 & 0\\
 ... & ... & ... & ... & 0 & 0\\
 0 & 0 & 0 & ... & x & -1\\
 a_0 & a_1 & a_2 & ... & a_{n-1} & a_n
\end{vmatrix} =
a_nx^n + a_{n-1}x^{n-1}...a_1x + a_0</script><script type="math/tex; mode=display">
D_2 = \begin{vmatrix}
 x & -1 & 0 \\
 0 & x & -1 \\
 a_0 & a_1 & a_2
\end{vmatrix} = a_2x^2 + a_1x + a_0</script><script type="math/tex; mode=display">
D_3 = \begin{vmatrix}
 x & -1 & 0 & 0\\
 0 & x & -1 & 0\\
 0 & 0 & x & -1\\
 a_0 & a_1 & a_2 & a_3
\end{vmatrix} = b_{33}A_{33} + b_{34}A_{34}</script><p>$b_{34}$总是-1，排列位的和是奇数，与其代数余子式的符号相销得到：</p>
<script type="math/tex; mode=display">
b_{34}A_{34} = M_{34} = D_2</script><p>而$b_{33}$总是x，排列位的和是偶数，与余子式相等得到：</p>
<script type="math/tex; mode=display">
M_{33} = \begin{vmatrix}
 x & -1 & 0 \\
 0 & x & 0 \\
 a_0 & a_1 & a_3
\end{vmatrix}</script><p>交换r1 - r2, c1 - c2，可形成上三角型形式，可得：</p>
<script type="math/tex; mode=display">
b_{33}A_{33} = x * M_{33} = a_3x^3</script><script type="math/tex; mode=display">
D_3 = b_{33}A_{33} + b_{34}A_{34} = a_3x^3 + D_2</script><p>根据归纳法可得：</p>
<script type="math/tex; mode=display">
D_n = a_nx^n + a_{n-1}x^{n-1}...a_1x + a_0</script><p>*</p>
<script type="math/tex; mode=display">
D_n = \begin{vmatrix}
 x & a & a & ... & a\\
 a & x & a & ... & a\\
 ... & ... & ... & ... & a\\
 a & a & a & ... & x
\end{vmatrix}</script><script type="math/tex; mode=display">r_n-r_1</script><script type="math/tex; mode=display">
D_n = \begin{vmatrix}
 x & a & a & ... & a\\
 a-x & x-a & 0 & ... & 0\\
 ... & ... & ... & ... & 0\\
 a-x & 0 & 0 & ... & x-a
\end{vmatrix}</script><script type="math/tex; mode=display">c_1+c_2, c_1+c_3, ... c_1+c_n</script><script type="math/tex; mode=display">
D_n = \begin{vmatrix}
 x + (n-1)a & a & a & ... & a\\
 0 & x-a & 0 & ... & 0\\
 ... & ... & ... & ... & 0\\
 0 & 0 & 0 & ... & x-a
\end{vmatrix}</script><p>形成下三角型行列式，得到：</p>
<script type="math/tex; mode=display">D_n = [x+(n-1)a](x-a)^{n-1}</script><ul>
<li><script type="math/tex; mode=display">
\begin{cases}
 5x_1 &+& 6x_2 & & & & &= 1\\
 x_1 &+& 5x_2 &+& 6x_3 & & & = 0\\
 & & x_2 &+& 5x_3 &+& 6x_4 & = 0\\
 & & & & x_3 &+& 5x_4 & = 1
\end{cases}</script></li>
</ul>
<script type="math/tex; mode=display">
D = \begin{vmatrix}
  5 & 6 & 0 & 0 \\
  1 & 5 & 6 & 0 \\
  0 & 1 & 5 & 6 \\
  0 & 0 & 1 & 5
\end{vmatrix} = 211</script><script type="math/tex; mode=display">
D_1 = \begin{vmatrix}
  1 & 6 & 0 & 0 \\
  0 & 5 & 6 & 0 \\
  0 & 1 & 5 & 6 \\
  1 & 0 & 1 & 5
\end{vmatrix} = 151</script><script type="math/tex; mode=display">
D_2 = \begin{vmatrix}
  5 & 1 & 0 & 0 \\
  1 & 0 & 6 & 0 \\
  0 & 0 & 5 & 6 \\
  0 & 1 & 1 & 5
\end{vmatrix} = 161</script><script type="math/tex; mode=display">
D_3 = \begin{vmatrix}
  5 & 6 & 1 & 0 \\
  1 & 5 & 0 & 0 \\
  0 & 1 & 0 & 6 \\
  0 & 0 & 1 & 5
\end{vmatrix} = 109</script><script type="math/tex; mode=display">
D_4 = \begin{vmatrix}
  5 & 6 & 0 & 1 \\
  1 & 5 & 6 & 0 \\
  0 & 1 & 5 & 0 \\
  0 & 0 & 1 & 1
\end{vmatrix} = 64</script>]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>linear</tag>
      </tags>
  </entry>
  <entry>
    <title>jvm memory tool</title>
    <url>/2018/01/12/jvm-memory-tool/</url>
    <content><![CDATA[<p><img src="/2018/01/12/jvm-memory-tool/vm-memory.png" alt></p>
<h2 id="jps-JVM-Process-Status-Tool"><a href="#jps-JVM-Process-Status-Tool" class="headerlink" title="jps (JVM Process Status Tool)"></a>jps (JVM Process Status Tool)</h2><p>Used to check  progress id/ start path/ start argument.<br>If remote machine running <code>jstat</code>, <code>jps</code> can query remote vm progress.<br>define:<br><code>jps [-q] [-mlvV] [&lt;hostid&gt;]</code></p>
<ul>
<li>-m arguments that input into main</li>
<li>-v arguments that input into jvm</li>
<li>-l main class package path or jar file path</li>
</ul>
<h2 id="jmap-Memory-Map-for-Java"><a href="#jmap-Memory-Map-for-Java" class="headerlink" title="jmap( Memory Map for Java)"></a>jmap( Memory Map for Java)</h2><p>mapping jvm’s object/ reference<br>define:<br><code>jmap [option] &lt;pid&gt;</code></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>a</th>
<th>b</th>
</tr>
</thead>
<tbody>
<tr>
<td>-heap</td>
<td>heat info</td>
</tr>
<tr>
<td>-histo[:live]</td>
<td>default in live</td>
</tr>
<tr>
<td>-dump</td>
<td><br>live         dump only live objects<br>format=b     binary format<br>file=path  dump heap to</td>
</tr>
<tr>
<td>-permstat</td>
<td>permanent generation</td>
</tr>
<tr>
<td>-finalizerinfo</td>
<td>object waiting finaliz</td>
</tr>
<tr>
<td>-F</td>
<td>force all object dump or histo</td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jmap -histo 20836</span><br><span class="line">jmap -permstat 20836</span><br><span class="line">jmap -dump:live,format=b,file=data.hprof 20836</span><br></pre></td></tr></table></figure>
<h2 id="jhat-JVM-Heap-Analysis-Tool"><a href="#jhat-JVM-Heap-Analysis-Tool" class="headerlink" title="jhat(JVM Heap Analysis Tool)"></a>jhat(JVM Heap Analysis Tool)</h2><p>offline dump file analysis, check memory info.<br>But Visual interface is much more better like <code>jvisualvm</code> <code>jconsole</code></p>
<h2 id="jinfo-Configuration-Info-for-Java"><a href="#jinfo-Configuration-Info-for-Java" class="headerlink" title="jinfo(Configuration Info for Java)"></a>jinfo(Configuration Info for Java)</h2><p>print or modify java progress’s options(flag). print system properties<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jinfo -sysprops 20836</span><br><span class="line">jinfo -flags 20836</span><br></pre></td></tr></table></figure></p>
<h2 id="jstat-JVM-statistics-Monitoring-Tool"><a href="#jstat-JVM-statistics-Monitoring-Tool" class="headerlink" title="jstat(JVM statistics Monitoring Tool)"></a>jstat(JVM statistics Monitoring Tool)</h2><p>monitor jvm grogress’s resource and performence<br>define:<br><code>jstat -&lt;option&gt; [-t] [-h&lt;lines&gt;] &lt;vmid&gt; [&lt;interval&gt; [&lt;count&gt;]]</code></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>a</th>
<th>b</th>
</tr>
</thead>
<tbody>
<tr>
<td>-class</td>
<td>class’ mateinfo in jvm</td>
</tr>
<tr>
<td>-compiler</td>
<td>compiler info in jvm</td>
</tr>
<tr>
<td>-gc</td>
<td>current jvm global info</td>
</tr>
<tr>
<td>-gccapacity</td>
<td>similar as above</td>
</tr>
<tr>
<td>-gccause</td>
<td>reason cause gc option</td>
</tr>
<tr>
<td>-gcnew</td>
<td>youny generation (eden + servivor)</td>
</tr>
<tr>
<td>-gcnewcapacity</td>
<td></td>
</tr>
<tr>
<td>-gcold</td>
<td>old generation</td>
</tr>
<tr>
<td>-gcoldcapacity</td>
<td>old capacity</td>
</tr>
<tr>
<td>-gcpermcapacity</td>
<td>perm capacity <br>1.6 in method space<br>1.8 in true memory</td>
</tr>
<tr>
<td>-gcutil</td>
<td>static class ?</td>
</tr>
<tr>
<td>-printcompilation</td>
<td>compile summary</td>
</tr>
</tbody>
</table>
</div>
<div class="table-container">
<table>
<thead>
<tr>
<th>a</th>
<th>b</th>
</tr>
</thead>
<tbody>
<tr>
<td>S0</td>
<td>年轻代中第一个survivor（幸存区）已使用的占当前容量百分比</td>
</tr>
<tr>
<td>S1</td>
<td>年轻代中第二个survivor（幸存区）已使用的占当前容量百分比</td>
</tr>
<tr>
<td>S0C</td>
<td>年轻代中第一个survivor（幸存区）的容量 (字节)</td>
</tr>
<tr>
<td>S1C</td>
<td>年轻代中第二个survivor（幸存区）的容量 (字节)</td>
</tr>
<tr>
<td>S0U</td>
<td>年轻代中第一个survivor（幸存区）目前已使用空间 (字节)</td>
</tr>
<tr>
<td>S1U</td>
<td>年轻代中第二个survivor（幸存区）目前已使用空间 (字节)</td>
</tr>
<tr>
<td>S0CMX</td>
<td>年轻代中第一个survivor（幸存区）的最大容量 (字节)</td>
</tr>
<tr>
<td>S1CMX</td>
<td>年轻代中第二个survivor（幸存区）的最大容量 (字节)</td>
</tr>
</tbody>
</table>
</div>
<div class="table-container">
<table>
<thead>
<tr>
<th>a</th>
<th>b</th>
</tr>
</thead>
<tbody>
<tr>
<td>E</td>
<td>年轻代中Eden（伊甸园）已使用的占当前容量百分比</td>
</tr>
<tr>
<td>EC</td>
<td>年轻代中Eden（伊甸园）的容量 (字节)</td>
</tr>
<tr>
<td>EU</td>
<td>年轻代中Eden（伊甸园）目前已使用空间 (字节)</td>
</tr>
<tr>
<td>NGCMN</td>
<td>年轻代(young)中初始化(最小)的大小 (字节)</td>
</tr>
<tr>
<td>NGCMX</td>
<td>年轻代(young)的最大容量 (字节)</td>
</tr>
<tr>
<td>NGC</td>
<td>年轻代(young)中当前的容量 (字节)</td>
</tr>
</tbody>
</table>
</div>
<div class="table-container">
<table>
<thead>
<tr>
<th>a</th>
<th>b</th>
</tr>
</thead>
<tbody>
<tr>
<td>O</td>
<td>old代已使用的占当前容量百分比</td>
</tr>
<tr>
<td>OC</td>
<td>Old代的容量 (字节)</td>
</tr>
<tr>
<td>OU</td>
<td>Old代目前已使用空间 (字节)</td>
</tr>
<tr>
<td>OGCMN</td>
<td>old代中初始化(最小)的大小 (字节)</td>
</tr>
<tr>
<td>OGCMX</td>
<td>old代的最大容量 (字节)</td>
</tr>
<tr>
<td>OGC</td>
<td>old代当前新生成的容量 (字节)</td>
</tr>
</tbody>
</table>
</div>
<div class="table-container">
<table>
<thead>
<tr>
<th>a</th>
<th>b</th>
</tr>
</thead>
<tbody>
<tr>
<td>P</td>
<td>perm代已使用的占当前容量百分比</td>
</tr>
<tr>
<td>PC</td>
<td>Perm(持久代)的容量 (字节)</td>
</tr>
<tr>
<td>PU</td>
<td>Perm(持久代)目前已使用空间 (字节)</td>
</tr>
<tr>
<td>PGCMN</td>
<td>perm代中初始化(最小)的大小 (字节)</td>
</tr>
<tr>
<td>PGCMX</td>
<td>perm代的最大容量 (字节)</td>
</tr>
<tr>
<td>PGC</td>
<td>perm代当前新生成的容量 (字节)</td>
</tr>
</tbody>
</table>
</div>
<div class="table-container">
<table>
<thead>
<tr>
<th>a</th>
<th>b</th>
</tr>
</thead>
<tbody>
<tr>
<td>YGC</td>
<td>从应用程序启动到采样时年轻代中gc次数</td>
</tr>
<tr>
<td>YGCT</td>
<td>从应用程序启动到采样时年轻代中gc所用时间(s)</td>
</tr>
<tr>
<td>FGC</td>
<td>从应用程序启动到采样时old代(全gc)gc次数</td>
</tr>
<tr>
<td>FGCT</td>
<td>从应用程序启动到采样时old代(全gc)gc所用时间(s)</td>
</tr>
<tr>
<td>GCT</td>
<td>从应用程序启动到采样时gc用的总时间(s)</td>
</tr>
<tr>
<td>DSS</td>
<td>当前需要survivor（幸存区）的容量 (字节)（Eden区已满）</td>
</tr>
<tr>
<td>TT</td>
<td>持有次数限制</td>
</tr>
<tr>
<td>MTT</td>
<td>最大持有次数限制</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><p>Local Applications Cannot Be Monitored (Error Dialog On Startup)<br>Description: An error dialog saying that local applications cannot be monitored<br>is shown immediately after VisualVM startup. Locally running Java applications<br>are displayed as <unknown application> (pid ###).</unknown></p>
<p>Resolution:  This can happen on Windows systems if the username contains capitalized letters.<br>In this case, username is UserName but the jvmstat directory created by JDK is %TMP%\hsperfdata_username.<br>To workaround the problem, exit all Java applications, delete the %TMP%\hsperfdata_username directory<br>and create new %TMP%\hsperfdata_UserName directory.</p>
<p>In windows platform if jconsole.exe interface, the local vm disenable, check user name, and directory name:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># If user name is Administrator</span><br><span class="line">C:\Users\Administrator\AppData\Local\Temp\hsperfdata_administrator</span><br><span class="line"># change to</span><br><span class="line">C:\Users\Administrator\AppData\Local\Temp\hsperfdata_Administrator</span><br></pre></td></tr></table></figure></p>
<p><a href="https://visualvm.github.io/troubleshooting.html#jpswin2" target="_blank" rel="noopener">https://visualvm.github.io/troubleshooting.html#jpswin2</a></p>
<h2 id="jstack-Stack-Trace-for-Java"><a href="#jstack-Stack-Trace-for-Java" class="headerlink" title="jstack(Stack Trace for Java)"></a>jstack(Stack Trace for Java)</h2><p>print specific progress’s or remote jvm’s stack info</p>
<h2 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h2><p><a href="http://blog.sina.com.cn/s/blog_b0e3dfe30102wfl5.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_b0e3dfe30102wfl5.html</a></p>
<p><a href="http://www.bubuko.com/infodetail-792105.html" target="_blank" rel="noopener">http://www.bubuko.com/infodetail-792105.html</a></p>
<p><a href="https://www.cnblogs.com/lishijia/p/5897236.html" target="_blank" rel="noopener">https://www.cnblogs.com/lishijia/p/5897236.html</a></p>
<p><a href="http://www.talkwithtrend.com/Article/161055" target="_blank" rel="noopener">http://www.talkwithtrend.com/Article/161055</a></p>
<p><a href="https://www.ibm.com/developerworks/cn/java/j-lo-JVMGarbageCollection/" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/java/j-lo-JVMGarbageCollection/</a></p>
<p><a href="https://www.ibm.com/developerworks/cn/java/l-JavaMemoryLeak/" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/java/l-JavaMemoryLeak/</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>jvm</tag>
      </tags>
  </entry>
  <entry>
    <title>matrix &amp; arithmetic (1)</title>
    <url>/2018/01/18/matrix-arithmetic-1/</url>
    <content><![CDATA[<h2 id="Matrix"><a href="#Matrix" class="headerlink" title="Matrix"></a>Matrix</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><script type="math/tex; mode=display">
A = \begin{pmatrix}
   a_{11} & a_{12} &  ... & a_{1n}\\
   a_{21} & a_{22} & ... & a_{2n}\\
   ... & ... & ... & ... \\
   a_{m1} & a_{m2} & ... & a_{mn}
\end{pmatrix}</script><p>A称作m x n矩阵，矩阵中的数称作矩阵A的元。<br>$a_{ij}$位于矩阵的第i行，j列，称作矩阵A的(i, j)元。</p>
<ul>
<li>行列均为n的矩阵成为<strong>n阶矩阵</strong>或<strong>n阶方阵</strong>；</li>
<li>只有一行的矩阵成为<strong>行向量</strong></li>
<li>只有一列的矩阵成为<strong>列向量</strong>。</li>
<li>行列相同的两矩阵成为同型矩阵</li>
<li>矩阵的元均是0的矩阵成为零矩阵</li>
</ul>
<h3 id="线性变换"><a href="#线性变换" class="headerlink" title="线性变换"></a>线性变换</h3><script type="math/tex; mode=display">
\begin{cases}
    y_1 = a_{11}x_1 + a_{12}x_2 + ... + a_{1n}x_n \\
    y_2 = a_{21}x_1 + a_{22}x_2 + ... + a_{2n}x_n \\
    ... \\
    y_m = a_{m1}x_1 + a_{m2}x_2 + ... + a_{mn}x_n
\end{cases}</script><p>从 <script type="math/tex">x_1 , x_2 , ... x_n</script>到<script type="math/tex">y_1 , y_2 , ... y_n</script>的过程称作线性变换</p>
<p>n阶方阵，主对角线均为1的矩阵，称作<strong>单位矩阵</strong>E。<br>代表这线性变换中的恒等变换，$x_i -&gt; y_i$</p>
<h2 id="Arithmetic"><a href="#Arithmetic" class="headerlink" title="Arithmetic"></a>Arithmetic</h2><h3 id="加减"><a href="#加减" class="headerlink" title="加减"></a>加减</h3><p>有矩阵<script type="math/tex">A = (a_{ij}), B = (b_{ij})</script>同型矩阵则：</p>
<script type="math/tex; mode=display">A + B = C(a_{ij}+b_{ij})</script><p>矩阵加减满足<strong>交换率</strong>、<strong>结合律</strong></p>
<ol>
<li>A + B = B + A</li>
<li>(A + B) + C = A + (B + C)</li>
</ol>
<h3 id="乘法"><a href="#乘法" class="headerlink" title="乘法"></a>乘法</h3><p><strong> 数乘矩阵：</strong></p>
<script type="math/tex; mode=display">
\lambda A = A \lambda = \begin{pmatrix}
   \lambda a_{11} & \lambda a_{12} &  ... & \lambda a_{1n}\\
   \lambda a_{21} & \lambda a_{22} & ... & \lambda a_{2n}\\
   ... & ... & ... & ... \\
   \lambda a_{m1} & \lambda a_{m2} & ... & \lambda a_{mn}
\end{pmatrix}</script><ol>
<li><script type="math/tex; mode=display">(\lambda \mu)A = \lambda (\mu A)</script></li>
<li><script type="math/tex; mode=display">(\lambda + \mu) A = \lambda A + \mu A</script></li>
<li><script type="math/tex; mode=display">\lambda(A + B) = \lambda A + \lambda B</script></li>
</ol>
<p><strong> 矩阵相乘：</strong><br>有矩阵<script type="math/tex">A = (a_{ij})</script>是m <em> s的矩阵，<script type="math/tex">B = (b_{ij})</script>是s </em> n的矩阵,<script type="math/tex">C = (c_{ij})</script>：</p>
<script type="math/tex; mode=display">
c_{ij} = a_{i1}b_{1j} + a_{i2}b_{2j} + ... a_{is}b_{sj} = \sum_{k=1}^s a_{ik}b_{kj}</script><p><strong>只有A矩阵的列和B矩阵的行相同时才能相乘</strong><br>把矩阵相乘记作AB = C，C中的元即是A的行元与B的列元的积和。</p>
<ol>
<li><script type="math/tex; mode=display">(AB)C = A(BC)</script></li>
<li><script type="math/tex; mode=display">\lambda(AB) = (\lambda A)B = A(\lambda B)</script></li>
<li><script type="math/tex; mode=display">A(B + C) = AB + AC, (A + B)C = AC + BC</script></li>
</ol>
<p>n阶方阵，主对角线均为<script type="math/tex">\lambda</script>的矩阵，称作<strong>纯量矩阵</strong></p>
<p>矩阵乘法<strong>一般不满足交换律</strong>，开平方公式、平方和公式，只有在AB可交换是有效。</p>
<h3 id="矩阵的转置"><a href="#矩阵的转置" class="headerlink" title="矩阵的转置"></a>矩阵的转置</h3><p>将矩阵元放入行列交换的位置形成的新矩阵，称为<strong>转置矩阵</strong><script type="math/tex">A^T</script></p>
<ol>
<li><script type="math/tex; mode=display">(A^T)^T = A</script></li>
<li><script type="math/tex; mode=display">(A + B)^T = A^T + B^T</script></li>
<li><script type="math/tex; mode=display">(\lambda A)^T = \lambda A^T</script></li>
<li><script type="math/tex; mode=display">(AB)^T = B^TA^T</script></li>
</ol>
<h3 id="方阵行列式"><a href="#方阵行列式" class="headerlink" title="方阵行列式"></a>方阵行列式</h3><ol>
<li><script type="math/tex; mode=display">\lvert A^T \rvert = \lvert A \rvert</script></li>
<li><script type="math/tex; mode=display">\lvert \lambda A \rvert = \lambda^n \lvert A \rvert</script></li>
<li><script type="math/tex; mode=display">\lvert AB \rvert = \lvert A \rvert \lvert B \rvert</script></li>
</ol>
<p>关于第一点可参考行列式性质一，转置的行列式的组合与未转置的行列式一一对应。</p>
<p><strong>伴随矩阵</strong> 为原矩阵元的代数余子式所组成的矩阵的转置</p>
<script type="math/tex; mode=display">
A^* = \begin{pmatrix}
   A_{11} & A_{21} &  ... & A_{m1}\\
   A_{12} & A_{22} &  ... & A_{m2}\\
   ... & ... & ... & ...\\
   A_{1n} & A_{2n} &  ... & A_{mn}
\end{pmatrix}</script><script type="math/tex; mode=display">
AA^* = A^* A= \lvert A \rvert E</script><p>由于原矩阵的行和其伴随阵列的积，即行元对应代数余子式的和即是行列式的值D。<br>矩阵相乘，<strong>不在同行的积为0</strong>，所以最后得到的是一个纯量矩阵</p>
<h2 id="Inverse-matrix"><a href="#Inverse-matrix" class="headerlink" title="Inverse matrix"></a>Inverse matrix</h2><p>给出一线性变换：</p>
<script type="math/tex; mode=display">
\begin{cases}
    y_1 = a_{11}x_1 + a_{12}x_2 + ... + a_{1n}x_n \\
    y_2 = a_{21}x_1 + a_{22}x_2 + ... + a_{2n}x_n \\
    ... \\
    y_m = a_{m1}x_1 + a_{m2}x_2 + ... + a_{mn}x_n
\end{cases}</script><p>设X为xi组成的向量，Y为yi组成的向量， A为系数矩阵：</p>
<script type="math/tex; mode=display">
Y = AX</script><p>左乘A的伴随矩阵得到：</p>
<script type="math/tex; mode=display">
A^* Y = A^* AX = \lvert A \rvert X</script><p>当A的行列式不为0时，有</p>
<script type="math/tex; mode=display">
X = \frac{1}{\lvert A \rvert} A^* Y</script><p>设<script type="math/tex">B = \frac{1}{\lvert A \rvert} A^*</script>， 则有<script type="math/tex">X = BY</script></p>
<ul>
<li>如果对n阶矩阵A，有矩阵B使 AB=BA=E, 则称B为A的逆矩阵</li>
<li>如果矩阵A可逆，则<script type="math/tex">\lvert A \rvert \neq 0</script></li>
<li>如果<script type="math/tex">\lvert A \rvert \neq 0</script>, 则矩阵A可逆</li>
</ul>
<ul>
<li>如果A可逆，则<script type="math/tex">A^{-1}</script>也可逆。<script type="math/tex">(A^{-1})^{-1} = A</script></li>
<li>如果A可逆，<script type="math/tex">\lambda \neq 0</script>，则<script type="math/tex">\lambda A</script>也可逆。<script type="math/tex">(\lambda A)^{-1} = \frac{1}{\lambda} A^{-1}</script></li>
<li>如果A、B为同阶矩阵均可逆，则AB也可逆。<script type="math/tex">(AB)^{-1} = B^{-1}A^{-1}</script></li>
</ul>
<h3 id="polynomial-多项式"><a href="#polynomial-多项式" class="headerlink" title="polynomial 多项式"></a>polynomial 多项式</h3><ol>
<li><p>如果<script type="math/tex">A = P \Lambda P^-1</script> 则 <script type="math/tex">A^k = P \Lambda^k P^-1</script></p>
<script type="math/tex; mode=display">
\varphi(A) = a_0E+a_1A+...a_mA^m</script><script type="math/tex; mode=display">
= Pa_0EP^{-1} + Pa_1AP^{-1}+...Pa_mA^mP^{-1}</script><script type="math/tex; mode=display">
= P\varphi(\Lambda)P^{-1}</script></li>
<li><p>如果<script type="math/tex">\Lambda = diag(\lambda_1, \lambda_2...\lambda_n)</script>是对角阵,则有<script type="math/tex">\Lambda^k = diag(\lambda_1^k, \lambda_2^k...\lambda_n^k)</script></p>
<script type="math/tex; mode=display">
\varphi(\Lambda) = a_0E + a_2\Lambda + ... a_m\Lambda^m</script></li>
</ol>
<h2 id="Matrix-block"><a href="#Matrix-block" class="headerlink" title="Matrix block"></a>Matrix block</h2><ul>
<li>矩阵A、B有相同行列数、分块方法有：<script type="math/tex; mode=display">
A = \begin{pmatrix}
 A_{11} & ... & A_{1r}\\
 ... & ... & ... \\
 A_{s1} & ... & A_{sr}
\end{pmatrix},
B = \begin{pmatrix}
 B_{11} & ... & B_{1r}\\
 ... & ... & ... \\
 B_{s1} & ... & B_{sr}
\end{pmatrix}</script></li>
</ul>
<script type="math/tex; mode=display">
A + B = \begin{pmatrix}
   A_{11} + B_{11} & ... & A_{1r} + B_{1r}\\
   ... & ... & ... \\
   A_{s1} + B_{s1} & ... & A_{sr} + B_{sr}
\end{pmatrix}</script><p>*</p>
<script type="math/tex; mode=display">
A = \begin{pmatrix}
   A_{11} & ... & A_{1r}\\
   ... & ... & ... \\
   A_{s1} & ... & A_{sr}
\end{pmatrix}</script><p>是分好块的矩阵， <script type="math/tex">\lambda</script>是一个数，则有：</p>
<script type="math/tex; mode=display">
\lambda A = \begin{pmatrix}
   \lambda A_{11} & ... & \lambda A_{1r}\\
   ... & ... & ... \\
   \lambda A_{s1} & ... & \lambda A_{sr}
\end{pmatrix}</script><ul>
<li>A 为m x l矩阵，B为l x n, 分块同上，则有：<script type="math/tex; mode=display">
AB = \begin{pmatrix}
 C_{11} & ... & C_{1r}\\
 ... & ... & ... \\
 C_{s1} & ... & C_{sr}
\end{pmatrix}</script></li>
</ul>
<script type="math/tex; mode=display">
C_{ij} = \sum_{k=1}^{t}{A_{ik}B_{kj}}(i=1,..,s;j=1,...r)</script><p>ps. A矩阵为s x t，B矩阵为t x r。</p>
<ul>
<li>设<script type="math/tex">A = \begin{pmatrix}
 A_{11} & ... & A_{1r}\\
 ... & ... & ... \\
 A_{s1} & ... & A_{sr}
\end{pmatrix}</script>，则<script type="math/tex">A^T = \begin{pmatrix}
 A_{11}^T & ... & A_{1r}^T\\
 ... & ... & ... \\
 A_{s1}^T & ... & A_{sr}^T
\end{pmatrix}</script></li>
<li>如果A为n阶矩阵，如果A的分块只有在主对角线上有非零子块，称A为分块对角矩阵</li>
</ul>
]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>linear</tag>
      </tags>
  </entry>
  <entry>
    <title>matrix &amp; arithmetic (2)</title>
    <url>/2018/01/20/matrix-arithmetic-2/</url>
    <content><![CDATA[<hr>
<h3 id="矩阵乘法"><a href="#矩阵乘法" class="headerlink" title="矩阵乘法"></a>矩阵乘法</h3><p>设</p>
<script type="math/tex; mode=display">
A = \begin{pmatrix}
   1 & 1 & 1 \\
   1 & 1 & -1 \\
   1 & -1 & 1
\end{pmatrix},
B = \begin{pmatrix}
   1 & 2 & 3 \\
   -1 & -2 & 4 \\
   0 & 5 & 1
\end{pmatrix}</script><p>求<script type="math/tex">3AB-2A</script>及<script type="math/tex">A^TB</script></p>
<script type="math/tex; mode=display">
3AB-2A = \begin{pmatrix}
   0 & 15 & 24 \\
   0 & -15 & 18 \\
   6 & 27 & 0
\end{pmatrix} -
\begin{pmatrix}
   2 & 2 & 2 \\
   2 & 2 & -2 \\
   2 & -2 & 2
\end{pmatrix} =
\begin{pmatrix}
   -2 & 13 & 22 \\
   -2 & -17 & 20 \\
   4 & 29 & -2
\end{pmatrix}</script><script type="math/tex; mode=display">
A^TB = AB = \begin{pmatrix}
   0 & 5 & 8 \\
   0 & -5 & 6 \\
   2 & 9 & 0
\end{pmatrix}</script><hr>
<h3 id="举反例证明以下命题是错的"><a href="#举反例证明以下命题是错的" class="headerlink" title="举反例证明以下命题是错的"></a>举反例证明以下命题是错的</h3><ul>
<li>如果<script type="math/tex">A^2=\omicron</script>则<script type="math/tex">A=\omicron</script><script type="math/tex; mode=display">
A = \begin{pmatrix}
 1 & 1 \\
 -1 & -1
\end{pmatrix}</script></li>
<li>如果<script type="math/tex">A^2=A</script>则<script type="math/tex">A=\omicron</script>或<script type="math/tex">A=E</script><script type="math/tex; mode=display">
A = \begin{pmatrix}
 1 & 0 \\
 0 & 0
\end{pmatrix}</script></li>
<li>如果<script type="math/tex">AX=AY(A \neq \omicron)</script>则<script type="math/tex">X=Y</script><script type="math/tex; mode=display">
A = \begin{pmatrix}
 1 & 0 \\
 0 & 0
\end{pmatrix}
X = \begin{pmatrix}
 1 & 0 \\
 0 & 2
\end{pmatrix}
Y = \begin{pmatrix}
 1 & 0 \\
 0 & 3
\end{pmatrix}</script></li>
</ul>
<hr>
<h3 id="矩阵的转置"><a href="#矩阵的转置" class="headerlink" title="矩阵的转置"></a>矩阵的转置</h3><ul>
<li>A、B是n阶矩阵，A是对称矩阵，则<script type="math/tex">B^TAB</script>也是对称矩阵<script type="math/tex; mode=display">
(B^TAB)^T = (AB)^TB = B^TAB</script></li>
<li>A、B是n阶对称矩阵，AB是对称矩阵的充分必要条件是AB=BA<script type="math/tex; mode=display">
AB = (AB)^T = B^TA^T = BA</script></li>
</ul>
<hr>
<h3 id="求矩阵的逆矩阵："><a href="#求矩阵的逆矩阵：" class="headerlink" title="求矩阵的逆矩阵："></a>求矩阵的逆矩阵：</h3><script type="math/tex; mode=display">
A = \begin{pmatrix}
   1 & 2 & -1 \\
   3 & 4 & -2 \\
   5 & -4 & 1
\end{pmatrix}</script><script type="math/tex; mode=display">
det(A) = \begin{vmatrix}
   1 & 0 & 0 \\
   3 & -2 & -1 \\
   5 & -16 & 6
\end{vmatrix} = 2</script><script type="math/tex; mode=display">
A^{-1} = \frac{A*}{|A|} = \frac{1}{2}
\begin{pmatrix}
   -4 & -2 & 0 \\
   13 & 6 & 1 \\
   -22 & -14 & -2
\end{pmatrix} =
\begin{pmatrix}
 -2 & \frac{13}{2} & 0 \\
 -1 & 3 & \frac{1}{2} \\
 0 & -7 & -1
\end{pmatrix}</script><hr>
<h3 id="求矩阵X"><a href="#求矩阵X" class="headerlink" title="求矩阵X"></a>求矩阵X</h3><script type="math/tex; mode=display">
\begin{pmatrix}
   1 & 4 \\
   -1 & 2
\end{pmatrix}X\begin{pmatrix}
   2 & 0 \\
   -1 & 1
\end{pmatrix} = \begin{pmatrix}
   3 & 1 \\
   0 & -1
\end{pmatrix}</script><script type="math/tex; mode=display">
AXB = C => A^{-1}AXBB^{-1} = A^{-1}CB^{-1}C => X = A^{-1}CB^{-1}</script><script type="math/tex; mode=display">
A^{-1} = \frac{1}{6} \begin{pmatrix}
   2 & 1 \\
   -4 & 1
\end{pmatrix}, B^{-1} = \frac{1}{2} \begin{pmatrix}
   1 & 4 \\
   -1 & 2
\end{pmatrix}</script><script type="math/tex; mode=display">
X = \begin{pmatrix}
   1 & 1 \\
   \frac{1}{4} & 0
\end{pmatrix}</script><hr>
<h3 id="推导"><a href="#推导" class="headerlink" title="推导"></a>推导</h3><ul>
<li>设A为3阶矩阵，<script type="math/tex">|A|=\frac{1}{2}</script>， 求<script type="math/tex">|(2A)^{-1} - 5A^* |</script></li>
</ul>
<script type="math/tex; mode=display">
|(2A)^{-1} - 5A^* | = |\frac{1}{2}A^{-1} - \frac{5}{2}A^{-1} | = |-2A^{-1} |</script><script type="math/tex; mode=display">
|A^{-1}|=2 => |-2A^{-1} |= -16</script><ul>
<li>设<script type="math/tex">A = \begin{pmatrix}
 0 & 3 & 3 \\
 1 & 1 & 0 \\
 -1 & 2 & 3
\end{pmatrix}</script>， AB = A + 2B， 求B</li>
</ul>
<script type="math/tex; mode=display">
(A - 2E)B = A => B = (A-2E)^{-1} A</script><script type="math/tex; mode=display">
det(A-2E) = 2, (A-2E)* =\begin{pmatrix}
   -1 & 3 & 3 \\
   -1 & 1 & 3 \\
   1 & 1 & -1
\end{pmatrix}</script><script type="math/tex; mode=display">
B = \frac{1}{2}\begin{pmatrix}
   -1 & 3 & 3 \\
   -1 & 1 & 3 \\
   1 & 1 & -1
\end{pmatrix} \begin{pmatrix}
   0 & 3 & 3 \\
   1 & 1 & 0 \\
   -1 & 2 & 3
\end{pmatrix} =
\begin{pmatrix}
   0 & 3 & 3 \\
   -1 & 2 & 3 \\
   1 & 1 & 0
\end{pmatrix}</script><ul>
<li>设<script type="math/tex; mode=display">
A = \begin{pmatrix}
 1 & 0 & 1 \\
 0 & 2 & 0 \\
 1 & 0 & 1
\end{pmatrix}</script>且<script type="math/tex">AB + E = A^2 + B</script>， 求B</li>
</ul>
<script type="math/tex; mode=display">
B = (A - E)^{-1}(A^2 - E)</script><script type="math/tex; mode=display">
B = \begin{pmatrix}
   0 & 0 & 1 \\
   0 & 1 & 0 \\
   1 & 0 & 0
\end{pmatrix}\begin{pmatrix}
   1 & 0 & 2 \\
   0 & 3 & 0 \\
   2 & 0 & 1
\end{pmatrix} = A + E</script><ul>
<li>设A = diag(1, -2, 1)， <script type="math/tex">A* BA = 2BA-8E</script>， 求B</li>
</ul>
<script type="math/tex; mode=display">
B = 8(2A + 2E)^{-1} = 2A</script><ul>
<li>已知矩阵A的伴随矩阵A*为diag(1, 1, 1, 8)， 且<script type="math/tex">ABA^{-1} = BA^{-1} + 3E</script>， 求B</li>
</ul>
<script type="math/tex; mode=display">
A = diag(2, 2, 2, \frac{1}{4}),
B = (A - E)^{-1} * 3A => B = diag(6, 6, 6, -1)</script><hr>
<h3 id="二项式"><a href="#二项式" class="headerlink" title="二项式"></a>二项式</h3><ul>
<li>设<br><script type="math/tex">P^{-1}AP = \Lambda</script>， <script type="math/tex">P = \begin{pmatrix}
 -1 & -4 \\
 1 & 1
\end{pmatrix}, \Lambda = \begin{pmatrix}
 -1 & 0 \\
 0 & 2
\end{pmatrix}</script>， 求A^11</li>
</ul>
<script type="math/tex; mode=display">
A^11 = P \Lambda^{11} P^{-1}</script><script type="math/tex; mode=display">
= \begin{pmatrix}
   -1 & -4 \\
   1 & 1
\end{pmatrix}\begin{pmatrix}
   -1 & 0 \\
   0 & 2^{11}
\end{pmatrix}\frac{1}{3}\begin{pmatrix}
   1 & 1 \\
   4 & -1
\end{pmatrix} = \frac{1}{3} \begin{pmatrix}
   1+2^{13} & 4+2^{13} \\
   -1-2^{1} & -4-2^{11}
\end{pmatrix}</script><ul>
<li>设<script type="math/tex; mode=display">AP = P\Lambda</script></li>
</ul>
<script type="math/tex; mode=display">
P = \begin{pmatrix}
  1 & 1 & 1 \\
  1 & 0 & -2 \\
  1 & -1 & 1
\end{pmatrix}
\Lambda = \begin{pmatrix}
   -1 & & \\
    & 1 & \\
    &  & 5
\end{pmatrix}</script><p>求<script type="math/tex">\varphi(A) = A^8(5E - 6A + A^2)</script></p>
<script type="math/tex; mode=display">
\varphi(A) = P\lambda^8 (5E - 6\Lambda + \Lambda^2)P^{-1}</script><script type="math/tex; mode=display">
= \begin{pmatrix}
  1 & 1 & 1 \\
  1 & 0 & -2 \\
  1 & -1 & 1
\end{pmatrix} \begin{pmatrix}
   1 & & \\
    & 1 & \\
    &  & 5^8
\end{pmatrix} \begin{pmatrix}
   12 & & \\
    & 0 & \\
    &  & 0
\end{pmatrix}\frac{1}{6} \begin{pmatrix}
   -2 & -2 & -2 \\
   -3 & 0 & 3 \\
   -1 & 2 & -1
\end{pmatrix}</script><script type="math/tex; mode=display">
\frac{1}{6} \begin{pmatrix}
   12 & 0 & 0 \\
   12 & 0 & 0 \\
   12 & 0 & 0
\end{pmatrix} \begin{pmatrix}
   -2 & -2 & -2 \\
   -3 & 0 & 3 \\
   -1 & 2 & -1
\end{pmatrix} = 4 \begin{pmatrix}
   1 & 1 & 1 \\
   1 & 1 & 1 \\
   1 & 1 & 1
\end{pmatrix}</script><hr>
<h3 id="矩阵分块法"><a href="#矩阵分块法" class="headerlink" title="矩阵分块法"></a>矩阵分块法</h3><ul>
<li><script type="math/tex; mode=display">
\begin{pmatrix}
 1 & 2 & 1 & 0 \\
 0 & 1 & 0 & 1 \\
 0 & 0 & 2 & 1 \\
 0 & 0 & 0 & 3
\end{pmatrix}
\begin{pmatrix}
 1 & 0 & 3 & 1 \\
 0 & 1 & 2 & -1 \\
 0 & 0 & -2 & 3 \\
 0 & 0 & 0 & -3
\end{pmatrix}</script></li>
</ul>
<script type="math/tex; mode=display">
\begin{pmatrix}
   a_1 & a_2 \\
   \omicron & a_3
\end{pmatrix}\begin{pmatrix}
   b_1 & b_2 \\
   \omicron & b_3
\end{pmatrix} =
\begin{pmatrix}
   a_1b_1 & a_1b_2+a_2b_3 \\
   \omicron & a_3b_3
\end{pmatrix} =
\begin{pmatrix}
   1 & 2 & 5 & 2 \\
   0 & 1 & 2 & -4 \\
   0 & 0 & -4 & 3 \\
   0 & 0 & 0 & -9
\end{pmatrix}</script><ul>
<li><script type="math/tex">\begin{pmatrix}
 3 & 4 & 0 & 0 \\
 4 & -3 & 0 & 0 \\
 0 & 0 & 2 & 0 \\
 0 & 0 & 2 & 2 \\
\end{pmatrix}</script>， 求|A^8|及A^4</li>
</ul>
<script type="math/tex; mode=display">
A^4 = \begin{pmatrix}
   5^4 & 0 & 0 & 0 \\
   0 & 5^4 & 0 & 0 \\
   0 & 0 & 2^4 & 0 \\
   0 & 0 & 2^6 & 2^4 \\
\end{pmatrix},
|A^8|=|A^4 * A^4|=5^8 * 5^8 * 2^8 * 2^8 = 10^{16}</script>]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>linear</tag>
      </tags>
  </entry>
  <entry>
    <title>Yen&#39;s algorithm</title>
    <url>/2018/01/30/Yen-s-algorithm/</url>
    <content><![CDATA[<p>K shortest path problem have three ideas:</p>
<ul>
<li>recurrence method<br>based on P(i), recurrent resolve the P(i+1) shortest path.</li>
<li>direct method<br>direct find the shortest path, like delete method.</li>
<li>synthetic method<br>i have no idea yet.</li>
</ul>
<p>Yen’s algorithm computes single-source K-shortest loopless paths for a graph with non-negative edge cost.<br>The algorithm was published by Jin Y. Yen in 1971 and employs any shortest path algorithm to find the best path,<br>then proceeds to find K − 1 deviations of the best path.</p>
<ol>
<li><img src="/2018/01/30/Yen-s-algorithm/1.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/2.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/3.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/4.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/5.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/6.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/7.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/8.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/9.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/10.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/11.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/12.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/13.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/14.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/15.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/16.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/17.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/18.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/19.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/20.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/21.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/22.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/23.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/24.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/25.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/26.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/27.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/28.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/29.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/30.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/31.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/32.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/33.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/34.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/35.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/36.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/37.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/38.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/39.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/40.jpg" alt></li>
<li><img src="/2018/01/30/Yen-s-algorithm/41.jpg" alt></li>
</ol>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="http://www.coolee.me/yen-k-shortest-path.html" target="_blank" rel="noopener">http://www.coolee.me/yen-k-shortest-path.html</a><br><a href="https://en.wikipedia.org/wiki/Yen%27s_algorithm" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Yen%27s_algorithm</a></p>
]]></content>
      <categories>
        <category>algorithm</category>
      </categories>
      <tags>
        <tag>graph</tag>
      </tags>
  </entry>
  <entry>
    <title>cpu time</title>
    <url>/2018/02/13/cpu-time/</url>
    <content><![CDATA[<p>1s -&gt; 10^3ms -&gt; 10^6us -&gt; 10^9ns</p>
<ol>
<li><code>cpu&#39;s speed</code> depend on frequency, one 3Gz core can execute 3x10^9 command<br>convert to time, one command need about <strong>0.33ns</strong>. To human like <strong>a blink 0.4s</strong>.</li>
<li><code>level-1 cache</code> read once need <strong>0.5ns</strong>, to human like <strong>a heart beat 1.3s</strong></li>
<li><code>branch predict</code> need <strong>5ns</strong>, about <strong>13s</strong> to human</li>
<li><code>level-2 cache</code> read once need <strong>7ns</strong>, about <strong>18.3s</strong> to human</li>
<li><code>mutex-lock</code> lock or unlock need <strong>25ns</strong>, about <strong>a minute</strong> to human</li>
<li><code>memory address searching</code> need <strong>100ns</strong>, about <strong>4 minute</strong> to human</li>
<li><code>cpu switch context</code> need <strong>1500ns</strong> (1.5us), about <strong>a hour</strong> to human</li>
<li><code>transfer data</code> in a 1Gpbs web <code>2kb</code> need <strong>20us</strong>, about <strong>14.4h</strong> to human</li>
<li><code>SSD random read</code> need <strong>120us</strong>, about <strong>4.5d</strong> to human</li>
<li><code>read data from meory</code> a sequencial <code>2mb</code> data need <strong>250us</strong>, about <strong>7.5d</strong> to human</li>
<li><code>SSD read data</code> a sequencial <code>1mb</code> data need <strong>1ms</strong>, about <strong>a month</strong> to human</li>
<li><code>hard disk</code> read a sequencial <code>1mb</code> data need <strong>20ms</strong>, about <strong>20 month</strong> to human</li>
<li><code>different world web</code> a ping need <strong>120ms</strong>, about <strong>12.5 year</strong> to human</li>
<li><code>reboot vm</code> need <strong>4s</strong>, about <strong>300y</strong> to human</li>
<li><code>reboot machine</code> need <strong>5minute</strong>, about <strong>25000y</strong>……</li>
</ol>
]]></content>
      <categories>
        <category>theory</category>
      </categories>
      <tags>
        <tag>computer</tag>
      </tags>
  </entry>
  <entry>
    <title>Suurballe&#39;s algorithm</title>
    <url>/2018/01/31/Suurballe-s-algorithm/</url>
    <content><![CDATA[<h2 id="Definitions"><a href="#Definitions" class="headerlink" title="Definitions"></a>Definitions</h2><ul>
<li><code>G</code> represent a graph</li>
<li><code>P</code> represent a path</li>
<li><code>s</code> represent source start vertex</li>
<li><code>w(u, v)</code> mean edge weight from vertex <code>u</code> to <code>v</code></li>
<li><code>d(u, v)</code> mean short path cost from vertex <code>u</code> to <code>v</code></li>
</ul>
<h2 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h2><ol>
<li>Find shortest path P1</li>
<li>Recalculate the edge weith by <code>w′(u,v) = w(u,v) − d(s,v) + d(s,u)</code></li>
<li>Create a residual graph Gt formed from G by removing the edges of G on path P1 (leave a reserve zero path)</li>
<li>Find the shortest path P2 in the residual graph Gt</li>
<li>Discard the reversed edges of P2 from both paths</li>
</ol>
<p>The remaining edges of P1 and P2 form a subgraph have no common edges.<br>Return the two disjoint paths from the subgraph.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p><img src="/2018/01/31/Suurballe-s-algorithm/First_graph.jpg" alt></p>
<ul>
<li>Figure <strong>A</strong> illustrates a weighted graph G.</li>
<li>Figure <strong>B</strong> calculates the shortest path P1 from A to F (A–B–D–F).</li>
<li>Figure <strong>C</strong> illustrates the shortest path tree T rooted at A, and the computed distances from A to every vertex (u).</li>
<li>Figure <strong>D</strong> shows the residual graph Gt with the updated cost of each edge and the edges of path ‘P1 reversed.</li>
<li>Figure <strong>E</strong> calculates path P2 in the residual graph Gt (A–C–D–B–E–F).</li>
<li>Figure <strong>F</strong> illustrates both path P1 and path P2.</li>
<li>Figure <strong>G</strong> finds the shortest pair of disjoint paths<br>Combining the edges of paths P1 and P2 and then <em>discarding the common reversed edges</em> between both paths (B–D).<br>As a result, we get the two shortest pair of disjoint paths (A–B–E–F) and (A–C–D–F).</li>
</ul>
<p><a href="https://en.wikipedia.org/wiki/Suurballe%27s_algorithm" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Suurballe%27s_algorithm</a></p>
]]></content>
      <categories>
        <category>algorithm</category>
      </categories>
      <tags>
        <tag>graph</tag>
      </tags>
  </entry>
  <entry>
    <title>Elementary transformation &amp; Linear equations (1)</title>
    <url>/2018/02/28/Elementary-transformation-Linear-equations-1/</url>
    <content><![CDATA[<ul>
<li>如果矩阵A经过有限次<strong>行初等变换</strong>变为矩阵B，称矩阵A与矩阵B行等价记作<script type="math/tex; mode=display">
A r top \thicksim B</script></li>
<li>如果矩阵A经过有限次<strong>列初等变换</strong>变为矩阵B，称矩阵A与矩阵B列等价记作<script type="math/tex; mode=display">
A c top \thicksim B</script></li>
<li>如果矩阵A经过有限次<strong>初等变换</strong>变为矩阵B，称矩阵A与矩阵B等价记作<script type="math/tex; mode=display">
A \thicksim B</script></li>
</ul>
<p>变换后的<strong>阶梯形线性方程组</strong>系数+增广组成矩阵，称为<strong>行最简形矩阵</strong><br>把<strong>行最简形矩阵</strong>再施以初等变换可以得到更简单的矩阵称为<strong>标准形</strong></p>
<script type="math/tex; mode=display">
\begin{pmatrix}
   1 & 0 & -1 & 0 & 4 \\
   0 & 1 & -1 & 0 & 3 \\
   0 & 0 & 0 & 1 & -3 \\
   0 & 0 & 0 & 0 & 0
\end{pmatrix}
\begin{cases}
   c_3 \leftrightarrow c_4 \\
   \thicksim \\
   c_4 + c_1 + c_2 \\
   c_5 - 4c_1 - 3c_2 + 3c_3
\end{cases}
\begin{pmatrix}
   1 & 0 & 0 & 0 & 0 \\
   0 & 1 & 0 & 0 & 0 \\
   0 & 0 & 1 & 0 & 0 \\
   0 & 0 & 0 & 0 & 0
\end{pmatrix}</script><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><ul>
<li>有三种形式的初等变换<ol>
<li>对调两行</li>
<li>某个数k(非0)乘以某行的所有元素</li>
<li>某个数k(非0)乘以某行的所有元素， 加到另一行对应元素上</li>
</ol>
</li>
<li>由单位矩阵经过一次初等变换得到的矩阵称为<strong>初等矩阵</strong></li>
<li>在 m x n的矩阵A中取k行k列，其交叉处元素组成的行列式，称为A的<strong>k阶子式</strong></li>
<li>在矩阵A中如果有r阶非零子式D，而r+1阶为零，称D为A的<strong>最高阶非零子式</strong>，r称为A的秩，记作R(A)</li>
</ul>
<h2 id="定理一"><a href="#定理一" class="headerlink" title="定理一"></a>定理一</h2><ol>
<li><script type="math/tex">A r top \thicksim B</script>的充分必要条件是存在m阶可逆矩阵P，使PA = B;</li>
<li><script type="math/tex">A c top \thicksim B</script>的充分必要条件是存在m阶可逆矩阵Q，使AQ = B;</li>
<li><p><script type="math/tex">A \thicksim B</script>的充分必要条件是存在m阶可逆矩阵P, n阶可逆矩阵Q，使PAQ = B;</p>
</li>
<li><p>性质一: 对矩阵A进行一次初等变换相当于左乘或右乘初等矩阵</p>
</li>
<li>性质二: 方阵A可逆的充分必要条件是存在有限个初等矩阵P1 P2 … pn, 使 A = P1 P2 … pn</li>
<li>推论:   方阵A可逆的充分必要条件是<script type="math/tex">A r top \thicksim E</script></li>
</ol>
<h2 id="定理二"><a href="#定理二" class="headerlink" title="定理二"></a>定理二</h2><p>若 <script type="math/tex">A \thicksim B</script>，则 R(A) = R(B)<br>推论： 如果可逆矩阵P、Q，可使 PAQ = B， 则R(A) = R(B)</p>
<ol>
<li><script type="math/tex; mode=display">0 \leqslant R(A_{m*n}) \leqslant min\{m, n\}</script></li>
<li><script type="math/tex; mode=display">R(A^T) = R(A)</script></li>
<li><script type="math/tex; mode=display">IF \quad A \thicksim B \quad THAN \quad  R(A) = R(B)</script></li>
<li>如果 P、Q可逆，则：R(PAQ) = R(A)</li>
<li><script type="math/tex; mode=display">max\{R(A), R(B)\} \leqslant R(A, B) \leqslant R(A) + R(B)</script></li>
<li><script type="math/tex; mode=display">R(A+B) \leqslant R(A) + R(B)</script></li>
<li><script type="math/tex; mode=display">R(AB) \leqslant min\{R(A), R(B)\}</script></li>
<li><script type="math/tex; mode=display">IF \quad A_{m*n}B_{n*l} = O \quad THAN \quad R(A) + R(B) \leqslant n</script></li>
</ol>
<h2 id="定理三"><a href="#定理三" class="headerlink" title="定理三"></a>定理三</h2><p>对于n元线性方程组Ax = b</p>
<ol>
<li>无解的充分必要条件是 R(A) &lt; R(A, b), 系数矩阵的秩小于增广矩阵的秩</li>
<li>有唯一解的充分必要条件是 R(A) = R(A, b) = n, 标准形等于行数</li>
<li>有无限解的充分必要条件是 R(A) = R(A, b) &lt; n, 标准形低于行数</li>
</ol>
<h2 id="定理四"><a href="#定理四" class="headerlink" title="定理四"></a>定理四</h2><p>n元齐次线性方程组 Ax = 0 有非零解的充分必要条件是 R(A) &lt; n (3.3)</p>
<h2 id="定理五"><a href="#定理五" class="headerlink" title="定理五"></a>定理五</h2><p>线性方程组 Ax = b 有解的充分必要条件是 R(A) = R(A, b) (3.2)</p>
<h2 id="定理六"><a href="#定理六" class="headerlink" title="定理六"></a>定理六</h2><p>线性方程组 Ax = B 有解的充分必要条件是 R(A) = R(A, B) (3.2)</p>
]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>linear</tag>
      </tags>
  </entry>
  <entry>
    <title>Elementary transformation &amp; Linear equations (2)</title>
    <url>/2018/03/10/Elementary-transformation-Linear-equations-2/</url>
    <content><![CDATA[<h3 id="初等变换将矩阵化为最简形"><a href="#初等变换将矩阵化为最简形" class="headerlink" title="初等变换将矩阵化为最简形"></a>初等变换将矩阵化为最简形</h3><script type="math/tex; mode=display">
\begin{vmatrix}
 1 & 0 & 2 & -1 \\
 2 & 0 & 3 & 1 \\
 3 & 0 & 4 & 3
\end{vmatrix}</script><script type="math/tex; mode=display">r_2-2r_1, r_3-3_r1</script><script type="math/tex; mode=display">
\begin{vmatrix}
 1 & 0 & 2 & 2 \\
 0 & 0 & -1 & 3 \\
 0 & 0 & -2 & 6
\end{vmatrix}</script><script type="math/tex; mode=display">-1*r_2, r1-2r_2</script><script type="math/tex; mode=display">
\begin{vmatrix}
 1 & 0 & 0 & 5 \\
 0 & 0 & 1 & -3 \\
 0 & 0 & -2 & 6
\end{vmatrix}</script><h3 id="求可逆矩阵P-使PA化为行最简形"><a href="#求可逆矩阵P-使PA化为行最简形" class="headerlink" title="求可逆矩阵P,使PA化为行最简形"></a>求可逆矩阵P,使PA化为行最简形</h3><script type="math/tex; mode=display">
\begin{vmatrix}
 1 & 2 & 3 & 4 \\
 2 & 3 & 4 & 5 \\
 5 & 4 & 3 & 2
\end{vmatrix}</script><p>矩阵A行列式不为0，矩阵变换 (AE) -&gt; (EP)</p>
<script type="math/tex; mode=display">
(AE) = \begin{vmatrix}
 1 & 2 & 3 & 4 & 1 &  & 0 \\
 2 & 3 & 4 & 5 & 0 & 1 & 0 \\
 5 & 4 & 3 & 2 & 0 & 0 & 1
\end{vmatrix}</script><script type="math/tex; mode=display">r_2-2r_1, r_3-5r_1, -1*r_2</script><script type="math/tex; mode=display">
\begin{vmatrix}
 1 & 2 & 3 & 4 & 1 & 0 & 0 \\
 0 & 1 & 2 & 3 & 2 & -1 & 0 \\
 0 & -6 & -12 & -18 & -5 & 0 & 1
\end{vmatrix}</script><script type="math/tex; mode=display">r_1-2r_2, r_3+6r_2</script><script type="math/tex; mode=display">
(EP) = \begin{vmatrix}
 1 & 0 & -1 & -2 & -3 & 2 & 0 \\
 0 & 1 & 2 & 3 & 2 & -1 & 0 \\
 0 & 0 & 0 & 0 & 7 & -6 & 1
\end{vmatrix}</script><script type="math/tex; mode=display">
P = \begin{vmatrix}
 -3 & 2 & 0 \\
 2 & -1 & 0 \\
 7 & -6 & 1
\end{vmatrix}</script><h3 id="设"><a href="#设" class="headerlink" title="设$$"></a>设$$</h3><p>\begin{vmatrix}<br> -5 &amp; 3 &amp; 1\<br> 2 &amp; -1 &amp; 1<br>\end{vmatrix}</p>
<script type="math/tex; mode=display">，有以下问题

* 求可逆矩阵P,使PA化为行最简形</script><p>(AE) = \begin{vmatrix}<br> -5 &amp; 3 &amp; 1 &amp; 1 &amp; 0\<br> 2 &amp; -1 &amp; 1 &amp; 0 &amp; 1<br>\end{vmatrix}</p>
<script type="math/tex; mode=display">

$$r_1+2r_2, -1*r_1</script><script type="math/tex; mode=display">
\begin{vmatrix}
 1 & -1 & -3 & -1 & -2\\
 2 & -1 & 1 & 0 & 1
\end{vmatrix}</script><script type="math/tex; mode=display">r_2-2r_1, r_1+r_2</script><script type="math/tex; mode=display">
(EP) = \begin{vmatrix}
 1 & 0 & 4 & 1 & 3\\
 0 & 1 & 7 & 2 & 5
\end{vmatrix}</script><script type="math/tex; mode=display">
P = \begin{vmatrix}
 1 & 3\\
 2 & 5
\end{vmatrix}</script><ul>
<li>求可逆矩阵Q,使<script type="math/tex">QA^T</script>化为行最简形</li>
</ul>
<script type="math/tex; mode=display">
(A^TE) = \begin{vmatrix}
 -5 & 2 & 1 & 0 & 0\\
 3 & -1 & 0 & 1 & 0\\
 1 & 1 & 0 & 0 & 1
\end{vmatrix}</script><script type="math/tex; mode=display">r_1+2r_2, r_2-3r_1, r_3-r_1, r_3-r_2</script><script type="math/tex; mode=display">
\begin{vmatrix}
 1 & 0 & 1 & 2 & 0\\
 0 & 1 & 3 & 5 & 0\\
 0 & 0 & -4 & 7 & 1
\end{vmatrix}</script><script type="math/tex; mode=display">
Q = \begin{vmatrix}
 1 & 2 & 0\\
 3 & 5 & 0\\
 -4 & 7 & 1
\end{vmatrix}</script><h3 id="利用矩阵初等变换，求方阵的逆矩阵-begin-vmatrix-3-2-1-3-1-5-3-2-3-end-vmatrix"><a href="#利用矩阵初等变换，求方阵的逆矩阵-begin-vmatrix-3-2-1-3-1-5-3-2-3-end-vmatrix" class="headerlink" title="利用矩阵初等变换，求方阵的逆矩阵\begin{vmatrix} 3 & 2 & 1\\ 3 & 1 & 5\\ 3 & 2 & 3\end{vmatrix}"></a>利用矩阵初等变换，求方阵的逆矩阵<script type="math/tex">\begin{vmatrix} 3 & 2 & 1\\ 3 & 1 & 5\\ 3 & 2 & 3\end{vmatrix}</script></h3><script type="math/tex; mode=display">r_2-r_1, r_3-r_1, -1*r_2</script><script type="math/tex; mode=display">
\begin{vmatrix}
 3 & 2 & 1 & 1 & 0 & 0 \\
 0 & 1 & 5 & -1 & 1 & 0 \\
 0 & 2 & 3 & -1 & 0 & 1
\end{vmatrix}</script><script type="math/tex; mode=display">r_1-2r_2, \frac 1 2 r_3</script><script type="math/tex; mode=display">
\begin{vmatrix}
 3 & 0 & 9 & -1 & 2 & 0 \\
 0 & 1 & -4 & 1 & -1 & 0 \\
 0 & 2 & 3 & -1 & 0 & 1
\end{vmatrix}</script><script type="math/tex; mode=display">r_1-r_3, r_2+4r_3,  \frac 1 3 r_1</script><script type="math/tex; mode=display">
\begin{vmatrix}
 1 & 0 & 0 & \frac 7 6 & \frac 2 3 & -\frac 3 2 \\
 0 & 1 & 0 & -1 & -1 & 2 \\
 0 & 0 & 1 & -\frac 1 2 & 0 & \frac 1 2
\end{vmatrix}</script><h3 id="求X，使AX-B"><a href="#求X，使AX-B" class="headerlink" title="求X，使AX=B"></a>求X，使AX=B</h3><p>初等行变换<br>$P(A, B) ~ (F, PB)$ 当F为单位矩阵时，P为A的逆矩阵即： $P(A, B) ~ (E, A^{-1}B)$</p>
<ul>
<li><script type="math/tex; mode=display">
A = \begin{vmatrix}
4 & 1 & -2\\
2 & 2 & 1\\
3 & 1 & -1
\end{vmatrix}</script><script type="math/tex; mode=display">
B = \begin{vmatrix}
1 & -3\\
2 & 2\\
3 & -1
\end{vmatrix}</script></li>
</ul>
<script type="math/tex; mode=display">
(AB) = \begin{vmatrix}
4 & 1 & -2 & 1 & -3\\
2 & 2 & 1 & 2 & 2\\
3 & 1 & -1 & 3 & -1
\end{vmatrix}</script><script type="math/tex; mode=display">r_3-r_2, r1 \leftrightarrow r3</script><script type="math/tex; mode=display">
\begin{vmatrix}
1 & -2 & -2 & 1 & -3\\
2 & 2 & 1 & 2 & 2\\
4 & 1 & -2 & 1 & -3
\end{vmatrix}</script><script type="math/tex; mode=display">r_2-2r_1, r_3-4r_1</script><script type="math/tex; mode=display">
\begin{vmatrix}
1 & -1 & -2 & 1 & -3\\
0 & 4 & 5 & 0 & 8\\
0 & 5 & 6 & -3 & 9
\end{vmatrix}</script><script type="math/tex; mode=display">r_3-r_2, r_2 \leftrightarrow r_3</script><script type="math/tex; mode=display">
\begin{vmatrix}
1 & -1 & -2 & 1 & -3\\
0 & 1 & 1 & -3 & 1\\
0 & 4 & 5 & 0 & 8
\end{vmatrix}</script><script type="math/tex; mode=display">r_1+r_2, r_3-4r_2</script><script type="math/tex; mode=display">
\begin{vmatrix}
1 & 0 & -1 & -2 & -2\\
0 & 1 & 1 & -3 & 1\\
0 & 0 & 1 & 12 & 4
\end{vmatrix}</script><script type="math/tex; mode=display">r_1+r_3, r_2-r_3</script><script type="math/tex; mode=display">
\begin{vmatrix}
1 & 0 & 0 & 10 & 2\\
0 & 1 & 0 & -15 & -3\\
0 & 0 & 1 & 12 & 4
\end{vmatrix}</script><script type="math/tex; mode=display">
X = \begin{vmatrix}
10 & 2\\
-15 & -3\\
12 & 4
\end{vmatrix}</script><h3 id="求X，使XA-B"><a href="#求X，使XA-B" class="headerlink" title="求X，使XA=B"></a>求X，使XA=B</h3><p>初等列变换<br>$P(A top B) ~ (F top PB)$当F为单位矩阵时，P为A的逆矩阵即：$P(A top B) ~ (E top A^{-1}B)$</p>
<ul>
<li><script type="math/tex; mode=display">
A = \begin{vmatrix}
0 & 2 & 1\\
2 & -1 & 3\\
-3 & 3 & -4
\end{vmatrix}</script><script type="math/tex; mode=display">
B = \begin{vmatrix}
1 & 2 & 3\\
2 & -3 & 1
\end{vmatrix}</script></li>
</ul>
<script type="math/tex; mode=display">
(A top B) = \begin{vmatrix}
 0 & 2 & 1\\
 2 & -1 & 3\\
 -3 & 3 & -4\\
 1 & 2 & 3\\
 2 & -3 & 1
\end{vmatrix}</script><script type="math/tex; mode=display">c_1 \leftrightarrow c_3, c_2-2c_1</script><script type="math/tex; mode=display">
\begin{vmatrix}
 1 & 0 & 0\\
 3 & 1 & 2\\
 -4 & -1 & -3\\
 3 & 0 & 1\\
 1 & 3 & 2
\end{vmatrix}</script><script type="math/tex; mode=display">c_2+4c_3, c_1-3c_2, c_3-2c_2, -1*c_3</script><script type="math/tex; mode=display">
\begin{vmatrix}
 1 & 0 & 0\\
 0 & 1 & 0\\
 -1 & -1 & 1\\
 3 & 0 & -1\\
 -8 & 3 & 4
\end{vmatrix}</script><script type="math/tex; mode=display">c_1+3c_3, c_2+c_3</script><script type="math/tex; mode=display">
\begin{vmatrix}
 1 & 0 & 0\\
 0 & 1 & 0\\
 0 & 0 & 1\\
 2 & -1 & -1\\
 -4 & 7 & 4
\end{vmatrix}</script><script type="math/tex; mode=display">
X = \begin{vmatrix}
 2 & -1 & -1\\
 -4 & 7 & 4
\end{vmatrix}</script><h3 id="k为何值时会有对应个数解？A-begin-vmatrix-1-2-3k-1-2k-3-k-2-3-end-vmatrix"><a href="#k为何值时会有对应个数解？A-begin-vmatrix-1-2-3k-1-2k-3-k-2-3-end-vmatrix" class="headerlink" title="k为何值时会有对应个数解？A = \begin{vmatrix}1 & -2 & 3k\\-1 & 2k & -3\\k & -2 & 3\end{vmatrix}"></a>k为何值时会有对应个数解？<script type="math/tex">A = \begin{vmatrix}1 & -2 & 3k\\-1 & 2k & -3\\k & -2 & 3\end{vmatrix}</script></h3><script type="math/tex; mode=display">r_2+r_1, r_3-kr_1</script><script type="math/tex; mode=display">
A = \begin{vmatrix}
1 & -2 & 3k\\
0 & 2k-2 & 3k-3\\
0 & 2k-2 & 3k - 3k^2
\end{vmatrix}</script><ol>
<li>k=1时 ，秩为1</li>
<li>k=-1时， 秩为2</li>
<li>k不为1或-1时， 秩为3</li>
</ol>
<h3 id="lambda取何值时，非齐次线性方程组"><a href="#lambda取何值时，非齐次线性方程组" class="headerlink" title="\lambda取何值时，非齐次线性方程组"></a><script type="math/tex">\lambda</script>取何值时，非齐次线性方程组</h3><script type="math/tex; mode=display">
\begin{cases}
\lambda x_1 &+ x_2 + x_3 = 1 \\
x_1 &+ \lambda x_2 + x_3 = \lambda \\
x_1 &+ x_2 + \lambda x_3 = \lambda^2
\end{cases}</script><script type="math/tex; mode=display">r_1<->r_3, r_2-r_1, r_3-\lambda r_1</script><script type="math/tex; mode=display">
\begin{vmatrix}
1 & 1 & \lambda & \lambda^2\\
0 & \lambda-1 & 1-\lambda & \lambda-\lambda^2\\
0 & 1-\lambda & 1-\lambda^2 & 1-\lambda^3
\end{vmatrix}</script><script type="math/tex; mode=display">\frac 1 {\lambda-1} r_2, r_3+r_2, r_1 -r_2</script><script type="math/tex; mode=display">
\begin{vmatrix}
1 & 0 & \lambda+1 & \lambda^2+\lambda\\
0 & 1 & -1 & -\lambda\\
0 & 0 & 2-\lambda-\lambda^2 & 1+\lambda-\lambda^2-\lambda^3
\end{vmatrix}</script><ol>
<li><script type="math/tex">\lambda</script> 不为1或-2时， 有唯一解</li>
<li><script type="math/tex">\lambda</script> 为-2时， 无解</li>
<li><script type="math/tex">\lambda</script> 为1时， 有无限解</li>
</ol>
]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>linear</tag>
      </tags>
  </entry>
  <entry>
    <title>Manacher&#39;s algorithm</title>
    <url>/2018/03/21/Manacher-s-algorithm/</url>
    <content><![CDATA[<p>O(n) time complexity find longest palindromic substring</p>
<h2 id="Translate"><a href="#Translate" class="headerlink" title="Translate"></a>Translate</h2><p>put origin string into a new char array, take “ABBABCBA”<br>make odd/ even length origin string into a odd length array (#,…,#)<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> S[] = &#123;<span class="string">'^'</span>, <span class="string">'#'</span>, <span class="string">'A'</span>, <span class="string">'#'</span>, <span class="string">'B'</span>, <span class="string">'#'</span>, <span class="string">'B'</span>, <span class="string">'#'</span>, <span class="string">'A'</span>, <span class="string">'#'</span>, <span class="string">'B'</span>, <span class="string">'#'</span>, <span class="string">'C'</span>, <span class="string">'#'</span>, <span class="string">'B'</span>, <span class="string">'#'</span>, <span class="string">'A'</span>, <span class="string">'#'</span>, <span class="string">'\0'</span>&#125;;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> S[] = &#123;<span class="string">'^'</span>, <span class="string">'#'</span>, <span class="string">'A'</span>, <span class="string">'#'</span>, <span class="string">'B'</span>, <span class="string">'#'</span>, <span class="string">'B'</span>, <span class="string">'#'</span>, <span class="string">'A'</span>, <span class="string">'#'</span>, <span class="string">'B'</span>, <span class="string">'#'</span>, <span class="string">'C'</span>, <span class="string">'#'</span>, <span class="string">'B'</span>, <span class="string">'#'</span>, <span class="string">'A'</span>, <span class="string">'#'</span>, <span class="string">'$'</span>&#125;;</span><br></pre></td></tr></table></figure>
<p>put position 0 and last postion a placeholder, <strong>S.length = origin * 2 + 3</strong> odd length.</p>
<h2 id="Mark"><a href="#Mark" class="headerlink" title="Mark"></a>Mark</h2><p>declare a array P[] to mark the S’s char symmetric radius length<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> S[] = &#123;<span class="string">'^'</span>, <span class="string">'#'</span>, <span class="string">'A'</span>, <span class="string">'#'</span>, <span class="string">'B'</span>, <span class="string">'#'</span>, <span class="string">'B'</span>, <span class="string">'#'</span>, <span class="string">'A'</span>, <span class="string">'#'</span>, <span class="string">'B'</span>, <span class="string">'#'</span>, <span class="string">'C'</span>, <span class="string">'#'</span>, <span class="string">'B'</span>, <span class="string">'#'</span>, <span class="string">'A'</span>, <span class="string">'#'</span>, <span class="string">'$'</span>&#125;;</span><br><span class="line"><span class="keyword">int</span>  P[] = &#123; <span class="number">0</span> ,  <span class="number">1</span> ,  <span class="number">2</span> ,  <span class="number">1</span> ,  <span class="number">2</span> ,  <span class="number">5</span> ,  <span class="number">2</span> ,  <span class="number">1</span> ,  <span class="number">4</span> ,  <span class="number">1</span> ,  <span class="number">2</span> ,  <span class="number">1</span> ,  <span class="number">6</span> ,  <span class="number">1</span> ,  <span class="number">2</span> ,  <span class="number">1</span> ,  <span class="number">2</span> ,  <span class="number">1</span> ,  <span class="number">0</span> &#125;;</span><br></pre></td></tr></table></figure></p>
<h3 id="describe"><a href="#describe" class="headerlink" title="describe:"></a>describe:</h3><blockquote>
<p>array P used to describe radius, for example : <br><br>P[5] = 5 -&gt; S(1,5) | S(5, 9)</p>
</blockquote>
<h3 id="calculate"><a href="#calculate" class="headerlink" title="calculate:"></a>calculate:</h3><p>Declare varable</p>
<ol>
<li><code>center</code> the center of mirror</li>
<li><code>right</code>  the right terminal of mirror</li>
</ol>
<blockquote>
<p><code>right</code> <em>= center + P[center]</em> , right point = center point + radius <br><br><code>left</code> <em>= center - P[center]</em> , left point = center point - radius <br><br>declare <code>i</code> as current S cursor <br><br>delcare <code>mirror</code> as the i’s mirror index ps. <strong>2*center - right</strong></p>
</blockquote>
<p><strong><em>when right &gt; i, then P[i] &gt;= Min(P[mirror], right - i)<br></em></strong></p>
<ol>
<li>when <code>P[mirror]</code> is minimum, that meaning <strong>P[mirror] &lt; right - i</strong> <br><br>standard check block: <strong>(mirror - P[mirror], mirror + P[mirror]) | (i-P[mirror], i + P[mirror])</strong></li>
<li>when <code>right - i</code> is minimum, that meaning <strong>P[mirror] &gt; right - i</strong> <br><br><code>mirror - P[mirror]</code> across the circle <em>left border</em>. <br><br>standard check block: <strong>(mirror - (right - i), mirrror + (right - i)) | (i - (right - i), right)</strong></li>
</ol>
<h2 id="Code-amp-Graph"><a href="#Code-amp-Graph" class="headerlink" title="Code &amp; Graph"></a>Code &amp; Graph</h2><p><img src="/2018/03/21/Manacher-s-algorithm/P[ j ] is less.png" alt></p>
<p><img src="/2018/03/21/Manacher-s-algorithm/P[ j ] is more.png" alt></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// right = center + P[center]</span></span><br><span class="line"><span class="keyword">int</span> center = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// exclude last placeholder position</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;S.length-<span class="number">1</span>; i++) &#123;</span><br><span class="line">    <span class="comment">// j = 2*center - i</span></span><br><span class="line">    P[i] = right &gt; i? Math.min(P[<span class="number">2</span>*center - i], right - i): <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// include char itself, 1 bigger than standard implements</span></span><br><span class="line">    <span class="keyword">while</span>(S[i + P[i]] == S[i - P[i]]) P[i]++;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// judge whether new radiu cross border</span></span><br><span class="line">    <span class="keyword">if</span>(i + P[i] &gt; right) &#123;</span><br><span class="line">        right = i + P[i];</span><br><span class="line">        center = i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Biggest value in P[] is longest palindromic substring lengh<br>It’s index is substring’s char center index.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// find biggest value in P[]</span></span><br><span class="line">length--;</span><br><span class="line"><span class="comment">// and it's index</span></span><br><span class="line">center--;</span><br><span class="line">src.substring((center - length) / <span class="number">2</span>, (center + length) / <span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<p>thanks:<br><a href="https://www.felix021.com/blog/read.php?2040" target="_blank" rel="noopener">https://www.felix021.com/blog/read.php?2040</a></p>
]]></content>
      <categories>
        <category>algorithm</category>
      </categories>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>Gif camera</title>
    <url>/2018/04/05/Gif-camera/</url>
    <content><![CDATA[<p><img src="/2018/04/05/Gif-camera/prototype.jpg" alt></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"># Optional</span><br><span class="line">sudo apt-get upgrade</span><br><span class="line"></span><br><span class="line"># Used to control camera</span><br><span class="line">sudo apt-get install python-picamera python3-picamera</span><br><span class="line"># Used to convert jpg to gif</span><br><span class="line">sudo apt-get install graphicsmagick</span><br><span class="line"></span><br><span class="line">sudo apt-get install git-core</span><br><span class="line"># This script is used in &apos;PIX-E Gif Camera&apos; project</span><br><span class="line">sudo git clone https://github.com/nickbrewer/gifcam.git</span><br></pre></td></tr></table></figure>
<h3>If we just want raspberry pi camera can take gif picture, we can just remove
 `GPIO` and `Twitter` module, no need led notification/ real time upload ro so.</h3>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># import module first</span></span><br><span class="line"><span class="keyword">import</span> picamera</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> system</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> random, string</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># set options</span></span><br><span class="line">um_frame = <span class="number">8</span>       <span class="comment"># Number of frames in Gif</span></span><br><span class="line">gif_delay = <span class="number">15</span>      <span class="comment"># Frame delay [ms]</span></span><br><span class="line">rebound = <span class="literal">True</span>      <span class="comment"># Create a video that loops start &lt;=&gt; end</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># set camera parameters</span></span><br><span class="line">camera = picamera.PiCamera()</span><br><span class="line">camera.resolution = (<span class="number">540</span>, <span class="number">405</span>)</span><br><span class="line">camera.rotation = <span class="number">90</span></span><br><span class="line"><span class="comment">#camera.brightness = 70</span></span><br><span class="line">camera.image_effect = <span class="string">'none'</span></span><br></pre></td></tr></table></figure>
<h2 id="Take-jpg-pictures"><a href="#Take-jpg-pictures" class="headerlink" title="Take jpg pictures"></a>Take jpg pictures</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">'Gif Started'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">### PREVENT DARK INIT IMAGE ###</span></span><br><span class="line">camera.led = <span class="literal">False</span></span><br><span class="line">camera.start_preview()</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line">camera.led = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(num_frame):</span><br><span class="line">    camera.capture(<span class="string">'&#123;0:04d&#125;.jpg'</span>.format(i))</span><br></pre></td></tr></table></figure>
<h2 id="If-rebound-is-True-then-make-picture-loop"><a href="#If-rebound-is-True-then-make-picture-loop" class="headerlink" title="If rebound is True then make picture loop"></a>If <code>rebound</code> is <code>True</code> then make picture loop</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">### PROCESSING GIF ###</span></span><br><span class="line"><span class="keyword">if</span> rebound == <span class="literal">True</span>: <span class="comment"># make copy of images in reverse order</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num_frame - <span class="number">1</span>):</span><br><span class="line">        source = str(num_frame - i - <span class="number">1</span>) + <span class="string">".jpg"</span></span><br><span class="line">        source = source.zfill(<span class="number">8</span>) <span class="comment"># pad with zeros</span></span><br><span class="line">        dest = str(num_frame + i) + <span class="string">".jpg"</span></span><br><span class="line">        dest = dest.zfill(<span class="number">8</span>) <span class="comment"># pad with zeros</span></span><br><span class="line">        copyCommand = <span class="string">"cp "</span> + source + <span class="string">" "</span> + dest</span><br><span class="line">        os.system(copyCommand)</span><br></pre></td></tr></table></figure>
<h2 id="Convert-picture-to-gif-and-cleanup"><a href="#Convert-picture-to-gif-and-cleanup" class="headerlink" title="Convert picture to gif and cleanup"></a>Convert picture to gif and cleanup</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Correction of time difference</span></span><br><span class="line">now = datetime.datetime.now() + datetime.timedelta(hours=<span class="number">8</span>)</span><br><span class="line">filename = <span class="string">'/home/pi/gifcam/gifs'</span> + now.strftime(<span class="string">'%Y%m%d%H%M%S'</span>)</span><br><span class="line">print(<span class="string">'Processing'</span>)</span><br><span class="line"><span class="comment"># Convert command</span></span><br><span class="line">graphicsmagick = <span class="string">"gm convert -delay "</span> + str(gif_delay) + <span class="string">" "</span> + <span class="string">"*.jpg "</span> + filename + <span class="string">".gif"</span></span><br><span class="line">os.system(graphicsmagick)</span><br><span class="line">os.system(<span class="string">"rm ./*.jpg"</span>) <span class="comment"># cleanup source images</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'Done'</span>)</span><br><span class="line">print(<span class="string">'System Ready'</span>)</span><br></pre></td></tr></table></figure>
<p><a href="http://shumeipai.nxez.com/2016/11/06/build-a-disposable-gif-camera.html" target="_blank" rel="noopener">http://shumeipai.nxez.com/2016/11/06/build-a-disposable-gif-camera.html</a><br><a href="https://hackaday.io/project/16358-pix-e-gif-camera" target="_blank" rel="noopener">https://hackaday.io/project/16358-pix-e-gif-camera</a></p>
]]></content>
      <categories>
        <category>raspberry</category>
      </categories>
      <tags>
        <tag>graph</tag>
      </tags>
  </entry>
  <entry>
    <title>Java exec</title>
    <url>/2018/04/20/Java-exec/</url>
    <content><![CDATA[<h2 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h2><ol>
<li><code>Runtime.getRuntime()</code> is the only method can get jvm runing environment</li>
<li>Most method in Runtime is implements method</li>
<li>Runtime.exit() is the only method exit current jvm. <code>System.exit()</code></li>
<li><code>0</code> represent normal execute, !<code>0</code> represent exception</li>
<li><code>Runtime.addShutdownHook()</code> can recieve a thread object as a handle</li>
<li><code>public Process exec(String[] cmdarray, String[] envp, File dir)</code><br>when sub process use current process environment variable, envp is null.</li>
</ol>
<h2 id="Call"><a href="#Call" class="headerlink" title="Call"></a>Call</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Process proc = Runtime.getRuntime().exec(<span class="string">"java"</span>);</span><br><span class="line"><span class="keyword">int</span> exitVal = proc.exitValue();</span><br></pre></td></tr></table></figure>
<p>Process call exitValue is not block, if needed add a loop call</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Process proc = Runtime.getRuntime().exec(<span class="string">"java"</span>);</span><br><span class="line"><span class="comment">// add stream setting</span></span><br><span class="line"><span class="keyword">int</span> exitVal = proc.waitFor();</span><br></pre></td></tr></table></figure>
<p>correct call process need set process’s stream setting, make sure thread will not block.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Process proc = Runtime.getRuntime().exec(<span class="string">"java hello &gt; hi"</span>);</span><br><span class="line"><span class="comment">// add stream setting</span></span><br><span class="line"><span class="keyword">int</span> exitVal = proc.waitFor();</span><br></pre></td></tr></table></figure>
<p>in command line can’t execute bash sign like <code>&gt;</code> <code>&gt;&gt;</code> <code>&lt;</code> <code>&amp;</code>.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Process proc = Runtime.getRuntime().exec(</span><br><span class="line">              <span class="keyword">new</span> String[]&#123;<span class="string">"/bin/bash"</span>, <span class="string">"-c"</span>, <span class="string">"java hello &gt; hi"</span>&#125;, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="comment">// add stream setting</span></span><br><span class="line"><span class="keyword">int</span> exitVal = proc.waitFor();</span><br></pre></td></tr></table></figure>
<p>if need these local operation, you can write these in a shell script, or load bash in java.</p>
<h2 id="Call-in-windows"><a href="#Call-in-windows" class="headerlink" title="Call in windows"></a>Call in windows</h2><p>if you want call in windows you need install bash first<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Process proc = Runtime.getRuntime().exec(</span><br><span class="line">              <span class="keyword">new</span> String[]&#123;<span class="string">"D:\\Program Files\\Git\\bin\\sh.exe"</span>, <span class="string">"-c"</span>, command&#125;, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="comment">// add stream setting</span></span><br><span class="line"><span class="keyword">int</span> exitVal = proc.waitFor();</span><br></pre></td></tr></table></figure></p>
<p>if jvm execute path is not the <code>exec</code> path, you need add specific path<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Process proc = Runtime.getRuntime().exec(</span><br><span class="line">              <span class="keyword">new</span> String[]&#123;<span class="string">"D:\\Program Files\\Git\\bin\\sh.exe"</span>, <span class="string">"-c"</span>, command&#125;, <span class="keyword">null</span>, <span class="keyword">new</span> File(workPath));</span><br><span class="line"><span class="comment">// add stream setting</span></span><br><span class="line"><span class="keyword">int</span> exitVal = proc.waitFor();</span><br></pre></td></tr></table></figure></p>
<p>ps. <code>-c</code> mean read parameter in string format, not directly %0 %1</p>
<h2 id="Another-way"><a href="#Another-way" class="headerlink" title="Another way"></a>Another way</h2><p>If you want jvm do standard in /out, use another thread read or write data<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Process proc = Runtime.getRuntime().exec(<span class="string">"java hello"</span>);</span><br><span class="line"><span class="comment">// add pip stream thread setting</span></span><br><span class="line">StreamThread director = <span class="keyword">new</span> StreamThread(proc.getInputStream()，proc.getOutputStream());</span><br><span class="line">director.start();</span><br><span class="line"><span class="keyword">int</span> exitVal = proc.waitFor();</span><br></pre></td></tr></table></figure></p>
<p><a href="https://blog.csdn.net/mengxingyuanlove/article/details/50707746" target="_blank" rel="noopener">https://blog.csdn.net/mengxingyuanlove/article/details/50707746</a><br><a href="https://blog.csdn.net/timo1160139211/article/details/75006938" target="_blank" rel="noopener">https://blog.csdn.net/timo1160139211/article/details/75006938</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>command</tag>
      </tags>
  </entry>
  <entry>
    <title>aws ec2 mysql</title>
    <url>/2018/05/18/aws-ec2-mysql/</url>
    <content><![CDATA[<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install mysql mysql-server mysql-libs</span><br><span class="line"></span><br><span class="line"># change owner &amp; group</span><br><span class="line">sudo chgrp -R mysql /var/lib/mysql</span><br><span class="line">chmod -R 770 /var/lib/mysql</span><br></pre></td></tr></table></figure>
<h2 id="Settings"><a href="#Settings" class="headerlink" title="Settings"></a>Settings</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SHOW VARIABLES LIKE &apos;character_set_%&apos;;</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| Variable_name            | Value                      |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| character_set_client     | utf8                       |</span><br><span class="line">| character_set_connection | utf8                       |</span><br><span class="line">| character_set_database   | latin1                     |</span><br><span class="line">| character_set_filesystem | binary                     |</span><br><span class="line">| character_set_results    | utf8                       |</span><br><span class="line">| character_set_server     | latin1                     |</span><br><span class="line">| character_set_system     | utf8                       |</span><br><span class="line">| character_sets_dir       | /usr/share/mysql/charsets/ |</span><br><span class="line">+--------------------------+----------------------------+</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set character_set_server=utf8;</span><br><span class="line">set character_set_database=utf8;</span><br><span class="line">SHOW VARIABLES LIKE &apos;character_set_%&apos;;</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| Variable_name            | Value                      |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| character_set_client     | utf8                       |</span><br><span class="line">| character_set_connection | utf8                       |</span><br><span class="line">| character_set_database   | utf8                       |</span><br><span class="line">| character_set_filesystem | binary                     |</span><br><span class="line">| character_set_results    | utf8                       |</span><br><span class="line">| character_set_server     | utf8                       |</span><br><span class="line">| character_set_system     | utf8                       |</span><br><span class="line">| character_sets_dir       | /usr/share/mysql/charsets/ |</span><br><span class="line">+--------------------------+----------------------------+</span><br></pre></td></tr></table></figure>
<h2 id="Passwd"><a href="#Passwd" class="headerlink" title="Passwd"></a>Passwd</h2><ol>
<li><p>mysqladmin</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysqladmin -u root password &apos;psswd&apos;</span><br></pre></td></tr></table></figure>
</li>
<li><p>update</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql -u root</span><br><span class="line">　mysql&gt; use mysql;</span><br><span class="line">　mysql&gt; UPDATE user SET Password = PASSWORD(&apos;passwd&apos;) WHERE user = &apos;root&apos;;</span><br><span class="line">　mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>
</li>
<li><p>set</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MySQL -u root</span><br><span class="line">　　mysql&gt; SET PASSWORD FOR &apos;root&apos;@&apos;localhost&apos; = PASSWORD(&apos;passwd&apos;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>skip</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line"># remove after the job</span><br><span class="line">add `skip-grant-tables`</span><br><span class="line">wq</span><br><span class="line">service mysqld restart</span><br></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service mysqld stop</span><br><span class="line">mysqld_safe --skip-grant-tables&amp;</span><br></pre></td></tr></table></figure>
<h2 id="User-amp-Db"><a href="#User-amp-Db" class="headerlink" title="User &amp; Db"></a>User &amp; Db</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create user &apos;test&apos;@&apos;localhost&apos; identified by &apos;123456&apos;;</span><br><span class="line">create database testdb default charset utf8 collate utf8_general_ci;</span><br><span class="line">grant all privileges on `testdb`.* to &apos;test&apos;@&apos;localhost&apos; identified by &apos;123456&apos;;</span><br><span class="line">flush privileges;</span><br><span class="line">mysql -u test -h 1.1.1.1 -p</span><br></pre></td></tr></table></figure>
<h2 id="Exception"><a href="#Exception" class="headerlink" title="Exception"></a>Exception</h2><p><strong>ERROR 1227 (42000): Access denied; you need (at least one of) …</strong><br>If sign in mysql in localhost like this:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure></p>
<p>no privileges on create user/ create db/ show process …<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show grants for &apos;&apos;@&apos;localhost&apos;;</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">| Grants for @localhost                                                |</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">| GRANT USAGE ON *.* TO &apos;&apos;@&apos;localhost&apos; IDENTIFIED BY PASSWORD &lt;secret&gt; |</span><br><span class="line">+----------------------------------------------------------------------+</span><br></pre></td></tr></table></figure></p>
<p>the command should be like this:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql -u root -h 127.0.0.1 -p</span><br></pre></td></tr></table></figure></p>
<p><a href="https://blog.csdn.net/qq1010885678/article/details/47955717" target="_blank" rel="noopener">Amazon EC2</a><br><a href="https://blog.csdn.net/u013252149/article/details/52794880" target="_blank" rel="noopener">AWS Linux MySQL Install</a><br><a href="https://blog.csdn.net/mchdba/article/details/10435883" target="_blank" rel="noopener">ERROR 1227 (42000)</a><br><a href="https://blog.csdn.net/hill_night/article/details/45029601" target="_blank" rel="noopener">ERROR 1045 (28000)</a></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Servlet request</title>
    <url>/2018/05/20/Servlet-request/</url>
    <content><![CDATA[<p><code>2017-09-05 17:05:47</code></p>
<h3 id="Fetch-URL"><a href="#Fetch-URL" class="headerlink" title="Fetch URL"></a>Fetch URL</h3><p><code>request.getRequestURL()</code></p>
<h3 id="Parameter-List"><a href="#Parameter-List" class="headerlink" title="Parameter List"></a>Parameter List</h3><ul>
<li><p>Request in <code>GET</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://localhost:8070/serverLab/hello?a=1&amp;b=2</span><br><span class="line">request.getQueryString()</span><br><span class="line">result: a=1&amp;b=2</span><br></pre></td></tr></table></figure>
</li>
<li><p>Request in <code>POST</code> or <code>GET</code></p>
</li>
</ul>
<ol>
<li><p><code>getParameter()</code><br>This method limited in form’s encoding<br>only used in <code>application/x- www-form-urlencoded</code><br>Advantage is very simple, disadvantage is not suit in big data.<br>When transfer big data block browser use <code>multipart/form-data</code></p>
</li>
<li><p><code>getInputStream()</code> <code>getReader()</code><br>Get context by stream, got bytes or characters</p>
</li>
</ol>
<p>Stream way have conflict with parameter way<br>When <code>getParameter()</code> read a from encoded by <code>application/x- www-form-urlencoded</code> once<br><code>getInputStream()</code> can’t read data any more.vice versa.</p>
<p>When <code>getParameter()</code> read a from encoded by <code>multipart/form-data</code>, can’t read data<br>So <code>multipart/form-data</code> encoding have no conflict.</p>
<p>PS. <code>request.getInputStream()</code> <code>request.getReader()</code> can’t use in mix or throw exception</p>
<h3 id="About-request-getAttribute"><a href="#About-request-getAttribute" class="headerlink" title="About request.getAttribute()"></a>About <code>request.getAttribute()</code></h3><ol>
<li>Attribute is survive in container</li>
<li>HttpServletRequest only have <code>setAttribute()</code> on <code>setParameter()</code></li>
<li>Survive in one request, like <code>forward</code></li>
<li><code>session.setAttribute()</code> have Affect in a progress</li>
<li>If from’s data come’s from JS, use a hidden div parse data -_-!!!</li>
</ol>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>http</tag>
      </tags>
  </entry>
  <entry>
    <title>python encode</title>
    <url>/2018/05/22/python-encode/</url>
    <content><![CDATA[<h2 id="Declare"><a href="#Declare" class="headerlink" title="Declare"></a>Declare</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br></pre></td></tr></table></figure>
<p>make clare that the origin code context use utf-8 encoding.</p>
<p>if not declate when unioncode sign appare in origin text, python throw exception:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SyntaxError: Non-ASCII character &apos;\xe4&apos; in file code_test.py on line 6,</span><br><span class="line">but no encoding declared; see http://python.org/dev/peps/pep-0263/ for details</span><br></pre></td></tr></table></figure>
<h2 id="Setting-default-encoding"><a href="#Setting-default-encoding" class="headerlink" title="Setting default encoding"></a>Setting default encoding</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(&apos;utf8&apos;)</span><br></pre></td></tr></table></figure>
<p>told python use <code>utf8</code> as the default encoding to deal symbols<br>python’s type <code>str</code> use <code>ascii</code> as the default encoding ps. v2.7</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">UnicodeEncodeError: &apos;ascii&apos; codec can&apos;t encode character u&apos;\u4e07&apos; in position 0:</span><br><span class="line">ordinal not in range(128)</span><br></pre></td></tr></table></figure>
<h2 id="Exception-in-db"><a href="#Exception-in-db" class="headerlink" title="Exception in db"></a>Exception in db</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">UnicodeEncodeError:&apos;latin-1&apos; codec can&apos;t encode character ...</span><br></pre></td></tr></table></figure>
<p>declare the connection and the cursor’s encoding:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">db = pymysql.connect(&quot;localhost&quot;, &quot;use&quot;, &quot;passwd&quot;, &quot;db_name&quot; , use_unicode=True,  charset=&quot;utf8&quot;)</span><br><span class="line">db = MySQLdb.connect(host=&quot;localhost&quot;, user = &quot;root&quot;, passwd = &quot;&quot;, db = &quot;testdb&quot;, use_unicode=True, charset=&quot;utf8&quot;)</span><br><span class="line">cursor.execute(&apos;SET NAMES utf8;&apos;)</span><br><span class="line">cursor.execute(&apos;SET CHARACTER SET utf8;&apos;)</span><br><span class="line">cursor.execute(&apos;SET character_set_connection=utf8;&apos;)</span><br></pre></td></tr></table></figure></p>
<h2 id="Exception-in-wb"><a href="#Exception-in-wb" class="headerlink" title="Exception in wb"></a>Exception in wb</h2><p>If the web is encoded in <code>gbk</code> or <code>gb2312</code>, use <code>utf8</code> to show will case messy encoding</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">html = unicode(html, &quot;gbk&quot;).encode(&quot;utf8&quot;)</span><br></pre></td></tr></table></figure>
<p>turn the bytes stream to unicode first in <code>gbk</code> decoding, then encoding in <code>utf8</code></p>
<h2 id="Encoding-transform"><a href="#Encoding-transform" class="headerlink" title="Encoding transform"></a>Encoding transform</h2><ol>
<li>if in origin code <code>str</code> delcare has the prfix <code>u</code> then it is unicde encoding</li>
<li>if origin code <code>str</code> has no prefix <code>u</code> then it use it’s text encoding</li>
<li>use <code>unicode(str, codec)</code> to transform <code>str</code> to unicode</li>
<li>most times use <code>str.decode(codec)</code> to decode to bytes stream</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'utf8'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># u'\u4e07'</span></span><br><span class="line">a = <span class="string">u"万"</span></span><br><span class="line"><span class="keyword">print</span> a</span><br><span class="line"><span class="keyword">print</span> ord(a)</span><br><span class="line"><span class="keyword">print</span> unichr(ord(a))</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"----------------"</span></span><br><span class="line"></span><br><span class="line">b = a.encode(<span class="string">'utf8'</span>)</span><br><span class="line"><span class="keyword">print</span> b</span><br><span class="line">c = a.encode(<span class="string">'gbk'</span>)</span><br><span class="line"><span class="keyword">print</span> c</span><br></pre></td></tr></table></figure>
<p>in windows bash termianl’s encode is <code>utf8</code> , <code>gbk</code> is messy encoding<br><img src="/2018/05/22/python-encode/bash.png" alt="bash"><br>in windows dos terminal’s encode is <code>gbk</code> , <code>utf8</code> is messy encoding<br><img src="/2018/05/22/python-encode/dos.png" alt="dos"></p>
<h2 id="Encoding-in-json"><a href="#Encoding-in-json" class="headerlink" title="Encoding in json"></a>Encoding in json</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">json.dumps # turn json object -&gt; string</span><br><span class="line">json.loads # turn json string -&gt; object</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># add encoding parameter</span><br><span class="line">json.loads(jStr, encoding=&quot;GB2312&quot;);</span><br><span class="line"># restrict the string in unicode encoding</span><br><span class="line">json.dumps(js, ensure_ascii=False)</span><br></pre></td></tr></table></figure>
<p><a href="https://stackoverflow.com/questions/3942888/unicodeencodeerror-latin-1-codec-cant-encode-character" target="_blank" rel="noopener">https://stackoverflow.com/questions/3942888/unicodeencodeerror-latin-1-codec-cant-encode-character</a></p>
<p><a href="https://blog.csdn.net/learn_tech/article/details/52982679" target="_blank" rel="noopener">https://blog.csdn.net/learn_tech/article/details/52982679</a></p>
<p><a href="https://blog.csdn.net/xfyangle/article/details/60969522" target="_blank" rel="noopener">https://blog.csdn.net/xfyangle/article/details/60969522</a></p>
<p><a href="https://blog.csdn.net/ran337287/article/details/56298949" target="_blank" rel="noopener">https://blog.csdn.net/ran337287/article/details/56298949</a></p>
<p><a href="https://blog.csdn.net/chenzy945/article/details/18267905" target="_blank" rel="noopener">https://blog.csdn.net/chenzy945/article/details/18267905</a></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>symbol</tag>
      </tags>
  </entry>
  <entry>
    <title>Mondrian architecture</title>
    <url>/2018/05/24/Mondrian-architecture/</url>
    <content><![CDATA[<h2 id="Mondrian系统的图层"><a href="#Mondrian系统的图层" class="headerlink" title="Mondrian系统的图层"></a>Mondrian系统的图层</h2><p>OLAP: OnlineAnalytical Processing<br>Mondrian OLAP系统由四层组成; 从最终用户的眼睛到数据中心的核心，有如下：表示层，维度层，星层和存储层。</p>
<p>表示层决定最终用户在他或她的监视器上看到的内容，以及他或她如何交互以提出新问题。有多种方式可以呈现多维数据集，<br>包括数据透视表（上面显示的表格的交互式版本），饼图，线条和条形图以及高级可视化工具，如可点击的地图和动态图形。<br>这些可以用Swing或JSP编写，以JPEG或GIF格式呈现的图表或通过XML传输到远程应用程序。所有这些表示形式的共同之处在于<br>表示层提出问题的维度，度量和单元的多维“语法”，并且OLAP服务器返回答案。</p>
<p>第二层是维度层。维度层解析，验证并执行MDX查询。查询分多个阶段进行评估。首先计算坐标轴，然后计算坐标轴内单元格的值。<br>为了提高效率，维度层将批量请求发送给汇聚层。查询转换器允许应用程序操纵现有查询，而不是从头开始为每个请求构建MDX语句。<br>元数据描述了维度模型，以及它如何映射到关系模型。</p>
<p>第三层是星级层，负责维护聚合缓存。聚合是内存中的一组度量值’单元’[cells]，由一组维度列值限定。维度层发送单元组请求。<br>如果请求的单元格不在高速缓存中，或者通过在高速缓存中汇总聚合进行派生，则聚合管理器会向存储层发送请求。</p>
<p>存储层是一个RDBMS。它负责提供聚合的单元格数据，以及维度表中的成员。<br>我在下面描述为什么我决定使用RDBMS的功能，而不是开发针对多维数据优化的存储系统。</p>
<p>这些组件可以全部存在于同一台机器上，也可以分布在机器之间。构成Mondrian服务器的第2层和第3层必须位于同一台计算机上。<br>存储层可以在另一台机器上，通过远程JDBC连接访问。在多用户系统中，表示层将存在于每个最终用户的机器上（除了在服务器上生成的JSP页面的情况）。</p>
<p><img src="/2018/05/24/Mondrian-architecture/arch_mondrian_v1_lrg.png" alt><br><img src="/2018/05/24/Mondrian-architecture/architecture2_big.png" alt></p>
<h2 id="存储和聚合策略"><a href="#存储和聚合策略" class="headerlink" title="存储和聚合策略"></a>存储和聚合策略</h2><p>OLAP服务器通常根据其存储数据的方式进行分类：</p>
<ul>
<li>MOLAP（multidimensional  OLAP）服务器将其所有数据存储在磁盘中，并针对多维访问进行优化。<br>通常，数据以密集阵列存储，每个单元值只需要4或8个字节。</li>
<li>ROLAP（relational OLAP）服务器将其数据存储在关系数据库中。事实表中的每一行都有一个用于每个维度和度量的列。<br>需要存储三种数据：事实表数据（事务记录），聚合和维度。</li>
</ul>
<p>MOLAP数据库以多维格式存储事实数据，但如果维度不止一个维度，则这些数据将会很稀疏，并且多维格式表现不佳。<br>HOLAP（混合OLAP）系统通过在关系数据库中保留最细粒度的数据来解决此问题，但将聚合以多维格式存储。</p>
<p>预先计算的聚合对于大型数据集是必需的，否则某些查询在未读取事实表的全部内容的情况下不能被回答。<br>MOLAP聚合通常是内存数据结构的图像，分解成页面并存储在磁盘上。ROLAP聚合被存储在表中。<br>在一些ROLAP系统中，这些由OLAP服务器显式管理; 在其他系统中，这些表被声明为物化视图[materialized views]，<br>并且当OLAP服务器使用 group by子句中列的正确组合发出查询时，它们将被隐式使用。</p>
<p>聚合策略的最后组件是缓存。高速缓存将预先计算的聚合保存在内存中，以便后续查询可以访问单元值而不必访问磁盘。<br>如果缓存将所需数据集保留在较低级别的聚合中，则它可以通过<strong>卷起来</strong>计算所需的数据集。</p>
<p>缓存可以说是聚合策略中最重要的部分，因为它是自适应的。很难选择一组聚合来预先计算在不使用大量磁盘的情况下加速系统的速度，<br>特别是那些维度较高或用户提交不可预知查询的系统。在数据实时变化的系统中，维护预先计算的聚合是不切实际的。<br>合理大小的缓存可以允许系统在面对不可预知的查询时充分执行，而预先计算的聚合很少或没有。</p>
<p><code>蒙德里安</code>的汇总策略如下：</p>
<ul>
<li>事实数据存储在RDBMS中。RDBMS已经有一个存储管理器，为什么还要开发一个？</li>
<li>通过查询提交分组，将聚合数据读入缓存。同样，RDBMS有一个聚合器，为什么还要开发一个？</li>
<li>如果RDBMS支持实体化视图，并且数据库管理员选择为特定聚合创建实体化视图，则Mondrian将隐式使用它们。<br>理想情况下，<code>蒙德里安</code>的聚合管理者应该意识到存在这些物化视图，并且这些特定的聚合计算起来很便宜。<br>它甚至应该向数据库管理员提供调优建议。</li>
</ul>
<p>总体思路是将数据库的内容委托给数据库。<br>这给数据库带来了额外的负担，但是一旦将这些功能添加到数据库中，数据库的所有客户端都将从中受益。<br>多维存储可以减少I / O，并在某些情况下可以加快操作速度，但我认为这不足以保证现阶段的复杂性。</p>
<p>一个奇妙的副作用是因为Mondrian自己不需要存储空间，所以可以通过将JAR文件添加到类路径中并立即启动并运行来安装它。<br>由于没有冗余数据集进行管理，数据加载过程更容易，<strong>Mondrian非常适合在实时更改的数据集上执行OLAP。</strong></p>
<h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><p>Mondrian为客户端应用程序提供执行查询的API。</p>
<p>由于没有普遍接受的用于执行OLAP查询的API，Mondrian的主要API是专有的; 然而，任何使用过JDBC的人都会发现它很熟悉。<br>主要区别在于查询语言：Mondrian使用称为MDX的语言(M ulti- D dimension e X pressions)来指定查询，其中JDBC将使用SQL。<br>下面更详细地描述MDX。</p>
<p>连接 经由创建 的DriverManager，以类似的方式来JDBC。<br>一个 查询是类似于JDBC 声明，并且通过解析MDX字符串创建。<br>甲 结果是类似于JDBC 结果集 ; 因为我们正在处理多维数据，所以它由轴和单元组成，而不是行和列。<br>由于OLAP旨在用于数据挖掘，因此可以通过 drillDown和 sort等操作修改查询中包含的分析树 ，然后重新执行查询。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> mondrian.olap.*;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line">Connection connection = DriverManager.getConnection(</span><br><span class="line">    <span class="string">"Provider=mondrian;"</span> +</span><br><span class="line">    <span class="string">"Jdbc=jdbc:odbc:MondrianFoodMart;"</span> +</span><br><span class="line">    <span class="string">"Catalog=/WEB-INF/FoodMart.xml;"</span>,</span><br><span class="line">    <span class="keyword">null</span>,</span><br><span class="line">    <span class="keyword">false</span>);</span><br><span class="line">Query query = connection.parseQuery(</span><br><span class="line">    <span class="string">"SELECT &#123;[Measures].[Unit Sales], [Measures].[Store Sales]&#125; on columns,"</span> +</span><br><span class="line">    <span class="string">"&#123;[Product].children&#125; on rows "</span> +</span><br><span class="line">    <span class="string">"FROM [Sales] "</span> +</span><br><span class="line">    <span class="string">"WHERE ([Time].[1997].[Q1], [Store].[CA].[San Francisco])"</span>);</span><br><span class="line">Result result = connection.execute(query);</span><br><span class="line">result.print(<span class="keyword">new</span> PrintWriter(System.out));</span><br></pre></td></tr></table></figure>
<p>API还将数据库模式呈现为一组对象： 模式， 多维数据集， 维度， 层次结构， 级别， 成员。<br>有关Mondrian API的更多信息，请参阅 javadoc。</p>
<p>用于分析的XML是通过SOAP（简单对象访问协议）访问OLAP服务器的标准。<br>这允许Microsoft Excel等非Java组件针对Mondrian运行查询。</p>
<p><code>蒙德里安</code>包括对 JSR-069(‘JOLAP’)提议标准的支持，<br>但是在明确标准永远不会被批准的情况下，这一支持在mondrian-2.3中被删除。</p>
<p><a href="https://mondrian.pentaho.com/documentation/architecture.php#Figure_1:_Mondrian_architecture" target="_blank" rel="noopener">https://mondrian.pentaho.com/documentation/architecture.php#Figure_1:_Mondrian_architecture</a></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>constructure</tag>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>WebSocket protocol</title>
    <url>/2018/05/31/WebSocket-protocol/</url>
    <content><![CDATA[<h2 id="Origin"><a href="#Origin" class="headerlink" title="Origin"></a>Origin</h2><p>WebSocket is design for intercommuncation[full duplex].<br>The <code>http</code> protocol is build in TCP[Transfer level], only one side can send or recevie.<br>When job is done, request will close the TCP connection.</p>
<p>If we want a long time alive connection.</p>
<ol>
<li>Http’s <code>keep-alive</code> head property is not design for long connection.<br>It’s design for increase effciency, in avoid 3 times <code>handclasp</code>.<br>When out of time, server will still close it.</li>
<li>Http loop request. it’s very common strategy, but very low effciency.</li>
<li>Make a <code>TCP</code> like connection, and keep it not be break.</li>
</ol>
<p><code>WebSocket</code> is just like <code>TCP</code> <code>UDP</code> work in <code>Transfer level</code>, a <code>socket</code> in origin.</p>
<p><img src="/2018/05/31/WebSocket-protocol/websocket-architecture.jpg" alt></p>
<h2 id="Connection"><a href="#Connection" class="headerlink" title="Connection"></a>Connection</h2><p>Create a server service<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>);</span><br><span class="line"><span class="keyword">const</span> hostname = <span class="string">"127.0.0.1"</span>;</span><br><span class="line"><span class="keyword">const</span> port = <span class="string">"9090"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// create a service</span></span><br><span class="line"><span class="keyword">let</span> server = http.createServer(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"recv request"</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(req.headers);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// create a listener</span></span><br><span class="line">server.listen(port, hostname, () =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`Server running at <span class="subst">$&#123;hostname&#125;</span>:<span class="subst">$&#123;port&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>Ceate a broser client<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCType <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">!<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> socket = <span class="keyword">new</span> WebSocket(<span class="string">'ws://127.0.0.1:9090'</span>);</span></span><br><span class="line"><span class="javascript">    socket.onopen = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'opened'</span>);</span></span><br><span class="line"><span class="javascript">        socket.send(<span class="string">'hello, this is from client tiger'</span>);</span></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h3><p>Nodejs do not execute the recall function. Because another <code>upgrade</code> event.</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">server.on(<span class="string">"upgrade"</span>, (request, socket, head) =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(request.headers);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>If make no response then connection closed before recevie headshake:<br><img src="/2018/05/31/WebSocket-protocol/error_1.png" alt></li>
</ul>
<p>In request header, <code>sec-websocket-key</code> is used to verify server is legal.<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">socket.write(<span class="string">'HTTP/1.1 101 Web Socket Protocol Handshake\r\n'</span> +</span><br><span class="line">        <span class="string">'Upgrade: WebSocket\r\n'</span> +</span><br><span class="line">        <span class="string">'Connection: Upgrade\r\n'</span> +</span><br><span class="line">        <span class="string">`Sec-WebSocket-Accept: \r\n`</span> +</span><br><span class="line">        <span class="string">'\r\n'</span>);</span><br></pre></td></tr></table></figure></p>
<ul>
<li>If the server response <code>sec-websocket-key</code> is not right, then data is dirty:<br><img src="/2018/05/31/WebSocket-protocol/error_2.png" alt></li>
</ul>
<hr>
<h3 id="Calculate"><a href="#Calculate" class="headerlink" title="Calculate"></a>Calculate</h3><p><code>Sec-WebSocket-Accept = base64(sha1(Sec-Websocket-key + GUID))</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># command</span><br><span class="line">npm init</span><br><span class="line">npm install sha1 --save</span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> sha1 = <span class="built_in">require</span>(<span class="string">'sha1'</span>);</span><br><span class="line">server.on(<span class="string">"upgrade"</span>, (request, socket, head) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> secKey = request.headers[<span class="string">'sec-websocket-key'</span>];</span><br><span class="line">    <span class="comment">// RFC 6455 (GUID)</span></span><br><span class="line">    <span class="keyword">const</span> UNIQUE_IDENTIFIER = <span class="string">'258EAFA5-E914-47DA-95CA-C5AB0DC85B11'</span>;</span><br><span class="line">    <span class="comment">// calc sha1 base64</span></span><br><span class="line">    <span class="keyword">let</span> shaValue = sha1(secKey + UNIQUE_IDENTIFIER),</span><br><span class="line">        base64Value = Buffer.from(shaValue, <span class="string">'hex'</span>).toString(<span class="string">'base64'</span>);</span><br><span class="line">    socket.write(<span class="string">'HTTP/1.1 101 Web Socket Protocol Handshake\r\n'</span> +</span><br><span class="line">        <span class="string">'Upgrade: WebSocket\r\n'</span> +</span><br><span class="line">        <span class="string">'Connection: Upgrade\r\n'</span> +</span><br><span class="line">        <span class="string">`Sec-WebSocket-Accept: <span class="subst">$&#123;base64Value&#125;</span>\r\n`</span> +</span><br><span class="line">        <span class="string">'\r\n'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>ps. Look at the eyes and meet the right person :)</p>
<h2 id="Recevie"><a href="#Recevie" class="headerlink" title="Recevie"></a>Recevie</h2><p>Frame in documents is like this :<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0               1               2               3              </span><br><span class="line">0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7</span><br><span class="line">+-+-+-+-+-------+-+-------------+-------------------------------+</span><br><span class="line">|F|R|R|R| opcode|M| Payload len |    Extended payload length    |</span><br><span class="line">|I|S|S|S|  (4)  |A|     (7)     |             (16/64)           |</span><br><span class="line">|N|V|V|V|       |S|             |   (if payload len==126/127)   |</span><br><span class="line">| |1|2|3|       |K|             |                               |</span><br><span class="line">+-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +</span><br><span class="line">|     Extended payload length continued, if payload len == 127  |</span><br><span class="line">+ - - - - - - - - - - - - - - - +-------------------------------+</span><br><span class="line">|                               |Masking-key, if MASK set to 1  |</span><br><span class="line">+-------------------------------+-------------------------------+</span><br><span class="line">| Masking-key (continued)       |          Payload Data         |</span><br><span class="line">+-------------------------------- - - - - - - - - - - - - - - - +</span><br><span class="line">:                     Payload Data continued ...                :</span><br><span class="line">+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +</span><br><span class="line">|                     Payload Data continued ...                |</span><br><span class="line">+---------------------------------------------------------------+</span><br></pre></td></tr></table></figure></p>
<ol>
<li>first level is the frame’s head<ul>
<li><code>FIN</code> finish if the bit is <code>1</code></li>
<li><code>RSV1</code> <code>RSV2</code> <code>RSV3</code> reserve bit some application use it to show wheather data is compressed.</li>
<li><code>opcode</code> operation code <code>0001</code> is text</li>
<li><code>MASK</code> mask the data space if the bit is <code>1</code></li>
<li><code>Payload len</code> data’s byte length</li>
<li><code>Extended ...</code> if the length cross 2^7[127], use other 8 bytes to store length.</li>
</ul>
</li>
<li>second level is masking-key space 4 bytes</li>
<li>third lecel is data space ? bytes</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">|Opcode  | Meaning                             | Reference |</span><br><span class="line">-+--------+-------------------------------------+-----------|</span><br><span class="line">| 0      | Continuation Frame                  | RFC 6455  |</span><br><span class="line">-+--------+-------------------------------------+-----------|</span><br><span class="line">| 1      | Text Frame                          | RFC 6455  |</span><br><span class="line">-+--------+-------------------------------------+-----------|</span><br><span class="line">| 2      | Binary Frame                        | RFC 6455  |</span><br><span class="line">-+--------+-------------------------------------+-----------|</span><br><span class="line">| 8      | Connection Close Frame              | RFC 6455  |</span><br><span class="line">-+--------+-------------------------------------+-----------|</span><br><span class="line">| 9      | Ping Frame                          | RFC 6455  |</span><br><span class="line">-+--------+-------------------------------------+-----------|</span><br><span class="line">| 10     | Pong Frame                          | RFC 6455  |</span><br><span class="line">-+--------+-------------------------------------+-----------|</span><br></pre></td></tr></table></figure>
<p>In browser if refresh the window, websocket will send the close frame:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">buffer len =  8</span><br><span class="line">&lt;Buffer 88 82 34 b3 e3 25 37 5a&gt;</span><br><span class="line">maskFlag = 1</span><br><span class="line">pLength = 2</span><br><span class="line">maskKey = 52,179,227,37[34 B3 E3 25]</span><br><span class="line">payloadHex  = 03 E9</span><br><span class="line">payloadText = ╚é</span><br></pre></td></tr></table></figure></p>
<h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">socket.on(<span class="string">'data'</span>, buffer =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'buffer len = '</span>, buffer.length);</span><br><span class="line">    <span class="built_in">console</span>.log(buffer);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> bitBuffer = <span class="keyword">new</span> BitBuffer(buffer);</span><br><span class="line">    <span class="keyword">let</span> maskFlag = bitBuffer._getBit(<span class="number">8</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'maskFlag = '</span> + maskFlag);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> payloadLen = bitBuffer.getBit(<span class="number">9</span>, <span class="number">7</span>),</span><br><span class="line">        maskKeys = bitBuffer.getMaskingKey(<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'pLength = '</span> + payloadLen);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'maskKey = '</span> + maskKeys +</span><br><span class="line">    <span class="string">'['</span> + bitBuffer.bytesToHexString(maskKeys[<span class="number">0</span>]) + <span class="string">' '</span> +</span><br><span class="line">    bitBuffer.bytesToHexString(maskKeys[<span class="number">1</span>]) + <span class="string">' '</span> +</span><br><span class="line">    bitBuffer.bytesToHexString(maskKeys[<span class="number">2</span>]) + <span class="string">' '</span> +</span><br><span class="line">    bitBuffer.bytesToHexString(maskKeys[<span class="number">3</span>]) + <span class="string">']'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> payloadText = bitBuffer.getXorString(<span class="number">48</span> / <span class="number">8</span>, payloadLen, maskKeys);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'payloadText = '</span> + payloadText);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BitBuffer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">constructor</span> (buffer) &#123;</span><br><span class="line">        <span class="keyword">this</span>.buffer = buffer;</span><br><span class="line">        <span class="keyword">this</span>.hexChar = [<span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>,</span><br><span class="line">            <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>, <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// fetch xth bit content</span></span><br><span class="line">    _getBit (offset) &#123;</span><br><span class="line">        <span class="keyword">let</span> byteIndex = offset / <span class="number">8</span> &gt;&gt; <span class="number">0</span>,  <span class="comment">// target utf-8 character</span></span><br><span class="line">            byteOffset = offset % <span class="number">8</span>;      <span class="comment">// target bit offset in character</span></span><br><span class="line">        <span class="comment">// readUInt8 read the nth character data</span></span><br><span class="line">        <span class="keyword">let</span> num = <span class="keyword">this</span>.buffer.readUInt8(byteIndex) &amp; (<span class="number">1</span> &lt;&lt; (<span class="number">7</span> - byteOffset));</span><br><span class="line">        <span class="keyword">return</span> num &gt;&gt; (<span class="number">7</span> - byteOffset);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// [from, length]</span></span><br><span class="line">    getBit (offset, len = <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">            result += <span class="keyword">this</span>._getBit(offset + i) &lt;&lt; (len - i - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// masking-key</span></span><br><span class="line">    getMaskingKey (offset) &#123;</span><br><span class="line">        <span class="keyword">const</span> BYTE_COUNT = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">let</span> masks = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; BYTE_COUNT; i++)</span><br><span class="line">            masks.push(<span class="keyword">this</span>.getBit(offset + i * <span class="number">8</span>, <span class="number">8</span>));</span><br><span class="line">        <span class="keyword">return</span> masks;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// get plaintext</span></span><br><span class="line">    getXorString (byteOffset, byteCount, maskingKeys) &#123;</span><br><span class="line">        <span class="keyword">let</span> text = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">let</span> hex  = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; byteCount; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> j = i % <span class="number">4</span>;</span><br><span class="line">            <span class="comment">// get origin utf-8 encoded data though exclusive or</span></span><br><span class="line">            <span class="keyword">let</span> transformedByte = <span class="keyword">this</span>.buffer.readUInt8(byteOffset + i)</span><br><span class="line">                                      ^ maskingKeys[j];</span><br><span class="line">            <span class="comment">// put utf-8 bytes to ascii char</span></span><br><span class="line">            text += <span class="built_in">String</span>.fromCharCode(transformedByte);</span><br><span class="line">            hex += <span class="keyword">this</span>.bytesToHexString(transformedByte) + <span class="string">' '</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'payloadHex  = '</span> + hex);</span><br><span class="line">        <span class="keyword">return</span> text;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// char to 2-hex String</span></span><br><span class="line">    bytesToHexString(num) &#123;</span><br><span class="line">        <span class="keyword">let</span> text = <span class="string">''</span>;</span><br><span class="line">        text += <span class="keyword">this</span>.hexChar[num &gt;&gt;&gt; <span class="number">4</span> &amp; <span class="number">0xf</span>];</span><br><span class="line">        text += <span class="keyword">this</span>.hexChar[num &amp; <span class="number">0xf</span>];</span><br><span class="line">        <span class="keyword">return</span> text;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>socket.send(‘hello, this is from client tiger’);</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">buffer len =  38</span><br><span class="line">&lt;Buffer 81 a0 f1 3d 90 39 99 58 fc 55 9e 11 b0 4d 99 54 e3 19 9</span><br><span class="line">8 4e b0 5f 83 52 fd 19 92 51 f9 5c 9f 49 b0 4d 98 5a f5 4b&gt;</span><br><span class="line">maskFlag = 1</span><br><span class="line">pLength = 32</span><br><span class="line">maskKey = 241,61,144,57[F1 3D 90 39]</span><br><span class="line">payloadHex  = 68 65 6C 6C 6F 2C 20 74 68 69 73 20 69 73 20 66 7</span><br><span class="line">2 6F 6D 20 63 6C 69 65 6E 74 20 74 69 67 65 72</span><br><span class="line">payloadText = hello, this is from client tiger</span><br></pre></td></tr></table></figure>
<p>Toke last 4 bytes for example:<br>origin data is <code>98 5a f5 4b</code>, masking key is <code>F1 3D 90 39</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">98 5a f5 4b XOR F1 3D 90 39 = 69 67 65 72</span><br><span class="line">69 = &apos;i&apos;</span><br><span class="line">67 = &apos;g&apos;</span><br><span class="line">65 = &apos;e&apos;</span><br><span class="line">72 = &apos;r&apos;</span><br></pre></td></tr></table></figure></p>
<h3 id="Last-issue"><a href="#Last-issue" class="headerlink" title="Last issue"></a>Last issue</h3><p>In application websocket implements ping/pong[9/10] is used to make sure connection alive.<br>Client ping server every 30s, server response pong message frame.<br>If server not recevie client’s ping frame in 1 minute, it will close the connnection.</p>
<p>Broser websocket modual not implemented this mechanism.<br>If long connection is needed, you need loop ping frame by yourself.</p>
<p><a href="https://www.w3.org/TR/websockets/" target="_blank" rel="noopener">https://www.w3.org/TR/websockets/</a><br><a href="https://www.w3.org/TR/2011/WD-websockets-20110419/" target="_blank" rel="noopener">https://www.w3.org/TR/2011/WD-websockets-20110419/</a><br><a href="https://tools.ietf.org/html/rfc6455" target="_blank" rel="noopener">https://tools.ietf.org/html/rfc6455</a></p>
<p><a href="http://www.open-open.com/lib/view/open1527469228211.html" target="_blank" rel="noopener">http://www.open-open.com/lib/view/open1527469228211.html</a><br><a href="https://www.yinchengli.com/2018/05/27/chrome-websocket/" target="_blank" rel="noopener">https://www.yinchengli.com/2018/05/27/chrome-websocket/</a><br><a href="https://blog.jcoglan.com/2015/03/30/websocket-extensions-as-plugins/" target="_blank" rel="noopener">https://blog.jcoglan.com/2015/03/30/websocket-extensions-as-plugins/</a></p>
<p><a href="https://docs.spring.io/spring-framework/docs/5.0.0.BUILD-SNAPSHOT/spring-framework-reference/html/websocket.html" target="_blank" rel="noopener">https://docs.spring.io/spring-framework/docs/5.0.0.BUILD-SNAPSHOT/spring-framework-reference/html/websocket.html</a></p>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>protocol</tag>
      </tags>
  </entry>
  <entry>
    <title>Intelij maven 3.x &amp; nexus 2.x</title>
    <url>/2018/06/11/Intelij-maven-3-x-nexus-2-x/</url>
    <content><![CDATA[<h3 id="install-nexus-2-x-first-need-java-1-7"><a href="#install-nexus-2-x-first-need-java-1-7" class="headerlink" title="install nexus 2.x first , need java 1.7+"></a>install nexus 2.x first , need java 1.7+</h3><p><a href="https://www.sonatype.com/download-oss-sonatype" target="_blank" rel="noopener">https://www.sonatype.com/download-oss-sonatype</a></p>
<h3 id="config-nexus"><a href="#config-nexus" class="headerlink" title="config nexus"></a>config nexus</h3><p>Add a user <code>user</code> pass <code>pass</code>, grant privilege<br>For example a project named <code>InitialD</code><br>Add a repository <code>InitialD-release</code><br>Add a repository <code>InitialD-snapshot</code></p>
<h3 id="install-maven-3-x"><a href="#install-maven-3-x" class="headerlink" title="install maven 3.x"></a>install maven 3.x</h3><p>Add environment variable <code>MAVEN_HOME</code> to the maven dirctory.<br>Modify environment variable <code>path</code> add <code>;%M2_HOME%\bin</code><br><a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">http://maven.apache.org/download.cgi</a></p>
<h3 id="config-maven"><a href="#config-maven" class="headerlink" title="config maven"></a>config maven</h3><p>Modify <code>%MAVEN_HOME%/conf/settings.xml</code> add servers-server / profile-repositories-repository</p>
<p>server:<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>InitialD-release<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">username</span>&gt;</span>user<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">password</span>&gt;</span>pass<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>InitialD-snapshot<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">username</span>&gt;</span>user<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">password</span>&gt;</span>pass<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>repositorie:<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span>&gt;</span>InitialD-release<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">url</span>&gt;</span>http://127.0.0.1:8081/nexus/content/repositories/InitialD-release<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span>&gt;</span>InitialD-snapshot<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">url</span>&gt;</span>http://127.0.0.1:8081:8081/nexus/content/repositories/InitialD-snapshot<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="Intelij-config"><a href="#Intelij-config" class="headerlink" title="Intelij config"></a>Intelij config</h3><p>change maven to self define package/ configure:<br><img src="/2018/06/11/Intelij-maven-3-x-nexus-2-x/m-setting.png" alt></p>
<p>modify pom.xml in intelij project:<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>dms-release<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Team Nexus Release Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://127.0.0.1:8081/nexus/content/repositories/InitialD-release<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>dms-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Team Nexus Snapshot Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://127.0.0.1:8081/nexus/content/repositories/InitialD-snapshot<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">uniqueVersion</span>&gt;</span>false<span class="tag">&lt;/<span class="name">uniqueVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>use maven plugin deploy package:<br><img src="/2018/06/11/Intelij-maven-3-x-nexus-2-x/d-setting.png" alt></p>
<p><a href="https://www.cnblogs.com/lyy-2016/p/5747631.html" target="_blank" rel="noopener">https://www.cnblogs.com/lyy-2016/p/5747631.html</a><br><a href="https://blog.csdn.net/win7system/article/details/51252275" target="_blank" rel="noopener">https://blog.csdn.net/win7system/article/details/51252275</a><br><a href="https://www.cnblogs.com/mfrbuaa/p/5408185.html" target="_blank" rel="noopener">https://www.cnblogs.com/mfrbuaa/p/5408185.html</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>install</tag>
      </tags>
  </entry>
  <entry>
    <title>Install mysql linux 5.7.22</title>
    <url>/2018/06/12/Install-mysql-linux-5-7-22/</url>
    <content><![CDATA[<h3 id="Decompress-package"><a href="#Decompress-package" class="headerlink" title="Decompress package"></a>Decompress package</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd /usr/local</span><br><span class="line">tar -xzvf mysql-5.7.22-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line">rm -f mysql-5.7.22-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line">mv mysql-5.7.22-linux-glibc2.12-x86_64.tar.gz mysql</span><br></pre></td></tr></table></figure>
<h3 id="Group-amp-User"><a href="#Group-amp-User" class="headerlink" title="Group &amp; User"></a>Group &amp; User</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># linux account</span><br><span class="line">groupadd mysql</span><br><span class="line">useradd -r -g mysql mysql</span><br><span class="line"></span><br><span class="line"># dataspace</span><br><span class="line">cd /usr/local/mysql</span><br><span class="line">mkdir data</span><br><span class="line"></span><br><span class="line"># privilege</span><br><span class="line">cd /usr/local</span><br><span class="line">chown -R mysql mysql/</span><br><span class="line">chgrp -R mysql mysql/</span><br></pre></td></tr></table></figure>
<h3 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd /usr/local/mysql/bin</span><br><span class="line"></span><br><span class="line">./mysqld --initialize</span><br><span class="line">--user=mysql</span><br><span class="line">--basedir=/usr/local/mysql/</span><br><span class="line">--datadir=/usr/local/mysql/data/</span><br><span class="line">--lc_messages_dir=/usr/local/mysql/share</span><br><span class="line">--lc_messages=en_US</span><br></pre></td></tr></table></figure>
<p>remember the init root password</p>
<h3 id="Setting"><a href="#Setting" class="headerlink" title="Setting"></a>Setting</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi /etc/my.cnf</span><br><span class="line"># modify</span><br><span class="line"></span><br><span class="line">basedir=/usr/local/mysql/</span><br><span class="line">datadir=/usr/local/mysql/data</span><br><span class="line">port=3306</span><br><span class="line">character-set-server=utf8</span><br><span class="line">explicit_defaults_for_timestamp=true</span><br><span class="line"></span><br><span class="line">#datadir=/var/lib/mysql</span><br><span class="line">#socket=/usr/local/mysql/data/mysql.sock</span><br><span class="line">user=mysql</span><br></pre></td></tr></table></figure>
<h3 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd /usr/local/mysql/support-files/</span><br><span class="line">cp mysql.server /etc/init.d/mysql</span><br><span class="line">vi /etc/init.d/mysql</span><br><span class="line"></span><br><span class="line"># add setting</span><br><span class="line">basedir=/usr/local/mysql/</span><br><span class="line">datadir=/usr/local/mysql/data/</span><br><span class="line"></span><br><span class="line">chmod +x /etc/init.d/mysql</span><br><span class="line">chkconfig --add mysql</span><br></pre></td></tr></table></figure>
<h3 id="privilege"><a href="#privilege" class="headerlink" title="privilege"></a>privilege</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd /usr/local/mysql/bin</span><br><span class="line">./mysql -u root -p</span><br><span class="line">set password=password(&quot;root&quot;);</span><br><span class="line">grant all privileges on *.* to&apos;root&apos; @&apos;%&apos; identified by &apos;root&apos;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>
<h3 id="Exception"><a href="#Exception" class="headerlink" title="Exception"></a>Exception</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysqld: Can&apos;t create/write to file &apos;/tmp/ibgXpx9Y&apos; (Errcode: 13 - Permission denied)</span><br></pre></td></tr></table></figure>
<p>if the /tmp dirctory have no permission:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod 777 /tmp</span><br></pre></td></tr></table></figure></p>
<p><a href="https://blog.csdn.net/NB6063/article/details/80417319" target="_blank" rel="noopener">https://blog.csdn.net/NB6063/article/details/80417319</a><br><a href="https://blog.csdn.net/shaochenshuo/article/details/51375905" target="_blank" rel="noopener">https://blog.csdn.net/shaochenshuo/article/details/51375905</a></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Convert picture to customized size</title>
    <url>/2018/06/15/Convert-picture-to-customized-size/</url>
    <content><![CDATA[<h3 id="Main-method"><a href="#Main-method" class="headerlink" title="Main method"></a>Main method</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> BufferedImage <span class="title">imageConvert</span><span class="params">(InputStream inputStream, Integer limit)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (inputStream == <span class="keyword">null</span> || limit == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// init</span></span><br><span class="line">    BufferedImage inputImage = ImageIO.read(inputStream);</span><br><span class="line">    <span class="keyword">int</span> size = getImageSize(inputImage);</span><br><span class="line">    <span class="keyword">if</span> (size &lt;= <span class="number">0</span> || inputImage == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// loop reduce pixel</span></span><br><span class="line">    <span class="keyword">while</span> (size &gt; imgLimit) &#123;</span><br><span class="line">        <span class="comment">// calculate edge shrink propotion</span></span><br><span class="line">        <span class="comment">// minus .05 improve convert speed</span></span><br><span class="line">        <span class="keyword">double</span> rate = (<span class="keyword">double</span>)imgLimit/size - .<span class="number">05</span>;</span><br><span class="line">        <span class="comment">// if origin is 20 times than limit, rate may little than 0</span></span><br><span class="line">        <span class="comment">// set ten times smaller than origin as default</span></span><br><span class="line">        <span class="keyword">if</span> (rate &lt; <span class="number">0</span>) rate = .<span class="number">1</span>;</span><br><span class="line">        rate = Math.sqrt(rate);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> width = (<span class="keyword">int</span>)(inputImage.getWidth(<span class="keyword">null</span>) * rate);</span><br><span class="line">        <span class="keyword">int</span> height = (<span class="keyword">int</span>)(inputImage.getHeight(<span class="keyword">null</span>) * rate);</span><br><span class="line">        BufferedImage outputImage = imageCompress(inputImage, width, height);</span><br><span class="line">        inputImage = outputImage;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// recalculate</span></span><br><span class="line">        size = getImageSize(inputImage);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> inputImage;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Assistant-method"><a href="#Assistant-method" class="headerlink" title="Assistant method"></a>Assistant method</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getImageSize</span><span class="params">(BufferedImage img)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    ByteArrayOutputStream byteOS = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">    ImageIO.write(img, <span class="string">"jpg"</span>, byteOS);</span><br><span class="line">    <span class="keyword">int</span> size = byteOS.size();</span><br><span class="line">    byteOS.close();</span><br><span class="line">    <span class="keyword">return</span> size;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> BufferedImage <span class="title">imageCompress</span><span class="params">(Image img, <span class="keyword">int</span> w, <span class="keyword">int</span> h)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    BufferedImage image = <span class="keyword">new</span> BufferedImage(w, h, BufferedImage.TYPE_INT_RGB );</span><br><span class="line">    <span class="comment">// redraw converted graph</span></span><br><span class="line">    image.getGraphics().drawImage(img, <span class="number">0</span>, <span class="number">0</span>, w, h, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">    ByteArrayOutputStream byteOS = <span class="keyword">new</span> ByteArrayOutputStream(<span class="number">256</span>);</span><br><span class="line">    ImageIO.write(image, <span class="string">"jpg"</span>, byteOS);</span><br><span class="line">    ByteArrayInputStream byteIS = <span class="keyword">new</span> ByteArrayInputStream(byteOS.toByteArray());</span><br><span class="line">    BufferedImage product = ImageIO.read(byteIS);</span><br><span class="line">    byteOS.close();</span><br><span class="line">    byteIS.close();</span><br><span class="line">    <span class="keyword">return</span> product;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><p>Use memory to loop picture may cause leak problem.<br>Use 3th part software maybe a better choice? like ffmpeg.</p>
<p><a href="https://www.cnblogs.com/shoufengwei/p/8526105.html" target="_blank" rel="noopener">https://www.cnblogs.com/shoufengwei/p/8526105.html</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>compress</tag>
      </tags>
  </entry>
  <entry>
    <title>Kafka quickstart in windows</title>
    <url>/2018/07/11/Kafka-quickstart-in-windows/</url>
    <content><![CDATA[<h2 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h2><p>download kafka package from <a href="http://kafka.apache.org/downloads" target="_blank" rel="noopener">http://kafka.apache.org/downloads</a></p>
<p>un-tar package <code>kafka_2.11-1.1.0.tgz</code></p>
<h2 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h2><p>copy config file in <code>bin\windows</code><br>Start zookeeper first, because kafka is a cluster type middleware.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zookeeper-server-start.bat config/zookeeper.properties</span><br></pre></td></tr></table></figure></p>
<p>If alert <code>Error: can&#39;t find or can&#39;t load main class ...</code>,<br>modify <code>bin\windows\kafka-run-class.bat</code></p>
<p>add Double quotation mark to <code>%CLASSPATH%</code> like this : <code>&quot;%CLASSPATH%&quot;</code></p>
<p>Now start the Kafka server:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kafka-server-start.sh config/server.properties</span><br></pre></td></tr></table></figure></p>
<h2 id="Create-topic"><a href="#Create-topic" class="headerlink" title="Create topic"></a>Create topic</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kafka-topics.bat --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test</span><br><span class="line"></span><br><span class="line">kafka-topics.bat --list --zookeeper localhost:2181</span><br></pre></td></tr></table></figure>
<h2 id="Send-messages-Producer"><a href="#Send-messages-Producer" class="headerlink" title="Send messages[Producer]"></a>Send messages[Producer]</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kafka-console-producer.bat --broker-list localhost:9092 --topic test</span><br><span class="line">&gt; Hello world</span><br><span class="line">&gt; Hello topic</span><br></pre></td></tr></table></figure>
<h2 id="Start-a-consumer"><a href="#Start-a-consumer" class="headerlink" title="Start a consumer"></a>Start a consumer</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kafka-console-consumer.bat --bootstrap-server localhost:9092 --topic test --from-beginning</span><br><span class="line">Hello world</span><br><span class="line">Hello topic</span><br><span class="line">_</span><br></pre></td></tr></table></figure>
<h2 id="Multi-broker-cluster"><a href="#Multi-broker-cluster" class="headerlink" title="Multi-broker cluster"></a>Multi-broker cluster</h2><p>copy <code>server.properties</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">copy config/server.properties config/server-1.properties</span><br><span class="line">copy config/server.properties config/server-2.properties</span><br></pre></td></tr></table></figure></p>
<p>modify configuration:<br>In same machine, node’s id/ port must be unique, log file should be seperated.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">config/server-1.properties:</span><br><span class="line">    broker.id=1</span><br><span class="line">    listeners=PLAINTEXT://:9093</span><br><span class="line">    log.dir=/tmp/kafka-logs-1</span><br><span class="line"></span><br><span class="line">config/server-2.properties:</span><br><span class="line">    broker.id=2</span><br><span class="line">    listeners=PLAINTEXT://:9094</span><br><span class="line">    log.dir=/tmp/kafka-logs-2</span><br></pre></td></tr></table></figure></p>
<p>Now start other two broker<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kafka-server-start.sh config/server-1.properties</span><br><span class="line">kafka-server-start.sh config/server-2.properties</span><br></pre></td></tr></table></figure></p>
<p>Create new topic<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kafka-topics.bat --create --zookeeper localhost:2181 --replication-factor 3 --partitions 1 --topic my-replicated-topic</span><br></pre></td></tr></table></figure></p>
<p>Show detail<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kafka-topics.bat --describe --zookeeper localhost:2181 --topic my-replicated-topic</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kafka-topics.bat --describe --zookeeper localhost:2181 --topic my-replicated-topic</span><br><span class="line">Topic:my-replicated-topic       PartitionCount:1        ReplicationFactor:3 Configs:</span><br><span class="line">        Topic: my-replicated-topic      Partition: 0    Leader: 2       Replicas: 2,0,1 Isr: 2,0,1</span><br></pre></td></tr></table></figure>
<ul>
<li>“leader” is the node responsible for all reads and writes for the given partition.<br>Each node will be the leader for a randomly selected portion of the partitions.</li>
<li>“replicas” is the list of nodes that replicate the log for this partition<br>regardless of whether they are the leader or even if they are currently alive.</li>
<li>“isr” is the set of “in-sync” replicas. This is the subset of the replicas list<br>that is currently alive and caught-up to the leader.</li>
</ul>
<p>send some message<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kafka-console-producer.bat --broker-list localhost:9092 --topic my-replicated-topic</span><br><span class="line">&gt; test message 1</span><br><span class="line">&gt; test message 2</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></p>
<p>consume these messages<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kafka-console-consumer.bat --bootstrap-server localhost:9092 --from-beginning --topic my-replicated-topic</span><br><span class="line">test message 1</span><br><span class="line">test message 2</span><br><span class="line">_</span><br></pre></td></tr></table></figure></p>
<p>now the leader broker id is <code>2</code>, kill it[ ctrl+c ]<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; wmic process where &quot;caption = &apos;java.exe&apos; and commandline like &apos;%server-2.properties%&apos;&quot; get processid</span><br><span class="line">ProcessId</span><br><span class="line">6016</span><br><span class="line">&gt; taskkill /pid 6016 /f</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kafka-topics.bat --describe --zookeeper localhost:2181 --topic my-replicated-topic</span><br><span class="line">Topic:my-replicated-topic       PartitionCount:1        ReplicationFactor:3 Configs:</span><br><span class="line">        Topic: my-replicated-topic      Partition: 0    Leader: 0       Replicas: 2,0,1 Isr: 0,1</span><br></pre></td></tr></table></figure>
<p>now only 0,1 broker ‘in-sync’, the leader is ‘0’ broker<br>send message still available.</p>
<h2 id="import-export-data"><a href="#import-export-data" class="headerlink" title="import / export data"></a>import / export data</h2><p>make a test file<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; echo foo&gt; test.txt</span><br><span class="line">&gt; echo bar&gt;&gt; test.txt</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">connect-standalone.bat config/connect-standalone.properties config/connect-file-source.properties config/connect-file-sink.properties</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; type test.sink.txt</span><br><span class="line">foo</span><br><span class="line">bar</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kafka-console-consumer.bat --bootstrap-server localhost:9092 --topic connect-test --from-beginning</span><br><span class="line">&#123;&quot;schema&quot;:&#123;&quot;type&quot;:&quot;string&quot;,&quot;optional&quot;:false&#125;,&quot;payload&quot;:&quot;foo&quot;&#125;</span><br><span class="line">&#123;&quot;schema&quot;:&#123;&quot;type&quot;:&quot;string&quot;,&quot;optional&quot;:false&#125;,&quot;payload&quot;:&quot;bar&quot;&#125;</span><br></pre></td></tr></table></figure>
<p>If add more string append to <code>test.txt</code>, topic will load more data, and <code>test.sink.txt</code> will in-sync too.</p>
<p><a href="http://kafka.apache.org/quickstart" target="_blank" rel="noopener">http://kafka.apache.org/quickstart</a><br><a href="https://blog.csdn.net/cx2932350/article/details/78870135" target="_blank" rel="noopener">https://blog.csdn.net/cx2932350/article/details/78870135</a></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>first</tag>
        <tag>kafka</tag>
      </tags>
  </entry>
  <entry>
    <title>Springboot Schedule</title>
    <url>/2018/07/25/Springboot-Schedule/</url>
    <content><![CDATA[<h2 id="Maven-config"><a href="#Maven-config" class="headerlink" title="Maven config"></a>Maven config</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure>
<p>Add <code>@EnableScheduling</code> annotation in application main or configuration class</p>
<h2 id="Thread-pool"><a href="#Thread-pool" class="headerlink" title="Thread pool"></a>Thread pool</h2><p>In <code>org.springframework.scheduling.config.ScheduledTaskRegistrar</code><br>after the after properties set, spring set a default single thread excutor.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">scheduleTasks</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> now = System.currentTimeMillis();</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.taskScheduler == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.localExecutor = Executors.newSingleThreadScheduledExecutor();</span><br><span class="line">        <span class="keyword">this</span>.taskScheduler = <span class="keyword">new</span> ConcurrentTaskScheduler(<span class="keyword">this</span>.localExecutor);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>When the program’s schedules need time to deal with the job.<br>Single Thread excutor may cause job be blocked, then the job’s excuted time might be wrong.</p>
<p>So when the single node have hard works need be done precisely, we need a selfdefine threadpool.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScheduleConfig</span> <span class="keyword">implements</span> <span class="title">SchedulingConfigurer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configureTasks</span><span class="params">(ScheduledTaskRegistrar taskRegistrar)</span> </span>&#123;</span><br><span class="line">        taskRegistrar.setScheduler(taskExecutor());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(destroyMethod=<span class="string">"shutdown"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Executor <span class="title">taskExecutor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Executors.newScheduledThreadPool(<span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Close"><a href="#Close" class="headerlink" title="Close"></a>Close</h2><p>When the web application closed, the threadpool is still alive, we need actively close it.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Component</span><br><span class="line">public class MyTask implements DisposableBean&#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void destroy() throws Exception &#123;</span><br><span class="line">        ThreadPoolTaskScheduler scheduler =</span><br><span class="line">            (ThreadPoolTaskScheduler)applicationContext.getBean(&quot;scheduler&quot;);</span><br><span class="line">        scheduler.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Cluster"><a href="#Cluster" class="headerlink" title="Cluster"></a>Cluster</h2><p>If the schedule needs enterprise level structure, a schedule cluster is needed.<br>Use consistency middle ware/[DB]/[Cache] control the schedule node’s behaviour.<br>Use Message queue control the job’s status/ corn, even add/ remove jobs.<br>Spring schedule not support the persistency feature, but through mechanism it still can be resolved.<br>If the requirement is that level, use spring schedule may not be a good choice.</p>
<p><a href="https://www.cnblogs.com/skychenjiajun/p/9057379.html" target="_blank" rel="noopener">https://www.cnblogs.com/skychenjiajun/p/9057379.html</a><br><a href="https://blog.csdn.net/qq_34125349/article/details/77430956" target="_blank" rel="noopener">https://blog.csdn.net/qq_34125349/article/details/77430956</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title>Hide cmd windows in MFC console program</title>
    <url>/2018/08/03/Hide-cmd-windows-in-MFC-console-program/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> UNICODE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment( linker, <span class="meta-string">"/subsystem:\"windows\" /entry:\"wmainCRTStartup\""</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment( linker, <span class="meta-string">"/subsystem:\"windows\" /entry:\"mainCRTStartup\""</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p>In unicode environment the entry point is <code>wmainCRTStartup</code>.<br>MFC use <code>wmainCRTStartup</code> to start program’s <code>main</code>, the linker subsystem<br>can choose <code>CONSOLE|WINDOWS|NATIVE|POSIX</code>, if settle <code>WINDOWS</code> mean no console.</p>
<p><img src="/2018/08/03/Hide-cmd-windows-in-MFC-console-program/TIM20180803095930.jpg" alt="TIM20180803095930.jpg"><br><img src="/2018/08/03/Hide-cmd-windows-in-MFC-console-program/TIM20180803095930.jpg" alt="TIM20180803095930.jpg"></p>
<p><a href="https://blog.csdn.net/mdcire/article/details/53456673" target="_blank" rel="noopener">https://blog.csdn.net/mdcire/article/details/53456673</a><br><a href="https://blog.csdn.net/wenhao_ir/article/details/50897312" target="_blank" rel="noopener">https://blog.csdn.net/wenhao_ir/article/details/50897312</a></p>
]]></content>
      <categories>
        <category>c++</category>
      </categories>
  </entry>
  <entry>
    <title>regex modify in vim</title>
    <url>/2018/08/03/regex-modify-in-vim/</url>
    <content><![CDATA[<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="built_in">print</span> <span class="string">'hello'</span> &gt; <span class="built_in">test</span></span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">print</span> <span class="string">'hello'</span> &gt;&gt; <span class="built_in">test</span></span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">print</span> <span class="string">'hello'</span> &gt;&gt; <span class="built_in">test</span></span><br></pre></td></tr></table></figure>
<p>use vim edit file <code>vim test</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">shift</span> + :</span><br><span class="line"><span class="built_in">set</span> number</span><br><span class="line"></span><br><span class="line"><span class="built_in">shift</span> + :</span><br><span class="line">s/\vh(.*)o/y\1ow/g</span><br><span class="line"></span><br><span class="line"><span class="built_in">shift</span> + :</span><br><span class="line">2,3s/\vh(.*)o/y\1ow/gc</span><br><span class="line"></span><br><span class="line"><span class="built_in">shift</span> + :</span><br><span class="line">wq</span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">more <span class="built_in">test</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">'yellow'</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">'yellow'</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">'yellow'</span></span><br></pre></td></tr></table></figure>
<p><code>2,3</code> mean match scale in row 2 to 3.</p>
<p>in <code>gc</code> mode, <code>y</code> confirm one match, <code>a</code> confirm all match.</p>
<p><a href="https://blog.csdn.net/hongchangfirst/article/details/10400915" target="_blank" rel="noopener">https://blog.csdn.net/hongchangfirst/article/details/10400915</a></p>
]]></content>
      <categories>
        <category>regex</category>
      </categories>
      <tags>
        <tag>regex</tag>
      </tags>
  </entry>
  <entry>
    <title>springboot multi mybatis datasource</title>
    <url>/2018/09/05/springboot-multi-mybatis-datasource/</url>
    <content><![CDATA[<h2 id="Add-configuration"><a href="#Add-configuration" class="headerlink" title="Add configuration"></a>Add configuration</h2><p>In <code>application.properties</code> file add data source configuration<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spring.datasource.test1.driverClassName=com.mysql.jdbc.Driver</span><br><span class="line">spring.datasource.test1.url=jdbc:mysql://localhost:3306/test1</span><br><span class="line">spring.datasource.test1.username=root</span><br><span class="line">spring.datasource.test1.password=root</span><br><span class="line"></span><br><span class="line">spring.datasource.test2.driverClassName=com.mysql.jdbc.Driver</span><br><span class="line">spring.datasource.test2.url=jdbc:mysql://localhost:3306/test2</span><br><span class="line">spring.datasource.test2.username=root</span><br><span class="line">spring.datasource.test2.password=root</span><br><span class="line"></span><br><span class="line">mybatis.mapperLocations=classpath:sql-mappers/**/*.xml</span><br></pre></td></tr></table></figure></p>
<h2 id="Self-define-data-source"><a href="#Self-define-data-source" class="headerlink" title="Self define data source"></a>Self define data source</h2><h3 id="New-configuration"><a href="#New-configuration" class="headerlink" title="New configuration"></a>New configuration</h3><p>Point out base package path, sql session reference.<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan</span>(basePackages=<span class="string">"com.burningbright.test1"</span>,</span><br><span class="line">              sqlSessionFactoryRef=<span class="string">"test1SqlSessionFactory"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Datasource1</span> </span>&#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="Inject-xml-path-properties"><a href="#Inject-xml-path-properties" class="headerlink" title="Inject xml path properties"></a>Inject xml path properties</h3><p>Put mapper xml location into configuration class<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;mybatis.mapperLocations&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String mapperLocation;</span><br></pre></td></tr></table></figure></p>
<h3 id="Add-properties-holder"><a href="#Add-properties-holder" class="headerlink" title="Add properties holder"></a>Add properties holder</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> PropertySourcesPlaceholderConfigurer</span><br><span class="line">                  propertySourcesPlaceholderConfigurer() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> PropertySourcesPlaceholderConfigurer();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Create-datasource"><a href="#Create-datasource" class="headerlink" title="Create datasource"></a>Create datasource</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span>(name=<span class="string">"test1Datasource"</span>)</span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix=<span class="string">"spring.datasource.test1"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> DataSource <span class="title">testDatasource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> DataSourceBuilder.create().build();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Create-session-factory"><a href="#Create-session-factory" class="headerlink" title="Create session factory"></a>Create session factory</h3><p>Make sure bean name is same as the class reference annotation<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span>(name=<span class="string">"test1SqlSessionFactory"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">testSqlSessionFactory</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    @Qualifier(<span class="string">"test1Datasource"</span>)</span>DataSource dataSource)</span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    SqlSessionFactoryBean bean=<span class="keyword">new</span> SqlSessionFactoryBean();</span><br><span class="line">    bean.setDataSource(dataSource);</span><br><span class="line">    bean.setMapperLocations(</span><br><span class="line">      <span class="keyword">new</span> PathMatchingResourcePatternResolver().</span><br><span class="line">        getResources(mapperLocation));</span><br><span class="line">    <span class="keyword">return</span> bean.getObject();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="Create-transaction-manager-bean"><a href="#Create-transaction-manager-bean" class="headerlink" title="Create transaction manager bean"></a>Create transaction manager bean</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span>(name=<span class="string">"test1TransactionManager"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> DataSourceTransactionManager <span class="title">testTransactionManager</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        @Qualifier(<span class="string">"test1Datasource"</span>)</span>DataSource dataSource) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> DataSourceTransactionManager(dataSource);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Create-session-template"><a href="#Create-session-template" class="headerlink" title="Create session template"></a>Create session template</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span>(name=<span class="string">"test1SqlSessionTemplate"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> SqlSessionTemplate <span class="title">testSqlSessionTemplate</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  @Qualifier(<span class="string">"test1SqlSessionFactory"</span>)</span>SqlSessionFactory sqlSessionFactory) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> SqlSessionTemplate(sqlSessionFactory);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Use-data-source"><a href="#Use-data-source" class="headerlink" title="Use data source"></a>Use data source</h2><p>Add test data source test2 the same as above<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(basePackages=&#123;<span class="string">"com.burningbright.test1"</span>,<span class="string">"com.burningbright.test2"</span>&#125;)</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserMapper userMapper;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<ol>
<li>Prefix must the same as properties keys’ prefix in application.properties</li>
<li>If <code>@Primary</code> not be annotated, application will throw exception.<br> Unless the reseal framework level has a default primary datasource.</li>
<li><code>@Qualifier</code> inject object by bean’s name.</li>
<li><code>basePackages</code> is mapper file’s package path.</li>
<li><code>sqlSessionTemplateRef</code> is the instance’s reference</li>
</ol>
<p><a href="https://blog.csdn.net/qq_37142346/article/details/78488452" target="_blank" rel="noopener">https://blog.csdn.net/qq_37142346/article/details/78488452</a><br><a href="https://blog.csdn.net/a123demi/article/details/74004499" target="_blank" rel="noopener">https://blog.csdn.net/a123demi/article/details/74004499</a><br><a href="https://blog.csdn.net/hongweigg/article/details/79104321" target="_blank" rel="noopener">https://blog.csdn.net/hongweigg/article/details/79104321</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title>shadowsocks in aws linux</title>
    <url>/2018/09/09/shadowsocks-in-aws-linux/</url>
    <content><![CDATA[<h2 id="In-ubuntu-version-linux"><a href="#In-ubuntu-version-linux" class="headerlink" title="In ubuntu version linux"></a>In ubuntu version linux</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install python-pip</span><br><span class="line">sudo pip install shadowsocks</span><br></pre></td></tr></table></figure>
<p>then add config file</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xxx.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;server&quot;:&quot;0.0.0.0&quot;,</span><br><span class="line">    &quot;server_port&quot;:8388,</span><br><span class="line">    &quot;password&quot;: &quot;123456&quot;,</span><br><span class="line">    &quot;local_port&quot;:1080,</span><br><span class="line">    &quot;timeout&quot;:300,</span><br><span class="line">    &quot;method&quot;:&quot;aes-256-cfb&quot;,</span><br><span class="line">    &quot;fast_open&quot;: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>start service<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo ssserver -c shadowsocks.json -d start</span><br></pre></td></tr></table></figure></p>
<h2 id="In-aws-version-linux"><a href="#In-aws-version-linux" class="headerlink" title="In aws version linux"></a>In aws version linux</h2><p>Install pip first<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum install python-pip</span><br></pre></td></tr></table></figure></p>
<p>If the pip insatll command failed like this<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pkg_resources.DistributionNotFound: pip==9.0.1</span><br></pre></td></tr></table></figure></p>
<p>Then install customized pip<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo easy_install pip</span><br></pre></td></tr></table></figure></p>
<p>Same as above start server<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo pip install shadowsocks</span><br></pre></td></tr></table></figure></p>
<p><a href="https://github.com/shadowsocks" target="_blank" rel="noopener">https://github.com/shadowsocks</a><br><a href="https://blog.csdn.net/u011054333/article/details/52496303" target="_blank" rel="noopener">https://blog.csdn.net/u011054333/article/details/52496303</a><br><a href="https://blog.csdn.net/xlx921027/article/details/55102248" target="_blank" rel="noopener">https://blog.csdn.net/xlx921027/article/details/55102248</a><br><a href="https://blog.csdn.net/dlmmu/article/details/78397284" target="_blank" rel="noopener">https://blog.csdn.net/dlmmu/article/details/78397284</a><br><a href="https://blog.csdn.net/daiyutage/article/details/69945850" target="_blank" rel="noopener">https://blog.csdn.net/daiyutage/article/details/69945850</a></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>install</tag>
      </tags>
  </entry>
  <entry>
    <title>synchronize fork project in github</title>
    <url>/2018/09/22/synchronize-fork-project-in-github/</url>
    <content><![CDATA[<p><img src="/2017/02/03/github-style/095329_upMF_12.png" alt></p>
<p><a href="2017/02/03/github-style/">2017/02/03/github-style/</a></p>
<p>When fork a project then want to follow project owner’s commit,<br>We need add another local repository.</p>
<h3 id="Add-remote-repository-center"><a href="#Add-remote-repository-center" class="headerlink" title="Add remote repository center"></a>Add remote repository center</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote add liu https://github.com/liuweijw/fw-cloud-framework.git</span><br><span class="line">git remote -v</span><br></pre></td></tr></table></figure>
<p>the name <code>liu</code> is just a alias, separate with you project remote <code>origin</code></p>
<h3 id="Fetch-the-owner’s-project-update"><a href="#Fetch-the-owner’s-project-update" class="headerlink" title="Fetch the owner’s project update"></a>Fetch the owner’s project update</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git fetch liu</span><br><span class="line">git branch -av</span><br></pre></td></tr></table></figure>
<h3 id="Merge-branchs"><a href="#Merge-branchs" class="headerlink" title="Merge branchs"></a>Merge branchs</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout master</span><br><span class="line">git merge liu/master</span><br></pre></td></tr></table></figure>
<p>if the merge process have conflict or failed, you may need to solve merging status<br>or just follow owner’s line <code>reset -hard</code> restore the branch and make the merge fast-forward.</p>
<h3 id="Push"><a href="#Push" class="headerlink" title="Push"></a>Push</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push origin</span><br><span class="line">#git push -u origin master -f</span><br></pre></td></tr></table></figure>
<p>last push local synchronized project to you remote repository.<br>if you are an contributor <code>new pull request</code> may need to notify project owner.</p>
<p><a href="https://www.jianshu.com/p/633ae5c491f5" target="_blank" rel="noopener">https://www.jianshu.com/p/633ae5c491f5</a></p>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>version</tag>
      </tags>
  </entry>
  <entry>
    <title>Install mysql windows 5.7.23</title>
    <url>/2018/09/24/Install-mysql-windows-5-7-23/</url>
    <content><![CDATA[<p>Install mysql windows in archive version</p>
<p><a href="https://www.mysql.com" target="_blank" rel="noopener">https://www.mysql.com</a> download package first.</p>
<p>unpackage archive first, add <code>ini file</code> to the dirctory root.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysqld –initialize-insecure –user=mysql</span><br><span class="line">mysqld install</span><br><span class="line">net start mysql</span><br></pre></td></tr></table></figure>
<p>If success then use <code>mysql -u root -p</code> no password login.<br>If failed then delete data file , <code>mysqld --initialize</code> reinit mysql.</p>
<p>If login still failed like this:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ERROR 1045 (28000): Access denied for user &apos;root&apos;@&apos;localhost&apos; (using password: YES)</span><br></pre></td></tr></table></figure></p>
<p>stop mysql <code>net stop mysql</code><br>use <code>mysqld --skip-grant-tables</code> or<br>add <code>skip-grant-tables</code> to my.ini and start to skip mysql privilege check<br>then :<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">update user set authentication_string=password(&quot;root&quot;) where user=&quot;root&quot;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure></p>
<p>delete skip configuration, and restart mysql</p>
<p><a href="https://blog.csdn.net/wokaowokaowokao12345/article/details/76736152" target="_blank" rel="noopener">https://blog.csdn.net/wokaowokaowokao12345/article/details/76736152</a><br><a href="https://blog.csdn.net/u012730299/article/details/51840416" target="_blank" rel="noopener">https://blog.csdn.net/u012730299/article/details/51840416</a><br><a href="https://www.jb51.net/article/100718.htm" target="_blank" rel="noopener">https://www.jb51.net/article/100718.htm</a></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>RedisTemplate pipline</title>
    <url>/2018/10/05/RedisTemplate-pipline/</url>
    <content><![CDATA[<blockquote>
<p>when a job need to update alot redis k/v<br>use normal command loop is low efficiency plan<br>that cause tcp connection time-wait exceed several ten thousand.<br>so we use redis pipline operation merge command connection.</p>
</blockquote>
<h2 id="Use-RedisTemplate-read-obj"><a href="#Use-RedisTemplate-read-obj" class="headerlink" title="Use RedisTemplate read obj"></a>Use <code>RedisTemplate</code> read obj</h2><p>Set <code>User</code> class deserializer first<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Jackson2JsonRedisSerializer userSerializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer(User<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">redisTemplate.setValueSerializer(userSerializer);</span><br></pre></td></tr></table></figure></p>
<p>pip execute multi get command<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;User&gt; result = redisTemplate.executePipelined(<span class="keyword">new</span> RedisCallback&lt;List&lt;User&gt;&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">doInRedis</span><span class="params">(RedisConnection connection)</span> <span class="keyword">throws</span> DataAccessException </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Object obj: keys)</span><br><span class="line">            connection.get((RedisConstant.USER + obj).getBytes());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, redisTemplate.getValueSerializer());</span><br></pre></td></tr></table></figure></p>
<h2 id="Use-RedisTemplate-write-obj"><a href="#Use-RedisTemplate-write-obj" class="headerlink" title="Use RedisTemplate write obj"></a>Use <code>RedisTemplate</code> write obj</h2><p>Same as above use <code>User</code> class serializer first<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Jackson2JsonRedisSerializer userSerializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer(User<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">userSerializer.serialize(user);</span><br></pre></td></tr></table></figure></p>
<p>pip execute multi set command<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">redisTemplate.executePipelined(<span class="keyword">new</span> RedisCallback&lt;List&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List <span class="title">doInRedis</span><span class="params">(RedisConnection connection)</span> <span class="keyword">throws</span> DataAccessException </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;<span class="keyword">byte</span>[], <span class="keyword">byte</span>[]&gt; entry : map.entrySet())</span><br><span class="line">            connection.set(entry.getKey(), entry.getValue());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h2 id="Caution"><a href="#Caution" class="headerlink" title="Caution"></a>Caution</h2><ol>
<li><code>connection</code> return is byte array, it need deserializer method.</li>
<li><p><code>doInRedis</code> return must be null, the return value has been take over by <code>executePipelined</code>.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (result != <span class="keyword">null</span>)</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> InvalidDataAccessApiUsageException(</span><br><span class="line">    <span class="string">"Callback cannot return a non-null value as it gets overwritten by the pipeline"</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>don’t call <code>connection.closePipeline()</code>, it will return result and no deserialize.</p>
</li>
<li>Deserialize need deserializer object. like these<br><img src="/2018/10/05/RedisTemplate-pipline/QQ20181006095747.png" alt="QQ20181006095747.png"></li>
</ol>
<p><a href="https://blog.csdn.net/xiaoliu598906167/article/details/82218525" target="_blank" rel="noopener">https://blog.csdn.net/xiaoliu598906167/article/details/82218525</a><br><a href="https://blog.csdn.net/huilixiang/article/details/19484921" target="_blank" rel="noopener">https://blog.csdn.net/huilixiang/article/details/19484921</a><br><a href="https://blog.csdn.net/xiaolyuh123/article/details/78682200" target="_blank" rel="noopener">https://blog.csdn.net/xiaolyuh123/article/details/78682200</a><br><a href="https://my.oschina.net/yuyidi/blog/499951" target="_blank" rel="noopener">https://my.oschina.net/yuyidi/blog/499951</a><br><a href="https://www.cnblogs.com/EasonJim/p/7803067.html#autoid-2-6-0" target="_blank" rel="noopener">https://www.cnblogs.com/EasonJim/p/7803067.html#autoid-2-6-0</a></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>kafka consumer group</title>
    <url>/2018/11/06/kafka-consumer-group/</url>
    <content><![CDATA[<h2 id="Consumer-group"><a href="#Consumer-group" class="headerlink" title="Consumer group"></a>Consumer group</h2><p>How to make multi-worker in same consumer-group all recieve same topic’s message?</p>
<p><img src="/2018/11/06/kafka-consumer-group/20181106190805256.png" alt="20181106190805256.png"><br>In kafka the topic <strong>only send one</strong> worker in consumer-group per partition(randomly?).</p>
<p>It’s better set the partition number multiple of consumer group’s number</p>
<p>So if you need pulish/subscribe mode, make sure consumer in different group id.</p>
<h2 id="How-do-I-choose-the-number-of-partitions-for-a-topic"><a href="#How-do-I-choose-the-number-of-partitions-for-a-topic" class="headerlink" title="How do I choose the number of partitions for a topic?"></a>How do I choose the number of partitions for a topic?</h2><p>The partition count determines the <strong>maximum consumer parallelism</strong> and so<br>you should set a partition count based on the maximum consumer parallelism you would expect to need</p>
<h2 id="Partition"><a href="#Partition" class="headerlink" title="Partition"></a>Partition</h2><ul>
<li>A partition is basically a directory of log files.</li>
<li>Each partition must fit entirely on one machine.</li>
<li>Each partition is totally ordered.</li>
<li>Each partition is <strong>not consumed by more than one</strong> consumer thread/process in each consumer group.</li>
<li>Many partitions can be consumed by a single process(randomly?)</li>
<li>Another way to say the above is that the partition count is a bound on the maximum consumer parallelism.<br>parallelism mean different group can consume different partitions</li>
<li>More partitions will mean more files and more machine restrict.</li>
<li>Each partition corresponds to several znodes in zookeeper.</li>
<li>More partitions means longer leader fail-over time.Synchronize <strong>thousands of znodes</strong> is not a easy job.</li>
<li>More partitions the more expensive the position checkpoint is.</li>
<li>Expand more partitions need manually synchronize data from old partitions</li>
</ul>
<p><a href="https://www.oschina.net/question/2558468_2145935" target="_blank" rel="noopener">https://www.oschina.net/question/2558468_2145935</a><br><a href="https://blog.csdn.net/gezilan/article/details/80412490" target="_blank" rel="noopener">https://blog.csdn.net/gezilan/article/details/80412490</a><br><a href="https://cwiki.apache.org/confluence/display/KAFKA/FAQ#FAQ-HowmanytopicscanIhave?" target="_blank" rel="noopener">https://cwiki.apache.org/confluence/display/KAFKA/FAQ#FAQ-HowmanytopicscanIhave?</a></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>kafka</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello solr</title>
    <url>/2018/10/14/Hello-solr/</url>
    <content><![CDATA[<p><img src="/2018/10/14/Hello-solr/20180410191304255.png" alt="20180410191304255.png"></p>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><ol>
<li>install jdk1.8, source profile</li>
<li>install solr7.5, tar -zxvf package</li>
<li>try to start solr <code>./bin/solr start</code><br> if using root user try <code>./bin/solr start -force</code></li>
</ol>
<p>then ip + port can used to visit solr’s administration user interface.</p>
<h2 id="Add-core"><a href="#Add-core" class="headerlink" title="Add core"></a>Add core</h2><p>in administration user interface create a core will warning create error.</p>
<p>copy official config file into new core, create core in interface again.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd /usr/solr-7.5.0/server/solr</span><br><span class="line">mkdir demo</span><br><span class="line">cp -r configsets/_default/conf/ demo</span><br></pre></td></tr></table></figure></p>
<p>or use command create:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./bin/solr create -c demo</span><br></pre></td></tr></table></figure></p>
<h2 id="Data-import"><a href="#Data-import" class="headerlink" title="Data import"></a>Data import</h2><h3 id="db-configuration"><a href="#db-configuration" class="headerlink" title="db configuration"></a>db configuration</h3><p>Create file <code>data.xml</code> in <code>solr-7.5.0/server/solr/demo/conf</code><br><code>column</code> in field represent filed in DB<br><code>name</code> in field represent unique filed in solr<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dataConfig</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"JdbcDataSource"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">driver</span>=<span class="string">"com.mysql.jdbc.Driver"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">url</span>=<span class="string">"jdbc:mysql://127.0.0.1:3306/demo"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">user</span>=<span class="string">"demo"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">password</span>=<span class="string">"demo"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">document</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">entity</span> <span class="attr">name</span>=<span class="string">"demo"</span> <span class="attr">query</span>=<span class="string">"select * from demo"</span> &gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">field</span> <span class="attr">column</span>=<span class="string">"Name"</span> <span class="attr">name</span>=<span class="string">"Name"</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">field</span> <span class="attr">column</span>=<span class="string">"Age"</span> <span class="attr">name</span>=<span class="string">"Age"</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">field</span> <span class="attr">column</span>=<span class="string">"Price"</span> <span class="attr">name</span>=<span class="string">"Price"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">entity</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">document</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataConfig</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="modfiy-solrconfig"><a href="#modfiy-solrconfig" class="headerlink" title="modfiy solrconfig"></a>modfiy solrconfig</h3><p>modify <code>solrconfig.xml</code> add datasource option<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">requestHandler</span> <span class="attr">name</span>=<span class="string">"/dataimport"</span> <span class="attr">class</span>=<span class="string">"solr.DataImportHandler"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">lst</span> <span class="attr">name</span>=<span class="string">"defaults"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">str</span> <span class="attr">name</span>=<span class="string">"config"</span>&gt;</span>data.xml<span class="tag">&lt;/<span class="name">str</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">lst</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">requestHandler</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="modify-managed-schema"><a href="#modify-managed-schema" class="headerlink" title="modify managed-schema"></a>modify managed-schema</h3><p>modify <code>managed-schema</code> add data field in searching<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"Name"</span> <span class="attr">type</span>=<span class="string">"string"</span> <span class="attr">indexed</span>=<span class="string">"true"</span> <span class="attr">stored</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"Age"</span> <span class="attr">type</span>=<span class="string">"pint"</span> <span class="attr">indexed</span>=<span class="string">"false"</span> <span class="attr">stored</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"Price"</span> <span class="attr">type</span>=<span class="string">"pdouble"</span> <span class="attr">indexed</span>=<span class="string">"false"</span> <span class="attr">stored</span>=<span class="string">"true"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="add-jar"><a href="#add-jar" class="headerlink" title="add jar"></a>add jar</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd /usr/solr-7.5.0</span><br><span class="line">cp -r dist/solr-dataimporthandler-* server/solr-webapp/webapp/WEB-INF/lib/</span><br><span class="line">cd server/solr-webapp/webapp/WEB-INF/lib/</span><br><span class="line">curl -O http://central.maven.org/maven2/mysql/mysql-connector-java/8.0.11/mysql-connector-java-8.0.11.jar</span><br></pre></td></tr></table></figure>
<p>restart solr <code>./bin/solr restart -force</code><br>in admin interface import data</p>
<h2 id="chinese-word-segmentation"><a href="#chinese-word-segmentation" class="headerlink" title="chinese word segmentation"></a>chinese word segmentation</h2><p><a href="https://search.maven.org/search?q=g:com.github.magese" target="_blank" rel="noopener">https://search.maven.org/search?q=g:com.github.magese</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -O https://search.maven.org/remotecontent?filepath=com/github/magese/ik-analyzer/7.5.0/ik-analyzer-7.5.0.jar</span><br><span class="line">cd /usr/solr-7.5.0/server/solr/demo/conf</span><br></pre></td></tr></table></figure></p>
<p>modify <code>managed-schema</code> again<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">+++++++++++++</span><br><span class="line"><span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">"text_ik"</span> <span class="attr">class</span>=<span class="string">"solr.TextField"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">analyzer</span> <span class="attr">type</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">"org.wltea.analyzer.lucene.IKTokenizerFactory"</span> <span class="attr">useSmart</span>=<span class="string">"false"</span> <span class="attr">conf</span>=<span class="string">"ik.conf"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"solr.LowerCaseFilterFactory"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">analyzer</span> <span class="attr">type</span>=<span class="string">"query"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">"org.wltea.analyzer.lucene.IKTokenizerFactory"</span> <span class="attr">useSmart</span>=<span class="string">"true"</span> <span class="attr">conf</span>=<span class="string">"ik.conf"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"solr.LowerCaseFilterFactory"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"Name"</span> <span class="attr">type</span>=<span class="string">"text_ik"</span> <span class="attr">indexed</span>=<span class="string">"true"</span> <span class="attr">stored</span>=<span class="string">"true"</span> <span class="attr">multiValued</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">+++++++++++++</span><br><span class="line"></span><br><span class="line">-------------</span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"Name"</span> <span class="attr">type</span>=<span class="string">"string"</span> <span class="attr">indexed</span>=<span class="string">"true"</span> <span class="attr">stored</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">-------------</span><br></pre></td></tr></table></figure></p>
<p>restart solr , then name field can be splited.</p>
<h2 id="Delete-data"><a href="#Delete-data" class="headerlink" title="Delete data"></a>Delete data</h2><h3 id="delete-in-interface"><a href="#delete-in-interface" class="headerlink" title="delete in interface"></a>delete in interface</h3><p>In admin interface core’s document, use xml document type<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span>&gt;</span><span class="tag">&lt;<span class="name">query</span>&gt;</span>id:1<span class="tag">&lt;/<span class="name">query</span>&gt;</span><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span>&gt;</span><span class="tag">&lt;<span class="name">query</span>&gt;</span>*:*<span class="tag">&lt;/<span class="name">query</span>&gt;</span><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">commit</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="delete-in-get"><a href="#delete-in-get" class="headerlink" title="delete in get"></a>delete in get</h3><p><a href="http://localhost:8080/solr/update/?stream.body=" target="_blank" rel="noopener">http://localhost:8080/solr/update/?stream.body=</a><delete><id>1</id></delete>&amp;stream.contentType=text/xml;charset=utf-8&amp;commit=true<br><a href="http://localhost:8080/solr/update/?stream.body=" target="_blank" rel="noopener">http://localhost:8080/solr/update/?stream.body=</a><delete><query>Name:Turbo</query></delete>&amp;stream.contentType=text/xml;charset=utf-8&amp;commit=true</p>
<h3 id="delete-in-post"><a href="#delete-in-post" class="headerlink" title="delete in post"></a>delete in post</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl  http://localhost:8080/update --data-binary  &quot;&lt;delete&gt;&lt;query&gt;title:abc&lt;/query&gt;&lt;/delete&gt;&quot;  -H &apos;Content- type :text/xml; charset=utf-8&apos;</span><br><span class="line">curl  http://localhost:8080/update --data-binary  &quot;&lt;commit/&gt;&quot;  -H &apos;Content- type:text/xml; charset=utf-8&apos;</span><br></pre></td></tr></table></figure>
<h2 id="Operation-in-java"><a href="#Operation-in-java" class="headerlink" title="Operation in java"></a>Operation in java</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SolrUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String serverUrl = <span class="string">"http://localhost:8983/solr/articles"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Add</span><span class="params">(DemoDTO dto)</span> <span class="keyword">throws</span> IOException, SolrServerException </span>&#123;</span><br><span class="line">        HttpSolrClient client = <span class="keyword">new</span> HttpSolrClient(serverUrl);</span><br><span class="line">        SolrInputDocument document = <span class="keyword">new</span> SolrInputDocument();</span><br><span class="line">        client.addBean(dto);</span><br><span class="line">        client.commit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;DemoDTO&gt; <span class="title">search</span><span class="params">(String keywords, Integer page, Integer rows)</span> <span class="keyword">throws</span> SolrServerException, IOException </span>&#123;</span><br><span class="line">        HttpSolrClient client = <span class="keyword">new</span> HttpSolrClient(serverUrl);</span><br><span class="line">        SolrQuery solrQuery = <span class="keyword">new</span> SolrQuery();</span><br><span class="line">        <span class="comment">// key words</span></span><br><span class="line">        solrQuery.set(<span class="string">"q"</span>, <span class="string">"title:"</span> + keywords);</span><br><span class="line">        <span class="comment">// setting page start from 0, rows is page's size</span></span><br><span class="line">        solrQuery.setStart((Math.max(page, <span class="number">1</span>) - <span class="number">1</span>) * rows);</span><br><span class="line">        solrQuery.setRows(rows);</span><br><span class="line"></span><br><span class="line">        QueryResponse queryResponse = client.query(solrQuery);</span><br><span class="line">        SolrDocumentList results = queryResponse.getResults();</span><br><span class="line">        <span class="keyword">long</span> numFound = results.getNumFound();</span><br><span class="line"></span><br><span class="line">        List&lt;DemoDTO&gt; dataDTOs = <span class="keyword">new</span> ArrayList&lt;DemoDTO&gt;();</span><br><span class="line">        <span class="keyword">for</span> (SolrDocument solrDocument : results) &#123;</span><br><span class="line">            DemoDTO dto = <span class="keyword">new</span> DemoDTO();</span><br><span class="line">            dto.setName(solrDocument.get(<span class="string">"Name"</span>).toString());</span><br><span class="line">            dto.setPrice(Double.valueOf(solrDocument.get(<span class="string">"Price"</span>).toString()));</span><br><span class="line">            dto.setAge(Integer.valueOf(solrDocument.get(<span class="string">"Age"</span>).toString()));</span><br><span class="line">            dataDTOs.add(dto);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// List&lt;DemoDTO&gt; dataDTOs=queryResponse.getBeans(DemoDTO.class);</span></span><br><span class="line">        <span class="comment">// System.out.println("sum:" + numFound);</span></span><br><span class="line">        <span class="keyword">return</span> dataDTOs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">()</span> <span class="keyword">throws</span> SolrServerException, IOException </span>&#123;</span><br><span class="line">        HttpSolrClient client = <span class="keyword">new</span> HttpSolrClient(serverUrl);</span><br><span class="line">        List&lt;String&gt; names = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        ids.add(<span class="string">"david"</span>);</span><br><span class="line">        ids.add(<span class="string">"pam"</span>);</span><br><span class="line">        ids.add(<span class="string">"margot"</span>);</span><br><span class="line">        client.deleteById(ids);</span><br><span class="line">        client.commit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a href="https://blog.csdn.net/bljbljbljbljblj/article/details/83023125" target="_blank" rel="noopener">https://blog.csdn.net/bljbljbljbljblj/article/details/83023125</a><br><a href="https://blog.csdn.net/yuanlaijike/article/details/79886025" target="_blank" rel="noopener">https://blog.csdn.net/yuanlaijike/article/details/79886025</a><br><a href="https://blog.csdn.net/m0_37595732/article/details/72830122" target="_blank" rel="noopener">https://blog.csdn.net/m0_37595732/article/details/72830122</a><br><a href="https://blog.csdn.net/long530439142/article/details/79353845" target="_blank" rel="noopener">https://blog.csdn.net/long530439142/article/details/79353845</a><br><a href="http://lucene.apache.org/solr/guide/7_5/query-screen.html" target="_blank" rel="noopener">http://lucene.apache.org/solr/guide/7_5/query-screen.html</a><br><a href="http://lucene.apache.org/solr/guide/7_5/the-standard-query-parser.html#the-standard-query-parser" target="_blank" rel="noopener">http://lucene.apache.org/solr/guide/7_5/the-standard-query-parser.html#the-standard-query-parser</a></p>
]]></content>
      <categories>
        <category>search</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>first</tag>
        <tag>solr</tag>
      </tags>
  </entry>
  <entry>
    <title>How to choose the number of topics/partitions in a Kafka cluster?</title>
    <url>/2018/11/12/How-to-choose-the-number-of-topics-partitions-in-a-Kafka-cluster/</url>
    <content><![CDATA[<p>This is a common question asked by many Kafka users.<br>The goal of this post is to explain a few important determining factors and provide a few simple formulas.</p>
<h2 id="More-Partitions-Lead-to-Higher-Throughput"><a href="#More-Partitions-Lead-to-Higher-Throughput" class="headerlink" title="More Partitions Lead to Higher Throughput"></a>More Partitions Lead to Higher Throughput</h2><p>The first thing to understand is that <strong>a topic partition is the unit of parallelism in Kafka</strong>.<br>On both the producer and the broker side, writes to different partitions can be done fully in parallel.<br>So expensive operations such as compression can utilize more hardware resources.<br>On the consumer side, Kafka always gives a single partition’s data to one consumer thread.<br>Thus, the degree of parallelism in the consumer (within a consumer group) is bounded by the number of partitions being consumed.<br>Therefore, in general, <strong>the more partitions</strong> there are in a Kafka cluster, <strong>the higher the throughput</strong> one can achieve.</p>
<p>A rough formula for picking the number of partitions is based on throughput.<br>You measure the throughout that you can achieve on a single partition for production (call it p) and consumption (call it c).<br>Let’s say your target throughput is t.<br>Then you need to have at least max(t/p, t/c) partitions.<br>The per-partition throughput that one can achieve on the producer depends on configurations such as the batching size, compression codec, type of acknowledgement, replication factor, etc.<br>However, in general, <strong>one can produce at 10s of MB/sec on just a single partition</strong> as shown in this benchmark.<br>The consumer throughput is often application dependent since it corresponds to how fast <strong>the consumer logic can process each message</strong>.<br>So, you really need to measure it.</p>
<p>Although it’s possible to increase the number of partitions over time, one has to be careful if messages are produced with keys.<br>When publishing a keyed message, Kafka deterministically maps the message to a partition based on the hash of the key.<br>This provides a guarantee that <strong>messages with the same key are always routed to the same partition</strong>.<br>This guarantee can be important for certain applications since messages within a partition are always delivered in order to the consumer.<br>If the number of partitions changes, such a guarantee may no longer hold.<br>To avoid this situation, a common practice is to over-partition a bit.<br><strong>Basically, you determine the number of partitions based on a future target throughput, say for one or two years later.</strong><br>Initially, you can just have a small Kafka cluster based on your current throughput.<br>Over time, you can add more brokers to the cluster and proportionally move a subset of the existing partitions to the new brokers (which can be done online).<br>This way, you can keep up with the throughput growth without breaking the semantics in the application when keys are used.</p>
<p>In addition to throughput, there are a few other factors that are worth considering when choosing the number of partitions.<br>As you will see, in some cases, having too many partitions may also have negative impact.</p>
<h2 id="More-Partitions-Requires-More-Open-File-Handles"><a href="#More-Partitions-Requires-More-Open-File-Handles" class="headerlink" title="More Partitions Requires More Open File Handles"></a>More Partitions Requires More Open File Handles</h2><p>Each partition maps to a directory in the file system in the broker.<br>Within that log directory, there will be two files (one for the index and another for the actual data) per log segment.<br>Currently, in Kafka, each broker opens a file handle of both the index and the data file of every log segment.<br>So, the more partitions, the higher that one needs to configure the open file handle limit in the underlying operating system.<br>This is mostly just a configuration issue.<br>We have seen production Kafka clusters running with more than 30 thousand open file handles per broker.</p>
<h2 id="More-Partitions-May-Increase-Unavailability"><a href="#More-Partitions-May-Increase-Unavailability" class="headerlink" title="More Partitions May Increase Unavailability"></a>More Partitions May Increase Unavailability</h2><p>Kafka supports intra-cluster replication, which provides higher availability and durability.<br><strong>A partition can have multiple replicas</strong>, each stored on a different broker.<br>One of the replicas is designated as the leader and the rest of the replicas are followers.<br>Internally, Kafka manages all those replicas automatically and makes sure that they are kept in sync.<br>Both the producer and the consumer requests to a partition are served on the leader replica.<br>When a broker fails, partitions with a leader on that broker become temporarily unavailable.<br>Kafka will automatically move the leader of those unavailable partitions to some other replicas to continue serving the client requests.<br>This process is done by one of the Kafka brokers designated as the controller.<br>It involves reading and writing some metadata for each affected partition in ZooKeeper.<br>Currently, operations to ZooKeeper are done serially in the controller.</p>
<p>In the common case when a broker is shut down cleanly, the controller will proactively move the leaders off the shutting down broker one at a time.<br>The moving of a single leader takes only a few milliseconds.<br>So, from the clients perspective, there is only a small window of unavailability during a clean broker shutdown.</p>
<p>However, when a broker is shut down uncleanly (e.g., kill -9), the observed unavailability could be proportional to the number of partitions.<br>Suppose that a broker has a total of 2000 partitions, each with 2 replicas.<br>Roughly, this broker will be the leader for about 1000 partitions.<br>When this broker fails uncleanly, all those 1000 partitions become unavailable at exactly the same time.<br>Suppose that it takes 5 ms to elect a new leader for a single partition.<br>It will take up to 5 seconds to elect the new leader for all 1000 partitions.<br>So, for some partitions, their observed unavailability can be 5 seconds plus the time taken to detect the failure.</p>
<p>If one is unlucky, the failed broker may be the controller.<br>In this case, the process of electing the new leaders won’t start until the controller fails over to a new broker.<br>The controller failover happens automatically, but requires the new controller to read some metadata for every partition from ZooKeeper during initialization.<br>For example, if there are 10,000 partitions in the Kafka cluster and initializing the metadata from ZooKeeper takes 2 ms per partition, this can add 20 more seconds to the unavailability window.</p>
<p>In general, unclean failures are rare.<br>However, if one cares about availability in those rare cases, it’s probably better to limit the number of partitions per broker to two to four thousand and the total number of partitions in the cluster to low tens of thousand.</p>
<h2 id="More-Partitions-May-Increase-End-to-end-Latency"><a href="#More-Partitions-May-Increase-End-to-end-Latency" class="headerlink" title="More Partitions May Increase End-to-end Latency"></a>More Partitions May Increase End-to-end Latency</h2><p>The end-to-end latency in Kafka is defined by the time from when a message is published by the producer to when the message is read by the consumer.<br>Kafka only exposes a message to a consumer after it has been committed, i.e., when the message is replicated to all the in-sync replicas.<br>So, the time to commit a message can be a significant portion of the end-to-end latency.<br>By default, a Kafka broker only uses a single thread to replicate data from another broker, for all partitions that share replicas between the two brokers.<br>Our experiments show that replicating 1000 partitions from one broker to another can add about 20 ms latency, which implies that the end-to-end latency is at least 20 ms.<br>This can be too high for some real-time applications.</p>
<p>Note that this issue is alleviated on a larger cluster.<br>For example, suppose that there are 1000 partition leaders on a broker and there are 10 other brokers in the same Kafka cluster.<br>Each of the remaining 10 brokers only needs to fetch 100 partitions from the first broker on average.<br>Therefore, the added latency due to committing a message will be just a few ms, instead of tens of ms.</p>
<p>As a rule of thumb, if you care about latency, it’s probably a good idea to limit the number of partitions per broker to 100 x b x r, where b is the number of brokers in a Kafka cluster and r is the replication factor.</p>
<h2 id="More-Partitions-May-Require-More-Memory-In-the-Client"><a href="#More-Partitions-May-Require-More-Memory-In-the-Client" class="headerlink" title="More Partitions May Require More Memory In the Client"></a>More Partitions May Require More Memory In the Client</h2><p>In the most recent 0.8.2 release which we ship with the Confluent Platform 1.0, we have developed a more efficient Java producer.<br>One of the nice features of the new producer is that it allows users to set an upper bound on the amount of memory used for buffering incoming messages.<br>Internally, the producer buffers messages per partition.<br>After enough data has been accumulated or enough time has passed, the accumulated messages are removed from the buffer and sent to the broker.</p>
<p>If one increases the number of partitions, message will be accumulated in more partitions in the producer.<br>The aggregate amount of memory used may now exceed the configured memory limit.<br>When this happens, the producer has to either block or drop any new message, neither of which is ideal.<br>To prevent this from happening, one will need to reconfigure the producer with a larger memory size.</p>
<p>As a rule of thumb, to achieve good throughput, one should allocate at least a few tens of KB per partition being produced in the producer and adjust the total amount of memory if the number of partitions increases significantly.</p>
<p>A similar issue exists in the consumer as well.<br>The consumer fetches a batch of messages per partition.<br>The more partitions that a consumer consumes, the more memory it needs.<br>However, this is typically only an issue for consumers that are not real time.</p>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>In general, more partitions in a Kafka cluster leads to higher throughput.<br>However, one does have to be aware of the potential impact of having too many partitions in total or per broker on things like availability and latency.<br>In the future, we do plan to improve some of those limitations to make Kafka more scalable in terms of the number of partitions.</p>
<p><a href="https://blog.csdn.net/kwengelie/article/details/51150114" target="_blank" rel="noopener">https://blog.csdn.net/kwengelie/article/details/51150114</a><br><a href="https://www.confluent.io/blog/author/jun-rao/" target="_blank" rel="noopener">https://www.confluent.io/blog/author/jun-rao/</a></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>kafka</tag>
      </tags>
  </entry>
  <entry>
    <title>spring-kafka NoSuchMethodError exception</title>
    <url>/2018/11/24/spring-kafka-NoSuchMethodError-exception/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">java.lang.NoSuchMethodError: org.springframework.messaging.handler.annotation.support.MessageMethodArgumentResolver: method &lt;init&gt;()V not found</span><br><span class="line">    at org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor$KafkaHandlerMethodFactoryAdapter.createDefaultMessageHandlerMethodFactory(KafkaListenerAnnotationBeanPostProcessor.java:<span class="number">639</span>)</span><br><span class="line">    at org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor$KafkaHandlerMethodFactoryAdapter.getMessageHandlerMethodFactory(KafkaListenerAnnotationBeanPostProcessor.java:<span class="number">616</span>)</span><br><span class="line">    at org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor$KafkaHandlerMethodFactoryAdapter.createInvocableHandlerMethod(KafkaListenerAnnotationBeanPostProcessor.java:<span class="number">611</span>)</span><br><span class="line">    at org.springframework.kafka.config.MethodKafkaListenerEndpoint.configureListenerAdapter(MethodKafkaListenerEndpoint.java:<span class="number">111</span>)</span><br><span class="line">    at org.springframework.kafka.config.MethodKafkaListenerEndpoint.createMessageListener(MethodKafkaListenerEndpoint.java:<span class="number">97</span>)</span><br><span class="line">    at org.springframework.kafka.config.MethodKafkaListenerEndpoint.createMessageListener(MethodKafkaListenerEndpoint.java:<span class="number">40</span>)</span><br><span class="line">    at org.springframework.kafka.config.AbstractKafkaListenerEndpoint.setupMessageListener(AbstractKafkaListenerEndpoint.java:<span class="number">277</span>)</span><br><span class="line">    at org.springframework.kafka.config.AbstractKafkaListenerEndpoint.setupListenerContainer(AbstractKafkaListenerEndpoint.java:<span class="number">262</span>)</span><br><span class="line">    at org.springframework.kafka.config.AbstractKafkaListenerContainerFactory.createListenerContainer(AbstractKafkaListenerContainerFactory.java:<span class="number">188</span>)</span><br><span class="line">    at org.springframework.kafka.config.AbstractKafkaListenerContainerFactory.createListenerContainer(AbstractKafkaListenerContainerFactory.java:<span class="number">46</span>)</span><br><span class="line">    at org.springframework.kafka.config.KafkaListenerEndpointRegistry.createListenerContainer(KafkaListenerEndpointRegistry.java:<span class="number">182</span>)</span><br><span class="line">    at org.springframework.kafka.config.KafkaListenerEndpointRegistry.registerListenerContainer(KafkaListenerEndpointRegistry.java:<span class="number">154</span>)</span><br><span class="line">    at org.springframework.kafka.config.KafkaListenerEndpointRegistry.registerListenerContainer(KafkaListenerEndpointRegistry.java:<span class="number">128</span>)</span><br><span class="line">    at org.springframework.kafka.config.KafkaListenerEndpointRegistrar.registerAllEndpoints(KafkaListenerEndpointRegistrar.java:<span class="number">138</span>)</span><br><span class="line">    at org.springframework.kafka.config.KafkaListenerEndpointRegistrar.afterPropertiesSet(KafkaListenerEndpointRegistrar.java:<span class="number">132</span>)</span><br><span class="line">    at org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor.afterSingletonsInstantiated(KafkaListenerAnnotationBeanPostProcessor.java:<span class="number">224</span>)</span><br><span class="line">    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:<span class="number">796</span>)</span><br><span class="line">    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:<span class="number">861</span>)</span><br><span class="line">    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:<span class="number">541</span>)</span><br><span class="line">    at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:<span class="number">122</span>)</span><br><span class="line">    at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:<span class="number">759</span>)</span><br><span class="line">    at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:<span class="number">369</span>)</span><br><span class="line">    at org.springframework.boot.SpringApplication.run(SpringApplication.java:<span class="number">313</span>)</span><br><span class="line">    at org.springframework.boot.SpringApplication.run(SpringApplication.java:<span class="number">1185</span>)</span><br><span class="line">    at org.springframework.boot.SpringApplication.run(SpringApplication.java:<span class="number">1174</span>)</span><br></pre></td></tr></table></figure>
<p>exclude <code>spring-message</code> at <code>spring-kafka</code> in pom<br>add <code>spring-message</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-messaging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><a href="https://www.oschina.net/question/2417189_2247108" target="_blank" rel="noopener">https://www.oschina.net/question/2417189_2247108</a><br><a href="https://blog.csdn.net/wangshuminjava/article/details/80241922" target="_blank" rel="noopener">https://blog.csdn.net/wangshuminjava/article/details/80241922</a></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>kafka</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot KafkaListener concurrent</title>
    <url>/2018/11/22/Spring-Boot-KafkaListener-concurrent/</url>
    <content><![CDATA[<p><img src="/2018/11/22/Spring-Boot-KafkaListener-concurrent/20181122185719971.png" alt="20181122185719971.png"></p>
<h2 id="Cocurrent-consume"><a href="#Cocurrent-consume" class="headerlink" title="Cocurrent consume"></a>Cocurrent consume</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ConcurrentKafkaListenerContainerFactory&lt;String, String&gt; factory =</span><br><span class="line">      <span class="keyword">new</span> ConcurrentKafkaListenerContainerFactory&lt;&gt;();</span><br><span class="line">factory.setConcurrency(<span class="number">7</span>);</span><br></pre></td></tr></table></figure>
<p>Increase kafka consumer concurrent thread can increase out put speed.<br>Be careful,topic partition num may cause bottleneck.<br>The consumer groups worker should not bigger than partition num, otherwise thread be wasted.</p>
<p>The system’s lowest part define the performence.<br>If consumer’s post order process is slow, thread may be block in a brief.<br>In more worse situation, the session can out of time, offset be reset.</p>
<h2 id="Consume-in-batch"><a href="#Consume-in-batch" class="headerlink" title="Consume in batch"></a>Consume in batch</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ConcurrentKafkaListenerContainerFactory&lt;String, String&gt; factory =</span><br><span class="line">      <span class="keyword">new</span> ConcurrentKafkaListenerContainerFactory&lt;&gt;();</span><br><span class="line">factory.setBatchListener(<span class="keyword">true</span>);</span><br><span class="line">factory.getContainerProperties().setPollTimeout(pollTimeout);</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">consumerConfig.put(ConsumerConfig.MAX_POLL_RECORDS_CONFIG, maxPollRecords);</span><br></pre></td></tr></table></figure>
<p>the default <code>max.poll.interval.ms=300000</code>, <code>max.poll.records=50</code> every batch fetch fifty messages.</p>
<p>this may cause warn <code>Auto offset commit failed</code></p>
<blockquote>
<p>Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member.<br> This means that the time between subsequent calls to poll() was longer than the configured <strong>max.poll.interval.ms</strong>,<br> which typically implies that <strong>the poll loop is spending too much time</strong> message processing.<br> You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.</p>
</blockquote>
<p>you can reduce <code>max.poll.records</code>, or increse <code>session.timeout.ms</code><br><code>heatbeat.interval.ms</code> must be lower than <code>session.timeout.ms</code>, and is usually set to a 1/3 of the timeout value.</p>
<p>change <code>enable.auto.commit</code> to <code>false</code>, use <code>spring-kafka</code> internal mechanism manage message’s commit.<br>if <code>enable.auto.commit</code> is true, then if the processing time is lower then the <code>auto.commit.interval.ms</code><br>the ack[commit] will wait for the cycle come.</p>
<h2 id="Increase-partitions"><a href="#Increase-partitions" class="headerlink" title="Increase partitions"></a>Increase partitions</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bin/kafka-topics.sh --zookeeper localhost:2181 --alter --partitions 30 --topic demo</span><br></pre></td></tr></table></figure>
<p>Partition can only increase not decrease, in sync increase the consumer groups’ worker number can increase output speed.<br>If kafka cluster run in three machine, then cluster have 3 brokers, create demo topic with 3 partitions.<br>For high availability, set every partition have 2 replication-factors, then every broker will have two kafka log files.</p>
<p>If one machine deaded, ther two can still work.<br>If set replication-factors to 3, then every two machine deaded topic can still work.</p>
<p>brokerA   partiton0/partiton1<br>brokerB   partiton1/partiton2<br>brokerC   partiton2/partiton0</p>
<p>brokerA   partiton0/partiton1/partiton2<br>brokerB   partiton1/partiton2/partiton0<br>brokerC   partiton2/partiton0/partiton1</p>
<hr>
<p>modify replication-factor<br><a href="https://blog.csdn.net/russle/article/details/83421904" target="_blank" rel="noopener">https://blog.csdn.net/russle/article/details/83421904</a></p>
<p>optimize consumer<br><a href="https://docs.spring.io/spring-kafka/reference/html/_reference.html" target="_blank" rel="noopener">https://docs.spring.io/spring-kafka/reference/html/_reference.html</a><br><a href="https://blog.csdn.net/zwgdft/article/details/54633105" target="_blank" rel="noopener">https://blog.csdn.net/zwgdft/article/details/54633105</a></p>
<p>Warn:<br><a href="https://www.jianshu.com/p/4e00dff97f39" target="_blank" rel="noopener">https://www.jianshu.com/p/4e00dff97f39</a><br><a href="https://blog.csdn.net/zwx19921215/article/details/83269445" target="_blank" rel="noopener">https://blog.csdn.net/zwx19921215/article/details/83269445</a></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>kafka</tag>
      </tags>
  </entry>
  <entry>
    <title>Phpstorm debug setting</title>
    <url>/2018/12/23/Phpstorm-debug-setting/</url>
    <content><![CDATA[<h2 id="xdebug-official-websit"><a href="#xdebug-official-websit" class="headerlink" title="xdebug official websit"></a>xdebug official websit</h2><p>windows download dll base on <code>localhost/phpinfo.php</code>:<br><a href="https://xdebug.org/download.php" target="_blank" rel="noopener">https://xdebug.org/download.php</a><br>linux download:<br><a href="https://xdebug.org/wizard.php" target="_blank" rel="noopener">https://xdebug.org/wizard.php</a></p>
<h2 id="php-ini-edit"><a href="#php-ini-edit" class="headerlink" title="php.ini edit"></a>php.ini edit</h2><p>add xdebug setting at the end of <code>php.ini</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[xdebug]</span><br><span class="line">zend_extension  = &quot;D:/phpStudy/php56n/php_xdebug-2.2.7-5.6-vc11-nts-x86_64.dll&quot;</span><br><span class="line"></span><br><span class="line">xdebug.remote_enable = On</span><br><span class="line">xdebug.profiler_enable = On</span><br><span class="line">xdebug.profiler_enable_trigger = On</span><br><span class="line">xdebug.profiler_output_name = cachegrind.out.%t.%p</span><br><span class="line">xdebug.profiler_output_dir =&quot;D:/phpStudy/php56n/tmp&quot;</span><br><span class="line">xdebug.show_local_vars=0</span><br><span class="line"></span><br><span class="line">xdebug.var_display_max_children=128</span><br><span class="line">xdebug.var_display_max_data=512</span><br><span class="line">xdebug.var_display_max_depth=5</span><br><span class="line"></span><br><span class="line">xdebug.idekey=PhpStorm</span><br><span class="line">xdebug.remote_enable = On</span><br><span class="line">xdebug.remote_host=127.0.0.1</span><br><span class="line">xdebug.remote_port=9000</span><br><span class="line">xdebug.remote_handler=dbgp</span><br></pre></td></tr></table></figure></p>
<p>checkout xdebug model is available <code>php -m</code> <code>php -i</code></p>
<h2 id="Browser-setting"><a href="#Browser-setting" class="headerlink" title="Browser setting"></a>Browser setting</h2><p>chrome install <code>xdebug helper</code><br>firefox install <code>theeasiestxdebug</code></p>
<p>IDE key set to the same as property in <code>php.ini</code></p>
<h2 id="phpstorm-setting"><a href="#phpstorm-setting" class="headerlink" title="phpstorm setting"></a>phpstorm setting</h2><p>php CLI interpreter setting:<br><img src="/2018/12/23/Phpstorm-debug-setting/20181223185642.png" alt="20181223185642.png"></p>
<p>set debug listen server ip or domain<br><img src="/2018/12/23/Phpstorm-debug-setting/20181223185503.png" alt="20181223185503.png"></p>
<p>set DBGp key/port <strong>[same as property in php.ini]</strong><br><img src="/2018/12/23/Phpstorm-debug-setting/20181223185452.png" alt="20181223185452.png"></p>
<p>build a local php debug server [skip if a remote server exists]<br><img src="/2018/12/23/Phpstorm-debug-setting/20181223185714.png" alt="20181223185714.png"></p>
<p>add a server listener deal with debug session in php<br><img src="/2018/12/23/Phpstorm-debug-setting/20181223185724.png" alt="20181223185724.png"></p>
<h2 id="fundamentals"><a href="#fundamentals" class="headerlink" title="fundamentals"></a>fundamentals</h2><p><img src="/2018/12/23/Phpstorm-debug-setting/20181223194910.png" alt="20181223194910.png"></p>
<p><a href="https://www.cnblogs.com/anyeshe/p/5746404.html" target="_blank" rel="noopener">https://www.cnblogs.com/anyeshe/p/5746404.html</a></p>
<p><a href="https://www.cnblogs.com/dongruiha/p/6739838.html" target="_blank" rel="noopener">https://www.cnblogs.com/dongruiha/p/6739838.html</a></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>debug</tag>
      </tags>
  </entry>
  <entry>
    <title>Vector group (1)</title>
    <url>/2019/01/20/Vector-group-1/</url>
    <content><![CDATA[<h3 id="已知向量组，证明-B组能由A组线性表示，但A组不能由B组表示。"><a href="#已知向量组，证明-B组能由A组线性表示，但A组不能由B组表示。" class="headerlink" title="已知向量组，证明 B组能由A组线性表示，但A组不能由B组表示。"></a>已知向量组，证明 B组能由A组线性表示，但A组不能由B组表示。</h3><script type="math/tex; mode=display">
A: a1=\begin{pmatrix}
   0 \\
   1 \\
   2 \\
   3
\end{pmatrix},
a2=\begin{pmatrix}
   3 \\
   0 \\
   1 \\
   2
\end{pmatrix},
a3=\begin{pmatrix}
   2 \\
   3 \\
   0 \\
   1
\end{pmatrix};

B: b1=\begin{pmatrix}
   2 \\
   1 \\
   1 \\
   2
\end{pmatrix},
b2=\begin{pmatrix}
   0 \\
   -2 \\
   1 \\
   1
\end{pmatrix},
b3=\begin{pmatrix}
   4 \\
   4 \\
   1 \\
   3
\end{pmatrix};</script><script type="math/tex; mode=display">
R(A,B)=\begin{pmatrix}
   1 & 0 & 3 & 1 & -2 & 4  \\
   0 & 1 & -6 & -1 & 5 & -7  \\
   0 & 2 & -8 & -1 & 7 & -9  \\
   0 & 3 & 2 & 2 & 0 & 4
\end{pmatrix}
=\begin{pmatrix}
   1 & 0 & 3 & 1 & -2 & 4  \\
   0 & 1 & -6 & -1 & 5 & -7  \\
   0 & 0 & 0 & 0 & 0 & 0  \\
   0 & 0 & 0 & 0 & 0 & 0
\end{pmatrix}=2</script><script type="math/tex; mode=display">
R(A)=\begin{pmatrix}
   1 & 0 & 3  \\
   0 & 1 & -6 \\
   0 & 0 & 0 \\
   0 & 0 & 0
\end{pmatrix}=2</script><p>R(A, B) = R(A)<br>B 能由 A 线性表示</p>
<script type="math/tex; mode=display">
R(B,A)=\begin{pmatrix}
   1 & 1 & 1 & 2 & 1 & 0  \\
   0 & -1 & 1 & -1 & 0 & 1  \\
   0 & -3 & 3 & -1 & -1 & 3  \\
   0 & -2 & 2 & -4 & 1 & 2
\end{pmatrix}
=\begin{pmatrix}
   1 & 1 & 1 & 2 & 1 & 4  \\
   0 & 1 & 1 & 3 & -1 & 3  \\
   0 & 0 & 1 & -2 & 0 & 0  \\
   0 & 0 & 0 & 1 & 0 & 0
\end{pmatrix}=4</script><script type="math/tex; mode=display">
R(B)=\begin{pmatrix}
   1 & 1 & 1  \\
   0 & 1 & -1 \\
   0 & 0 & 0 \\
   0 & 0 & 0
\end{pmatrix}=2</script><p>A 不能由 B 线性表示</p>
<h3 id="已知向量组A、B-，证明A、B等价"><a href="#已知向量组A、B-，证明A、B等价" class="headerlink" title="已知向量组A、B ，证明A、B等价"></a>已知向量组A、B ，证明A、B等价</h3><script type="math/tex; mode=display">
A: a1=\begin{pmatrix}
   0 \\
   1 \\
   1
\end{pmatrix},
a2=\begin{pmatrix}
   1 \\
   1 \\
   0
\end{pmatrix};

B: b1=\begin{pmatrix}
   -1 \\
   0 \\
   1
\end{pmatrix},
b2=\begin{pmatrix}
   1 \\
   2 \\
   1
\end{pmatrix},
b2=\begin{pmatrix}
   3 \\
   2 \\
   -1
\end{pmatrix};</script><p>观察可知 R（A) = 2</p>
<script type="math/tex; mode=display">
R(B)=\begin{pmatrix}
   1 & 0 & 1  \\
   0 & 1 & 1 \\
   0 & 0 & 0
\end{pmatrix}=2</script><p>R(A) = R(B) = R(A, B) 即A、B等价</p>
<h3 id="问a取什么值时下列向量组线性相关"><a href="#问a取什么值时下列向量组线性相关" class="headerlink" title="问a取什么值时下列向量组线性相关"></a>问a取什么值时下列向量组线性相关</h3><script type="math/tex; mode=display">
A: a1=\begin{pmatrix}
   a \\
   1 \\
   1
\end{pmatrix},
a2=\begin{pmatrix}
   1 \\
   a \\
   -1
\end{pmatrix},
a3=\begin{pmatrix}
   1 \\
   -1 \\
   a
\end{pmatrix};</script><p>最简形：</p>
<script type="math/tex; mode=display">
A: \begin{pmatrix}
   1 & \frac{1}{a} & \frac{1}{a} \\
   0 & a-\frac{1}{a} & -1-\frac{1}{a} \\
   0 & -1-\frac{1}{a} & a-\frac{1}{a}
\end{pmatrix}</script><p>向量组线性相关即 R(A)&lt;3，则有：</p>
<script type="math/tex; mode=display">
a-\frac{1}{a}=1+\frac{1}{a}
(a+1)(a-2)=0</script><p>a = -1 或 a = 2</p>
<h3 id="设a1-a2线性无关，a1-b-a2-b线性相关，求b用a1-a2线性表示的表示式"><a href="#设a1-a2线性无关，a1-b-a2-b线性相关，求b用a1-a2线性表示的表示式" class="headerlink" title="设a1,a2线性无关，a1+b,a2+b线性相关，求b用a1,a2线性表示的表示式"></a>设a1,a2线性无关，a1+b,a2+b线性相关，求b用a1,a2线性表示的表示式</h3><p>设 b 可由 <script type="math/tex">xa_1 + ya_2</script>表示</p>
<p>因为a1+b,a2+b线性相关, 所以<script type="math/tex">(x + 1)a_1 + ya_2 = z(xa_1 + (y + 1)a_2)</script></p>
<script type="math/tex; mode=display">
(x + 1)a_1 + ya_2 = z(xa_1 + (y + 1)a_2)</script><p>有<script type="math/tex">\frac{a+1}{zx} = \frac{y}{y+1}</script></p>
<p>设 x = c, 有 y = -(1+c), 可得<script type="math/tex">b = ca_1 - (1+c)a_2</script></p>
<p><a href="https://katex.org/#demo" target="_blank" rel="noopener">https://katex.org/#demo</a><br><a href="https://katex.org/docs/supported.html" target="_blank" rel="noopener">https://katex.org/docs/supported.html</a></p>
]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>linear</tag>
      </tags>
  </entry>
  <entry>
    <title>wireless raspberry audio</title>
    <url>/2019/01/26/wireless-raspberry-audio/</url>
    <content><![CDATA[<p><img src="https://github.com/BaReinhard/Super-Simple-Raspberry-Pi-Audio-Receiver-Install/blob/master/img/SSRPARI_1080_668.png?raw=true" alt></p>
<h1 id="System"><a href="#System" class="headerlink" title="System"></a>System</h1><p><a href="https://www.raspberrypi.org/downloads/" target="_blank" rel="noopener">https://www.raspberrypi.org/downloads/</a><br>Install <code>Raspbian Stretch</code></p>
<ul>
<li>Version:November 2018</li>
<li>Release date:2018-11-13</li>
<li>Kernel version:4.14</li>
</ul>
<h2 id="Origin-shift"><a href="#Origin-shift" class="headerlink" title="Origin shift"></a>Origin shift</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/apt/sources.list</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi</span><br><span class="line">deb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/apt/sources.list.d/raspi.list</span><br><span class="line">deb http://mirror.tuna.tsinghua.edu.cn/raspberrypi/ stretch main ui</span><br><span class="line">deb-src http://mirror.tuna.tsinghua.edu.cn/raspberrypi/ stretch main ui</span><br></pre></td></tr></table></figure>
<p>sudo apt-get update</p>
<h2 id="Config-wifi-amp-ssh"><a href="#Config-wifi-amp-ssh" class="headerlink" title="Config wifi &amp; ssh"></a>Config wifi &amp; ssh</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/wpa_supplicant/wpa_supplicant.conf</span><br><span class="line">network=&#123;</span><br><span class="line">    ssid=&quot;SSID&quot;</span><br><span class="line">    key_mgmt=WPA-PSK</span><br><span class="line">    psk=&quot;PASSWD&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ifconfig wlan0</span><br><span class="line">sudo ifdown wlan0</span><br><span class="line">sudo ifup wlan0</span><br><span class="line"></span><br><span class="line"># or</span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure>
<h3 id="open-ssh-service"><a href="#open-ssh-service" class="headerlink" title="open ssh service"></a>open ssh service</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo raspi-config</span><br></pre></td></tr></table></figure>
<p>open ssh in configuration</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Socket error Event: 32 Error: 10053</span><br></pre></td></tr></table></figure>
<p>if terminal throw exception then check service<br><code>sudo sshd -t</code></p>
<p>key not exist:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 2048 -f /etc/ssh/ssh_host_rsa_key</span><br></pre></td></tr></table></figure></p>
<p>config rsa_key in <code>/etc/ssh</code></p>
<p>permission not allow:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo chmod 600 /etc/ssh/*</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service ssh restart</span><br></pre></td></tr></table></figure>
<p>add command to <code>/etc/rc.load</code> before <code>exit 0</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/etc/init.d/ssh start</span><br></pre></td></tr></table></figure></p>
<h2 id="Install-A2DP"><a href="#Install-A2DP" class="headerlink" title="Install A2DP"></a>Install A2DP</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/bareinhard/super-simple-raspberry-pi-audio-receiver-install</span><br><span class="line">cd super-simple-raspberry-pi-audio-receiver-install</span><br><span class="line">git checkout stretch-fix</span><br><span class="line">sudo ./install.sh</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># install home version</span><br><span class="line">2. Install the Raspberry Pi Audio Receiver Home Installation</span><br><span class="line"></span><br><span class="line"># default name</span><br><span class="line">Do you want all the Devices to use the same name? (y/n) : Choose y</span><br><span class="line"></span><br><span class="line"># default passwd</span><br><span class="line">Device WiFi Password: Choose Password</span><br><span class="line"></span><br><span class="line"># no sound card</span><br><span class="line">0. No Sound Card</span><br></pre></td></tr></table></figure>
<h2 id="Install-create-ap"><a href="#Install-create-ap" class="headerlink" title="Install create_ap"></a>Install create_ap</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/oblique/create_ap.git</span><br><span class="line">cd create_ap</span><br><span class="line">sudo make install</span><br><span class="line">sudo apt-get install util-linux procps hostapd iproute2 iw haveged dnsmasq</span><br></pre></td></tr></table></figure>
<p>add command to <code>/etc/rc.load</code> before <code>exit 0</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nohup sudo create_ap -n wlan0 raspberry raspberry --no-virl &gt; /dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></p>
<p><img src="/2019/01/26/wireless-raspberry-audio/raspberry_ios_audio.png" alt="raspberry_ios_audio.png"></p>
<p>here i use AP without Internet sharing.<br>if network environment is good, raspberry have internet then add <code>eth0</code> to command.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create_ap -m bridge wlan0 eth0 MyAccessPoint MyPassPhrase</span><br></pre></td></tr></table></figure></p>
<p>enjoy IOS airplay :)</p>
<p><a href="http://shumeipai.nxez.com/2018/12/28/install-a2dp-to-turn-the-raspberry-pi-into-a-bluetooth-speaker.html" target="_blank" rel="noopener">http://shumeipai.nxez.com/2018/12/28/install-a2dp-to-turn-the-raspberry-pi-into-a-bluetooth-speaker.html</a><br><a href="https://blog.csdn.net/huayucong/article/details/51376506" target="_blank" rel="noopener">https://blog.csdn.net/huayucong/article/details/51376506</a><br><a href="https://blog.csdn.net/newtonsm/article/details/78859152" target="_blank" rel="noopener">https://blog.csdn.net/newtonsm/article/details/78859152</a><br><a href="https://github.com/bareinhard/super-simple-raspberry-pi-audio-receiver-install" target="_blank" rel="noopener">https://github.com/bareinhard/super-simple-raspberry-pi-audio-receiver-install</a><br><a href="https://github.com/oblique/create_ap" target="_blank" rel="noopener">https://github.com/oblique/create_ap</a></p>
]]></content>
      <categories>
        <category>raspberry</category>
      </categories>
  </entry>
  <entry>
    <title>Nginx https in aws</title>
    <url>/2019/02/11/Nginx-https-in-aws/</url>
    <content><![CDATA[<h2 id="install-nginx-in-aws-linux"><a href="#install-nginx-in-aws-linux" class="headerlink" title="install nginx in aws linux"></a>install nginx in aws linux</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo amazon-linux-extras install nginx1.12</span><br></pre></td></tr></table></figure>
<h2 id="apply-certificate"><a href="#apply-certificate" class="headerlink" title="apply certificate"></a>apply certificate</h2><p>apply in wanwang.aliyun.com<br>wait a few minutes, download nginx version certificate package</p>
<h2 id="config-nginx"><a href="#config-nginx" class="headerlink" title="config nginx"></a>config nginx</h2><p>in <code>/etc/nginx/nginx.conf</code><br>add server configuration</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 443;</span><br><span class="line">    server_name abc.com; // your domain</span><br><span class="line">    ssl on;</span><br><span class="line">    root  /home/ec2-user/www/abc.com; // page file</span><br><span class="line">    index index.html index.htm;      // index</span><br><span class="line">    ssl_certificate     cert/214292799730473.pem; // certificate name</span><br><span class="line">    ssl_certificate_key cert/214292799730473.key; // certificate name</span><br><span class="line">    ssl_session_timeout 5m;</span><br><span class="line">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    location / &#123;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name bjubi.com; // your domain</span><br><span class="line">    rewrite ^(.*)$ https://$host$1 permanent; // turn http to https</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="start-nginx"><a href="#start-nginx" class="headerlink" title="start nginx"></a>start nginx</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// check config file</span><br><span class="line">sudo /usr/sbin/nginx -t</span><br><span class="line"></span><br><span class="line">// reload nginx</span><br><span class="line">sudo /usr/sbin/nginx -s reload</span><br></pre></td></tr></table></figure>
<p>some useful command<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// start in manual</span><br><span class="line">sudo /usr/sbin/nginx -c /etc/nginx/nginx.conf</span><br><span class="line">sudo service nginx stop    // stop</span><br><span class="line">sudo service nginx start   // start</span><br><span class="line">sudo service nginx restart // restart</span><br></pre></td></tr></table></figure></p>
<p><a href="https://www.cnblogs.com/tianhei/p/7726505.html" target="_blank" rel="noopener">https://www.cnblogs.com/tianhei/p/7726505.html</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Lucene fmn index &amp; output type</title>
    <url>/2019/02/22/Lucene-fmn-index-output-format/</url>
    <content><![CDATA[<h2 id="Start-fmn-index"><a href="#Start-fmn-index" class="headerlink" title="Start fmn index"></a>Start fmn index</h2><p><strong>IndexWriter:addDocument -&gt; DocumentWriter:addDocument</strong></p>
<p>Document object in lucene store origin target’s properties<br>The property <code>fieldInfos</code> in <code>DocumentWriter</code> store fields</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> FieldInfos fieldInfos;</span><br><span class="line"></span><br><span class="line">fieldInfos = <span class="keyword">new</span> FieldInfos();</span><br><span class="line">fieldInfos.add(doc);</span><br><span class="line">fieldInfos.write(directory, segment + <span class="string">".fnm"</span>);</span><br></pre></td></tr></table></figure>
<h2 id="Build-fmn-index"><a href="#Build-fmn-index" class="headerlink" title="Build fmn index"></a>Build fmn index</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(IndexOutput output)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    output.writeVInt(size());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size(); i++) &#123;</span><br><span class="line">        FieldInfo fi = fieldInfo(i);</span><br><span class="line">        <span class="keyword">byte</span> bits = <span class="number">0x0</span>;</span><br><span class="line">        <span class="comment">// option bit setting</span></span><br><span class="line">        ...</span><br><span class="line">        output.writeString(fi.name);</span><br><span class="line">        output.writeByte(bits);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>write field size before loop<br>write field’s name in loop<br>write field’s setting in loop</p>
<p>If a document field’s name is <code>name</code> store in index and  tokenized<br>then <code>xxx.fmn</code> will be like this</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">01 04 6e 61 6d 65 01</span><br></pre></td></tr></table></figure>
<p><code>01</code> is fields size<br><code>04</code> is field length<br><code>6e 61 6d 65</code> is ASCII of <code>name</code><br><code>01</code> is field setting</p>
<p>[size][01 lenght][01][01 setting][02 lenght][02][02 setting]……</p>
<h2 id="Lucene-type"><a href="#Lucene-type" class="headerlink" title="Lucene type"></a>Lucene type</h2><p>In abstract class <code>IndexOutput</code> self define type method<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeVInt</span><span class="params">(<span class="keyword">int</span> i)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> ((i &amp; ~<span class="number">0x7F</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">        writeByte((<span class="keyword">byte</span>)((i &amp; <span class="number">0x7f</span>) | <span class="number">0x80</span>));</span><br><span class="line">        i &gt;&gt;&gt;= <span class="number">7</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    writeByte((<span class="keyword">byte</span>)i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeVLong</span><span class="params">(<span class="keyword">long</span> i)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>The variable int/long format, smaller values take fewer bytes<br><code>int</code> writes between one and five bytes.<br><code>long</code> writes between one and nine bytes.</p>
<p><code>0x7F</code> filt origin type no longer than 1 byte.<br><code>(i &amp; 0x7F) | 0x80</code> make byte first bit is <code>1</code>.</p>
<hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeString</span><span class="params">(String s)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> length = s.length();</span><br><span class="line">    writeVInt(length);</span><br><span class="line">    writeChars(s, <span class="number">0</span>, length);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>Write string’s length first.<br>Write String’s char array then.</p>
<hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeChars</span><span class="params">(String s, <span class="keyword">int</span> start, <span class="keyword">int</span> length)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> end = start + length;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = start; i &lt; end; i++) &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> code = (<span class="keyword">int</span>) s.charAt(i);</span><br><span class="line">        <span class="keyword">if</span> (code &gt;= <span class="number">0x01</span> &amp;&amp; code &lt;= <span class="number">0x7F</span>)</span><br><span class="line">            writeByte((<span class="keyword">byte</span>) code);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (((code &gt;= <span class="number">0x80</span>) &amp;&amp; (code &lt;= <span class="number">0x7FF</span>)) || code == <span class="number">0</span>) &#123;</span><br><span class="line">            writeByte((<span class="keyword">byte</span>) (<span class="number">0xC0</span> | (code &gt;&gt; <span class="number">6</span>)));</span><br><span class="line">            writeByte((<span class="keyword">byte</span>) (<span class="number">0x80</span> | (code &amp; <span class="number">0x3F</span>)));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            writeByte((<span class="keyword">byte</span>) (<span class="number">0xE0</span> | (code &gt;&gt;&gt; <span class="number">12</span>)));</span><br><span class="line">            writeByte((<span class="keyword">byte</span>) (<span class="number">0x80</span> | ((code &gt;&gt; <span class="number">6</span>) &amp; <span class="number">0x3F</span>)));</span><br><span class="line">            writeByte((<span class="keyword">byte</span>) (<span class="number">0x80</span> | (code &amp; <span class="number">0x3F</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Write ASCII directly [1 byte]<br>Write UTF-8 two bytes [2 byte]<br>Write UTF-8 three bytes [3 byte]</p>
]]></content>
      <categories>
        <category>search</category>
      </categories>
      <tags>
        <tag>lucene</tag>
      </tags>
  </entry>
  <entry>
    <title>Regex in repository</title>
    <url>/2019/02/11/Regex-in-repository/</url>
    <content><![CDATA[<h2 id="URL匹配后缀部分可能会有特殊字符无法匹配"><a href="#URL匹配后缀部分可能会有特殊字符无法匹配" class="headerlink" title="URL匹配后缀部分可能会有特殊字符无法匹配"></a>URL匹配后缀部分可能会有特殊字符无法匹配</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;amp;:/~\+#]*[\w\-\@?^=%&amp;amp;/~\+#])?</span><br></pre></td></tr></table></figure>
<h2 id="URL更简洁的匹配，后缀部分匹配宽泛不精细"><a href="#URL更简洁的匹配，后缀部分匹配宽泛不精细" class="headerlink" title="URL更简洁的匹配，后缀部分匹配宽泛不精细"></a>URL更简洁的匹配，后缀部分匹配宽泛不精细</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[\w\-_/:%]+(\.[\w\-_]+)+([\u0021-\u007e]*)?</span><br></pre></td></tr></table></figure>
<h2 id="找到前是linux换行，后不是’320500’的光标"><a href="#找到前是linux换行，后不是’320500’的光标" class="headerlink" title="找到前是linux换行，后不是’320500’的光标"></a>找到前是linux换行，后不是’320500’的光标</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\n(?!320500)</span><br></pre></td></tr></table></figure>
<h2 id="找到后不是’create’的windows换行。即-r-n-create"><a href="#找到后不是’create’的windows换行。即-r-n-create" class="headerlink" title="找到后不是’create’的windows换行。即\r\n(?!create)"></a>找到后不是’create’的windows换行。即\r\n(?!create)</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(?!(\r\ncreate))\r\n</span><br></pre></td></tr></table></figure>
<h2 id="找到后不是’地址行’的换行，清除，清除前后即URL"><a href="#找到后不是’地址行’的换行，清除，清除前后即URL" class="headerlink" title="找到后不是’地址行’的换行，清除，清除前后即URL"></a>找到后不是’地址行’的换行，清除，清除前后即URL</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(?!(\n.*java\.html))\n.*</span><br><span class="line">(?&lt;=(\.html))&quot;.*</span><br><span class="line">.*(?&lt;=&quot;)</span><br></pre></td></tr></table></figure>
<h2 id="平衡组匹配？？？"><a href="#平衡组匹配？？？" class="headerlink" title="平衡组匹配？？？"></a>平衡组匹配？？？</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(?&apos;Open&apos;\()[2-9][0-9]&#123;2&#125;(?&apos;-Open&apos;\))\s?[0-9]&#123;3&#125;-[0-9]&#123;4&#125;(?(Open)(?!))|[2-9][0-9]&#123;2&#125;(-|\.)[0-9]&#123;3&#125;\1[0-9]&#123;4&#125;</span><br><span class="line">&lt;div[^&gt;]*&gt;[^&lt;&gt;]*(((?&apos;Open&apos;&lt;div[^&gt;]*&gt;)[^&lt;&gt;]*)+((?&apos;-Open&apos;&lt;/div&gt;)[^&lt;&gt;]*)+)*(?(Open)(?!))&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h2 id="格式化单行xml格式报文"><a href="#格式化单行xml格式报文" class="headerlink" title="格式化单行xml格式报文"></a>格式化单行xml格式报文</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(?&lt;=&gt;)(?=&lt;(?!\/))</span><br></pre></td></tr></table></figure>
<h2 id="找非词组空格"><a href="#找非词组空格" class="headerlink" title="找非词组空格"></a>找非词组空格</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(?&lt;![a-z,A-Z])|(?![a-z,A-Z])</span><br></pre></td></tr></table></figure>
<h2 id="找到后面是空行的换行符"><a href="#找到后面是空行的换行符" class="headerlink" title="找到后面是空行的换行符"></a>找到后面是空行的换行符</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\r\n(?&lt;=^$)</span><br></pre></td></tr></table></figure>
<h2 id="匹配中文字符"><a href="#匹配中文字符" class="headerlink" title="匹配中文字符"></a>匹配中文字符</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[\u4e00-\u9fa5]</span><br></pre></td></tr></table></figure>
<h2 id="匹配双字节字符-包括汉字在内"><a href="#匹配双字节字符-包括汉字在内" class="headerlink" title="匹配双字节字符(包括汉字在内)"></a>匹配双字节字符(包括汉字在内)</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[^\x00-\xff]</span><br></pre></td></tr></table></figure>
<h2 id="匹配空白行"><a href="#匹配空白行" class="headerlink" title="匹配空白行"></a>匹配空白行</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\n\s*\r</span><br></pre></td></tr></table></figure>
<h2 id="匹配Email地址"><a href="#匹配Email地址" class="headerlink" title="匹配Email地址"></a>匹配Email地址</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[\w!#$%&amp;&apos;*+/=?^_`&#123;|&#125;~-]+(?:\.[\w!#$%&amp;&apos;*+/=?^_`&#123;|&#125;~-]+)*@(?:[\w](?:[\w-]*[\w])?\.)+[\w](?:[\w-]*[\w])?</span><br></pre></td></tr></table></figure>
<h2 id="匹配网址URL"><a href="#匹配网址URL" class="headerlink" title="匹配网址URL"></a>匹配网址URL</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[a-zA-z]+://[^\s]*</span><br></pre></td></tr></table></figure>
<h2 id="匹配国内电话号码"><a href="#匹配国内电话号码" class="headerlink" title="匹配国内电话号码"></a>匹配国内电话号码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\d&#123;3&#125;-\d&#123;8&#125;|\d&#123;4&#125;-\&#123;7,8&#125;</span><br></pre></td></tr></table></figure>
<h2 id="匹配QQ号"><a href="#匹配QQ号" class="headerlink" title="匹配QQ号"></a>匹配QQ号</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[1-9][0-9]&#123;4,&#125;</span><br></pre></td></tr></table></figure>
<h2 id="匹配中国邮政编码"><a href="#匹配中国邮政编码" class="headerlink" title="匹配中国邮政编码"></a>匹配中国邮政编码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[1-9]\d&#123;5&#125;(?!\d)</span><br></pre></td></tr></table></figure>
<h2 id="匹配18位身份证号"><a href="#匹配18位身份证号" class="headerlink" title="匹配18位身份证号"></a>匹配18位身份证号</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">^(\d&#123;6&#125;)(\d&#123;4&#125;)(\d&#123;2&#125;)(\d&#123;2&#125;)(\d&#123;3&#125;)([0-9]|X)$</span><br></pre></td></tr></table></figure>
<h2 id="匹配-年-月-日-格式日期"><a href="#匹配-年-月-日-格式日期" class="headerlink" title="匹配(年-月-日)格式日期"></a>匹配(年-月-日)格式日期</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">([0-9]&#123;3&#125;[1-9]|[0-9]&#123;2&#125;[1-9][0-9]&#123;1&#125;|[0-9]&#123;1&#125;[1-9][0-9]&#123;2&#125;|[1-9][0-9]&#123;3&#125;)-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8])))</span><br></pre></td></tr></table></figure>
<h2 id="匹配正整数"><a href="#匹配正整数" class="headerlink" title="匹配正整数"></a>匹配正整数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">^[1-9]\d*$</span><br></pre></td></tr></table></figure>
<h2 id="匹配负整数"><a href="#匹配负整数" class="headerlink" title="匹配负整数"></a>匹配负整数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">^-[1-9]\d*$</span><br></pre></td></tr></table></figure>
<h2 id="匹配整数"><a href="#匹配整数" class="headerlink" title="匹配整数"></a>匹配整数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">^-?[1-9]\d*$</span><br></pre></td></tr></table></figure>
<h2 id="匹配非负整数（正整数-0）"><a href="#匹配非负整数（正整数-0）" class="headerlink" title="匹配非负整数（正整数 + 0）"></a>匹配非负整数（正整数 + 0）</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">^[1-9]\d*|0$</span><br></pre></td></tr></table></figure>
<h2 id="匹配非正整数（负整数-0）"><a href="#匹配非正整数（负整数-0）" class="headerlink" title="匹配非正整数（负整数 + 0）"></a>匹配非正整数（负整数 + 0）</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">^-[1-9]\d*|0$</span><br></pre></td></tr></table></figure>
<h2 id="匹配正浮点数"><a href="#匹配正浮点数" class="headerlink" title="匹配正浮点数"></a>匹配正浮点数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$</span><br></pre></td></tr></table></figure>
<h2 id="匹配负浮点数"><a href="#匹配负浮点数" class="headerlink" title="匹配负浮点数"></a>匹配负浮点数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">^-[1-9]\d*\.\d*|-0\.\d*[1-9]\d*$</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>regex</category>
      </categories>
      <tags>
        <tag>regex</tag>
      </tags>
  </entry>
  <entry>
    <title>download outside GFW</title>
    <url>/2019/02/21/download-outside-GFW/</url>
    <content><![CDATA[<h2 id="Download-file-in-outsea-server"><a href="#Download-file-in-outsea-server" class="headerlink" title="Download file in outsea server"></a>Download file in outsea server</h2><p><a href="https://www.katacoda.com/" target="_blank" rel="noopener">https://www.katacoda.com/</a><br><a href="https://www.katacoda.com/courses/ubuntu/playground" target="_blank" rel="noopener">https://www.katacoda.com/courses/ubuntu/playground</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -O https://iterm2.com/downloads/stable/iTerm2-3_2_7.zip</span><br></pre></td></tr></table></figure>
<h2 id="Make-channel-through-local-NAT-or-firewall"><a href="#Make-channel-through-local-NAT-or-firewall" class="headerlink" title="Make channel through local NAT or firewall"></a>Make channel through local NAT or firewall</h2><p><a href="https://ngrok.com/" target="_blank" rel="noopener">https://ngrok.com/</a><br>Expose local machine to internet<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ngrok http 80</span><br></pre></td></tr></table></figure></p>
<h2 id="Run-a-upload-service"><a href="#Run-a-upload-service" class="headerlink" title="Run a upload service"></a>Run a upload service</h2><p>run a local server by python</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install bottle</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> bottle <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">base_path = os.path.dirname(os.path.realpath(__file__))  <span class="comment"># get script path</span></span><br><span class="line"></span><br><span class="line">upload_path = os.path.join(base_path, <span class="string">'upload'</span>)   <span class="comment"># upload file directory</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(upload_path):</span><br><span class="line">    os.makedirs(upload_path)</span><br><span class="line"></span><br><span class="line"><span class="meta">@route('/upload', method='POST')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">do_upload</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""processing uploaded file"""</span></span><br><span class="line">    filedata = request.files.get(<span class="string">'fileField'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> filedata.file:</span><br><span class="line">        file_name = os.path.join(upload_path, filedata.filename)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            filedata.save(file_name)  <span class="comment"># write file</span></span><br><span class="line">        <span class="keyword">except</span> IOError:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'upload failed'</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'success, file name: &#123;&#125;'</span>.format(file_name)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'upload failed'</span></span><br><span class="line"></span><br><span class="line">run(port=<span class="number">80</span>, reloader=<span class="literal">False</span>) <span class="comment"># reloader=True auto-reloading code</span></span><br></pre></td></tr></table></figure>
<h2 id="Upload-file-from-remote-to-local"><a href="#Upload-file-from-remote-to-local" class="headerlink" title="Upload file from remote to local"></a>Upload file from remote to local</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">man curl</span><br><span class="line">curl -F fileField=@iTerm2-3_2_7.zip https://83bc4ec8.ngrok.io/upload -v</span><br></pre></td></tr></table></figure>
<h2 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h2><p>use ngrok tcp mode may much simpler<br>install ngrok client in remote machine may channel through</p>
<p><a href="https://bbs.csdn.net/topics/392190705" target="_blank" rel="noopener">https://bbs.csdn.net/topics/392190705</a><br><a href="https://blog.csdn.net/u011884440/article/details/70504653?utm_source=blogxgwz6" target="_blank" rel="noopener">https://blog.csdn.net/u011884440/article/details/70504653?utm_source=blogxgwz6</a><br><a href="https://blog.csdn.net/fungleo/article/details/80703365" target="_blank" rel="noopener">https://blog.csdn.net/fungleo/article/details/80703365</a></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>proxy</tag>
      </tags>
  </entry>
  <entry>
    <title>troubleshooting high cpu occupancy rate</title>
    <url>/2019/03/27/troubleshooting-high-cpu-occupancy-rate/</url>
    <content><![CDATA[<p><img src="/2019/03/27/troubleshooting-high-cpu-occupancy-rate/20190327092247.png" alt="20190327092247.png"></p>
<h2 id="find-target-thread"><a href="#find-target-thread" class="headerlink" title="find target thread"></a>find target thread</h2><p><code>top</code> find abnormal rate cpu usage process<br><code>top -p [pid] -H</code> find this process’s abnormal thread<br><code>printf &quot;%x\n&quot; tid</code> change thread number to hexadecimal<br><code>jstack [pid] &gt; xxx.log</code> dump thread information<br><code>vim xxx.log</code> find target hex id thread in file</p>
<h2 id="log-analysis"><a href="#log-analysis" class="headerlink" title="log analysis"></a>log analysis</h2><p>The state in dump file</p>
<ol>
<li><strong>Deadlock</strong></li>
<li>Runnable</li>
<li><strong>Waiting on condition</strong></li>
<li><strong>Waiting on monitor entry</strong></li>
<li>Suspended</li>
<li>Object.wait() or TIMED_WAITING</li>
<li><strong>Blocked</strong></li>
<li>Parked</li>
</ol>
<p><code>Waiting to lock</code> and <code>Blocked</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kafka-coordinator-heartbeat-thread | xxxxx&quot; #106 daemon prio=5 os_prio=0 tid=0x00007fee64001800 nid=0x214 waiting for monitor entry [0x00007fee1b6f5000]</span><br><span class="line">   java.lang.Thread.State: BLOCKED (on object monitor)</span><br><span class="line">        at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.disableWakeups(ConsumerNetworkClient.java:409)</span><br><span class="line">        - waiting to lock &lt;0x00000000c2a1b340&gt; (a org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient)</span><br><span class="line">        at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.pollNoWakeup(ConsumerNetworkClient.java:264)</span><br><span class="line">        at org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run(AbstractCoordinator.java:865)</span><br><span class="line">        - locked &lt;0x00000000c29fa1a8&gt; (a org.apache.kafka.clients.consumer.internals.ConsumerCoordinator)</span><br></pre></td></tr></table></figure></p>
<p><code>Waiting for monitor entry</code> and <code>in Object.wait()</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pool-1-thread-2&quot; #18 prio=5 os_prio=0 tid=0x00007fee5da7c000 nid=0x7f85 waiting on condition [0x00007fee9cdd6000]</span><br><span class="line">   java.lang.Thread.State: TIMED_WAITING (parking)</span><br><span class="line">        at sun.misc.Unsafe.park(Native Method)</span><br><span class="line">        - parking to wait for  &lt;0x00000000c0b6db48&gt; (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)</span><br><span class="line">        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)</span><br><span class="line">        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)</span><br><span class="line">        at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)</span><br><span class="line">        at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)</span><br><span class="line">        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1067)</span><br><span class="line">        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)</span><br><span class="line">        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)</span><br><span class="line">        at java.lang.Thread.run(Thread.java:745)</span><br></pre></td></tr></table></figure></p>
<p><code>in Obejct.wait()</code> and <code>TIMED_WAITING</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kafka-coordinator-heartbeat-thread | xxxxx&quot; #89 daemon prio=5 os_prio=0 tid=0x00007fee2c007000 nid=0x202 in Object.wait() [0x00007fee289c8000]</span><br><span class="line">   java.lang.Thread.State: TIMED_WAITING (on object monitor)</span><br><span class="line">        at java.lang.Object.wait(Native Method)</span><br><span class="line">        at org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run(AbstractCoordinator.java:884)</span><br><span class="line">        - locked &lt;0x00000000c2cac000&gt; (a org.apache.kafka.clients.consumer.internals.ConsumerCoordinator)</span><br></pre></td></tr></table></figure></p>
<p><a href="https://www.cnblogs.com/heyanan/p/9261695.html" target="_blank" rel="noopener">https://www.cnblogs.com/heyanan/p/9261695.html</a><br><a href="https://www.cnblogs.com/paul8339/p/7464206.html" target="_blank" rel="noopener">https://www.cnblogs.com/paul8339/p/7464206.html</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>thread</tag>
      </tags>
  </entry>
  <entry>
    <title>thread pool anaylsis</title>
    <url>/2019/03/29/thread-pool-anaylsis/</url>
    <content><![CDATA[<p><img src="/2019/03/29/thread-pool-anaylsis/queue1.gif" alt="queue1.gif"><br><img src="/2019/03/29/thread-pool-anaylsis/queue2.gif" alt="queue2.gif"><br><img src="/2019/03/29/thread-pool-anaylsis/queue3.jpg" alt="queue3.jpg"></p>
<h2 id="properties"><a href="#properties" class="headerlink" title="properties"></a>properties</h2><p>private final BlockingQueue<runnable> workQueue;</runnable></p>
<p>private final ReentrantLock mainLock = new ReentrantLock();</p>
<p>private volatile long  keepAliveTime;</p>
<p>private volatile boolean allowCoreThreadTimeOut;</p>
<p>private volatile int   corePoolSize;</p>
<p>private volatile int   maximumPoolSize;</p>
<p>private volatile int   poolSize;</p>
<h2 id="execute-judgement"><a href="#execute-judgement" class="headerlink" title="execute judgement"></a>execute judgement</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(Runnable command)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (command == <span class="keyword">null</span>) <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException();</span><br><span class="line">    <span class="keyword">if</span> (poolSize &gt;= corePoolSize || !addIfUnderCorePoolSize(command)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (runState == RUNNING &amp;&amp; workQueue.offer(command)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (runState != RUNNING || poolSize == <span class="number">0</span>)</span><br><span class="line">                ensureQueuedTaskHandled(command);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (!addIfUnderMaximumPoolSize(command))</span><br><span class="line">            reject(command); <span class="comment">// is shutdown or saturated</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="thread-judgement"><a href="#thread-judgement" class="headerlink" title="thread judgement"></a>thread judgement</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">addIfUnderCorePoolSize</span><span class="params">(Runnable firstTask)</span> </span>&#123;</span><br><span class="line">    Thread t = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">final</span> ReentrantLock mainLock = <span class="keyword">this</span>.mainLock;</span><br><span class="line">    mainLock.lock();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (poolSize &lt; corePoolSize &amp;&amp; runState == RUNNING)</span><br><span class="line">            t = addThread(firstTask);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        mainLock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t != <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="add-thread"><a href="#add-thread" class="headerlink" title="add thread"></a>add thread</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Thread <span class="title">addThread</span><span class="params">(Runnable firstTask)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// similar to new Thread(Runnable);</span></span><br><span class="line">    Worker w = <span class="keyword">new</span> Worker(firstTask);</span><br><span class="line">    Thread t = threadFactory.newThread(w);</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">int</span> nt = ++poolSize;</span><br><span class="line">    <span class="keyword">if</span> (nt &gt; largestPoolSize) largestPoolSize = nt;</span><br><span class="line">    ...</span><br><span class="line">    t.start();</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Inner-class-Worker"><a href="#Inner-class-Worker" class="headerlink" title="Inner class Worker"></a>Inner class Worker</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Worker</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">runTask</span><span class="params">(Runnable task)</span> </span>&#123;</span><br><span class="line">        ...</span><br><span class="line">        task.run();</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">while</span> (task != <span class="keyword">null</span> || (task = getTask()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            runTask(task);</span><br><span class="line">            task = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line">        workerDone(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="get-task-from-queue"><a href="#get-task-from-queue" class="headerlink" title="get task from queue"></a>get task from queue</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">Runnable <span class="title">getTask</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        ...</span><br><span class="line">        Runnable r;</span><br><span class="line">        <span class="keyword">if</span> (state == SHUTDOWN)  <span class="comment">// Help drain queue</span></span><br><span class="line">            r = workQueue.poll();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (poolSize &gt; corePoolSize || allowCoreThreadTimeOut)</span><br><span class="line">            r = workQueue.poll(keepAliveTime, TimeUnit.NANOSECONDS);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            r = workQueue.take();</span><br><span class="line">        <span class="keyword">if</span> (r != <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> r;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="the-design-of-thread-pool"><a href="#the-design-of-thread-pool" class="headerlink" title="the design of thread pool"></a>the design of thread pool</h2><p>Has no specific thread to dispatch task.</p>
<p>If still have task in QlockingQueue,<br>when thread’s task done, it will fetch task in queue itself.</p>
<p>If still no task in QlockingQueue, and task has done.<br>In worker’s <code>run()</code> - <code>workerDone(this);</code> call to terminate itself.</p>
<p><a href="https://www.cnblogs.com/heyanan/p/9261695.html" target="_blank" rel="noopener">https://www.cnblogs.com/heyanan/p/9261695.html</a><br><a href="http://www.cnblogs.com/dolphin0520/p/3932921.html" target="_blank" rel="noopener">http://www.cnblogs.com/dolphin0520/p/3932921.html</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>thread</tag>
      </tags>
  </entry>
  <entry>
    <title>Bayes&#39; theorem</title>
    <url>/2019/04/11/Bayes-theorem/</url>
    <content><![CDATA[<h2 id="conditional-probability"><a href="#conditional-probability" class="headerlink" title="conditional probability"></a>conditional probability</h2><p>A/B are event, when <code>B</code> happen, <code>A</code>‘s conditional probability. ps.P(B) &gt; 0</p>
<script type="math/tex; mode=display">
P(A|B) = \frac{P(AB)}{P(B)}</script><p><img src="/2019/04/11/Bayes-theorem/NB_3.png" alt="NB_3.png"></p>
<p>seven ball in <code>p1</code> <code>p2</code><br>two white ball in <code>p1</code><br>one white ball in <code>p2</code><br>What’s the probability when fetch white from B bucket.</p>
<p>Event <code>A</code> is fetch white<br>Event <code>B</code> is fetch from <code>P2</code> bucket</p>
<script type="math/tex; mode=display">
P(white|bucketB) = \frac{P(white and bucketB)}{P(bucketB)}
= \frac{\frac{1}{7}}{\frac{3}{7}}=\frac{1}{3}</script><h2 id="Multiplication-formula"><a href="#Multiplication-formula" class="headerlink" title="Multiplication formula"></a>Multiplication formula</h2><ol>
<li><p>formula</p>
<script type="math/tex; mode=display">
P(AB) = P(A|B)P(B) = P(B|A)P(A)</script></li>
<li><p>when n &gt;= 2 :</p>
<script type="math/tex; mode=display">
P(A_{1}A_{2}...A_{n-1}A_{n})=P(A_{1})P(A_{2}|A_{1})P(A_{3}|A_{1}A_{2})...P(A_{n}|A_{1}A_{2}...A_{n-1})</script></li>
<li><p>full probability formula<br>if event array B1, B2, B3, … satisfying</p>
</li>
</ol>
<ul>
<li><script type="math/tex; mode=display">
B_{i} \cap B_{j} = \varnothing</script></li>
<li>i ≠ j</li>
<li>i,j=1 2 ….</li>
<li><script type="math/tex; mode=display">
P(B_{i})>0,i=1,2,....</script></li>
<li><script type="math/tex; mode=display">
B_{1} \cap B_{2} \cap .... = \Omega</script></li>
</ul>
<p>then array event is a divide of sample space <code>Ω</code> .</p>
<script type="math/tex; mode=display">
P(A) = \displaystyle\sum_{i=1}^nP(B_{i})P(A|B_{i})</script><p>this formula mean no interference event array can calculate target sample space in divide.<br>It’s called <code>prior probability</code></p>
<p>For example: spot check a set of different products’ good rate</p>
<h2 id="bayes-formula"><a href="#bayes-formula" class="headerlink" title="bayes formula"></a>bayes formula</h2><p>bayes formula is the reverse process of full probability formula.<br>It research a happened event cause factor, not forcast it.<br>It’s called <code>posterior probability</code></p>
<script type="math/tex; mode=display">
P(B_{i}|A) = \frac{P(B_{i})P(A|B_{i})}{\displaystyle\sum_{j=1}^jP(B_{j})P(A|B_{j})}</script><p>For example:<br>find killer in criminal suspect<br>spam filtering in e-mail system</p>
<p><a href="https://www.cnblogs.com/ohshit/p/5629581.html" target="_blank" rel="noopener">https://www.cnblogs.com/ohshit/p/5629581.html</a></p>
]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>probability</tag>
      </tags>
  </entry>
  <entry>
    <title>compile spring 5.x in idea</title>
    <url>/2019/04/29/compile-spring-5-x-in-idea/</url>
    <content><![CDATA[<h2 id="prepare"><a href="#prepare" class="headerlink" title="prepare"></a>prepare</h2><ol>
<li>source code spring5.x</li>
<li>gradle 4.9</li>
<li>jdk1.8_131</li>
<li>ideaIC-2019.1.1.exe (IntelliJ IDEA Community Edition 2019.1.1 x64)</li>
</ol>
<p>Download source code in:<br><a href="https://github.com/spring-projects/spring-framework/tree/5.0.x" target="_blank" rel="noopener">https://github.com/spring-projects/spring-framework/tree/5.0.x</a><br>Download gradle in:<br><a href="https://gradle.org/releases/" target="_blank" rel="noopener">https://gradle.org/releases/</a><br>Download idea in:<br><a href="https://www.jetbrains.com/idea/download/" target="_blank" rel="noopener">https://www.jetbrains.com/idea/download/</a><br>Download jdk in oracle website</p>
<p>the versions of these things are important</p>
<ul>
<li>gradle version should bigger than 4.2 and no big than 5.0<br>i use 4.6/ 5.1/ 5.4 gradle compile project failed.</li>
<li>jdk version should in 1.8, and no bigger than 1.8_131<br>the blog of csdn editor has such experience.</li>
<li>idea version the newer the better, i use idea 2017.1.2 failed in junit test.</li>
</ul>
<h2 id="install"><a href="#install" class="headerlink" title="install"></a>install</h2><p>JAVA_HOME: D:\jdk1.8.0_131<br>CLASSPATH: .;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar;</p>
<p>GRADLE_HOME: D:\gradle-4.6<br>GRADLE_USER_HOME: D:.gradle</p>
<p>Add to path</p>
<p>at setting of idea, set sdk/gradle path.<br>set gradle parameters <code>-XX:MaxPermSize=1024m -Xmx1024m -XX:MaxHeapSize=1024m</code></p>
<p><img src="/2019/04/29/compile-spring-5-x-in-idea/20190429143526.png" alt="20190429143526.png"></p>
<h2 id="compile"><a href="#compile" class="headerlink" title="compile"></a>compile</h2><p>import source code of spring5.x, import as a gradle project.<br>wait for gradle solve project sync.</p>
<p>comment no use depend in <code>spring-beans.gradle</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//compileGroovy.dependsOn = compileGroovy.taskDependencies.values - &quot;compileJava&quot;</span><br></pre></td></tr></table></figure></p>
<p>if meet dependency problem like this<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Circular dependency between the following tasks:</span><br><span class="line">  ...</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></p>
<p>add <code>org.gradle.configureondemand = true</code> in gradle.properties</p>
<h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2><p>project is ready :)</p>
<p><code>org.springframework.beans.factory.xml.BeanNameGenerationTests</code></p>
<p><a href="https://blog.csdn.net/baomw/article/details/83956300" target="_blank" rel="noopener">https://blog.csdn.net/baomw/article/details/83956300</a><br><a href="https://www.jianshu.com/p/d6e3ec44f99a" target="_blank" rel="noopener">https://www.jianshu.com/p/d6e3ec44f99a</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>hide csdn ad in chrome</title>
    <url>/2019/05/07/hide-csdn-ad-in-chrome/</url>
    <content><![CDATA[<h2 id="Create-manifest-json"><a href="#Create-manifest-json" class="headerlink" title="Create manifest.json"></a>Create manifest.json</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;CSDN Ad Blocker&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0&quot;,</span><br><span class="line">  &quot;description&quot;: &quot;An simple extension to hide the ads from csdn website&quot;,</span><br><span class="line">  &quot;manifest_version&quot;: 2,</span><br><span class="line">  &quot;icons&quot;: &#123;</span><br><span class="line">    &quot;128&quot;: &quot;bb.ico&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;content_scripts&quot;: [&#123;</span><br><span class="line">    &quot;js&quot;: [&quot;content.js&quot;],</span><br><span class="line">    &quot;matches&quot;: [&quot;https://blog.csdn.net/*&quot;]</span><br><span class="line">  &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>choose an icon you like like ‘bb.ico’<br>declare extension function, matches website …</p>
<h2 id="Create-content-js"><a href="#Create-content-js" class="headerlink" title="Create content.js"></a>Create content.js</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">let adSelectors = [</span><br><span class="line">  &apos;iframe&apos;,</span><br><span class="line">  &apos;aside .csdn-tracking-statistics.mb8.box-shadow&apos;,</span><br><span class="line">  &apos;aside .right_box.footer_box.csdn-tracking-statistics&apos;,</span><br><span class="line">  &apos;.indexSuperise&apos;,</span><br><span class="line">  &apos;#adContent&apos;,</span><br><span class="line">  &apos;#reportContent&apos;,</span><br><span class="line">  &apos;.recommend-box&apos;,</span><br><span class="line">  &apos;.recommend-right&apos;,</span><br><span class="line">  &apos;.pulllog-box&apos;,</span><br><span class="line">  &apos;#article_content a img&apos;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">document.querySelectorAll(adSelectors.join(&apos;,&apos;)).forEach(item =&gt; &#123;</span><br><span class="line">  item.style.display = &apos;none&apos;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">var readmore = document.getElementById(&quot;btn-readmore&quot;);</span><br><span class="line">readmore.removeAttribute(&apos;data-track-click&apos;);</span><br><span class="line">readmore.click();</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># ad frame</span><br><span class="line"># left up one</span><br><span class="line"># left down recruit</span><br><span class="line"># right superise</span><br><span class="line"># right vip</span><br><span class="line"># right report</span><br><span class="line"># recommend box</span><br><span class="line"># recommend right</span><br><span class="line"># botton button bar</span><br><span class="line"># login register bar</span><br><span class="line"># article content ad image</span><br></pre></td></tr></table></figure>
<p>hide target ad dom.<br>if you like, you can adjust the main DOM.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">document.getElementsByTagName(&apos;main&apos;)[0].style.width = &apos;75%&apos;</span><br></pre></td></tr></table></figure>
<p>this line in repository cause aside squeezed underneath the main dom<br>and i don’t like it, so i delete this line.</p>
<h2 id="Install-extension"><a href="#Install-extension" class="headerlink" title="Install extension"></a>Install extension</h2><p>in chrome open this url <code>chrome://extensions/</code><br>open toggle <code>developer mode</code><br>clike <code>LOAD UNPACKED</code>, choose project folder.</p>
<p>enjoy :-)</p>
<p><a href="https://github.com/JerryYuanJ/demos/tree/master/02-simple-csdn-ad-blocker" target="_blank" rel="noopener">https://github.com/JerryYuanJ/demos/tree/master/02-simple-csdn-ad-blocker</a><br><a href="https://blog.csdn.net/qq_25324335/article/details/82595836" target="_blank" rel="noopener">https://blog.csdn.net/qq_25324335/article/details/82595836</a></p>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
  </entry>
  <entry>
    <title>bayes&#39; formula comprehend</title>
    <url>/2019/05/10/bayes-formula-comprehend/</url>
    <content><![CDATA[<h2 id="Ideology"><a href="#Ideology" class="headerlink" title="Ideology"></a>Ideology</h2><p>Old day people study probability forcus on sample distribute. [fix parameters]<br>Bayes probability study forcus on parameters.[fix samples]</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">prior distribution + sample info -&gt; Posterior distribution</span><br></pre></td></tr></table></figure>
<p>the new experiment result will refresh people cognition on old things.<br>It’s fit people cognition law on nation explor method.</p>
<h2 id="formula"><a href="#formula" class="headerlink" title="formula"></a>formula</h2><script type="math/tex; mode=display">
P(B|A) = \frac{P(B)P(A|B)}{P(A)}</script><p>First:</p>
<script type="math/tex; mode=display">
P(AB) = P(B)P(A|B) = P(A)P(B|A)</script><p>the probability event A, event B happen at the <strong>same time</strong><br>, equals the probability <strong>A happen</strong> multiply with the probability<br><strong>B happen when A happen</strong>.</p>
<p>So we have:</p>
<script type="math/tex; mode=display">
P(B|A) = \frac{P(B)P(A|B)}{P(A)}</script><p>=&gt;</p>
<script type="math/tex; mode=display">
P(law|phenomenon) = P(law)\frac{P(phenomenon|law)}{P(phenomenon)}</script><p>=&gt;</p>
<p>a new knowledge = a priori knowledge * a new factor affect knowledge / a new factor</p>
<p>We use sample experiment’s phenomenon verify rules.<br>Use <code>adjust factor</code> to adust parameters, make rules more accurate.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>We need to check a rule:<br>watermelon sugar content &gt; 10, good probability is 70%</p>
<ol>
<li>prior condition is good watermelon probability is 20%</li>
<li>exp:bad watermelon has probability 25%, sugar content &gt; 10</li>
<li>exp:good watermelon has probability 99%, sugar content &gt; 10</li>
</ol>
<p>so we have :</p>
<script type="math/tex; mode=display">
P(B|A) = P(B) \frac{P(A|B)}{P(A)} = P(B) \frac{P(A|B)}{P(A|B)P(B) + P(A|\overline{B})P(\overline{B})}</script><script type="math/tex; mode=display">
P(B|A) = 0.2 * ( \frac{0.99}{0.99 * 0.2 + 0.25 * 0.8} ) \approx 0.497</script><hr>
<p>Now we found the threshold is not right, base on adjust factor, we change rule:<br>watermelon sugar content &gt; 15, good probability is 70%</p>
<ol>
<li>prior condition is good watermelon probability is 20%</li>
<li>exp:bad watermelon has probability 15%, sugar content &gt; 15</li>
<li>exp:good watermelon has probability 90%, sugar content &gt; 15</li>
</ol>
<p>so we have :</p>
<script type="math/tex; mode=display">
P(B|A) = P(B) \frac{P(A|B)}{P(A)} = P(B) \frac{P(A|B)}{P(A|B)P(B) + P(A|\overline{B})P(\overline{B})}</script><script type="math/tex; mode=display">
P(B|A) = 0.2 * ( \frac{0.9}{0.9 * 0.2 + 0.15 * 0.8} ) \approx 0.600</script><hr>
<p>Keep on adjust:<br>watermelon sugar content &gt; 20, good probability is 70%</p>
<ol>
<li>prior condition is good watermelon probability is 20%</li>
<li>exp:bad watermelon has probability 9%, sugar content &gt; 20</li>
<li>exp:good watermelon has probability 85%, sugar content &gt; 20</li>
</ol>
<script type="math/tex; mode=display">
P(B|A) = 0.2 * ( \frac{0.85}{0.85 * 0.2 + 0.09 * 0.8} ) \approx 0.702</script><p><a href="https://www.cnblogs.com/zhoulujun/p/8893393.html" target="_blank" rel="noopener">https://www.cnblogs.com/zhoulujun/p/8893393.html</a></p>
]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>probability</tag>
      </tags>
  </entry>
  <entry>
    <title>Throttling pattern</title>
    <url>/2019/05/20/Throttling-pattern/</url>
    <content><![CDATA[<p><img src="/2019/05/20/Throttling-pattern/throttling-pattern.png" alt="throttling-pattern.png"></p>
<h2 id="Interface-Throttler"><a href="#Interface-Throttler" class="headerlink" title="Interface Throttler"></a>Interface Throttler</h2><p> <code>Throttler</code> defined a simple method used to call throttler implementaton.</p>
<p><code>public void start()</code></p>
<h2 id="Implementaton"><a href="#Implementaton" class="headerlink" title="Implementaton"></a>Implementaton</h2><p><code>ThrottleTimerImpl</code> implement <code>Throttler</code> used to cyclical reset service visit counter.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Timer(<span class="keyword">true</span>).schedule(<span class="keyword">new</span> TimerTask() &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        callsCount.reset();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">0</span>, throttlePeriod);</span><br></pre></td></tr></table></figure>
<h2 id="Counter"><a href="#Counter" class="headerlink" title="Counter"></a>Counter</h2><p><code>CallsCount</code> use <code>ConcurrentHashMap</code> to implement multi thread save counter.</p>
<p><code>private Map&lt;String, AtomicLong&gt; tenantCallsCount = new ConcurrentHashMap&lt;&gt;();</code></p>
<h2 id="POJO"><a href="#POJO" class="headerlink" title="POJO"></a>POJO</h2><p><code>Tenant</code> represent a kind of business.<br>have properties <code>name</code> and <code>allowedCallsPerSecond</code></p>
<h2 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h2><p><code>XXXService</code> call <code>Throttler</code> to start reset thread.<br><code>XXXService</code> call counter to check whether ths visit under threshold.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String tenantName = tenant.getName();</span><br><span class="line"><span class="keyword">long</span> count = callsCount.getCount(tenantName);</span><br><span class="line"><span class="keyword">if</span> (count &gt;= tenant.getAllowedCallsPerSecond()) &#123;</span><br><span class="line">    <span class="comment">// TODO throw excepton or return error code</span></span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">callsCount.incrementCount(tenantName);</span><br></pre></td></tr></table></figure>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>Throttling is used to limit client visit frequency, so we need:<br>a <code>overall situation counter</code><br>a <code>daemonize thread resetor</code><br>a <code>business represent pojo</code><br>a <code>limited flow service</code></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>Mathjax in hexo</title>
    <url>/2019/05/29/Mathjax-in-hexo/</url>
    <content><![CDATA[
<p>
When $a \ne 0$, there are two solutions to \(ax^2 + bx + c = 0\) and they are
$$x = {-b \pm \sqrt{b^2-4ac} \over 2a}.$$
</p>


<p>Simple inline $a = b + c$.<br>Block:</p>
<script type="math/tex; mode=display">\frac{\partial u}{\partial t}
= h^2 \left( \frac{\partial^2 u}{\partial x^2} +
\frac{\partial^2 u}{\partial y^2} +
\frac{\partial^2 u}{\partial z^2}\right)</script><script type="math/tex; mode=display">
\frac{\partial f}{\partial x}= \lambda \frac{\partial g}{\partial x} \\\\
\frac{\partial f}{\partial y}=\lambda \frac{\partial g}{\partial y}   \\\\
g(x,y)=0</script><h3 id="add-ejs"><a href="#add-ejs" class="headerlink" title="add ejs"></a>add ejs</h3><p><code>themes/xxx/layout/_partial/mathjax.ejs</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- MathJax配置，可通过单美元符号书写行内公式等 --&gt;</span><br><span class="line">&lt;script type=&quot;text/x-mathjax-config&quot;&gt;</span><br><span class="line">    MathJax.Hub.Config(&#123;</span><br><span class="line">    &quot;HTML-CSS&quot;: &#123;</span><br><span class="line">        preferredFont: &quot;TeX&quot;,</span><br><span class="line">        availableFonts: [&quot;STIX&quot;,&quot;TeX&quot;],</span><br><span class="line">        linebreaks: &#123; automatic:true &#125;,</span><br><span class="line">        EqnChunk: (MathJax.Hub.Browser.isMobile ? 10 : 50)</span><br><span class="line">    &#125;,</span><br><span class="line">    tex2jax: &#123;</span><br><span class="line">        inlineMath: [ [&quot;$&quot;, &quot;$&quot;], [&quot;\\(&quot;,&quot;\\)&quot;] ],</span><br><span class="line">        processEscapes: true,</span><br><span class="line">        ignoreClass: &quot;tex2jax_ignore|dno&quot;,</span><br><span class="line">        skipTags: [&apos;script&apos;, &apos;noscript&apos;, &apos;style&apos;, &apos;textarea&apos;, &apos;pre&apos;, &apos;code&apos;]</span><br><span class="line">    &#125;,</span><br><span class="line">    TeX: &#123;  </span><br><span class="line">        equationNumbers: &#123; autoNumber: &quot;AMS&quot; &#125;,</span><br><span class="line">        noUndefined: &#123; attributes: &#123; mathcolor: &quot;red&quot;, mathbackground: &quot;#FFEEEE&quot;, mathsize: &quot;90%&quot; &#125; &#125;,</span><br><span class="line">        Macros: &#123; href: &quot;&#123;&#125;&quot; &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    messageStyle: &quot;none&quot;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;!-- 给MathJax元素添加has-jax class --&gt;</span><br><span class="line">&lt;script type=&quot;text/x-mathjax-config&quot;&gt;</span><br><span class="line">    MathJax.Hub.Queue(function() &#123;</span><br><span class="line">        var all = MathJax.Hub.getAllJax(), i;</span><br><span class="line">        for(i=0; i &lt; all.length; i += 1) &#123;</span><br><span class="line">            all[i].SourceElement().parentNode.className += &apos; has-jax&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;!-- 通过连接CDN加载MathJax的js代码 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; async</span><br><span class="line">  src=&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML&quot;&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h3 id="add-judge"><a href="#add-judge" class="headerlink" title="add judge"></a>add judge</h3><p><code>themes/free2mind/layout/_partial/footer.ejs</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 根据页面mathjax变量决定是否加载MathJax数学公式js --&gt;</span><br><span class="line">&lt;% if (page.mathjax)&#123; %&gt;</span><br><span class="line">&lt;%- partial(&apos;mathjax&apos;) %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>
<h3 id="Use-NexT"><a href="#Use-NexT" class="headerlink" title="Use NexT"></a>Use NexT</h3><p>clone <a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure>
<p>modify <code>node_modules\kramed\lib\rules\inline.js</code><br>line: 11<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//escape: /^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/,</span><br><span class="line"> escape: /^\\([`*\[\]()#$+\-.!_&gt;])/,</span><br></pre></td></tr></table></figure></p>
<p>line: 20<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span><br><span class="line">  em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span><br></pre></td></tr></table></figure></p>
<p>open switch in theme config<br>switch theme in blog config</p>
<p>done</p>
<p><a href="https://docs.mathjax.org/en/latest/start.html" target="_blank" rel="noopener">https://docs.mathjax.org/en/latest/start.html</a><br><a href="http://www.mamicode.com/info-detail-2145077.html" target="_blank" rel="noopener">http://www.mamicode.com/info-detail-2145077.html</a><br><a href="https://blog.csdn.net/wgshun616/article/details/81019687" target="_blank" rel="noopener">Hexo 的 Next 主题中渲染 MathJax 数学公式</a><br><a href="https://blog.csdn.net/zhangguoliu/article/details/107074037" target="_blank" rel="noopener">Nunjucks Error expected variable end解决办法</a></p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>hello</tag>
      </tags>
  </entry>
  <entry>
    <title>拉格朗日乘子法(一)</title>
    <url>/2019/06/04/understand-lagrange-multiplier/</url>
    <content><![CDATA[<p><img src="/2019/06/04/understand-lagrange-multiplier/Lagrange_portrait.jpg" alt="Lagrange_portrait.jpg"><br>Joseph Louis Lagrange</p>
<p>definition on Wikipedia:</p>
<blockquote>
<p>In mathematical optimization, the method of Lagrange multipliers is a strategy for finding the local maxima and minima of a function subject to equality constraints. (Wikipedia)</p>
</blockquote>
<p><a href="https://en.wikipedia.org/wiki/Lagrange_multiplier" target="_blank" rel="noopener">拉格朗日乘子法</a> 是一种在一个或多个约束条件下，局部最小化或最大化函数的方法。<br>例如：对变量 $x$ 和 $y$ 使 $x^2 + y^2$ 尽可能小，同时满足约束$xy = 1$。<br>以下是如何使用拉格朗日乘子法及其工作原理的解释：<br>这个解释（尤其是为什么它们的工作）只有一个约束要简单得多，所以我们将从一个直观的论证开始，然后在多个约束的情况下转向一个更严格的论证。这两种情况都需要熟悉<a href="https://en.wikipedia.org/wiki/Partial_derivative" target="_blank" rel="noopener">偏导数</a>和<a href="https://en.wikipedia.org/wiki/Euclidean_vector" target="_blank" rel="noopener">向量</a></p>
<h3 id="一个约束条件"><a href="#一个约束条件" class="headerlink" title="一个约束条件"></a>一个约束条件</h3><p>假设我们想要根据约束 $g(x, y) = 0$， 最小化函数 $f(x, y)$ 。<br>(现在我们将最小化两个变量的函数，但是该方法将自然地扩展到更多变量的函数，并且最大化的过程完全相同。)<br>对于上面的例子，$f(x, y) = x^2 + y^2$ 和 $g(x, y)=xy-1$ (因为 $xy - 1 = 0$ 等价 $xy = 1$ )。<br>为了解决这个问题，我们创建了一个 $L(x, y, \lambda)$ 名为 <strong>Lagrangian</strong> 的新函数。<br>它被定义为 $L(x, y, \lambda)= f(x，y) -  \lambda g(x, y)$ ，其中 $\lambda$ 是一个称为<code>拉格朗日乘子</code>的新变量。<br>(有些人用 $+$，而不是 $-$ ，但这并没有改变定义，除了$\lambda$的符号发生变化。)<br>然后，我们取原始变量$x$ 、 $y$、 $\lambda$ 相对于 $L$ 的偏导数，将所有这些部分设置为零，并求解 $x$ 和 $y$ 。<br>对于上面给出的例子，我们有：</p>
<script type="math/tex; mode=display">
\begin{array}{rcl} L(x, y, \lambda) & = & x^2 + y^2 - \lambda (xy - 1) \\
\partial L / \partial x & = & 2x - \lambda y \\
\partial L / \partial y & = & 2y - \lambda x \\
\partial L / \partial \lambda & = & -(xy - 1) \end{array}</script><p>将所有部分设置为零并求解，我们得到它 $\lambda = 2$ 并且(x, y)是(1, 1)或者(-1, -1)。<br>实际上，这些点是受制于约束 $g(x, y) = 0$的 $f(x, y)$ 局部最小值。（在这种情况下，它们也是全局极小值，虽然通常不能保证。）</p>
<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>为什么拉格朗日乘子法有效？<br>人们很容易认为我们可以通过找到一个不受约束 $L$ 的最小值, 来找到一个受约束的 $f$ 的最小值; 毕竟，我们将所有 $L$ 的分量设置为等于零。但这是错误的。解决方案 $(x, y, \lambda)$ 实际上，从来不是局部最小值或最大值，总是会有一个<code>马鞍点</code>对应到 $L$。那么为什么拉格朗日乘子法有效呢？答案与<a href="https://en.wikipedia.org/wiki/Level_set" target="_blank" rel="noopener">等高曲线</a>和<a href="https://en.wikipedia.org/wiki/Gradient" target="_blank" rel="noopener">梯度</a>有关。</p>
<p><img src="/2019/06/04/understand-lagrange-multiplier/lagrange1.png" alt="lagrange1.png"></p>
<h4 id="等值曲线"><a href="#等值曲线" class="headerlink" title="等值曲线"></a>等值曲线</h4><p>函数的<code>等值曲线</code>[等高线]是函数等于常数值的点集。<br>（在三个维度中，它们被称为等值面，更一般地说，等值集合。）<br>在上面的图片中，红色圆是一些等值曲线 $f(x, y) = x^2 + y^2$（较大的圆对应于 $f$中更高的值）。<br>蓝色曲线是满足约束 $g(x, y) = 0$ 的点集，使其成为 $ g(x, y)$ 的一条等值曲线。</p>
<h4 id="几何分析"><a href="#几何分析" class="headerlink" title="几何分析"></a>几何分析</h4><p>约束最小化就是寻找蓝色曲线上红色谷中最低的点：每个红色曲线代表不同高度的谷。<br>事实证明，这极值点总是红色和蓝色等值曲线的相切点，例如上图中的黑点。<br>要了解原因，有必要查看曲线不相切的点，例如橙色点。由于红色和蓝色等值曲线在橙色点彼此不相切，它们彼此交叉。由于它们交叉，当沿着蓝色曲线在红色谷中向一个方向上移动时，红谷值向另一个方向移动向下移动。<br><strong>换句话说，存在局部变化 $(x, y)$，在保持约束 $g(x, y) = 0$ 的情况下，导致目标函数$f(x, y)$减少，而相反的变化导致它增加。</strong> 因此交叉点不可能是受限制的最小值或最大值。由于最小值不能在等值曲线交叉的点处，因此它必须在它们相切的点处。<strong>在切点，当你沿着曲线 $g(x, y) = 0$ 移动时, $f(x, y)$ 是近似不变的一阶导数</strong>，因此它可能是最小值或最大值。（它可能也不是，但至少它可能是。）</p>
<h4 id="数学分析"><a href="#数学分析" class="headerlink" title="数学分析"></a>数学分析</h4><p>我们如何在数学上表达等值曲线 $f$ 和 $g$ 相切？这是梯度的来源。函数的梯度 $f$ 被写为 $ \nabla f$ 并定义为向量，其中每个分量是 $f$ 相对于相应变量的偏导数：$\nabla f = (\partial f / \partial x, \partial f / \partial y)$。梯度具有对我们非常有用的属性：$f$ 的梯度总是垂直于 $f$ 给定的等值曲线$(x, y)$。要探究这个问题，我们定义 $(\Delta x, \Delta y)$ 是改变$(x, y)$的微元[small amount]。它将如何改变f$(x, y)$？首先，答案是：</p>
<script type="math/tex; mode=display">f(x + \Delta x, y + \Delta y) \approx f(x, y) + \frac{\partial f}{\partial x} \Delta x + \frac{\partial f}{\partial y} \Delta y</script><p>如果$(\Delta x, \Delta y)$是在等值曲线的方向，我们将拥有 $ f(x + \Delta x, y + \Delta y) \approx f(x, y)$，这意味着 $\frac{\partial f}{\partial x}\Delta x + \frac{\partial f}{\partial y} \Delta y = 0 $ 。换句话说，$\nabla f$ 和 $(\Delta x, \Delta y)$ 的点积为零。由于  $(\Delta x, \Delta y)$在等值曲线的方向上，这意味着 <strong>等值曲线和梯度彼此垂直</strong>。</p>
<p>由于我们希望的等值曲线 $f$ 和 $g$ 为彼此相切，并且每个函数的梯度是垂直于它的等值曲线中，我们希望梯度以在相同的方向（或沿相反方向）指向。<strong>如果一个是另一个的标量倍数，则两个向量指向相同的方向。</strong> 这个标量将成为<code>拉格朗日乘子</code>，我们称之为$ \lambda: \nabla f = \lambda \nabla g$。该向量方程扩展为每个 $x$ 和的一个方程 $y$。将约束本身添加到我们的方程组中，我们得到：</p>
<p>\begin{array}{rcl}\frac{\partial f}{\partial x}&amp;=&amp;\lambda \frac{\partial g}{\partial x}\ \frac{\partial f}{\partial y}&amp;=&amp;\lambda \frac{\partial g}{\partial y} \ g(x, y) &amp; = &amp; 0 \end{array}</p>
<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p><code>Lagrange multipliers</code>方法就是产生这些方程并求解它们。然而它通常用拉格朗日函数来描述 $ L(x, y, \lambda) = f(x, y) - \lambda g(x, y)$。将 $x$, $y$, $\lambda$ 关于<code>Lagrangian</code>的偏导数，写成以上例子的形式。例如，$ \partial L / \partial x = \partial f / \partial x - \lambda \partial g / \partial x$。 将这个值设为零就可以得到例子中的第一个方程。最后还有一个等式，$ \partial L / \partial \lambda = -g(x, y)$。如果你愿意，你根本就不需要担心<code>Lagrangian</code>，你只需要找到一个点$(x, y)$ 和标量 $\lambda$，使$ \nabla f = \lambda \nabla g$ 满足约束条件。这些点将是约束最小值（或最大值）的候选值。</p>
<p>总之，约束极小值和极大值出现在<code>约束函数的等值曲线</code> $g$与 <code>目标函数的等值曲线</code> $f$的相切的点处。<br>当 $ \nabla f = \lambda \nabla g$ 时，有以上例子中的方程式成立。拉格朗日函数$L$用一个函数的偏导数将这些方程统一起来。</p>
<h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>在切点位置两等值曲线方向平行，考虑到梯度和等值曲线垂直，那么可以用梯度平行来求切点位置。</p>
<p>切点 -&gt; 变量偏导比例相等 -&gt; 梯度方向相同 -&gt; 梯度模成比例 -&gt; 候选极值</p>
<hr>
<script type="math/tex; mode=display">
f(x, y) = x^2 + y^2  \\
g(x, y) = x*y - 1 \\
x*y -1 = 0 \\
t(x) = 1/x</script><p><img src="/2019/06/04/understand-lagrange-multiplier/20190605171448.png" alt="20190605171448.png"></p>
<p><img src="/2019/06/04/understand-lagrange-multiplier/20190605181854.png" alt="20190605181854.png"></p>
<p><img src="/2019/06/04/understand-lagrange-multiplier/20190605172014.png" alt="20190605172014.png"></p>
<p><a href="https://danstronger.wordpress.com/2015/08/08/lagrange-multipliers/" target="_blank" rel="noopener">https://danstronger.wordpress.com/2015/08/08/lagrange-multipliers/</a><br><a href="https://jermmy.github.io/2017/07/27/2017-7-27-understand-lagrange-multiplier/" target="_blank" rel="noopener">https://jermmy.github.io/2017/07/27/2017-7-27-understand-lagrange-multiplier/</a><br><a href="https://www.svm-tutorial.com/2016/09/duality-lagrange-multipliers/" target="_blank" rel="noopener">https://www.svm-tutorial.com/2016/09/duality-lagrange-multipliers/</a></p>
]]></content>
      <categories>
        <category>ml</category>
      </categories>
      <tags>
        <tag>math</tag>
      </tags>
  </entry>
  <entry>
    <title>拉格朗日乘子法（二）</title>
    <url>/2019/06/05/understand-lagrange-multiplier/</url>
    <content><![CDATA[<p><img src="/2019/06/04/understand-lagrange-multiplier/Lagrange_portrait.jpg" alt="Lagrange_portrait.jpg"><br>Joseph Louis Lagrange</p>
<h3 id="多个约束条件"><a href="#多个约束条件" class="headerlink" title="多个约束条件"></a>多个约束条件</h3><h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>现在我们来看看，在一般情况下，当我们在 k个约束条件下：$g_i(x_1, …, x_n) = 0$，其中 $i$ 从 $1$到$k$ ，求最小化 $n$个变量的函数$f(x_1, …, x_n)$。<code>拉格朗日函数</code>和前文一样，除了每个约束有不同的$\lambda$。<br>约束：</p>
<script type="math/tex; mode=display">
L(x_1, ..., x_n, \lambda_1, ..., \lambda_k) = f(x_1, ..., x_n) - \sum_{j=1}^k \lambda_j g_j(x_1, ..., x_n)</script><p>(我们将$j$用于$k$作为约束索引，将$i$用于$n$作为变量的索引$x_i$。)约束最小值出现在所有变量对$L$的偏导数为零的点上。</p>
<h4 id="简单例子"><a href="#简单例子" class="headerlink" title="简单例子"></a>简单例子</h4><p>我们将使用一个相对简单的例子来说明方法：我们试图最小化 $x_1^2 + x_2^2 + x_3^2$<br>有两个约束条件：$x_1 = 1$ 和 $x_2 = 1$<br><code>Lagrangian</code>:  $x_1^2 + x_2^2 + x_3^2 - \lambda_1 (x_1 - 1) - \lambda_2 (x_2 - 1)$<br>它的偏导数是：</p>
<script type="math/tex; mode=display">
\begin{array}{rcl} \partial L / \partial x_1 &=& 2 x_1 - \lambda_1 \\ \partial L / \partial x_2 &=& 2 x_2 - \lambda_2 \\ \partial L / \partial x_3 &=& 2 x_3 \\ \partial L / \partial \lambda_1 &=& -(x_1 - 1) \\ \partial L / \partial \lambda_2 &=& -(x_2 - 1) \end{array}</script><h4 id="解"><a href="#解" class="headerlink" title="解"></a>解</h4><p>将它们全部设置为零得到答案：$(x_1, x_2, x_3) = (1, 1, 0)$ 和 $\lambda_1 = \lambda_2 = 2$.</p>
<p>在一个约束情形中，<code>拉格朗日乘子方程</code>等价于矢量方程 $\nabla f = \lambda \nabla g$<br>对于多个约束，相应的向量方程是：</p>
<script type="math/tex; mode=display">
\nabla f = \sum_{j = 1}^k \lambda_j \nabla g_j</script><h4 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h4><p>上述等式将得出以下事实：对于变量 $i$，当 <script type="math/tex">\partial L / \partial x_i = \partial f / \partial x_i - \sum_{j=1}^k \lambda_j \partial g_j / \partial x_i</script>成立时有<script type="math/tex">\partial f / \partial x_i = \sum_{j=1}^k \lambda_j \partial g_j / \partial x_i</script> ，因此把<script type="math/tex">\partial L / \partial x_i</script>($i$从$1$到$n$)偏导数置为零等效于上述向量方程。注意，将偏导数$\partial L / \partial \lambda_j$等于零只会强化$g_j(x_1, …, x_n) = 0$的约束。</p>
<h4 id="如何相切"><a href="#如何相切" class="headerlink" title="如何相切"></a>如何相切</h4><p>在一个约束情形中，找到点是有用的，  $\nabla f = \lambda \nabla g$因为这意味着水平曲线$f$ 与水平曲线$g$相切。在多重约束的情况下，它并不那么简单。<strong>单个约束$g_i$的水平表面不一定与$f$约束最小值处的水平表面相切</strong>。（在上面的示例中，约束平面$x_1 = 1$与$f$球体的水平面$x_1^2 + x_2^2 + x_3^2 = 2$在最佳点处相交$(1, 1, 0)$。）相反，事实证明，所有$g_i$水平面的交点都与$f$水平面的相切。</p>
<p>为了更好的理解，让我们直接看$x$的小扰动对 $f$和约束方程$g_j$的影响，有$x = (x_1, …, x_n)$，同时使$\Delta x = (\Delta x_1, …, \Delta x_n)$我们有：</p>
<script type="math/tex; mode=display">
f(x + \Delta x) - f(x) \approx \sum_{i=1}^n \Delta x_i \frac{\partial f}{\partial x_i}</script><h4 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h4><p>如果更改$x$，有扰动$\Delta x$ 能保持所有$g_j$约束方程有相同的（一阶导），同时引起$f(x)$的非零变化，则$x$不可能是受约束的局部最小值。因为在某些方向上沿的交点移动所有的水平曲线$g_j$都会导致$f$减少（或增加）。所以我们想要的条件是：</p>
<ol>
<li>对于所有可能使 $\nabla g_j(x) \perp \Delta x$ ,($j$从$1$到$k$) 成立的 $\Delta x$， 有$\nabla f(x) \perp \Delta x\textrm{.}$</li>
</ol>
<p>对每个$j$有$\nabla g_j(x) \perp \Delta x$, $\Delta x$在与$g_j$水平面相切的方向上。如果$\Delta x$在与所有的$g_j$水平面交点相切的方向上，那么每一个$j$都成立。条件一表示任何此类$\Delta x$也与水平面相切$f$。另一方面，<code>拉格朗日乘子法</code>强制执行的条件是：</p>
<ol>
<li>存在 <script type="math/tex">\lambda_1</script> 到 <script type="math/tex">\lambda_k</script> 使得 <script type="math/tex">\nabla f = \sum_{j = 1}^k \lambda_j \nabla g_j</script>.</li>
</ol>
<p>令人高兴的是，事实证明条件1和2等价。</p>
<p>定理：条件1和2等价</p>
<h4 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h4><p>证明:(为什么现在我们一整天挥手都有严格的证据？有时最直观的论证就是证明;也许就是这种情况。）首先我们将证明2、1等价.假设对于每一个<script type="math/tex">j</script>从<script type="math/tex">1</script>到<script type="math/tex">k</script>，有 <script type="math/tex">\nabla f = \sum_{j = 1}^k \lambda_j \nabla g_j</script>, <script type="math/tex">\nabla g_j(x) \perp \Delta x</script> 。因为<script type="math/tex">\nabla g_j(x) \perp \Delta x$, $\nabla g_j(x) \cdot \Delta x = 0</script>。所以 <script type="math/tex">\nabla f \cdot \Delta x = (\sum_{j = 1}^k \lambda_j \nabla g_j) \cdot \Delta x = \sum_{j = 1}^k \lambda_j \nabla g_j \cdot \Delta x = 0.</script>。这意味着 <script type="math/tex">\nabla f \perp \Delta x</script>。</p>
<p>接下来我们将证明1意味着2，或等效地，不是2意味着不是1.否定2表示$\nabla f$不在向量的<a href="https://en.wikipedia.org/wiki/Linear_span" target="_blank" rel="noopener">跨度</a>内。让我们用$z$来表示 $\nabla f$ 在 $\nabla g_j$ 跨度内的投影，并设置$\Delta x = \nabla f - z$。我们将证明这是建立否定条件1的反例。</p>
<h4 id="证否"><a href="#证否" class="headerlink" title="证否"></a>证否</h4><p>我们知道 $\nabla f \neq z$ 所以有 $\Delta x \neq 0$，通过投影的定义，对每个$j$有$\Delta x \perp g_j$。此外，$\nabla f \cdot \Delta x = (z + \Delta x) \cdot \Delta x = z \cdot \Delta x + \Delta x \cdot \Delta x$，因为 $z$ 是在$g_j$域上垂直于$\Delta x$，同样的有$z \perp \Delta x$。<br>新增$z \cdot \Delta x = 0$ 和$\Delta x \cdot \Delta x \neq 0$ ，我们得到 $(z + \Delta x) \cdot \Delta x \neq 0$。 也就是说$\nabla f \cdot \Delta x \neq 0$，所以$\nabla f$不垂直$\Delta x$。由于$\Delta x$垂直于所有$\nabla g_j$，但不垂直$\nabla f$，所以条件一也被证否。我们假设条件2的否定，因此这表明不是2意味着不是1，或者等效地，1意味着2。</p>
<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p>现在我们已经看到<code>拉格朗日乘子法</code>通过找到 $x$  一组 <script type="math/tex">\lambda_j</script> 这样 <script type="math/tex">\nabla f = \sum_{j = 1}^k \lambda_j \nabla g_j</script> 的东西而发挥作用。这个等式意味着不存在局部变化 ，使一阶导数，符合所有约束但改变目标函数 $f$ 的值。因此满足该等式的值$x$是受约束的局部最小值或最大值的候选值。求解该向量方程等效于将<code>拉格朗日函数</code>的偏导数设置为零。</p>
<p>我希望能够说明<code>拉格朗日乘子法</code>的工作方式和原因，并稍使它们看起来不这么像魔术。</p>
<h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>感觉原文作者描述的非常严谨，有很多地方我没法跟上作者的思路。<br>就我个人较感性的理解</p>
<h4 id="单约束的表达式中："><a href="#单约束的表达式中：" class="headerlink" title="单约束的表达式中："></a>单约束的表达式中：</h4><script type="math/tex; mode=display">L(x, y, \lambda)= f(x，y) -  \lambda g(x, y)</script><p><code>拉格朗日函数</code>偏导为零，表明梯度$\nabla f=(\frac{\partial f}{\partial x}, \frac{\partial f}{ \partial y}) $ ，和梯度 $\nabla g=(\frac{\partial g}{\partial x}, \frac{\partial g}{ \partial y}) $ 成比例。<br>只有在切点处才有梯度重叠，才可以向量互相线性表示；<br>在切点处是局部的极值点，任何符合$g$的微小扰动$(\Delta x, \Delta y)$ 会导致函数$f$的增大或减小。<br>所以解$L$偏导等于零的方程组(2+1)，可以得到候选极值点。</p>
<h4 id="在多约束表达式中："><a href="#在多约束表达式中：" class="headerlink" title="在多约束表达式中："></a>在多约束表达式中：</h4><script type="math/tex; mode=display">
L(x_1, ..., x_n, \lambda_1, ..., \lambda_k) = f(x_1, ..., x_n) - \sum_{j=1}^k \lambda_j g_j(x_1, ..., x_n)</script><p>有多变量，多约束条件；可以认为是求解极值向量的问题<br>多约束的条件下，单条件相切并不一定是局部极值；<br>需要做到$f$与所有$g_i$的相交处相切，即在约束面上各方向目标函数偏导数为零处。<br>梯度的原理同单约束，梯度向量在各方向上成比例。</p>
<script type="math/tex; mode=display">
\begin{pmatrix}
  \lambda_1 \\
  \lambda_2 \\
...\\
  \lambda_k \\
  \end{pmatrix}^T
.\begin{pmatrix}
  \nabla g_1\\
  \nabla g_2 \\
...\\
  \nabla g_k \\
  \end{pmatrix}=\nabla y</script><p>在局部最优解的向量上，符合所有约束$g$的微小扰动向量$(\Delta x_1, \Delta x_2, …\Delta x_n)$都会导致函数$f$的增大或减小。<br>所以解$L$偏导等于零的方程组(n+1)，可以得到候选极值向量。</p>
<hr>
<script type="math/tex; mode=display">
g(x_1, x_2, z_3) = x_1^2 + x_2^2 + x_3^2 \\
x_1^2 + x_2^2 + x_3^2 = 2 \\
x_1 = 1 \\
x_2 = 1</script><p><img src="/2019/06/05/understand-lagrange-multiplier/20190606145608.png" alt="20190606145608.png"></p>
<p>将目标函数约束到三维空间，超平面中的球体半径为所求目标函数的值。</p>
<p><img src="/2019/06/05/understand-lagrange-multiplier/20190606145519.png" alt="20190606145519.png"></p>
<p>在$(1, 1, 0)$处球体与约束平面相切，取到极值2。</p>
<p><a href="https://danstronger.wordpress.com/2015/08/08/lagrange-multipliers/" target="_blank" rel="noopener">https://danstronger.wordpress.com/2015/08/08/lagrange-multipliers/</a><br><a href="https://jermmy.github.io/2017/07/27/2017-7-27-understand-lagrange-multiplier/" target="_blank" rel="noopener">https://jermmy.github.io/2017/07/27/2017-7-27-understand-lagrange-multiplier/</a><br><a href="https://www.svm-tutorial.com/2016/09/duality-lagrange-multipliers/" target="_blank" rel="noopener">https://www.svm-tutorial.com/2016/09/duality-lagrange-multipliers/</a></p>
]]></content>
      <categories>
        <category>ml</category>
      </categories>
      <tags>
        <tag>math</tag>
      </tags>
  </entry>
  <entry>
    <title>泛函、变分和欧拉-拉格朗日方程</title>
    <url>/2019/06/07/functional-variation-and-Euler-Lagrange-equation/</url>
    <content><![CDATA[<h3 id="泛函"><a href="#泛函" class="headerlink" title="泛函"></a>泛函</h3><p>又被称为<code>函数的函数</code>，是将函数映射成数的方法。<br>传统的函数将数映射成数 $x -&gt; f(x) -&gt; y$;<br>泛函将 <strong>函数映射成数</strong> $f(x) -&gt; g(f) -&gt; y$;</p>
<p>丢一些数进函数，得到一个数<br>丢一些方程进泛函，得到一个数</p>
<h3 id="变分"><a href="#变分" class="headerlink" title="变分"></a>变分</h3><p>用于分析一个泛函被扰动时的变化<br>相当于对一个泛函做微积分<br>变分法的关键定理是<code>欧拉－拉格朗日方程</code>。它对应于泛函的临界点。</p>
<p>变分的框架通常这样表示：</p>
<script type="math/tex; mode=display">
T = \int L(f(x), f(x)', x)dx</script><p>例如在最速降线问题中：<br><img src="/2019/06/07/functional-variation-and-Euler-Lagrange-equation/20190607082634.png" alt="20190607082634.png"></p>
<p>$f(x)$是小球的下落轨道<br>$f(x)’$是小球下落轨道的导数<br>$x$是小球的横向坐标<br>$T$代表从A落到B点所需时间</p>
<p>需要找到能使小球从A滚落B所需时间$T$最短的$f$</p>
<p>其中时间的表达式可以写成</p>
<script type="math/tex; mode=display">
\begin{array}{rcl}
T &=& \int dt \\
&=& \int dL/V \\
&=& \int \frac{ \sqrt {dx^2+df^2})}{g\sqrt {\frac{2f}{g}}}dx \\
&=& \int \frac{ \sqrt {1+f^{'2}})}{\sqrt {2gf}}dx
\end{array}</script><p>也就是距离微元除以当前速度的积分，将问题变为一个关于$f$, $f’$的积分问题。<br>在最速降线问题中仅涉及$f$, $f’$</p>
<h3 id="E-L方程"><a href="#E-L方程" class="headerlink" title="E-L方程"></a>E-L方程</h3><p>欧拉-拉格朗日方程 用于求泛函极值</p>
<h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>在函数中，我们可以通过求函数导数等于零，求出局部极值。这意味着在该变量附近做微小的扰动，会出现函数值达不到极值的现象。</p>
<p>同样的，假设在泛函中的极值处，$f_0(x)$是最理想的解，如果对$f_0(x)$做微小的扰动$f_0(x)+\eta (x)$，会出现泛函数值达不到极值的现象。<br>表示为：</p>
<script type="math/tex; mode=display">\int L(f_0(x) + \eta(x))dx \geqslant \int L(f_0(x))dx</script><h4 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h4><p>我们用 $\epsilon k(x)$ 来代替 $\eta (x)$，其中 $\epsilon$ 代表一个很小的标量，$k(x)$代表任意函数。<br>可以得到：</p>
<script type="math/tex; mode=display">A(\epsilon) = \int L(f_0(x) + \epsilon k(x)) dx</script><p>将其转化为关于$\epsilon$的函数问题，我们需要证明：<br>在对于任意$k(x)$，导数$A(\epsilon)’ = 0$ 在 $\epsilon = 0$上取到。<br>其中扰动$k(x)$的两端同$f(x)$重叠不移动。<br>表示为：</p>
<script type="math/tex; mode=display">
A(\epsilon)' \vert_{\epsilon=0} \forall k(x)</script><p>这是经典的单值函数求极值问题</p>
<h4 id="推导"><a href="#推导" class="headerlink" title="推导"></a>推导</h4><p>$f_1(x) = f_0(x) + \epsilon k(x)$，用$f_1$来表示</p>
<p>由于是在这里积分求导是线性的，将其互换转入积分的内部:</p>
<script type="math/tex; mode=display">
A(\epsilon)' = \int \frac{dL(f_1(x), f_1(x)', x)}{d\epsilon} dx</script><p>根据积分链式求导，求关于$\epsilon$的偏导有：</p>
<script type="math/tex; mode=display">
\begin{array}{rcl}

A(\epsilon)' &=& \int_{x_1}^{x_2}
(\frac{\partial L}{\partial f_1} \frac{\partial f_1}{\partial \epsilon} +
\frac{\partial L}{\partial f_1'} \frac{\partial f_1'}{\partial \epsilon}) dx \\

&=& \int_{x_1}^{x_2}
(\frac{\partial L}{\partial f_1} k(x) +
\frac{\partial L}{\partial f_1'} k(x)') dx
\end{array}</script><p>根据积分分部求导 $(ab)’= ab’ + b’a$：</p>
<script type="math/tex; mode=display">
A(\epsilon)' = \int_{x_1}^{x_2}
[\frac{\partial L}{\partial f_1} k(x) +
(\frac{\partial L}{\partial f_1'}) k(x) \vert_{x_1}^{x_2} -
(\frac{\partial L}{\partial f_1'})' k(x)] dx</script><p>由于在端点 $x_1$，$x_2$处，有约束所以$k(x_1) = k(x_2) = 0$：</p>
<script type="math/tex; mode=display">
A(\epsilon)' = \int_{x_1}^{x_2}
[\frac{\partial L}{\partial f_1} - \frac{d}{dx} (\frac{\partial L}{\partial f_1'})] * k(x) dx = 0</script><p>可以得出E-L方程：</p>
<script type="math/tex; mode=display">
\frac{\partial L}{\partial f_1} - \frac{d}{dx} (\frac{\partial L}{\partial f_1'}) = 0</script><p>在满足该方程的条件下 $f_1(x)$ 是泛函极值函数<br>即：解函数相对于表达式的偏导 = 解函数导数相对于表达式的偏导变化率</p>
<h4 id="引理"><a href="#引理" class="headerlink" title="引理"></a>引理</h4><blockquote>
<p>如果$F(f, f’, x) = F(f, f’)$ E-L 方程可以写成：</p>
<script type="math/tex; mode=display">
\frac{\partial L}{\partial f'}f' - L = C</script></blockquote>
<script type="math/tex; mode=display">
\frac{d}{dx}(\frac{\partial L}{\partial f'}f') =  \frac{d}{dx}(\frac{\partial L}{\partial f'}) + \frac{\partial L}{\partial f'}f''</script><script type="math/tex; mode=display">
\frac{d}{dx}(L) = \frac{\partial L}{\partial f}  \partial f' + \frac{\partial L}{\partial f'}  \partial f''</script><script type="math/tex; mode=display">
\frac {d}{dx}(\frac{\partial L}{\partial f'}f' - L) =
f'[\frac{d}{dx} (\frac{\partial L}{\partial f'}) - \frac{\partial L}{\partial f}] = 0</script><p>可以看出方程的导数在极值处为零，方程等于常数。<br>即：解函数导数相对于表达式的偏导 * 解函数导数 - 表达式 = 常数</p>
<p><a href="https://www.zybuluo.com/zsh-o/note/1090046" target="_blank" rel="noopener">最速降线 与 第一次接触泛函</a><br><a href="http://open.163.com/movie/2017/12/S/Q/MD51CSAIT_MD55OEBSQ.html" target="_blank" rel="noopener">2.3．Euler-lagrange方程的推导</a></p>
]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>math</tag>
      </tags>
  </entry>
  <entry>
    <title>欧拉-拉格朗日方程练习</title>
    <url>/2019/06/08/exercise-in-Euler-Lagrange-equation/</url>
    <content><![CDATA[<h3 id="两点之间直线最短"><a href="#两点之间直线最短" class="headerlink" title="两点之间直线最短"></a>两点之间直线最短</h3><p>写出AB两点间距离的变分表达：</p>
<script type="math/tex; mode=display">
L = \int_{x_1}^{x_2} \sqrt {1+f'^2}dx</script><p>写表达式的E-L方程：</p>
<script type="math/tex; mode=display">
\frac{d}{dx}(\frac{1}{2} \frac{2f'}{\sqrt {1+f'^2}}) = 0</script><p>化简后可得：</p>
<script type="math/tex; mode=display">
\frac{f'}{\sqrt {1+f'^2}}= C_1</script><p>可以得知解函数的导数是一个常数 $f’= C_2$<br>即AB间最短的距离是一条直线</p>
<h3 id="求使旋转双曲面面积最小的函数"><a href="#求使旋转双曲面面积最小的函数" class="headerlink" title="求使旋转双曲面面积最小的函数"></a>求使旋转双曲面面积最小的函数</h3><p>写出用<code>盘圆法</code>积分出面积的变分表达式：</p>
<script type="math/tex; mode=display">
S = \int 2 \pi x dl = \int 2 \pi \sqrt{1+f'^2} dx</script><p>写表达式的E-L方程：</p>
<script type="math/tex; mode=display">
\frac{d}{dx}(x \frac{1}{2} \frac{2f'}{\sqrt {1+f'^2}}) = 0</script><p>化简后可得：</p>
<script type="math/tex; mode=display">
\frac{xf'}{\sqrt {1+f'^2}}= a</script><p>继续化简可得：</p>
<script type="math/tex; mode=display">
f'= \pm \frac{a}{\sqrt{a^2-x}}</script><p>根据 $f’= \frac{1}{\sqrt{1-x^2}}$ 可得 $f = arc\cos(x)$<br>根据 $f’= \frac{1}{\sqrt{x^2-1}}$ 可得 $f = arc\cosh(x)$<br>重新规划 $x = x/a$ 可得 $f = a arc\cosh(\frac{x}{a}) + b$</p>
<h3 id="线段能围出最大面积的形状是圆"><a href="#线段能围出最大面积的形状是圆" class="headerlink" title="线段能围出最大面积的形状是圆"></a>线段能围出最大面积的形状是圆</h3><p>需要用到泛函的拉格朗日乘子法：<br>有表达式$A_{min} = \int L(f, f’, x)dx$<br>在约束$B = \int G(f, f’, x)dx = Constant$下<br>构造 $C = (A - \lambda B)$ 求极值解</p>
<p>写出线段围出面积的变分表达式：</p>
<script type="math/tex; mode=display">
A = \int_{x_1}^{x_2} f dx</script><p>写出约束的变分表达式：</p>
<script type="math/tex; mode=display">
B = \int_{x_1}^{x_2} \sqrt{1+f'^2} dx</script><script type="math/tex; mode=display">
A - \lambda B = \int (f - \lambda \sqrt{1+f'^2}) dx</script><p>写表达式的E-L方程：</p>
<script type="math/tex; mode=display">
1=\frac{d}{dx} \frac{-\lambda f'}{\sqrt{a+f'^2}}</script><p>化简可得：</p>
<script type="math/tex; mode=display">
f' = \frac{a-x}{\sqrt{\lambda ^2 - (a-x)^2}}</script><p>即圆的微分方程，其中 $a-x$对应到 $\Delta x$， $\lambda$对应圆的半径。</p>
<h3 id="最速降线问题"><a href="#最速降线问题" class="headerlink" title="最速降线问题"></a>最速降线问题</h3><p><img src="/2019/06/07/functional-variation-and-Euler-Lagrange-equation/20190607082634.png" alt="20190607082634.png"></p>
<p>需要找到能使小球从A滚落B所需时间$T$最短的$f$</p>
<p>写出滚落所需时间的变分表达式：</p>
<script type="math/tex; mode=display">
T = \int \frac{ \sqrt {1+y^{'2}})}{\sqrt {2gy}}dx</script><p>用引理写出的E-L方程：</p>
<script type="math/tex; mode=display">
\frac{\partial T}{\partial y'}y' - T = \frac{1}{(1+y'^2)^{\frac{1}{2}}(2gy)^{\frac{1}{2}}} = C</script><p>化简后有$y(1+y’^2) = C’$</p>
<h4 id="解："><a href="#解：" class="headerlink" title="解："></a>解：</h4><p>上式是一个三角函数，设$x$是关于$x(\theta)$的函数，$y’ = \cot \theta = \frac{\cos \theta}{\sin \theta}$。<br>由于$y’$是关于x的微分，所以不能求出$y’$关于$\theta$的方程，把$y’$代入上式：</p>
<script type="math/tex; mode=display">
y(1+y'^2) = \frac{1}{\sin ^2 \theta } = C</script><script type="math/tex; mode=display">
y = C \sin ^2 \theta = \frac{C}{2} (1-2\cos 2\theta)</script><hr>
<h4 id="x-的-theta-表示"><a href="#x-的-theta-表示" class="headerlink" title="$x$的$\theta$表示"></a>$x$的$\theta$表示</h4><script type="math/tex; mode=display">
y' = dy/dx = \frac{dy}{d\theta} / \frac{dx}{d\theta}</script><p>转换成$x$关于$\theta$微元的表达式</p>
<script type="math/tex; mode=display">
\frac{dx}{d\theta} = \frac{dy}{d\theta}/ y' = \frac{C\sin 2\theta}{\cot \theta} = 2C \sin^2 \theta = C(1-\cos 2\theta)</script><p>$x$关于$\theta$的积分有：</p>
<script type="math/tex; mode=display">
\int dx = \int C(1-\cos 2\theta) d \theta</script><p>积分可得：</p>
<script type="math/tex; mode=display">
x + C_1 = C(\theta - \frac{1}{2} \sin 2\theta) + C_2</script><p>化简得：</p>
<script type="math/tex; mode=display">
x = \frac{C}{2}(2\theta - \sin 2\theta) + C_1</script><hr>
<h4 id="y-的-x-、-y-表示"><a href="#y-的-x-、-y-表示" class="headerlink" title="$y$的$x$、$y$表示"></a>$y$的$x$、$y$表示</h4><p>$\theta$角的变量表示</p>
<script type="math/tex; mode=display">
2 \theta = \frac{x - C_1 + 2a\sin \theta \cos \theta}{a}</script><p>用$a$来代替$\frac{C}{2}$，由于 $y = C \sin ^2 \theta$，有 $\sin \theta = \sqrt{\frac{y}{2a}}$、 $\cos \theta = \sqrt{\frac{2a-y}{2a}}$</p>
<script type="math/tex; mode=display">
2 \theta = \frac{x+\sqrt{y(2a-y)}}{a}</script><p>代回原式有：</p>
<script type="math/tex; mode=display">
\frac{y}{a} = 1 - \cos \frac{x+\sqrt{y(2a-y)}}{a}</script><p><a href="http://open.163.com/movie/2017/12/T/K/MD51CSAIT_MD55OF2TK.html" target="_blank" rel="noopener">2.4．Euler-lagrange方程的应用</a><br><a href="http://open.163.com/movie/2017/12/0/I/MD51CSAIT_MD55OCM0I.html" target="_blank" rel="noopener">3.1．拉格朗日乘子法</a><br><a href="http://open.163.com/movie/2017/12/S/L/MD51CSAIT_MD55OANSL.html" target="_blank" rel="noopener">3.2. 泛函拉格朗日乘子法（一）</a><br><a href="http://open.163.com/movie/2017/12/0/V/MD51CSAIT_MD55OGG0V.html" target="_blank" rel="noopener">3.3. 泛函拉格朗日乘子法（二）</a><br><a href="https://www.zybuluo.com/zsh-o/note/1090046" target="_blank" rel="noopener">最速降线 与 第一次接触泛函</a></p>
]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>math</tag>
      </tags>
  </entry>
  <entry>
    <title>线性回归和逻辑回归</title>
    <url>/2019/06/30/linear-logistic-regression/</url>
    <content><![CDATA[<p><img src="/2019/06/30/linear-logistic-regression/AndrewNg-Headshot.jpg" alt="AndrewNg-Headshot"></p>
<p>AndrewNg</p>
<p>就我理解所谓的回归问题，就是做假设，完善这个假设，验证这个假设的过程。<br>有的假设本身很离谱，完善了也没有好的验证结果；有的问题本身很复杂，假设很难归纳问题。</p>
<p>像西瓜书上说了：No Free Launch Theorem<br>要根据特定的问题，应用特定的算法，看算法本身的归纳偏好和问题是否匹配。</p>
<h2 id="线性回归"><a href="#线性回归" class="headerlink" title="线性回归"></a>线性回归</h2><p>代价函数</p>
<script type="math/tex; mode=display">J(\theta)=\frac{1}{2m}\sum_{i=1}^{m}(h_{\theta}(x^{(i)}-y^{i}))^2</script><p>其中 $h_{\theta}$ 是假设函数 $\theta^T X$</p>
<p>也就是求目标函数方差最小的参数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">J = sum((X * theta - y) .^ 2) / (2 * length(y));</span><br></pre></td></tr></table></figure>
<h3 id="梯度下降法"><a href="#梯度下降法" class="headerlink" title="梯度下降法"></a>梯度下降法</h3><p>每一个参数就是一个维度，求各个维度上的函数变化率，组成向量即梯度。</p>
<script type="math/tex; mode=display">\frac{\partial J(\theta)}{\partial \theta_{j}} =\frac{1}{m}\sum_{i=1}^{m}(h_{\theta}(x^{(i)}-y^{(i)}))x_{j}^{(i))}</script><p>每一次迭代都向梯度方向前进一小步，其中 <code>alpha</code> 是学习率，最终达到收敛目的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theta = theta - (alpha * ((X&apos; * (X * theta - y))/ m));</span><br></pre></td></tr></table></figure>
<h3 id="正规方程法"><a href="#正规方程法" class="headerlink" title="正规方程法"></a>正规方程法</h3><p>即解线性代数的解。</p>
<script type="math/tex; mode=display">\theta = (X^T X)^{-1}X^T y</script><p>线性方程组的个数不够(样本不够)，或参数可相互线性表示(维度耦合度过高)<br>会导致参数矩阵是一个奇异矩阵，非方正，不可逆；矩阵的秩小于维数，方程组没有唯一解。</p>
<h3 id="向量化"><a href="#向量化" class="headerlink" title="向量化"></a>向量化</h3><p>为简化代码，加速计算，需要将计算向量化<br>在线性回归计算中，将偏导项、损失函数计算向量化：<br>  将假设函数的变量参数当作向量 $\theta$，各个样本作为矩阵行，样本属性作为矩阵列，再在左侧并上偏移向量1。<br>  那么梯度可用 <script type="math/tex">X^T * (X * \theta - y)/m</script> 表示，其中 <script type="math/tex">X * \theta - y</script> 代表当前参数下的样本【误差向量】。<br>  特征向量转置 * 误差向量 / m 得到的标量即，函数在 $ \theta_j $ 维度上的偏导数。<br>  求得所有特征维度上的偏导数组成向量即梯度。</p>
<h2 id="逻辑回归"><a href="#逻辑回归" class="headerlink" title="逻辑回归"></a>逻辑回归</h2><p>逻辑回归是使用线性回归的思想，来处理分类问题。<br>使用<code>sigmoid</code>函数，让原线性方程约束到(0, 1)之间；原有的凸函数也变得非凸，二阶导不一定保持符号。</p>
<script type="math/tex; mode=display">h_{\theta}=\frac{1}{1+e^{-\theta^T x}}</script><p>为了保证损失函数的凸性，需要对原损失函数做一次变换（极大似然法）</p>
<script type="math/tex; mode=display">J(\theta)=\frac{1}{m} \sum_{i=1}^{m}[-y^{(i)}log(h_{\theta}(x^{(i)}) - (1-y^{(i)})log(1-h_{\theta}(x^{(i)}))]</script><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">J = -sum( y&apos; * log(sigmoid(X * theta)) + (1 - y)&apos; * log(1 - sigmoid(X * theta)) ) / m;</span><br></pre></td></tr></table></figure>
<p>梯度方程也发生变化</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grad = X&apos; * (sigmoid(X * theta) - y) ./ m;</span><br></pre></td></tr></table></figure>
<p>在“回归”时，数值 &gt;= 0.5 为正类， &lt; 0.5 为负类</p>
<h2 id="正则化"><a href="#正则化" class="headerlink" title="正则化"></a>正则化</h2><p>算法的泛化能力非常重要，训练过度很可能过拟合，无法在验证集里获得好的效果。<br>正则化在线性回归中，相当于是在每步迭代中提前缩小了 $\theta$ (实际没变)<br>这样获得的参数向量不会在谷底，和训练集的拟合度能得到控制，泛化能力得到保障。</p>
<script type="math/tex; mode=display">J(\theta)=\frac{1}{m} \sum_{i=1}^{m}[-y^{(i)}log(h_{\theta}(x^{(i)}) - (1-y^{(i)})log(1-h_{\theta}(x^{(i)}))] + \frac{\lambda}{2m}\sum_{j=1}^{n}\theta_{j}^2</script><h3 id="梯度下降的正规化"><a href="#梯度下降的正规化" class="headerlink" title="梯度下降的正规化"></a>梯度下降的正规化</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">J = -sum( y&apos; * log(sigmoid(X * theta)) + (1 - y)&apos; * log(1 - sigmoid(X * theta)) ) / m + (lambda/(2*m)) * sum(theta.^2);</span><br></pre></td></tr></table></figure>
<p>正则化后的梯度为：</p>
<script type="math/tex; mode=display">\frac{\partial J(\theta)}{\partial \theta_{j}} = （\frac{1}{m}\sum_{i=1}^{m}(h_{\theta}(x^{(i)}-y^{(i)}))x_{j}^{(i)})+\frac{\lambda}{m}\theta_j</script><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grad = X&apos; * (sigmoid(X * theta) - y) ./ m + (lambda / m) * theta;</span><br></pre></td></tr></table></figure>
<h3 id="正规方程的正规化"><a href="#正规方程的正规化" class="headerlink" title="正规方程的正规化"></a>正规方程的正规化</h3><p>内部加上一个 $\lambda$ 倍的第一行全零的单位矩阵即可。这样还能消除参数矩阵的不可逆问题。</p>
<script type="math/tex; mode=display">\theta = (X^T X + \lambda
  \begin{pmatrix}
  0 & 0 & ... & 0\\
  0 & 1 & ...  & 0\\
  ... & ... & 1 & ...\\
  0 & 0 & ... & 1 \\
  \end{pmatrix})^{-1}X^Ty</script><hr>
<p><a href="https://www.coursera.org/learn/machine-learning" target="_blank" rel="noopener">https://www.coursera.org/learn/machine-learning</a><br><a href="https://study.163.com/course/courseMain.htm?courseId=1004570029" target="_blank" rel="noopener">https://study.163.com/course/courseMain.htm?courseId=1004570029</a></p>
]]></content>
      <categories>
        <category>ml</category>
      </categories>
      <tags>
        <tag>math</tag>
      </tags>
  </entry>
  <entry>
    <title>maintain log files by shell</title>
    <url>/2019/07/05/maintain-log-files-by-shell/</url>
    <content><![CDATA[<h3 id="move-log-file-to-another-device"><a href="#move-log-file-to-another-device" class="headerlink" title="move log file to another device"></a>move log file to another device</h3><p>scheduled move specific file to target directory<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># move log 1 month ago</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get date string</span></span><br><span class="line">date=`date -d <span class="string">'1 month ago'</span> +<span class="string">'%Y-%m-%d'</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment"># file name</span></span><br><span class="line">default=<span class="string">"/logs/common-default.log."</span><span class="variable">$&#123;date&#125;</span><span class="string">".log"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">"<span class="variable">$default</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$date</span><span class="string">' move '</span><span class="variable">$default</span><span class="string">' to /data0/backup'</span> &gt;&gt; /logs/backup.log</span><br><span class="line">    `mv <span class="variable">$default</span> /data0/backup`</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<p><code>crontab -e</code> add schedule<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10 0 * * * sh /move.sh</span><br></pre></td></tr></table></figure></p>
<h3 id="delete-log-file-by-function"><a href="#delete-log-file-by-function" class="headerlink" title="delete log file by function"></a>delete log file by function</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># delete log 1 month ago</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get date string</span></span><br><span class="line">date=`date -d <span class="string">'1 month ago'</span> +<span class="string">'%Y-%m-%d'</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment"># find files modify 1 month ago</span></span><br><span class="line">files=find /data0/backup -<span class="built_in">type</span> f -not -newermt <span class="variable">$date</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> delete_log_files</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">test</span> <span class="variable">$#</span> -gt 0</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        `rm -f <span class="variable">$1</span>`</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'$date clean $1'</span> &gt;&gt; /logs/cleanup.log</span><br><span class="line">        <span class="built_in">shift</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">delete_log_files <span class="variable">$files</span></span><br></pre></td></tr></table></figure>
<h3 id="delete-log-file-by-command"><a href="#delete-log-file-by-command" class="headerlink" title="delete log file by command"></a>delete log file by command</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">find /logs/ -<span class="built_in">type</span> f -mtime +30 -name <span class="string">'*.log'</span> -<span class="built_in">exec</span> rm -rf &#123;&#125; \;</span><br></pre></td></tr></table></figure>
<p><code>{}</code> is placeholder of the file be found<br><code>\;</code> mean exec command finish</p>
<hr>
<p>process every line in a multi-line variable<br><a href="https://cloud.tencent.com/developer/ask/46222" target="_blank" rel="noopener">https://cloud.tencent.com/developer/ask/46222</a></p>
<p>‘crontab’ schedule<br><a href="https://www.cnblogs.com/peida/archive/2013/01/08/2850483.html" target="_blank" rel="noopener">https://www.cnblogs.com/peida/archive/2013/01/08/2850483.html</a></p>
<p>‘find’ command -exec<br><a href="https://blog.csdn.net/u010900754/article/details/83020378" target="_blank" rel="noopener">https://blog.csdn.net/u010900754/article/details/83020378</a></p>
<p>‘find’ command useage<br><a href="https://blog.csdn.net/h106140873/article/details/72874455" target="_blank" rel="noopener">https://blog.csdn.net/h106140873/article/details/72874455</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>spring cloud feign support file upload</title>
    <url>/2019/07/30/spring-cloud-feign-support-file-upload/</url>
    <content><![CDATA[<h2 id="phenomenon"><a href="#phenomenon" class="headerlink" title="phenomenon"></a>phenomenon</h2><p>Spring Cloud Feign component not support file upload between micron service.<br>it may throw exception like this:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">feign.codec.EncodeException: class [Lorg.springframework.web.multipart.MultipartFile; is not a type supported by this encoder.</span><br><span class="line">    at feign.codec.Encoder$Default.encode(Encoder.java:<span class="number">90</span>) ~[feign-core-<span class="number">9.5</span><span class="number">.1</span>.jar:na]</span><br><span class="line">    at feign.form.FormEncoder.encode(FormEncoder.java:<span class="number">87</span>) ~[feign-form-<span class="number">3.3</span><span class="number">.0</span>.jar:<span class="number">3.3</span><span class="number">.0</span>]</span><br><span class="line">    at feign.form.spring.SpringFormEncoder.encode(SpringFormEncoder.java:<span class="number">64</span>) ~[feign-form-spring-<span class="number">3.3</span><span class="number">.0</span>.jar:<span class="number">3.3</span><span class="number">.0</span>]</span><br></pre></td></tr></table></figure>
<h2 id="add-dependencies"><a href="#add-dependencies" class="headerlink" title="add dependencies"></a>add dependencies</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.openfeign.form<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>feign-form-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.openfeign.form<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>feign-form<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><a href="https://mvnrepository.com/artifact/io.github.openfeign.form/feign-form-spring" target="_blank" rel="noopener">https://mvnrepository.com/artifact/io.github.openfeign.form/feign-form-spring</a></p>
<p>be careful the <code>feign-form-spring</code> depend on <code>spring-web</code> it may have conflict with your project.<br>for example in  <code>spring-boot:2.0.5.RELEASE</code> <code>spring-cloud:Finchley.SR1</code> project has already import<br><code>spring-web:5.0.9.RELEASE</code>, if import <code>feign-form-spring:3.3.0</code> it will import <code>spring-web:4.3.18.RELEASE</code> too,<br>it cause spring bean creation exception.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.openfeign.form<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>feign-form-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="file-receive-part"><a href="#file-receive-part" class="headerlink" title="file receive part"></a>file receive part</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ApiOperation</span>(<span class="string">"file upload receive part"</span>)</span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/upload"</span>, method = RequestMethod.POST, consumes = MediaType.MULTIPART_FORM_DATA_VALUE)</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;XXX&gt; <span class="title">uploadFile</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        @RequestPart(value = <span class="string">"files"</span>)</span></span></span><br><span class="line"><span class="function">                MultipartFile[] files,</span></span><br><span class="line"><span class="function">        @<span class="title">RequestParam</span><span class="params">(name = <span class="string">"userId"</span>)</span></span></span><br><span class="line"><span class="function">        @<span class="title">ApiParam</span><span class="params">(name = <span class="string">"userId"</span>, value = <span class="string">"用户ID"</span>, required = <span class="keyword">true</span>)</span></span></span><br><span class="line"><span class="function">        @<span class="title">NotNull</span><span class="params">(message = <span class="string">"用户ID不能为空"</span>)</span></span></span><br><span class="line"><span class="function">                Long userId,</span></span><br><span class="line"><span class="function">        @<span class="title">RequestParam</span><span class="params">(name = <span class="string">"userName"</span>)</span></span></span><br><span class="line"><span class="function">        @<span class="title">ApiParam</span><span class="params">(name = <span class="string">"userName"</span>, value = <span class="string">"用户名称"</span>, required = <span class="keyword">true</span>)</span></span></span><br><span class="line"><span class="function">        @<span class="title">NotBlank</span><span class="params">(message = <span class="string">"用户名不能为空"</span>)</span></span></span><br><span class="line"><span class="function">                String userName)</span>&#123;</span><br><span class="line">                ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>be careful <code>consumes</code> property must add to the annotation <code>RequestMapping</code><br><code>method</code> property must be <code>POST</code>, <code>RequestPart</code> is working.</p>
<h2 id="feign-client-part"><a href="#feign-client-part" class="headerlink" title="feign client part"></a>feign client part</h2><p>client part is a little complex.</p>
<h3 id="add-configuration-class"><a href="#add-configuration-class" class="headerlink" title="add configuration class:"></a>add configuration class:</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MultipartSupportConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ObjectFactory&lt;HttpMessageConverters&gt; messageConverters;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="meta">@Scope</span>(<span class="string">"prototype"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Encoder <span class="title">feignEncoder</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//        return new SpringFormEncoder();</span></span><br><span class="line"><span class="comment">//        return new SpringFormEncoder(new SpringEncoder(messageConverters));</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> FeignSpringFormEncoder(<span class="keyword">new</span> SpringEncoder(messageConverters));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> feign.Logger.<span class="function">Level <span class="title">multipartLoggerLevel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> feign.Logger.Level.FULL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>SpringFormEncoder</code> support single file upload.</li>
<li><code>FeignSpringFormEncoder</code> support file array upload.</li>
<li><code>SpringEncoder</code> avoid project make <code>RequestBody</code> encoding error.</li>
</ul>
<h3 id="add-form-encoder"><a href="#add-form-encoder" class="headerlink" title="add form encoder"></a>add form encoder</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FeignSpringFormEncoder</span> <span class="keyword">extends</span> <span class="title">FormEncoder</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Constructor with the default Feign's encoder as a delegate.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FeignSpringFormEncoder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(<span class="keyword">new</span> Default());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Constructor with specified delegate encoder.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> delegate delegate encoder, if this encoder couldn't encode object.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FeignSpringFormEncoder</span><span class="params">(Encoder delegate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(delegate);</span><br><span class="line">        MultipartFormContentProcessor processor = (MultipartFormContentProcessor) getContentProcessor(ContentType.MULTIPART);</span><br><span class="line">        processor.addWriter(<span class="keyword">new</span> SpringSingleMultipartFileWriter());</span><br><span class="line">        processor.addWriter(<span class="keyword">new</span> SpringManyMultipartFilesWriter());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">encode</span><span class="params">(Object object, Type bodyType, RequestTemplate template)</span> <span class="keyword">throws</span> EncodeException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (bodyType.equals(MultipartFile<span class="class">.<span class="keyword">class</span>)) </span>&#123;</span><br><span class="line">            MultipartFile file = (MultipartFile) object;</span><br><span class="line">            Map data = Collections.singletonMap(file.getName(), object);</span><br><span class="line">            <span class="keyword">super</span>.encode(data, MAP_STRING_WILDCARD, template);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (bodyType.equals(MultipartFile[]<span class="class">.<span class="keyword">class</span>)) </span>&#123;</span><br><span class="line">            MultipartFile[] file = (MultipartFile[]) object;</span><br><span class="line">            <span class="keyword">if</span>(file != <span class="keyword">null</span>) &#123;</span><br><span class="line">                Map data = Collections.singletonMap(file.length == <span class="number">0</span> ? <span class="string">""</span> : file[<span class="number">0</span>].getName(), object);</span><br><span class="line">                <span class="keyword">super</span>.encode(data, MAP_STRING_WILDCARD, template);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">super</span>.encode(object, bodyType, template);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="add-interface"><a href="#add-interface" class="headerlink" title="add interface:"></a>add interface:</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@FeignClient</span>(name = <span class="string">"upload-example"</span>, configuration = MultipartSupportConfig<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">interface</span> <span class="title">CloudUploadService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(<span class="string">"文件上传"</span>)</span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/upload"</span>, method = RequestMethod.POST, consumes = MediaType.MULTIPART_FORM_DATA_VALUE)</span><br><span class="line">    <span class="function">List&lt;XXX&gt; <span class="title">uploadFile</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            @RequestPart(value = <span class="string">"files"</span>)</span></span></span><br><span class="line"><span class="function">                    MultipartFile[] files,</span></span><br><span class="line"><span class="function">            @<span class="title">RequestParam</span><span class="params">(name = <span class="string">"userId"</span>)</span></span></span><br><span class="line"><span class="function">            @<span class="title">ApiParam</span><span class="params">(name = <span class="string">"userId"</span>, value = <span class="string">"用户ID"</span>, required = <span class="keyword">true</span>)</span></span></span><br><span class="line"><span class="function">            @<span class="title">NotNull</span><span class="params">(message = <span class="string">"用户ID不能为空"</span>)</span></span></span><br><span class="line"><span class="function">                    Long userId,</span></span><br><span class="line"><span class="function">            @<span class="title">RequestParam</span><span class="params">(name = <span class="string">"userName"</span>)</span></span></span><br><span class="line"><span class="function">            @<span class="title">ApiParam</span><span class="params">(name = <span class="string">"userName"</span>, value = <span class="string">"用户名称"</span>, required = <span class="keyword">true</span>)</span></span></span><br><span class="line"><span class="function">            @<span class="title">NotBlank</span><span class="params">(message = <span class="string">"用户名不能为空"</span>)</span></span></span><br><span class="line"><span class="function">                    String userName)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>in annotation <code>FeignClient</code> add configuration property, point to the encoding support class.</p>
<h2 id="Testing"><a href="#Testing" class="headerlink" title="Testing"></a>Testing</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootTest</span></span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">UploadTester</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CloudUploadService uploadService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@SneakyThrows</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testHandleFileUpload</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">"upload.txt"</span>);</span><br><span class="line">        DiskFileItem fileItem = (DiskFileItem) <span class="keyword">new</span> DiskFileItemFactory().createItem(<span class="string">"file"</span>,</span><br><span class="line">                MediaType.TEXT_PLAIN_VALUE, <span class="keyword">true</span>, file.getName());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> (InputStream input = <span class="keyword">new</span> FileInputStream(file); OutputStream os = fileItem.getOutputStream()) &#123;</span><br><span class="line">            IOUtils.copy(input, os);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Invalid file: "</span> + e, e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        MultipartFile multi = <span class="keyword">new</span> CommonsMultipartFile(fileItem);</span><br><span class="line"></span><br><span class="line">        log.info(uploadService.handleFileUpload(<span class="keyword">new</span> MultipartFile[]&#123;multi&#125;, <span class="number">1L</span>, <span class="string">"tester"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a href="https://github.com/OpenFeign/feign-form" target="_blank" rel="noopener">https://github.com/OpenFeign/feign-form</a><br><a href="https://www.jianshu.com/p/4f4d9d084b1d" target="_blank" rel="noopener">https://www.jianshu.com/p/4f4d9d084b1d</a><br><a href="http://blog.didispace.com/spring-cloud-starter-dalston-2-4/" target="_blank" rel="noopener">http://blog.didispace.com/spring-cloud-starter-dalston-2-4/</a><br><a href="https://blog.csdn.net/gududedabai/article/details/79895893" target="_blank" rel="noopener">https://blog.csdn.net/gududedabai/article/details/79895893</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>http</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello rabbit</title>
    <url>/2019/08/10/Hello-rabbit/</url>
    <content><![CDATA[<h2 id="Install-rabbitmq-in-ubuntu-16-04-1"><a href="#Install-rabbitmq-in-ubuntu-16-04-1" class="headerlink" title="Install rabbitmq in ubuntu 16.04.1"></a>Install rabbitmq in ubuntu 16.04.1</h2><p>prepare Ubuntu Server 16.04.1 LTS 64 first</p>
<p><code>apt-get install rabbitmq-server</code></p>
<p>check service status<br><code>systemctl status rabbitmq-server</code></p>
<p>daily command<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service rabbitmq-server start</span><br><span class="line">service rabbitmq-server stop</span><br><span class="line">service rabbitmq-server restart</span><br></pre></td></tr></table></figure></p>
<h2 id="manage-interface"><a href="#manage-interface" class="headerlink" title="manage interface"></a>manage interface</h2><p>enable management interface<br><code>rabbitmq-plugins enable rabbitmq_management</code></p>
<p><code>127.0.0.1:15672</code> is the default address, <code>guest/guest</code> is the default account.</p>
<h2 id="out-account"><a href="#out-account" class="headerlink" title="out account"></a>out account</h2><p>add user<br><code>rabbitmqctl add_user root yourpassword</code><br>add role<br><code>rabbitmqctl set_user_tags root administrator</code><br>add permission<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rabbitmqctl  set_permissions  -p  VHostPath  User  ConfP  WriteP  ReadP</span><br><span class="line">rabbitmqctl  set_permissions  -p  &quot;/&quot; root &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;</span><br></pre></td></tr></table></figure></p>
<h2 id="enjoy-route"><a href="#enjoy-route" class="headerlink" title="enjoy route :)"></a>enjoy route :)</h2><p><code>exchange</code> bind <code>queue</code> route by <code>key</code> in same <code>arguments</code></p>
<p><a href="https://blog.csdn.net/qq_22638399/article/details/81704372" target="_blank" rel="noopener">https://blog.csdn.net/qq_22638399/article/details/81704372</a><br><a href="https://www.cnblogs.com/feixiablog/articles/8317605.html" target="_blank" rel="noopener">https://www.cnblogs.com/feixiablog/articles/8317605.html</a></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>hello</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql 5.7 json type</title>
    <url>/2019/08/12/mysql-5-7-json-type/</url>
    <content><![CDATA[<h2 id="none-structure-data-in-mysql"><a href="#none-structure-data-in-mysql" class="headerlink" title="none structure data in mysql"></a>none structure data in mysql</h2><p>in mysql 5.7 , support store data in json type.</p>
<h3 id="create-table-with-virtual-column"><a href="#create-table-with-virtual-column" class="headerlink" title="create table with virtual column."></a>create table with virtual column.</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> players (  </span><br><span class="line">   <span class="keyword">id</span> <span class="built_in">INT</span> <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line">   player <span class="keyword">JSON</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">   <span class="comment">-- name virtual column</span></span><br><span class="line">   vname <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">GENERATED</span> <span class="keyword">ALWAYS</span> <span class="keyword">AS</span> (<span class="string">`player`</span> -&gt;&gt; <span class="string">'$.name'</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">COLUMNS</span> <span class="keyword">FROM</span> <span class="string">`players`</span>;</span><br></pre></td></tr></table></figure>
<h3 id="prepare-save-progress"><a href="#prepare-save-progress" class="headerlink" title="prepare save progress"></a>prepare save progress</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- check whether store procedure open</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'log_bin_trust_function_creators'</span>;</span><br><span class="line"><span class="comment">-- open store procedure in mysql</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> log_bin_trust_function_creators=<span class="number">1</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">delimiter $$</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> insert_player(<span class="keyword">in</span> max_num <span class="built_in">int</span>(<span class="number">10</span>))</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"> <span class="keyword">declare</span> i <span class="built_in">int</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line"> <span class="keyword">declare</span> json_data <span class="built_in">varchar</span>(<span class="number">2000</span>) <span class="keyword">default</span> <span class="string">'1'</span>;</span><br><span class="line"> <span class="keyword">set</span> autocommit= <span class="number">0</span>;</span><br><span class="line"> repeat</span><br><span class="line"> <span class="keyword">set</span> i=i+<span class="number">1</span>;</span><br><span class="line"> <span class="keyword">set</span> json_data = <span class="keyword">concat</span>(<span class="keyword">concat</span>(<span class="string">'&#123;"name":"xxx-'</span>,i),<span class="string">'","age":34&#125;'</span>);</span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> players (<span class="keyword">id</span>,player) <span class="keyword">values</span>(<span class="literal">null</span>,json_data);</span><br><span class="line"> until i=max_num <span class="keyword">end</span> <span class="keyword">repeat</span>;</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">end</span> $$</span><br></pre></td></tr></table></figure>
<h3 id="test-data-and-try"><a href="#test-data-and-try" class="headerlink" title="test data, and try"></a>test data, and try</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">call</span> insert_player(<span class="number">2000000</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`players`</span> <span class="keyword">WHERE</span> <span class="string">`vname`</span> = <span class="string">"xxx-990099"</span></span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> <span class="string">`name_idx`</span> <span class="keyword">ON</span> <span class="string">`players`</span>(<span class="string">`vname`</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`players`</span> <span class="keyword">WHERE</span> <span class="string">`vname`</span> = <span class="string">"xxx-990099"</span></span><br></pre></td></tr></table></figure>
<p><a href="https://blog.csdn.net/bugs4j/article/details/79932538" target="_blank" rel="noopener">https://blog.csdn.net/bugs4j/article/details/79932538</a></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello jenkins</title>
    <url>/2019/08/23/Hello-jenkins/</url>
    <content><![CDATA[<h2 id="install-jenkins"><a href="#install-jenkins" class="headerlink" title="install jenkins"></a>install jenkins</h2><p>Download jenkins.war, tomcat 8<br>if install suggested plugins report error like this<br>“No such plugin: cloudbees-folder”</p>
<p>install <code>cloudbees-folder.hpi</code> first</p>
<h2 id="install-plugins"><a href="#install-plugins" class="headerlink" title="install plugins"></a>install plugins</h2><p>install <code>Maven Integration</code>, if error then in plugin management<br>upload plugin package manually.</p>
<h2 id="proxy-server"><a href="#proxy-server" class="headerlink" title="proxy server"></a>proxy server</h2><p>if jenkins server can’t visit internet then use proxy, and have a try again.<br><a href="https://github.com/adamfisk/LittleProxy" target="_blank" rel="noopener">https://github.com/adamfisk/LittleProxy</a><br>username:user1<br>password:user2</p>
<h2 id="maven-setting"><a href="#maven-setting" class="headerlink" title="maven setting"></a>maven setting</h2><p>maven can set proxy too, modify <code>setting.xml</code>, add proxy setting<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;proxy&gt;</span><br><span class="line">    &lt;id&gt;optional&lt;/id&gt;</span><br><span class="line">    &lt;active&gt;true&lt;/active&gt;</span><br><span class="line">    &lt;protocol&gt;http&lt;/protocol&gt;</span><br><span class="line">    &lt;username&gt;user1&lt;/username&gt;</span><br><span class="line">    &lt;password&gt;user2&lt;/password&gt;</span><br><span class="line">    &lt;host&gt;192.168.1.2&lt;/host&gt;</span><br><span class="line">    &lt;port&gt;8080&lt;/port&gt;</span><br><span class="line">    &lt;nonProxyHosts&gt;localhost|127.0.0.1&lt;/nonProxyHosts&gt;</span><br><span class="line">  &lt;/proxy&gt;</span><br><span class="line">&lt;/proxies&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="git-setting"><a href="#git-setting" class="headerlink" title="git setting"></a>git setting</h2><p>save git account in linux server<br><code>vim .git-credentials</code><br>add <code>http(s)://{username}:{password}@serverAddress</code><br>add setting<br><code>git config --global credential.helper store</code></p>
<h2 id="prevent-preocess-be-killed"><a href="#prevent-preocess-be-killed" class="headerlink" title="prevent preocess be killed"></a>prevent preocess be killed</h2><ol>
<li>add command <code>BUILD_ID=DONTKILLME</code> in every shell input</li>
<li>add param <code>-Dhudson.util.ProcessTree.disable=true</code> in java command</li>
<li>add setting <code>JAVA_OPTS=&quot;$JAVA_OPTS -Dhudson.util.ProcessTree.disable=true&quot;</code> in <code>catalina.sh</code></li>
</ol>
<h3 id="install-jenkins-1"><a href="#install-jenkins-1" class="headerlink" title="install jenkins"></a>install jenkins</h3><p><a href="https://blog.csdn.net/utopiaofartoria/article/details/79612754" target="_blank" rel="noopener">https://blog.csdn.net/utopiaofartoria/article/details/79612754</a><br><a href="https://blog.csdn.net/ming19951224/article/details/80958761" target="_blank" rel="noopener">https://blog.csdn.net/ming19951224/article/details/80958761</a></p>
<h3 id="jenkins-experience"><a href="#jenkins-experience" class="headerlink" title="jenkins experience"></a>jenkins experience</h3><p><a href="https://www.jianshu.com/p/06d2c7fda227" target="_blank" rel="noopener">https://www.jianshu.com/p/06d2c7fda227</a></p>
<h3 id="setting-of-tools"><a href="#setting-of-tools" class="headerlink" title="setting of tools"></a>setting of tools</h3><p><a href="https://www.cnblogs.com/wkrbky/p/6351243.html" target="_blank" rel="noopener">https://www.cnblogs.com/wkrbky/p/6351243.html</a><br><a href="https://www.cnblogs.com/zhuiluoyu/p/7723949.html" target="_blank" rel="noopener">https://www.cnblogs.com/zhuiluoyu/p/7723949.html</a></p>
<h3 id="global-proxy"><a href="#global-proxy" class="headerlink" title="global proxy"></a>global proxy</h3><p><a href="https://www.cnblogs.com/EasonJim/p/9826681.html" target="_blank" rel="noopener">https://www.cnblogs.com/EasonJim/p/9826681.html</a></p>
<h2 id="resources"><a href="#resources" class="headerlink" title="resources"></a>resources</h2><p><a href="http://ftp.icm.edu.pl/packages/jenkins/plugins" target="_blank" rel="noopener">http://ftp.icm.edu.pl/packages/jenkins/plugins</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/jenkins/plugins/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/jenkins/plugins/</a></p>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>hello</tag>
      </tags>
  </entry>
  <entry>
    <title>proxy in linux</title>
    <url>/2019/08/27/proxy-in-linux/</url>
    <content><![CDATA[<h2 id="global-proxy"><a href="#global-proxy" class="headerlink" title="global proxy"></a>global proxy</h2><p>in file <code>/etc/profile</code> set<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export proxy=&quot;http://user:pwd1@192.168.3.1:8848&quot;</span><br><span class="line">export http_proxy=$proxy</span><br><span class="line">export https_proxy=$proxy</span><br><span class="line">export ftp_proxy=$proxy</span><br><span class="line">export no_proxy=&quot;localhost, 127.0.0.1, ::1&quot;</span><br></pre></td></tr></table></figure></p>
<p>unset command<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">unset http_proxy</span><br><span class="line">unset https_proxy</span><br><span class="line">unset ftp_proxy</span><br><span class="line">unset no_proxy</span><br></pre></td></tr></table></figure></p>
<p>load variables<br><code>source /etc/profile</code></p>
<h2 id="yum-proxy"><a href="#yum-proxy" class="headerlink" title="yum proxy"></a>yum proxy</h2><p>in file <code>/etc/yum.conf</code> set</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">proxy=http://192.168.3.1:8848</span><br><span class="line">proxy_username=user</span><br><span class="line">proxy_password=pwd</span><br></pre></td></tr></table></figure>
<h2 id="npm-proxy"><a href="#npm-proxy" class="headerlink" title="npm proxy"></a>npm proxy</h2><p>set command<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config set proxy http://user:pwd@192.168.3.1:8848</span><br><span class="line">npm confit set https-proxy http://user:pwd@192.168.3.1:8848</span><br></pre></td></tr></table></figure></p>
<p>unset command<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config delete proxy</span><br><span class="line">npm config delete https-proxy</span><br></pre></td></tr></table></figure></p>
<p>npm setting<br><a href="https://segmentfault.com/a/1190000002589144" target="_blank" rel="noopener">https://segmentfault.com/a/1190000002589144</a></p>
<h2 id="maven-proxy"><a href="#maven-proxy" class="headerlink" title="maven proxy"></a>maven proxy</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;proxy&gt;</span><br><span class="line">    &lt;id&gt;optional&lt;/id&gt;</span><br><span class="line">    &lt;active&gt;true&lt;/active&gt;</span><br><span class="line">    &lt;protocol&gt;http&lt;/protocol&gt;</span><br><span class="line">    &lt;username&gt;user&lt;/username&gt;</span><br><span class="line">    &lt;password&gt;pwd&lt;/password&gt;</span><br><span class="line">    &lt;host&gt;192.168.3.1&lt;/host&gt;</span><br><span class="line">    &lt;port&gt;8080&lt;/port&gt;</span><br><span class="line">    &lt;nonProxyHosts&gt;localhost|127.0.0.1&lt;/nonProxyHosts&gt;</span><br><span class="line">  &lt;/proxy&gt;</span><br><span class="line">&lt;/proxies&gt;</span><br></pre></td></tr></table></figure>
<p><a href="https://www.cnblogs.com/EasonJim/p/9826681.html" target="_blank" rel="noopener">https://www.cnblogs.com/EasonJim/p/9826681.html</a><br><a href="https://blog.csdn.net/yanzi1225627/article/details/80247758" target="_blank" rel="noopener">https://blog.csdn.net/yanzi1225627/article/details/80247758</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>command</tag>
        <tag>proxy</tag>
      </tags>
  </entry>
  <entry>
    <title>docker in centeros7</title>
    <url>/2019/08/28/docker-in-centeros7/</url>
    <content><![CDATA[<h2 id="install"><a href="#install" class="headerlink" title="install"></a>install</h2><p>update yum package first<br><code>yum update</code></p>
<p>remove old version<br><code>yum remove docker  docker-common docker-selinux docker-engine</code></p>
<p>install dependency and <code>yum-config-manager</code> in <code>yum-utils</code></p>
<p><code>yum install -y yum-utils device-mapper-persistent-data lvm2</code></p>
<p>set yum repository<br><code>yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</code></p>
<p>install<br><code>yum install docker-ce docker-ce-cli containerd.io</code></p>
<h2 id="problem"><a href="#problem" class="headerlink" title="problem"></a>problem</h2><p>Requires: container-selinux &gt;= 2.7.4</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">yum install epel-release</span><br><span class="line">yum install container-selinux</span><br></pre></td></tr></table></figure>
<p><a href="https://docs.docker.com/install/linux/docker-ce/centos/" target="_blank" rel="noopener">https://docs.docker.com/install/linux/docker-ce/centos/</a><br><a href="https://blog.csdn.net/cai454692590/article/details/83479000" target="_blank" rel="noopener">https://blog.csdn.net/cai454692590/article/details/83479000</a><br><a href="https://blog.csdn.net/renzhixin1314/article/details/88604096" target="_blank" rel="noopener">https://blog.csdn.net/renzhixin1314/article/details/88604096</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Learning jackson</title>
    <url>/2019/09/11/Learning-jackson/</url>
    <content><![CDATA[<h2 id="JS-number-type-accuracy-problem"><a href="#JS-number-type-accuracy-problem" class="headerlink" title="JS number type accuracy problem"></a>JS number type accuracy problem</h2><p>In js number type is 53 bit, if backgroud response 64 bit long type,<br>js will lose accuracy, number will not be the origin number.</p>
<p>53 bit in decimal system length is about 16(2^52),but in java long type is about 20(2^64).<br>So backgroud return type in string is a better choice to void accuracy problem.</p>
<h2 id="JsonSerializer-JsonDeserializer"><a href="#JsonSerializer-JsonDeserializer" class="headerlink" title="JsonSerializer JsonDeserializer"></a>JsonSerializer JsonDeserializer</h2><p>Avoiding JS loss of accuracy<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LongJsonSerializer</span> <span class="keyword">extends</span> <span class="title">JsonSerializer</span>&lt;<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">serialize</span><span class="params">(Long value, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        String text = (value == <span class="keyword">null</span> ? <span class="keyword">null</span> : String.valueOf(value));</span><br><span class="line">        <span class="keyword">if</span> (text != <span class="keyword">null</span>)</span><br><span class="line">            jsonGenerator.writeString(text);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Deserialize input model<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LongJsonDeserializer</span> <span class="keyword">extends</span> <span class="title">JsonDeserializer</span>&lt;<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">deserialize</span><span class="params">(JsonParser jsonParser, DeserializationContext deserializationContext)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        String value = jsonParser.getText();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> value == <span class="keyword">null</span> ? <span class="keyword">null</span> : Long.parseLong(value);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NumberFormatException e) &#123;</span><br><span class="line">            log.error(<span class="string">"Deserialize long type error: &#123;&#125;"</span>, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Annotate the target property<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@JsonSerialize</span>(using = LongJsonSerializer<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">JsonDeserialize</span>(<span class="title">using</span> </span>= LongJsonDeserializer<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">private</span> <span class="title">Long</span> <span class="title">id</span></span>;</span><br></pre></td></tr></table></figure></p>
<h2 id="Data-Binding-Commonly-used"><a href="#Data-Binding-Commonly-used" class="headerlink" title="Data Binding [Commonly used]"></a>Data Binding [Commonly used]</h2><h3 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--jackson--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Country</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String countryName;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Province&gt; provinces;</span><br><span class="line">    <span class="keyword">private</span> String[] lakes;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Province</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String provinceName;</span><br><span class="line">    <span class="keyword">private</span> List&lt;City&gt; cities;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">City</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String cityName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Bean2JsonStr"><a href="#Bean2JsonStr" class="headerlink" title="Bean2JsonStr"></a>Bean2JsonStr</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Bean2JsonStr</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">// Convert the object to Json</span></span><br><span class="line">    ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">    <span class="comment">// set format</span></span><br><span class="line">    SimpleDateFormat dateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">    mapper.setDateFormat(dateFormat);</span><br><span class="line">    City city1 = <span class="keyword">new</span> City(<span class="number">1</span>, <span class="string">"hangzhou"</span>);</span><br><span class="line">    City city2 = <span class="keyword">new</span> City(<span class="number">2</span>, <span class="string">"taizhou"</span>);</span><br><span class="line"></span><br><span class="line">    Province province = <span class="keyword">new</span> Province();</span><br><span class="line">    province.setId(<span class="number">1</span>);</span><br><span class="line">    List&lt;City&gt; cities = <span class="keyword">new</span> ArrayList&lt;City&gt;();</span><br><span class="line">    cities.add(city1);</span><br><span class="line">    cities.add(city2);</span><br><span class="line">    province.setCities(cities);</span><br><span class="line"></span><br><span class="line">    Country country = <span class="keyword">new</span> Country();</span><br><span class="line">    country.setCountryName(<span class="string">"China"</span>);</span><br><span class="line">    country.setId(<span class="number">1</span>);</span><br><span class="line">    country.setLakes(<span class="keyword">new</span> String[]&#123;<span class="string">"Qinghai Lake"</span>, <span class="string">"Poyang Lake"</span>, <span class="string">"Dongting Lake"</span>, <span class="string">"Taihu Lake"</span>&#125;);</span><br><span class="line">    List&lt;Province&gt; provinces = <span class="keyword">new</span> ArrayList&lt;Province&gt;();</span><br><span class="line">    provinces.add(province);</span><br><span class="line">    country.setProvinces(provinces);</span><br><span class="line">    <span class="comment">// set true make json readable, no need in produce environment</span></span><br><span class="line">    mapper.configure(SerializationFeature.INDENT_OUTPUT, <span class="keyword">true</span>);</span><br><span class="line">    <span class="comment">// ignore null property</span></span><br><span class="line">    mapper.setSerializationInclusion(JsonInclude.Include.NON_EMPTY);</span><br><span class="line">    <span class="comment">// java property as key in default, customize key name in @JsonProperty annotation</span></span><br><span class="line">    mapper.writeValue(<span class="keyword">new</span> File(<span class="string">"country-demo.json"</span>), country);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;id&quot; : 1,</span><br><span class="line">  &quot;countryName&quot; : &quot;China&quot;,</span><br><span class="line">  &quot;provinces&quot; : [ &#123;</span><br><span class="line">    &quot;id&quot; : 1,</span><br><span class="line">    &quot;cities&quot; : [ &#123;</span><br><span class="line">      &quot;id&quot; : 1,</span><br><span class="line">      &quot;cityName&quot; : &quot;hangzhou&quot;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      &quot;id&quot; : 2,</span><br><span class="line">      &quot;cityName&quot; : &quot;taizhou&quot;</span><br><span class="line">    &#125; ]</span><br><span class="line">  &#125; ],</span><br><span class="line">  &quot;lakes&quot; : [ &quot;Qinghai Lake&quot;, &quot;Poyang Lake&quot;, &quot;Dongting Lake&quot;, &quot;Taihu Lake&quot; ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="JsonStr2Bean"><a href="#JsonStr2Bean" class="headerlink" title="JsonStr2Bean"></a>JsonStr2Bean</h3><p>string -&gt; object<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">JsonStr2Bean</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">    File jsonFile = <span class="keyword">new</span> File(<span class="string">"country-demo.json"</span>);</span><br><span class="line">    <span class="comment">// not interrupt unknown properties</span></span><br><span class="line">    mapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);</span><br><span class="line">    Country country = mapper.readValue(jsonFile, Country<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    log.info(country.getCountryName());</span><br><span class="line">    List&lt;Province&gt; provinces = country.getProvinces();</span><br><span class="line">    <span class="keyword">for</span> (Province province : provinces) &#123;</span><br><span class="line">        <span class="keyword">for</span> (City city : province.getCities()) &#123;</span><br><span class="line">            log.info(city.getId() + <span class="string">" "</span> + city.getCityName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">09:52:05.570 [main] INFO jackson.JacksonDemoTester - China</span><br><span class="line">09:52:05.574 [main] INFO jackson.JacksonDemoTester - 1 hangzhou</span><br><span class="line">09:52:05.575 [main] INFO jackson.JacksonDemoTester - 2 taizhou</span><br></pre></td></tr></table></figure>
<h3 id="JsonStr2List"><a href="#JsonStr2List" class="headerlink" title="JsonStr2List"></a>JsonStr2List</h3><p>string -&gt; list<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">JsonStr2List</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    City city1 = <span class="keyword">new</span> City(<span class="number">1</span>, <span class="string">"hangzhou"</span>);</span><br><span class="line">    City city2 = <span class="keyword">new</span> City(<span class="number">2</span>, <span class="string">"taizhou"</span>);</span><br><span class="line"></span><br><span class="line">    List&lt;City&gt; cities = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    cities.add(city1);</span><br><span class="line">    cities.add(city2);</span><br><span class="line"></span><br><span class="line">    ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">    String listJsonStr = mapper.writeValueAsString(cities);</span><br><span class="line">    log.info(listJsonStr);</span><br><span class="line">    List&lt;City&gt; list = mapper.readValue(listJsonStr, <span class="keyword">new</span> TypeReference&lt;List&lt;City&gt;&gt;() &#123;&#125;);</span><br><span class="line">    <span class="keyword">for</span> (City city : list) &#123;</span><br><span class="line">        log.info(<span class="string">"id:"</span> + city.getId() + <span class="string">" cityName:"</span> + city.getCityName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">09:52:15.610 [main] INFO jackson.JacksonDemoTester - China</span><br><span class="line">09:52:15.612 [main] INFO jackson.JacksonDemoTester - 1 hangzhou</span><br><span class="line">09:52:15.613 [main] INFO jackson.JacksonDemoTester - 2 taizhou</span><br></pre></td></tr></table></figure>
<h2 id="Streaming-API-high-performence"><a href="#Streaming-API-high-performence" class="headerlink" title="Streaming API [high performence]"></a>Streaming API [high performence]</h2><p>self define paser</p>
<h3 id="JsonSerializer"><a href="#JsonSerializer" class="headerlink" title="JsonSerializer"></a>JsonSerializer</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CityJsonSerializer</span> <span class="keyword">extends</span> <span class="title">JsonSerializer</span>&lt;<span class="title">City</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">serialize</span><span class="params">(City city, JsonGenerator jsonGenerator, SerializerProvider arg2)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        jsonGenerator.writeStartObject();</span><br><span class="line">        <span class="keyword">if</span> ( city.getId()!=<span class="keyword">null</span>)</span><br><span class="line">            jsonGenerator.writeNumberField(<span class="string">"id"</span>, city.getId());</span><br><span class="line">        jsonGenerator.writeStringField(<span class="string">"cityName"</span>, city.getCityName());</span><br><span class="line">        jsonGenerator.writeEndObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="JsonDeserializer"><a href="#JsonDeserializer" class="headerlink" title="JsonDeserializer"></a>JsonDeserializer</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CityJsonDeserializer</span> <span class="keyword">extends</span> <span class="title">JsonDeserializer</span>&lt;<span class="title">List</span>&lt;<span class="title">City</span>&gt;&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;City&gt; <span class="title">deserialize</span><span class="params">(JsonParser parser, DeserializationContext deserializationcontext)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        List&lt;City&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">// deserialize array, fist token must be JsonToken.START_ARRAY '['</span></span><br><span class="line">        <span class="keyword">if</span> (!JsonToken.START_ARRAY.equals(parser.getCurrentToken())) &#123;</span><br><span class="line">            log.info(parser.getCurrentToken().asString());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// until the EOF</span></span><br><span class="line">        <span class="keyword">while</span> (!parser.isClosed()) &#123;</span><br><span class="line">            <span class="comment">// loop until the target token</span></span><br><span class="line">            JsonToken token = parser.nextToken();</span><br><span class="line">            <span class="keyword">if</span> (token == <span class="keyword">null</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">// every element in array is object, so the nect JsonToken is JsonToken.START_OBJECT '&#123;'</span></span><br><span class="line">            <span class="keyword">if</span> (!JsonToken.START_OBJECT.equals(token)) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            City city = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (JsonToken.START_OBJECT.equals(token))</span><br><span class="line">                    city = <span class="keyword">new</span> City();</span><br><span class="line"></span><br><span class="line">                token = parser.nextToken();</span><br><span class="line">                <span class="keyword">if</span> (token == <span class="keyword">null</span>) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (JsonToken.FIELD_NAME.equals(token)) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="string">"id"</span>.equals(parser.getCurrentName())) &#123;</span><br><span class="line">                        token = parser.nextToken();</span><br><span class="line">                        city.setId(parser.getIntValue());</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"cityName"</span>.equals(parser.getCurrentName())) &#123;</span><br><span class="line">                        token = parser.nextToken();</span><br><span class="line">                        city.setCityName(parser.getText());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (JsonToken.END_OBJECT.equals(token))</span><br><span class="line">                    list.add(city);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="StreamJsonStr2List"><a href="#StreamJsonStr2List" class="headerlink" title="StreamJsonStr2List"></a>StreamJsonStr2List</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">StreamJsonStr2List</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    City city1 = <span class="keyword">new</span> City();</span><br><span class="line">    city1.setCityName(<span class="string">"hangzhou"</span>);</span><br><span class="line">    City city2 = <span class="keyword">new</span> City(<span class="number">2</span>, <span class="string">"taizhou"</span>);</span><br><span class="line"></span><br><span class="line">    List&lt;City&gt; cities = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    cities.add(city1);</span><br><span class="line">    cities.add(city2);</span><br><span class="line"></span><br><span class="line">    ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">    SimpleModule <span class="keyword">module</span> = <span class="keyword">new</span> SimpleModule();</span><br><span class="line">    <span class="keyword">module</span>.addSerializer(City<span class="class">.<span class="keyword">class</span>, <span class="title">new</span> <span class="title">CityJsonSerializer</span>())</span>;</span><br><span class="line">    mapper.registerModule(<span class="keyword">module</span>);</span><br><span class="line">    String listJsonStr = mapper.writeValueAsString(cities);</span><br><span class="line"></span><br><span class="line">    log.info(listJsonStr);</span><br><span class="line"></span><br><span class="line">    ObjectMapper mapper2 = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">    SimpleModule module2 = <span class="keyword">new</span> SimpleModule();</span><br><span class="line">    module2.addDeserializer(List<span class="class">.<span class="keyword">class</span>, <span class="title">new</span> <span class="title">CityJsonDeserializer</span>())</span>;</span><br><span class="line">    mapper2.registerModule(module2);</span><br><span class="line">    List&lt;City&gt; list = mapper2.readValue(listJsonStr, <span class="keyword">new</span> TypeReference&lt;List&lt;City&gt;&gt;() &#123;&#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (City city : list) &#123;</span><br><span class="line">        log.info(<span class="string">"id:"</span> + city.getId() + <span class="string">" cityName:"</span> + city.getCityName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10:15:03.874 [main] INFO jackson.JacksonDemoTester - [&#123;&quot;cityName&quot;:&quot;hangzhou&quot;&#125;,&#123;&quot;id&quot;:2,&quot;cityName&quot;:&quot;taizhou&quot;&#125;]</span><br><span class="line">10:15:03.889 [main] INFO jackson.JacksonDemoTester - id:null cityName:hangzhou</span><br><span class="line">10:15:03.889 [main] INFO jackson.JacksonDemoTester - id:2 cityName:taizhou</span><br></pre></td></tr></table></figure>
<p>use annotation to avoid module in code<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@JsonSerialize</span>(using=CityJsonSerializer<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">City</span> </span>&#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Tree-Model-flexible"><a href="#Tree-Model-flexible" class="headerlink" title="Tree Model [flexible]"></a>Tree Model [flexible]</h2><h3 id="TreeMode2Json"><a href="#TreeMode2Json" class="headerlink" title="TreeMode2Json"></a>TreeMode2Json</h3><p>no java class/ pojo, create model by tree model<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TreeMode2Json</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// create a factory provide node</span></span><br><span class="line">    JsonNodeFactory factory = <span class="keyword">new</span> JsonNodeFactory(<span class="keyword">false</span>);</span><br><span class="line">    <span class="comment">// create a factory to convert tree model to json</span></span><br><span class="line">    JsonFactory jsonFactory = <span class="keyword">new</span> JsonFactory();</span><br><span class="line">    <span class="comment">//create a json generator</span></span><br><span class="line">    JsonGenerator generator = jsonFactory.createGenerator(<span class="keyword">new</span> FileWriter(<span class="keyword">new</span> File(<span class="string">"country-demo2.json"</span>)));</span><br><span class="line"></span><br><span class="line">    ArrayNode cities = factory.arrayNode();</span><br><span class="line">    cities.add(factory.objectNode().put(<span class="string">"id"</span>, <span class="number">1</span>).put(<span class="string">"cityName"</span>, <span class="string">"hangzhou"</span>))</span><br><span class="line">            .add(factory.objectNode().put(<span class="string">"id"</span>, <span class="number">2</span>).put(<span class="string">"cityName"</span>, <span class="string">"taizhou"</span>));</span><br><span class="line"></span><br><span class="line">    ArrayNode provinces = factory.arrayNode();</span><br><span class="line">    ObjectNode province = factory.objectNode();</span><br><span class="line">    province.put(<span class="string">"cities"</span>, cities);</span><br><span class="line">    province.put(<span class="string">"provinceName"</span>, <span class="string">"zhejiang"</span>);</span><br><span class="line">    provinces.add(province);</span><br><span class="line"></span><br><span class="line">    ObjectNode country = factory.objectNode();</span><br><span class="line">    country.put(<span class="string">"id"</span>, <span class="number">1</span>).put(<span class="string">"countryName"</span>, <span class="string">"China"</span>);</span><br><span class="line">    country.put(<span class="string">"provinces"</span>, provinces);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// caution! in default mapper not set root node</span></span><br><span class="line">    ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">    mapper.setSerializationInclusion(JsonInclude.Include.NON_EMPTY);</span><br><span class="line">    mapper.writeTree(generator, country);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="TreeModeReadJson"><a href="#TreeModeReadJson" class="headerlink" title="TreeModeReadJson"></a>TreeModeReadJson</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TreeModeReadJson</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">    ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">    JsonNode node = mapper.readTree(<span class="keyword">new</span> File(<span class="string">"country-demo2.json"</span>));</span><br><span class="line">    <span class="comment">// show node type</span></span><br><span class="line">    log.info(<span class="string">"node JsonNodeType:"</span>+node.getNodeType());</span><br><span class="line">    log.info(<span class="string">"----------------sub node name----------------------"</span>);</span><br><span class="line">    Iterator&lt;String&gt; fieldNames = node.fieldNames();</span><br><span class="line">    <span class="keyword">while</span> (fieldNames.hasNext()) &#123;</span><br><span class="line">        String fieldName = fieldNames.next();</span><br><span class="line">        log.info(fieldName+<span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    log.info(<span class="string">"---------------------------------------------------"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10:58:44.995 [main] INFO jackson.JacksonDemoTester - node JsonNodeType:OBJECT</span><br><span class="line">10:58:44.999 [main] INFO jackson.JacksonDemoTester - ----------------sub node name----------------------</span><br><span class="line">10:58:44.999 [main] INFO jackson.JacksonDemoTester - id</span><br><span class="line">10:58:44.999 [main] INFO jackson.JacksonDemoTester - countryName</span><br><span class="line">10:58:44.999 [main] INFO jackson.JacksonDemoTester - provinces</span><br><span class="line">10:58:45.000 [main] INFO jackson.JacksonDemoTester - ---------------------------------------------------</span><br></pre></td></tr></table></figure>
<p><a href="https://www.cnblogs.com/lvgg/p/7475140.html" target="_blank" rel="noopener">https://www.cnblogs.com/lvgg/p/7475140.html</a><br><a href="https://www.cnblogs.com/williamjie/p/9242451.html" target="_blank" rel="noopener">https://www.cnblogs.com/williamjie/p/9242451.html</a><br><a href="https://blog.csdn.net/gjb724332682/article/details/51586701" target="_blank" rel="noopener">https://blog.csdn.net/gjb724332682/article/details/51586701</a><br><a href="https://blog.csdn.net/java_huashan/article/details/46375857" target="_blank" rel="noopener">https://blog.csdn.net/java_huashan/article/details/46375857</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title>proxy in docker</title>
    <url>/2019/09/26/proxy-in-docker/</url>
    <content><![CDATA[<ol>
<li>Create directory</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir -p /etc/systemd/system/docker.service.d</span><br></pre></td></tr></table></figure>
<ol>
<li>create proxy file</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim /etc/systemd/system/docker.service.d/http-proxy.conf</span><br></pre></td></tr></table></figure>
<ol>
<li>modify file</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Service]</span><br><span class="line">Environment=&quot;HTTPS_PROXY=http://username:password@192.168.1.1:8080&quot; &quot;NO_PROXY=localhost,127.0.0.1&quot;</span><br></pre></td></tr></table></figure>
<ol>
<li>save &amp; flush</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>
<ol>
<li>verify</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl show --property=Environment docker</span><br></pre></td></tr></table></figure>
<p><a href="https://www.cnblogs.com/atuotuo/p/7298673.html" target="_blank" rel="noopener">https://www.cnblogs.com/atuotuo/p/7298673.html</a><br><a href="https://docs.docker.com/config/daemon/systemd/#httphttps-proxy" target="_blank" rel="noopener">https://docs.docker.com/config/daemon/systemd/#httphttps-proxy</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>command</tag>
        <tag>proxy</tag>
      </tags>
  </entry>
  <entry>
    <title>TDengine in docker</title>
    <url>/2019/10/15/TDengine-in-docker/</url>
    <content><![CDATA[<h2 id="prepare"><a href="#prepare" class="headerlink" title="prepare"></a>prepare</h2><h3 id="prepare-base-image"><a href="#prepare-base-image" class="headerlink" title="prepare base image"></a>prepare base image</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker image pull centos</span><br></pre></td></tr></table></figure>
<h3 id="prepare-source-code"><a href="#prepare-source-code" class="headerlink" title="prepare source code"></a>prepare source code</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone git@github.com:taosdata/TDengine.git</span><br><span class="line">cd TDengine</span><br></pre></td></tr></table></figure>
<p>or download release version package and unpackage</p>
<h3 id="prepare-Dockerfile-file"><a href="#prepare-Dockerfile-file" class="headerlink" title="prepare Dockerfile file"></a>prepare <code>Dockerfile</code> file</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Compile image</span><br><span class="line">FROM centos as compile</span><br><span class="line"></span><br><span class="line">WORKDIR /root</span><br><span class="line"></span><br><span class="line">COPY src/ ./src/</span><br><span class="line">COPY deps/ ./deps/</span><br><span class="line">COPY packaging/ ./packaging/</span><br><span class="line">COPY CMakeLists.txt ./</span><br><span class="line"></span><br><span class="line">RUN yum update -y</span><br><span class="line"></span><br><span class="line">RUN yum group install -y &quot;Development Tools&quot;</span><br><span class="line"></span><br><span class="line">Run yum install -y cmake</span><br><span class="line"></span><br><span class="line">WORKDIR /root/build</span><br><span class="line">RUN cmake .. &amp;&amp; cmake --build .</span><br><span class="line"></span><br><span class="line">CMD [&quot;bash&quot;]</span><br><span class="line"></span><br><span class="line"># Final image</span><br><span class="line">FROM centos</span><br><span class="line"></span><br><span class="line">WORKDIR /root</span><br><span class="line"></span><br><span class="line">COPY --from=compile /root/build/build/bin /usr/bin/</span><br><span class="line">COPY --from=compile /root/build/build/lib/libtaos.so /usr/lib/</span><br><span class="line">COPY packaging/cfg/taos.cfg /etc/taos/</span><br><span class="line"></span><br><span class="line">RUN echo &quot;charset UTF-8&quot; &gt;&gt; /etc/taos/taos.cfg</span><br><span class="line"></span><br><span class="line">ENV LD_LIBRARY_PATH=&quot;$LD_LIBRARY_PATH:/usr/lib&quot;</span><br><span class="line">ENV LC_CTYPE=&quot;en_US.UTF-8&quot;</span><br><span class="line"></span><br><span class="line"># origin blog missing this</span><br><span class="line">ENV LC_ALL=&quot;C&quot;</span><br><span class="line"></span><br><span class="line">CMD [&quot;taosd&quot;]</span><br></pre></td></tr></table></figure>
<h3 id="create-TDengine-image"><a href="#create-TDengine-image" class="headerlink" title="create TDengine image"></a>create TDengine image</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker build -t tdtest .</span><br></pre></td></tr></table></figure>
<h2 id="start-service"><a href="#start-service" class="headerlink" title="start service"></a>start service</h2><h3 id="create-volumn"><a href="#create-volumn" class="headerlink" title="create volumn"></a>create volumn</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker volume create td_log_vol</span><br><span class="line">docker volume create td_data_vol</span><br></pre></td></tr></table></figure>
<h3 id="start"><a href="#start" class="headerlink" title="start"></a>start</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -itd --name tdtest_run -v td_log_vol:/var/log/taos -v td_data_vol:/var/lib/taos tdtest</span><br></pre></td></tr></table></figure>
<p>if service start fail then check logs</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker ps -a</span><br><span class="line">docker logs -f -t --tail 50 tdtest_run</span><br></pre></td></tr></table></figure>
<p>Error info like this</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2019-10-15T00:51:45.614929519Z TDengine:[1]: Starting TDengine service...</span><br><span class="line">2019-10-15T00:51:45.614966105Z 10/15 00:51:45.614216 7f6a24ce1b80 UTL timezone not configured, set to system default: (UTC, +0000)</span><br><span class="line">2019-10-15T00:51:45.614975483Z 10/15 00:51:45.614410 7f6a24ce1b80 ERROR UTL can&apos;t get locale from system</span><br><span class="line">2019-10-15T00:51:45.614981522Z 10/15 00:51:45.614486 7f6a24ce1b80 UTL Invalid locale:, please set the valid locale in config file</span><br><span class="line">2019-10-15T00:51:45.770437005Z Invalid locale:, please set the valid locale in config file</span><br></pre></td></tr></table></figure>
<p>the 1th process is not <code>/sbin/init</code>, so <code>systemctl</code> command can’t execute.<br>for fix this need option <code>--privileged=true</code> and parameter <code>/sbin/init</code>, it’s not right.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -itd --name tdtest_run --privileged=true -v td_log_vol:/var/log/taos -v td_data_vol:/var/lib/taos tdtest /sbin/init</span><br></pre></td></tr></table></figure>
<p>I met a problem here, the docker process started, but <code>taosd</code> server process start failed.<br>At first i thought the <code>datetimectl</code> command can fix this, i try to add<br><code>RUN ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; echo &#39;Asia/Shanghai&#39; &gt; /etc/timezone</code><br>in <code>Dockerfile</code> and rebuild image but failed.</p>
<p>Then i try to find the source code where the exception be throw.<br>It’s in <code>TDengine/src/util/src/tglobalcfg.c</code> , the c function <code>setlocale()</code> read location failed.<br>I write a simple c file, to valid this problem, then search in internet.<br>Finally, find a similar problem in other software, the answer is very obviously : caused by environment variable.</p>
<p>When add the variable <code>export LC_ALL=C</code>, the client part <code>taos</code> can start up, the demo c file can printf locale normally.<br>So, add <code>ENV LC_ALL=&quot;C&quot;</code> in <code>Dockerfile</code> and rebuild image, start the container <code>taosd</code> successfully.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -itd --name tdtest_run -v td_log_vol:/var/log/taos -v td_data_vol:/var/lib/taos tdtest</span><br></pre></td></tr></table></figure>
<p><a href="https://blog.csdn.net/weixin_34038652/article/details/86236240" target="_blank" rel="noopener">https://blog.csdn.net/weixin_34038652/article/details/86236240</a><br><a href="http://c.biancheng.net/ref/setlocale.html" target="_blank" rel="noopener">http://c.biancheng.net/ref/setlocale.html</a><br><a href="https://www.runoob.com/cprogramming/c-function-setlocale.html" target="_blank" rel="noopener">https://www.runoob.com/cprogramming/c-function-setlocale.html</a></p>
<h3 id="check"><a href="#check" class="headerlink" title="check"></a>check</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># visit container</span><br><span class="line">docker exec -it tdtest_run /bin/bash</span><br><span class="line"># start tdengine client</span><br><span class="line">taos</span><br></pre></td></tr></table></figure>
<h2 id="Experiment"><a href="#Experiment" class="headerlink" title="Experiment"></a>Experiment</h2><h3 id="code-prepare"><a href="#code-prepare" class="headerlink" title="code prepare"></a>code prepare</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker cp test.tar.gz tdtest_run:/root</span><br><span class="line">docker exec -it tdtest_run bash</span><br><span class="line">cd /root</span><br><span class="line">tar -zxvf test.tar.gz</span><br><span class="line">cd test</span><br></pre></td></tr></table></figure>
<p><a href="/2019/10/15/TDengine-in-docker/test.tar.gz">test.tar.gz</a></p>
<h3 id="insert"><a href="#insert" class="headerlink" title="insert"></a>insert</h3><p>modify <code>config/config.sh</code>, modify table num, table record num<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./test.sh -F config/config.sh -f config/tdengine.sh</span><br></pre></td></tr></table></figure></p>
<p>result:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">You are testing TDengine...</span><br><span class="line">TEST INFORMATION</span><br><span class="line">======================================</span><br><span class="line">Databse              : TDENGINE</span><br><span class="line">Action               : Insert</span><br><span class="line">Schema file          : /root/test/data/schema.txt</span><br><span class="line">Sample file          : /root/test/data/sample.txt</span><br><span class="line">Insert thread        : 10</span><br><span class="line">Detectors            : 10000</span><br><span class="line">Records per detector : 10000</span><br><span class="line">Start time           : 01/01/2015 00:00:00</span><br><span class="line">Time interval        : 900000</span><br><span class="line"></span><br><span class="line">Config dir           : /etc/taos/</span><br><span class="line">Host                 :</span><br><span class="line">User name            : root</span><br><span class="line">Password             : taosdata</span><br><span class="line">DB name              : meterInfo</span><br><span class="line">Table prefix         : meter</span><br><span class="line">STable               : meters</span><br><span class="line">DB property          : days 30 tblocks 500 tables 5000</span><br><span class="line">Records per request  : 200</span><br><span class="line">Insert mode          : 0</span><br><span class="line">Real situation       : 0</span><br><span class="line">======================================</span><br><span class="line">Starting to test...</span><br><span class="line">days 30 tblocks 500 tables 5000</span><br><span class="line">Creating 10000 tables......</span><br><span class="line">TDengine tables are created. Sleep 2 seconds and starting to insert data...</span><br><span class="line"></span><br><span class="line">Inserting data......</span><br><span class="line">ThreadID: 0 start table ID: 0 end table ID: 999</span><br><span class="line">ThreadID: 1 start table ID: 1000 end table ID: 1999</span><br><span class="line">ThreadID: 2 start table ID: 2000 end table ID: 2999</span><br><span class="line">ThreadID: 3 start table ID: 3000 end table ID: 3999</span><br><span class="line">ThreadID: 4 start table ID: 4000 end table ID: 4999</span><br><span class="line">ThreadID: 5 start table ID: 5000 end table ID: 5999</span><br><span class="line">ThreadID: 6 start table ID: 6000 end table ID: 6999</span><br><span class="line">ThreadID: 7 start table ID: 7000 end table ID: 7999</span><br><span class="line">ThreadID: 8 start table ID: 8000 end table ID: 8999</span><br><span class="line">ThreadID: 9 start table ID: 9000 end table ID: 9999</span><br><span class="line">Done! Spent    70.6098 seconds to insert 100000000 records, speed:   1416233.89 R/s</span><br><span class="line">Test done!</span><br></pre></td></tr></table></figure></p>
<h3 id="query"><a href="#query" class="headerlink" title="query"></a>query</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker exec -it tdtest_run bash</span><br><span class="line">taos</span><br></pre></td></tr></table></figure>
<p>result:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Welcome to the TDengine shell from linux, client version:1.6.2.2, server version:1.6.2.2</span><br><span class="line">Copyright (c) 2017 by TAOS Data, Inc. All rights reserved.</span><br><span class="line"></span><br><span class="line">taos&gt; select count(*) from meterinfo.meters;</span><br><span class="line">      count(*)       |</span><br><span class="line">======================</span><br><span class="line">            100000000|</span><br><span class="line">Query OK, 1 row(s) in set (0.135594s)</span><br><span class="line"></span><br><span class="line">taos&gt; select count(*) from meterinfo.meters group by loc;</span><br><span class="line">      count(*)       |                  loc                   |</span><br><span class="line">===============================================================</span><br><span class="line">             40000000|                                        |</span><br><span class="line">             20000000|                                        |</span><br><span class="line">             10000000|                                        |</span><br><span class="line">             30000000|                                        |</span><br><span class="line">Query OK, 4 row(s) in set (0.163399s)</span><br></pre></td></tr></table></figure></p>
<h3 id="parameter"><a href="#parameter" class="headerlink" title="parameter"></a>parameter</h3><p><code>config/config.sh</code> data config</p>
<ul>
<li>SCHEMA_FILE:          schema config file, test/data/schema.txt。</li>
<li>SAMPLE_FILE:          sample data file, need echo each other with schema.txt, test program will loop write in these data.</li>
<li>NDETECTORS:           table number</li>
<li>INSERT_THREAD:        thread number</li>
<li>RECORDS_PER_DETECTOR: records number in one table</li>
<li>START_TIME:           start time</li>
<li>TIME_INTERVAL:        data collect interval, unit in millisecond.</li>
</ul>
<p><code>config/tdengine.sh</code> engine config</p>
<ul>
<li>INSERT_DB_NAME:       db name</li>
<li>TB_PREFIX:            table name = prefix + num</li>
<li>STABLE:               super table name</li>
<li>DB_PROPERTY:          database option</li>
<li>RECORDS_PER_REQUEST:  recored num in one insert command, insert limit in 64K</li>
</ul>
<p><a href="https://github.com/taosdata/TDengine" target="_blank" rel="noopener">https://github.com/taosdata/TDengine</a><br><a href="https://github.com/taosdata/TDengine/blob/v1.6/src/util/src/tglobalcfg.c" target="_blank" rel="noopener">https://github.com/taosdata/TDengine/blob/v1.6/src/util/src/tglobalcfg.c</a><br><a href="https://blog.csdn.net/qishidiguadan/article/details/96284529" target="_blank" rel="noopener">https://blog.csdn.net/qishidiguadan/article/details/96284529</a><br><a href="https://blog.csdn.net/u013829518/article/details/99681154" target="_blank" rel="noopener">https://blog.csdn.net/u013829518/article/details/99681154</a><br><a href="https://blog.csdn.net/u012954706/article/details/82588687" target="_blank" rel="noopener">https://blog.csdn.net/u012954706/article/details/82588687</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>install</tag>
      </tags>
  </entry>
  <entry>
    <title>change repository in centos 8</title>
    <url>/2019/10/16/change-repository-in-centos-8/</url>
    <content><![CDATA[<h2 id="CentOS-Base-repo"><a href="#CentOS-Base-repo" class="headerlink" title="CentOS-Base.repo"></a>CentOS-Base.repo</h2><p>modify /etc/yum.repos.d/CentOS-Base.repo</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[BaseOS]</span><br><span class="line">name=CentOS-$releasever - Base</span><br><span class="line">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=BaseOS&amp;infra=$infra</span><br><span class="line">#baseurl=http://mirror.centos.org/$contentdir/$releasever/BaseOS/$basearch/os/</span><br><span class="line">baseurl=https://mirrors.aliyun.com/centos/$releasever/BaseOS/$basearch/os/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial</span><br></pre></td></tr></table></figure>
<h2 id="CentOS-AppStream-repo"><a href="#CentOS-AppStream-repo" class="headerlink" title="CentOS-AppStream.repo"></a>CentOS-AppStream.repo</h2><p>modify /etc/yum.repos.d/CentOS-AppStream.repo</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[AppStream]</span><br><span class="line">name=CentOS-$releasever - AppStream</span><br><span class="line">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=AppStream&amp;infra=$infra</span><br><span class="line">#baseurl=http://mirror.centos.org/$contentdir/$releasever/AppStream/$basearch/os/</span><br><span class="line">baseurl=https://mirrors.aliyun.com/centos/$releasever/AppStream/$basearch/os/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial</span><br></pre></td></tr></table></figure>
<h2 id="other"><a href="#other" class="headerlink" title="other"></a>other</h2><p>other file not avaliable in default, can change to ali repository as well.<br><a href="https://mirrors.aliyun.com/centos/8/extras/x86_64/os/" target="_blank" rel="noopener">https://mirrors.aliyun.com/centos/8/extras/x86_64/os/</a></p>
<p>reload matadata<br><code>yum makecache</code></p>
<p>when modifying the source on a docker image, use the following description in the <code>Dockerfile</code> to build<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">RUN mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo_bak</span><br><span class="line">COPY CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo</span><br><span class="line"></span><br><span class="line">RUN mv /etc/yum.repos.d/CentOS-AppStream.repo /etc/yum.repos.d/CentOS-AppStream.repo_bak</span><br><span class="line">COPY CentOS-AppStream.repo /etc/yum.repos.d/CentOS-AppStream.repo</span><br><span class="line"></span><br><span class="line">RUN yum makecache</span><br></pre></td></tr></table></figure></p>
<p><a href="http://www.voycn.com/article/centos8-peizhialiyuan-zuixiaohuaanzhuang" target="_blank" rel="noopener">http://www.voycn.com/article/centos8-peizhialiyuan-zuixiaohuaanzhuang</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>install</tag>
      </tags>
  </entry>
  <entry>
    <title>delete docker image failed</title>
    <url>/2019/10/16/delete-docker-image-fail/</url>
    <content><![CDATA[<h2 id="problem"><a href="#problem" class="headerlink" title="problem"></a>problem</h2><p><code>docker images -a</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@CN-BJI-D-de9f66 ~]# docker images -a</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">&lt;none&gt;              &lt;none&gt;              72dc10d3deba        22 hours ago        230MB</span><br><span class="line">tdtest              latest              e3ad759bb993        22 hours ago        230MB</span><br><span class="line">&lt;none&gt;              &lt;none&gt;              820bc1802af7        22 hours ago        230MB</span><br><span class="line">...</span><br><span class="line">&lt;none&gt;              &lt;none&gt;              ac8cea40eaa0        22 hours ago        223MB</span><br><span class="line">centos              latest              0f3e07c0138f        2 weeks ago         220MB</span><br><span class="line">redis               latest              01a52b3b5cd1        2 weeks ago         98.2MB</span><br><span class="line">ubuntu              latest              2ca708c1c9cc        3 weeks ago         64.2MB</span><br><span class="line">redis               alpine              ed7d2ff5a623        8 weeks ago         29.3MB</span><br></pre></td></tr></table></figure>
<p>when put command <code>docker rmi 820bc1802af7</code>, <code>&lt;none&gt;:&lt;none&gt;</code> image delete fail.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Error response from daemon: conflict: unable to delete 820bc1802af7 (cannot be forced) - image has dependent child images</span><br></pre></td></tr></table></figure></p>
<p>this is cause by has other images depend on this image <code>820bc1802af7</code>.<br>use <code>docker image inspect</code>, find current image’s child image, repository tag name.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@CN-BJI-D-de9f66 ~]# docker image inspect --format=&apos;&#123;&#123;.RepoTags&#125;&#125; &#123;&#123;.Id&#125;&#125; &#123;&#123;.Parent&#125;&#125;&apos; $(docker image ls -q --filter since=820bc1802af7)</span><br><span class="line">[tdtest:latest] sha256:e3ad759bb99351a4951df11113e0ad3914a26d55e99e5243e13ebac19373efae sha256:8abd1595d4dfc922b81825940c0f6d73034eeb10b3e2b12a78b3d0e33d78588e</span><br></pre></td></tr></table></figure></p>
<h2 id="mechanism"><a href="#mechanism" class="headerlink" title="mechanism"></a>mechanism</h2><h3 id="kind-one"><a href="#kind-one" class="headerlink" title="kind one"></a>kind one</h3><p><code>&lt;none&gt;:&lt;none&gt;</code> images which be related to the image be deleted will be deleted as will.<br>this kind of <code>&lt;none&gt;:&lt;none&gt;</code> is <code>middle image</code>, it won’t occupy space.</p>
<h3 id="kind-two"><a href="#kind-two" class="headerlink" title="kind two"></a>kind two</h3><p>make a docker image <code>docker build -t hello-world ./</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FROM centos:latest</span><br><span class="line">RUN echo &apos;hello world&apos;</span><br></pre></td></tr></table></figure></p>
<p>when centos have a new release, build hello-world image again, it will depend on the latest centos.<br>the <code>hello-world</code> depend on older centos, will become <code>&lt;none&gt;:&lt;none&gt;</code> dangling image.<br>this kind of <code>&lt;none&gt;:&lt;none&gt;</code> occupy space, it was originally tag image.</p>
<p>all docker file store at <code>/var/lib/docker/graph</code> in default, docker be called <code>graph layer database</code>.<br>use command <code>docker rmi $(docker images -f &quot;dangling=true&quot; -q)</code> to delete wandering image layer.</p>
<h2 id="other-command"><a href="#other-command" class="headerlink" title="other command"></a>other command</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># stop all container</span><br><span class="line">docker ps -a | grep &quot;Exited&quot; | awk &apos;&#123;print $1 &#125;&apos;|xargs docker stop</span><br><span class="line"></span><br><span class="line"># delete all container</span><br><span class="line">docker ps -a | grep &quot;Exited&quot; | awk &apos;&#123;print $1 &#125;&apos;|xargs docker rm</span><br><span class="line"></span><br><span class="line"># delete all none container</span><br><span class="line">docker images|grep none|awk &apos;&#123;print $3 &#125;&apos;|xargs docker rmi</span><br></pre></td></tr></table></figure>
<p><a href="http://www.ibloger.net/article/3217.html" target="_blank" rel="noopener">http://www.ibloger.net/article/3217.html</a><br><a href="https://segmentfault.com/a/1190000011153919" target="_blank" rel="noopener">https://segmentfault.com/a/1190000011153919</a><br><a href="https://blog.csdn.net/sin_geek/article/details/86736417" target="_blank" rel="noopener">https://blog.csdn.net/sin_geek/article/details/86736417</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>cmake tutorial</title>
    <url>/2019/10/19/cmake-tutorial/</url>
    <content><![CDATA[<h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">|-- CMakeLists.txt</span><br><span class="line">`-- main.c</span><br></pre></td></tr></table></figure>
<p>main.c<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &quot;testFunc.h&quot;</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    printf(&quot;Hello World\n&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>CMakeLists.txt<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required (VERSION 2.8)</span><br><span class="line"></span><br><span class="line">project (demo)</span><br><span class="line"></span><br><span class="line">add_executable(main main.c)</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@8bdf5f3b23af demo]# cmake .</span><br><span class="line">-- The C compiler identification is GNU 8.2.1</span><br><span class="line">-- The CXX compiler identification is GNU 8.2.1</span><br><span class="line">-- Check for working C compiler: /usr/bin/cc</span><br><span class="line">-- Check for working C compiler: /usr/bin/cc -- works</span><br><span class="line">-- Detecting C compiler ABI info</span><br><span class="line">-- Detecting C compiler ABI info - done</span><br><span class="line">-- Detecting C compile features</span><br><span class="line">-- Detecting C compile features - done</span><br><span class="line">-- Check for working CXX compiler: /usr/bin/c++</span><br><span class="line">-- Check for working CXX compiler: /usr/bin/c++ -- works</span><br><span class="line">-- Detecting CXX compiler ABI info</span><br><span class="line">-- Detecting CXX compiler ABI info - done</span><br><span class="line">-- Detecting CXX compile features</span><br><span class="line">-- Detecting CXX compile features - done</span><br><span class="line">-- Configuring done</span><br><span class="line">-- Generating done</span><br><span class="line">-- Build files have been written to: /root/labc/demo</span><br></pre></td></tr></table></figure>
<p>command generated <code>MakeFile</code>, and some auto generate file.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">|-- CMakeCache.txt</span><br><span class="line">|-- CMakeFiles</span><br><span class="line">|-- CMakeLists.txt</span><br><span class="line">|-- Makefile</span><br><span class="line">|-- cmake_install.cmake</span><br><span class="line">`-- main.c</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@8bdf5f3b23af demo]# make</span><br><span class="line">Scanning dependencies of target main</span><br><span class="line">[ 50%] Building C object CMakeFiles/main.dir/main.c.o</span><br><span class="line">[100%] Linking C executable main</span><br><span class="line">[100%] Built target main</span><br></pre></td></tr></table></figure>
<p>make and execute</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@8bdf5f3b23af demo]# ./main</span><br><span class="line">Hello World</span><br></pre></td></tr></table></figure>
<h2 id="Multi-source-filie-under-one-directory"><a href="#Multi-source-filie-under-one-directory" class="headerlink" title="Multi-source filie under one directory"></a>Multi-source filie under one directory</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">|-- CMakeLists.txt</span><br><span class="line">|-- main.c</span><br><span class="line">|-- testFunc.c</span><br><span class="line">`-- testFunc.h</span><br></pre></td></tr></table></figure>
<p>testFunc.c<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line"> * testFunc.c</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &quot;testFunc.h&quot;</span><br><span class="line"></span><br><span class="line">void func(int data)</span><br><span class="line">&#123;</span><br><span class="line">    printf(&quot;data is %d\n&quot;, data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>testFunc.h<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line"> * testFunc.h</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">#ifndef _TEST_FUNC_H_</span><br><span class="line">#define _TEST_FUNC_H_</span><br><span class="line"></span><br><span class="line">void func(int data);</span><br><span class="line"></span><br><span class="line">#endif</span><br></pre></td></tr></table></figure></p>
<p>main.c<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &quot;testFunc.h&quot;</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    func(100);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>CMakeLists.txt<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required (VERSION 2.8)</span><br><span class="line"></span><br><span class="line">project (demo)</span><br><span class="line"></span><br><span class="line">add_executable(main main.c testFunc.c)</span><br></pre></td></tr></table></figure></p>
<p>add <code>testFunc.c</code> to executable param</p>
<p>make and execute</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@8bdf5f3b23af multsource]# ./main</span><br><span class="line">data is 100</span><br></pre></td></tr></table></figure>
<p>if we have a lot of source file, <code>add_executable</code> is troublesome.<br><code>aux_source_directory</code> can take files under directory as a source.</p>
<p>add another function<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">|-- CMakeLists.txt</span><br><span class="line">|-- main</span><br><span class="line">|-- main.c</span><br><span class="line">|-- testFunc.c</span><br><span class="line">|-- testFunc.h</span><br><span class="line">|-- testFunc1.c</span><br><span class="line">`-- testFunc1.h</span><br></pre></td></tr></table></figure></p>
<p>modify CMakeLists<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required (VERSION 2.8)</span><br><span class="line"></span><br><span class="line">project (demo)</span><br><span class="line"></span><br><span class="line">aux_source_directory(. SRC_LIST)</span><br><span class="line"></span><br><span class="line">add_executable(main $&#123;SRC_LIST&#125;)</span><br></pre></td></tr></table></figure></p>
<p>make and execute<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@8bdf5f3b23af multsource1]# ./main</span><br><span class="line">data is 100</span><br><span class="line">data is 200</span><br></pre></td></tr></table></figure></p>
<h2 id="Multi-source-filie-under-multi-directory"><a href="#Multi-source-filie-under-multi-directory" class="headerlink" title="Multi-source filie under multi-directory"></a>Multi-source filie under multi-directory</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">|-- CMakeLists.txt</span><br><span class="line">|-- main</span><br><span class="line">|-- main.c</span><br><span class="line">|-- test_func</span><br><span class="line">|   |-- testFunc.c</span><br><span class="line">|   `-- testFunc.h</span><br><span class="line">`-- test_func1</span><br><span class="line">    |-- testFunc1.c</span><br><span class="line">    `-- testFunc1.h</span><br></pre></td></tr></table></figure>
<p>group function by two directory <code>test_func</code> <code>test_func1</code></p>
<p>modify <code>CMakeLists.txt</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required (VERSION 2.8)</span><br><span class="line"></span><br><span class="line">project (demo)</span><br><span class="line"></span><br><span class="line">include_directories (test_func test_func1)</span><br><span class="line"></span><br><span class="line">aux_source_directory (test_func SRC_LIST)</span><br><span class="line">aux_source_directory (test_func1 SRC_LIST1)</span><br><span class="line"></span><br><span class="line">add_executable (main main.c $&#123;SRC_LIST&#125; $&#123;SRC_LIST1&#125;)</span><br></pre></td></tr></table></figure></p>
<p>result is same as above.</p>
<h2 id="Formal-structure"><a href="#Formal-structure" class="headerlink" title="Formal structure"></a>Formal structure</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">|-- CMakeLists.txt</span><br><span class="line">|-- bin</span><br><span class="line">|-- build</span><br><span class="line">|-- include</span><br><span class="line">|   |-- testFunc.h</span><br><span class="line">|   `-- testFunc1.h</span><br><span class="line">|-- main</span><br><span class="line">`-- src</span><br><span class="line">    |-- CMakeLists.txt</span><br><span class="line">    |-- main.c</span><br><span class="line">    |-- testFunc.c</span><br><span class="line">    `-- testFunc1.c</span><br></pre></td></tr></table></figure>
<ol>
<li>put source file to <code>src</code></li>
<li>put head file to <code>include</code></li>
<li><code>build</code> used to store middle file</li>
<li><code>bin</code> used to store executable file</li>
</ol>
<p>outside <code>CMakeLists.txt</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required (VERSION 2.8)</span><br><span class="line"></span><br><span class="line">project (demo)</span><br><span class="line"></span><br><span class="line">add_subdirectory (src)</span><br></pre></td></tr></table></figure></p>
<p>inside <code>CMakeLists.txt</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">aux_source_directory (. SRC_LIST)</span><br><span class="line"></span><br><span class="line">include_directories (../include)</span><br><span class="line"></span><br><span class="line">add_executable (main $&#123;SRC_LIST&#125;)</span><br><span class="line"></span><br><span class="line">set (EXECUTABLE_OUTPUT_PATH $&#123;PROJECT_SOURCE_DIR&#125;/bin)</span><br></pre></td></tr></table></figure></p>
<ul>
<li><code>EXECUTABLE_OUTPUT_PATH</code> : executable file path</li>
<li><code>PROJECT_SOURCE_DIR</code> : project root</li>
</ul>
<p>result is same as above.</p>
<h2 id="Dynamic-and-static-libraries"><a href="#Dynamic-and-static-libraries" class="headerlink" title="Dynamic and static libraries"></a>Dynamic and static libraries</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">|-- CMakeLists.txt</span><br><span class="line">|-- build</span><br><span class="line">|-- lib</span><br><span class="line">`-- lib_testFunc</span><br><span class="line">    |-- CMakeLists.txt</span><br><span class="line">    |-- testFunc.c</span><br><span class="line">    `-- testFunc.h</span><br></pre></td></tr></table></figure>
<p>outside <code>CMakeLists.txt</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required (VERSION 2.8)</span><br><span class="line"></span><br><span class="line">project (demo)</span><br><span class="line"></span><br><span class="line">add_subdirectory (lib_testFunc)</span><br></pre></td></tr></table></figure></p>
<p>inside <code>CMakeLists.txt</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">aux_source_directory (. SRC_LIST)</span><br><span class="line"></span><br><span class="line">add_library (testFunc_shared SHARED $&#123;SRC_LIST&#125;)</span><br><span class="line">add_library (testFunc_static STATIC $&#123;SRC_LIST&#125;)</span><br><span class="line"></span><br><span class="line">set_target_properties (testFunc_shared PROPERTIES OUTPUT_NAME &quot;testFunc&quot;)</span><br><span class="line">set_target_properties (testFunc_static PROPERTIES OUTPUT_NAME &quot;testFunc&quot;)</span><br><span class="line"></span><br><span class="line">set (LIBRARY_OUTPUT_PATH $&#123;PROJECT_SOURCE_DIR&#125;/lib)</span><br></pre></td></tr></table></figure></p>
<ul>
<li><code>add_library</code>: generate dynamic or static libraries, (1. libname; 2. dynamic or static, static in default; 3. source file path)</li>
<li><code>set_target_properties</code>: setting output name, can set other options like lib version</li>
<li><code>LIBRARY_OUTPUT_PATH</code>: default path of library file</li>
</ul>
<p>in <code>build</code> run <code>cmake .</code> and <code>make</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">|-- CMakeLists.txt</span><br><span class="line">|-- build</span><br><span class="line">|   |-- CMakeCache.txt</span><br><span class="line">|   |-- CMakeFiles</span><br><span class="line">|   |-- Makefile</span><br><span class="line">|   |-- cmake_install.cmake</span><br><span class="line">|   `-- lib_testFunc</span><br><span class="line">|-- lib</span><br><span class="line">|   |-- libtestFunc.a</span><br><span class="line">|   `-- libtestFunc.so</span><br><span class="line">`-- lib_testFunc</span><br><span class="line">    |-- CMakeLists.txt</span><br><span class="line">    |-- testFunc.c</span><br><span class="line">    `-- testFunc.h</span><br></pre></td></tr></table></figure></p>
<h2 id="Link-by-libraries"><a href="#Link-by-libraries" class="headerlink" title="Link by libraries"></a>Link by libraries</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">|-- CMakeLists.txt</span><br><span class="line">|-- bin</span><br><span class="line">|-- build</span><br><span class="line">|-- lib</span><br><span class="line">|   |-- libtestFunc.a</span><br><span class="line">|   `-- libtestFunc.so</span><br><span class="line">|-- lib_testFunc</span><br><span class="line">|   |-- CMakeLists.txt</span><br><span class="line">|   |-- testFunc.c</span><br><span class="line">|   `-- testFunc.h</span><br><span class="line">`-- src</span><br><span class="line">    |-- CMakeLists.txt</span><br><span class="line">    `-- main.c</span><br></pre></td></tr></table></figure>
<p>outside <code>CMakeLists.txt</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required (VERSION 2.8)</span><br><span class="line"></span><br><span class="line">project (demo)</span><br><span class="line"></span><br><span class="line">add_subdirectory (lib_testFunc)</span><br><span class="line"></span><br><span class="line">add_subdirectory (src)</span><br></pre></td></tr></table></figure></p>
<p>inside <code>CMakeLists.txt</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">aux_source_directory (. SRC_LIST)</span><br><span class="line"></span><br><span class="line"># find testFunc.h</span><br><span class="line">include_directories (../lib_testFunc)</span><br><span class="line"></span><br><span class="line">link_directories ($&#123;PROJECT_SOURCE_DIR&#125;/lib)</span><br><span class="line"></span><br><span class="line">add_executable (main $&#123;SRC_LIST&#125;)</span><br><span class="line"></span><br><span class="line">target_link_libraries (main testFunc)</span><br><span class="line"></span><br><span class="line">set (EXECUTABLE_OUTPUT_PATH $&#123;PROJECT_SOURCE_DIR&#125;/bin)</span><br></pre></td></tr></table></figure></p>
<ul>
<li><code>link_directories</code> : Add non-standard shared library search path</li>
<li><code>target_link_libraries</code> : Link the target file with the library file</li>
</ul>
<h2 id="Compile-options"><a href="#Compile-options" class="headerlink" title="Compile options"></a>Compile options</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">|-- CMakeLists.txt</span><br><span class="line">|-- bin</span><br><span class="line">|-- build</span><br><span class="line">`-- main.cpp</span><br></pre></td></tr></table></figure>
<p>main.cpp<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    auto data = 100;</span><br><span class="line">    std::cout &lt;&lt; &quot;data: &quot; &lt;&lt; data &lt;&lt; &quot;\n&quot;;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>CMakeLists.txt<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required (VERSION 2.8)</span><br><span class="line"></span><br><span class="line">project (demo)</span><br><span class="line"></span><br><span class="line">set (EXECUTABLE_OUTPUT_PATH $&#123;PROJECT_SOURCE_DIR&#125;/bin)</span><br><span class="line"></span><br><span class="line">add_compile_options(-std=c++11 -Wall)</span><br><span class="line"></span><br><span class="line">add_executable(main main.cpp)</span><br></pre></td></tr></table></figure></p>
<h2 id="Compile-control"><a href="#Compile-control" class="headerlink" title="Compile control"></a>Compile control</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">|-- CMakeLists.txt</span><br><span class="line">|-- bin</span><br><span class="line">|-- build</span><br><span class="line">`-- src</span><br><span class="line">    |-- CMakeLists.txt</span><br><span class="line">    |-- main1.c</span><br><span class="line">    `-- main2.c</span><br></pre></td></tr></table></figure>
<p>outside <code>CMakeLists.txt</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 2.8)</span><br><span class="line"></span><br><span class="line">project(demo)</span><br><span class="line"></span><br><span class="line">option(MYDEBUG &quot;enable debug compilation&quot; OFF)</span><br><span class="line"></span><br><span class="line">set (EXECUTABLE_OUTPUT_PATH $&#123;PROJECT_SOURCE_DIR&#125;/bin)</span><br><span class="line"></span><br><span class="line">add_subdirectory(src)</span><br></pre></td></tr></table></figure></p>
<p>add an option <code>MYDEBUG</code></p>
<p>inside <code>CMakeLists.txt</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required (VERSION 2.8)</span><br><span class="line"></span><br><span class="line">add_executable(main1 main1.c)</span><br><span class="line"></span><br><span class="line">if (MYDEBUG)</span><br><span class="line">    add_executable(main2 main2.c)</span><br><span class="line">else()</span><br><span class="line">    message(STATUS &quot;Currently is not in debug mode&quot;)    </span><br><span class="line">endif()</span><br></pre></td></tr></table></figure></p>
<p>user <code>MYDEBUG</code> to decide whether or not compile <code>main2</code><br><code>cmake .. -DMYDEBUG=ON &amp;&amp; make</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">|-- CMakeLists.txt</span><br><span class="line">|-- bin</span><br><span class="line">|   |-- main1</span><br><span class="line">|   `-- main2</span><br><span class="line">|-- build</span><br><span class="line">|   |-- CMakeCache.txt</span><br><span class="line">|   |-- CMakeFiles</span><br><span class="line">|   |-- Makefile</span><br><span class="line">|   |-- cmake_install.cmake</span><br><span class="line">|   `-- src</span><br><span class="line">`-- src</span><br><span class="line">    |-- CMakeLists.txt</span><br><span class="line">    |-- main1.c</span><br><span class="line">    `-- main2.c</span><br></pre></td></tr></table></figure>
<p><a href="https://blog.csdn.net/whahu1989/article/details/82078563" target="_blank" rel="noopener">https://blog.csdn.net/whahu1989/article/details/82078563</a></p>
]]></content>
      <categories>
        <category>c++</category>
      </categories>
      <tags>
        <tag>hello</tag>
      </tags>
  </entry>
  <entry>
    <title>KafkaListener annotation</title>
    <url>/2019/12/02/KafkaListener-annotation/</url>
    <content><![CDATA[<h2 id="Listener-container-factory"><a href="#Listener-container-factory" class="headerlink" title="Listener container factory"></a>Listener container factory</h2><h3 id="Define-a-config-loader-function-fist"><a href="#Define-a-config-loader-function-fist" class="headerlink" title="Define a config loader function fist"></a>Define a config loader function fist</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Map&lt;String, Object&gt; <span class="title">consumerConfigs</span><span class="params">(String groupId)</span> </span>&#123;</span><br><span class="line">    Map&lt;String, Object&gt; consumerConfig = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    initKafkaClientConfiguration(consumerConfig);</span><br><span class="line">    consumerConfig.put(<span class="string">"group.id"</span>, groupId);</span><br><span class="line">    consumerConfig.put(..., ...);</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> consumerConfig;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Create-factory-bean"><a href="#Create-factory-bean" class="headerlink" title="Create factory bean"></a>Create factory bean</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ConcurrentKafkaListenerContainerFactory&lt;Integer, String&gt; <span class="title">kafkaListenerContainerFactoryOne</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ConcurrentKafkaListenerContainerFactory&lt;Integer, String&gt; factory = <span class="keyword">new</span> ConcurrentKafkaListenerContainerFactory&lt;&gt;();</span><br><span class="line">    factory.setConcurrency(<span class="number">10</span>);</span><br><span class="line">    factory.getContainerProperties().setPollTimeout(<span class="number">3000</span>);</span><br><span class="line">    factory.setConsumerFactory(consumerFactory(<span class="string">"group-one"</span>));</span><br><span class="line">    <span class="keyword">return</span> factory;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ConcurrentKafkaListenerContainerFactory&lt;Integer, String&gt; <span class="title">kafkaListenerContainerFactoryTwo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ConcurrentKafkaListenerContainerFactory&lt;Integer, String&gt; factory = <span class="keyword">new</span> ConcurrentKafkaListenerContainerFactory&lt;&gt;();</span><br><span class="line">    factory.setConcurrency(<span class="number">10</span>);</span><br><span class="line">    factory.getContainerProperties().setPollTimeout(<span class="number">3000</span>);</span><br><span class="line">    factory.setConsumerFactory(consumerFactory(<span class="string">"group-two"</span>));</span><br><span class="line">    <span class="keyword">return</span> factory;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Point-factory-in-KafkaListener"><a href="#Point-factory-in-KafkaListener" class="headerlink" title="Point factory in @KafkaListener"></a>Point factory in <code>@KafkaListener</code></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@KafkaListener(topics = &quot;Topic-1&quot; , containerFactory = &quot;kafkaListenerContainerFactoryOne&quot;)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">@KafkaListener(topics = &quot;Topic-2&quot; , containerFactory = &quot;kafkaListenerContainerFactoryTwo&quot;)</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h2 id="Get-header-body-by-annotation"><a href="#Get-header-body-by-annotation" class="headerlink" title="Get header body by annotation"></a>Get header body by annotation</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@KafkaListener</span>(id = <span class="string">"anno"</span>, topics = <span class="string">"topic-3"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">annoListener</span><span class="params">(@Payload String data,</span></span></span><br><span class="line"><span class="function"><span class="params">                         @Header(KafkaHeaders.RECEIVED_MESSAGE_KEY)</span> Integer key,</span></span><br><span class="line"><span class="function">                         @<span class="title">Header</span><span class="params">(KafkaHeaders.RECEIVED_PARTITION_ID)</span> <span class="keyword">int</span> partition,</span></span><br><span class="line"><span class="function">                         @<span class="title">Header</span><span class="params">(KafkaHeaders.RECEIVED_TOPIC)</span> String topic,</span></span><br><span class="line"><span class="function">                         @<span class="title">Header</span><span class="params">(KafkaHeaders.RECEIVED_TIMESTAMP)</span> <span class="keyword">long</span> ts) </span>&#123;</span><br><span class="line">    log.info(<span class="string">"topic.quick.anno receive : \n"</span>+</span><br><span class="line">        <span class="string">"data : "</span>        + data +      <span class="string">"\n"</span> +</span><br><span class="line">        <span class="string">"key : "</span>         + key +       <span class="string">"\n"</span> +</span><br><span class="line">        <span class="string">"partitionId : "</span> + partition + <span class="string">"\n"</span> +</span><br><span class="line">        <span class="string">"topic : "</span>       + topic +     <span class="string">"\n"</span> +</span><br><span class="line">        <span class="string">"timestamp : "</span>   + ts +        <span class="string">"\n"</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a href="https://blog.csdn.net/my_momo_csdn/article/details/89366205" target="_blank" rel="noopener">https://blog.csdn.net/my_momo_csdn/article/details/89366205</a><br><a href="https://www.jianshu.com/p/a64defb44a23" target="_blank" rel="noopener">https://www.jianshu.com/p/a64defb44a23</a></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>kafka</tag>
      </tags>
  </entry>
  <entry>
    <title>Introducing Serverless</title>
    <url>/2019/11/07/Introducing-Serverless/</url>
    <content><![CDATA[<h1 id="第1章无服务器简介"><a href="#第1章无服务器简介" class="headerlink" title="第1章无服务器简介"></a>第1章无服务器简介</h1><p>在本章中，我们首先要上一堂历史课，以了解导致我们走向无服务器的原因。在这种情况下，我们将描述什么是无服务器。最后，我们将通过总结为什么无服务器既是云自然增长的一部分，又是我们如何处理应用交付方式的障碍而总结一下。</p>
<h1 id="搭建舞台"><a href="#搭建舞台" class="headerlink" title="搭建舞台"></a>搭建舞台</h1><p>为了将像Serverless这样的技术置于适当的环境中，我们必须首先概述其演进路径中的步骤。</p>
<h2 id="云的诞生"><a href="#云的诞生" class="headerlink" title="云的诞生"></a>云的诞生</h2><p>让我们回到2006年。目前还没有人拥有iPhone，Ruby on Rails是一个炙手可热的新编程环境，并且Twitter也在启动。但是，与该报告更紧密的关系是，许多人将其服务器端应用程序托管在自己拥有的机架式数据中心中。</p>
<p>2006年8月，发生了一些事情，从根本上改变了这种模式。亚马逊的新IT部门亚马逊网络服务（AWS）宣布推出<code>弹性计算云（EC2）</code>。</p>
<p>EC2是众多基础架构即服务（IaaS）产品的首批产品之一。IaaS允许公司租用计算能力（即托管运行面向Internet的服务器应用程序的主机），而不用购买自己的计算机。它还允许他们及时配置主机，从请求计算机到可用性的延迟大约为几分钟。</p>
<p>EC2的五个主要优势是：</p>
<ul>
<li><p>降低人工成本<br>在使用基础架构即服务之前，公司需要雇用特定的技术运营人员，他们将在数据中心工作并管理其物理服务器。这意味着一切，从电源和网络到机架和安装，再到修复机器的物理问题（如内存不足）到设置操作系统（OS）。有了IaaS，所有这些都消失了，而是由IaaS服务提供商（在EC2中为AWS）负责。</p>
</li>
<li><p>在管理自己的物理服务器时，公司会遇到由于意外事件（如硬件故障）而导致的问题。由于硬件问题通常很少发生，并且可能需要很长时间才能解决，因此这会导致长度波动很大的停机时间。使用IaaS，客户在发生硬件故障时仍然有一些工作要做，而不再需要知道如何修复硬件。取而代之的是，客户只需在几分钟之内请求一个可用的新机器实例，然后重新安装该应用程序，就可以避免此类问题的发生。</p>
</li>
<li><p>降低基础设施成本<br>在许多情况下，考虑到电源，网络等因素，连接的EC2实例的成本要比运行自己的硬件便宜。当您只想运行几天或几周而不是几个月的主机时，这尤其有效或数年的时间。同样，按小时租用主机而不是直接购买主机会导致不同的会计处理：EC2机器是运营费用（Opex），而不是物理机器的资本费用（Capex），通常允许更有利的会计灵活性。</p>
</li>
<li><p>缩放比例<br>考虑到IaaS带来的扩展优势，基础架构成本将大幅下降。借助IaaS，公司在扩展其运行的服务器的数量和类型方面具有更大的灵活性。您不再需要预先购买10台高端服务器，因为您认为几个月后可能会需要它们。相反，您可以从一个或两个低功耗，便宜的实例开始，然后随时间上下扩展实例的数量和类型，而不会产生任何负面成本影响。</p>
</li>
<li><p>交货时间<br>在自托管服务器的糟糕年代，要为新应用程序购买和配置服务器可能要花费数月的时间。如果您想在几周内尝试一下，那太糟糕了。使用IaaS，交货时间从数月缩短至数分钟。在精益创业的思想鼓舞下，这已经进入了快速产品试验的时代。</p>
</li>
</ul>
<h2 id="基础设施外包"><a href="#基础设施外包" class="headerlink" title="基础设施外包"></a>基础设施外包</h2><p>使用IaaS是一种我们可以定义为基础设施外包的技术。当我们开发和操作软件时，我们可以通过两种方式分解工作的需求：针对我们需求的需求，以及与其他以类似方式工作的团队和组织相同的需求。我们可以将第二组需求定义为基础设施，范围从实物商品（例如运行机器的电力）一直到常见的应用程序功能（如用户身份验证）。</p>
<p>基础设施外包通常可以由服务提供商或供应商提供。例如，电力由电力供应商提供，并且网络由互联网服务提供商（ISP）提供。卖方能够通过两种策略来获利地提供这种服务：我们现在描述的经济和技术策略。</p>
<h3 id="规模经济"><a href="#规模经济" class="headerlink" title="规模经济"></a>规模经济</h3><p>规模经济的思想至少几乎部分支持了基础设施外包的每种形式-由于可以利用效率，总体上多次做同一件事比独立进行这些事情总和要便宜。</p>
<p>例如，AWS可以以比小型公司更低的价格购买相同规格的服务器，因为AWS所购买的服务器是数千台而不是单独购买。同样，与拥有少数机器的公司相比，AWS的每台服务器硬件支持成本要低得多。</p>
<h3 id="技术改进"><a href="#技术改进" class="headerlink" title="技术改进"></a>技术改进</h3><p>基础设施外包通常也部分归因于技术创新。就EC2而言，变化是<code>硬件虚拟化</code>。</p>
<p>在IaaS出现之前，一些IT供应商已经开始允许公司将物理服务器作为主机租用，通常在一个月之内。尽管有些公司使用了这项服务，但按小时租用主机的替代方案更具吸引力。但是，只有将物理服务器细分为许多小型的，快速启动和关闭的虚拟机（VM）后，这才真正可行。一旦有可能，IaaS就诞生了。</p>
<h3 id="共同利益"><a href="#共同利益" class="headerlink" title="共同利益"></a>共同利益</h3><p>基础设施外包通常会呼应IaaS的五个好处：</p>
<ul>
<li><p>降低了劳动力成本-减少了人员，减少了执行基础设施工作所需的时间</p>
</li>
<li><p>降低风险-更少的专业知识专家和更实时的运营支持能力</p>
</li>
<li><p>降低资源成本-相同功能的成本更低</p>
</li>
<li><p>扩展的灵活性更高-可以访问更多资源和不同类型的相似资源，然后进行处理，而不会造成重大损失或浪费</p>
</li>
<li><p>交货时间更短-从概念到生产可用性的上市时间缩短</p>
</li>
</ul>
<p>当然，基础设施外包也有其弊端和局限性，我们将在本报告的后面部分进行介绍。</p>
<h2 id="云长大"><a href="#云长大" class="headerlink" title="云长大"></a>云长大</h2><p>IaaS与存储（例如AWS <code>Simple Storage Service（S3）</code>）一起是云的第一个关键要素之一。AWS是一个先行者，现在仍然是领先的云提供商，但是还有许多其他供应商，从大型厂商（如Microsoft和Google）到尚未大型的厂商（如DigitalOcean）。</p>
<p>当我们谈论“云”时，我们通常指的是公共云，即由供应商提供的，与您自己的公司分离并托管在供应商自己的数据中心中的基础结构服务的集合。但是，我们还看到了云产品的相关增长，公司可以使用诸如<code>Open Stack</code>之类的工具在自己的数据中心中使用云产品。这样的自托管系统通常被称为私有云，并利用自己的硬件和物理空间的行为称为内部部署（或只是的预置型。）</p>
<p>公共云的下一个发展是平台即服务（PaaS）。Heroku是最受欢迎的PaaS提供商之一。PaaS在IaaS之上分层，将操作系统（OS）添加到要外包的基础架构中。使用PaaS，您仅部署应用程序，该平台负责操作系统安装，补丁程序升级，系统级监视，服务发现等。</p>
<p>PaaS在<code>Cloud Foundry</code>中还具有流行的自托管开源变体。由于PaaS位于现有虚拟化解决方案之上，因此您可以在本地或较低级别的IaaS公共云服务上托管“私有PaaS”。同时使用公共和私有云系统通常被称为混合云 ; 能够在两种环境中实施一个PaaS可能是一项有用的技术。</p>
<p>在虚拟机之上使用PaaS的另一种方法是使用容器。在过去的几年中，<code>Docker</code>变得越来越受欢迎，因为它可以从操作系统本身的本质上更加清晰地描述应用程序的系统要求。有基于云的服务代表团队托管和管理/协调容器，通常称为容器即服务（CaaS）。一个公共云示例是Google的<code>Container Engine</code>。一些自托管的CaaS是<code>Kubernetes</code>和<code>Mesos</code>，您可以将其私有运行，也可以像PaaS一样在公共IaaS服务之上运行。</p>
<p>与IaaS一样，由供应商提供的PaaS和CaaS都是基础设施外包的进一步形式。它们与IaaS的主要不同之处在于，它们进一步提高了抽象级别，使我们可以将更多技术转让给他人。因此，PaaS和CaaS的优势与我们前面列出的五种优势相同。</p>
<p>更具体地说，我们可以将所有这三种（IaaS，PaaS，CaaS）归为“ 计算即服务”；换句话说，可以在其中运行我们自己的专用软件的不同类型的通用环境。我们将很快再次使用此术语。</p>
<h2 id="进入无服务器阶段右移"><a href="#进入无服务器阶段右移" class="headerlink" title="进入无服务器阶段右移"></a>进入无服务器阶段右移</h2><p>因此，距云诞生已有十多年了。进行此阐述的主要原因是，本报告的主题“无服务器”被最简单地描述为云计算的下一个发展，以及另一种形式的基础设施外包。它具有我们已经看到的相同的五个总体好处，并且能够通过规模经济和技术进步提供这些好处。但是除此之外，无服务器是什么？</p>
<h1 id="定义无服务器"><a href="#定义无服务器" class="headerlink" title="定义无服务器"></a>定义无服务器</h1><p>一旦我们对Serverless有了任何详细的了解，就会遇到第一个令人困惑的点：Serverless实际上涵盖了一系列技术。我们将这些想法分为两个领域：后端即服务（BaaS）和功能即服务（FaaS）。</p>
<h2 id="后端即服务"><a href="#后端即服务" class="headerlink" title="后端即服务"></a>后端即服务</h2><p>BaaS就是要用现成的服务替换我们编写和/或管理的服务器端组件。它在概念上更接近软件即服务（SaaS），而不是虚拟实例和容器之类的东西。SaaS通常是将业务流程外包（例如人力资源或销售工具，或者在技术方面，是Github之类的产品），而BaaS则将我们的应用程序分解为较小的部分，并完全通过外部产品来实现其中的一些部分。</p>
<p>BaaS服务是领域通用的远程组件（即不是进程内库），我们可以将其集成到我们的产品中，其中API是典型的集成范例。</p>
<p>BaaS在开发移动应用程序或单页Web应用程序的团队中特别受欢迎。许多这样的团队能够极大地依赖第三方服务来执行原本需要自己完成的任务。让我们看几个例子。</p>
<p>首先，我们拥有Google <code>Firebase</code>之类的服务（在关闭之前，解析是）。Firebase是由供应商（在本例中为Google）完全管理的数据库产品，可以直接从移动或Web应用程序使用，而无需我们自己的中间应用程序服务器。这代表了BaaS的一个方面：代表我们管理数据组件的服务。</p>
<p>BaaS服务还使我们能够依赖其他人已经实现的应用程序逻辑。一个很好的例子是身份验证-许多应用程序实现自己的代码以执行注册，登录，密码管理等，但是在许多应用程序中，此代码通常非常相似。团队和企业之间的这种重复已经成熟，可以提取到外部服务中了，而这正是<code>Auth0</code>和Amazon的<code>Cognito</code>之类的产品的目标。这两个产品都允许移动应用程序和Web应用程序具有完整的身份验证和用户管理功能，而无需开发团队编写或管理任何代码来实现这些功能。</p>
<p>随着移动应用程序开发的兴起，后端即服务这一术语变得特别流行。实际上，该术语有时称为移动后端即服务（MBaaS）。但是，在我们的应用程序开发中使用完全外部管理的产品的关键思想并不是移动开发乃至整个前端开发所独有的。例如，我们可能会停止在EC2机器上管理自己的MySQL数据库服务器，而改用Amazon的<code>RDS</code>服务，或者可能会用<code>Kinesis</code>替换我们的自管式Kafka消息总线安装。其他数据基础结构服务包括<code>文件系统</code>/<code>对象存储</code>和<code>数据仓库</code>，而更多面向逻辑的示例包括<code>语音分析</code>以及我们前面提到的身份验证产品，也可以在服务器端组件中使用它们。这些服务中的许多服务都可以被认为是无服务器服务，但并不是全部—我们将在第5章中定义我们认为有区别的无服务器服务。</p>
<h2 id="充当服务-无服务器计算"><a href="#充当服务-无服务器计算" class="headerlink" title="充当服务/无服务器计算"></a>充当服务/无服务器计算</h2><p>无服务器的另一半是功能即服务（FaaS）。FaaS是“计算即服务”的另一种形式，这是一种通用环境，我们可以在其中运行软件，如前所述。实际上，有些人（尤其是AWS）将FaaS称为无服务器计算。来自AWS的<code>Lambda</code>是当前使用最广泛的FaaS实施。</p>
<p>FaaS是一种构建和部署服务器端软件的新方法，其重点是部署单个功能或操作。FaaS是有关Serverless的众多话题的来源。实际上，许多人认为Serverless 是 FaaS，但他们并未完全了解。</p>
<p>在传统上部署服务器端软件时，我们从主机实例开始，通常是虚拟机（VM）实例或容器（请参见图1-1）。然后，我们在主机中部署我们的应用程序。如果我们的主机是VM或容器，则我们的应用程序是操作系统进程。通常，我们的应用程序包含用于几种不同但相关的操作的代码。例如，Web服务可以允许资源的检索和更新。</p>
<p><img src="/2019/11/07/Introducing-Serverless/wisl_0101.png" alt="图1-1。传统服务器端软件部署"></p>
<p>FaaS更改了这种部署模型（请参见图1-2）。我们从模型中剥离了主机实例和应用程序过程。相反，我们只专注于表达应用程序逻辑的单个操作或函数。我们将这些功能分别上传到供应商提供的FaaS平台。</p>
<p><img src="/2019/11/07/Introducing-Serverless/wisl_0102.png" alt="图1-2。FaaS软件部署"></p>
<p>但是，这些功能在服务器进程中并不是一直处于活动状态，而是闲置直到需要像在传统系统中一样运行之前（图1-3）。而是将FaaS平台配置为侦听每个操作的特定事件。发生该事件时，供应商平台会实例化Lambda函数，然后使用触发事件对其进行调用。</p>
<p><img src="/2019/11/07/Introducing-Serverless/wisl_0103.png" alt="图1-3。FaaS功能生命周期"></p>
<p>一旦函数执行完毕，FaaS平台就可以随意拆除它。另外，作为一种优化，它可以将功能保留一小段时间，直到有另一个事件要处理为止。</p>
<p>FaaS本质上是一种事件驱动的方法。FaaS供应商除了提供托管和执行代码的平台外，还集成了各种同步和异步事件源。同步源的一个示例是HTTP API网关。异步源的一个示例是托管消息总线，对象存储或类似于（cron）的计划事件。</p>
<p>AWS Lambda于2014年秋季推出，从那时起，它的成熟度和使用率都在增长。虽然Lambda的某些用法很少使用，每天仅执行几次，但有些公司每天使用Lambda处理数十亿个事件。在撰写本文时，Lambda已与15种以上不同类型的<code>事件源</code>集成在一起，使其可用于多种不同的应用程序。</p>
<p>除AWS Lambda之外，还有Microsoft，IBM，Google和Auth0等较小的提供商提供的其他几种商业FaaS产品。就像我们之前讨论的其他各种“计算即服务”平台（IaaS，PaaS，CaaS）一样，也有一些开源项目，您可以在自己的硬件或公共云上运行。这个私有的FaaS空间目前很忙，没有明确的负责人，并且在撰写本文时，许多选项还处于开发初期。示例包括<code>Galactic Fog</code>，<code>IronFunctions</code>，<code>Fission（使用Kubernetes）</code>以及IBM自己的<code>OpenWhisk</code>。</p>
<h2 id="无服务器的共同主题"><a href="#无服务器的共同主题" class="headerlink" title="无服务器的共同主题"></a>无服务器的共同主题</h2><p>从表面上看，BaaS和FaaS完全不同：第一个是完全外包应用程序的各个元素，第二个是用于运行自己的代码的新托管环境。那么，为什么我们将它们归为Serverless的一部分呢？</p>
<p>关键是既不需要您管理自己的服务器主机或服务器进程。使用完全无服务器的应用程序，您不再需要将架构的任何部分视为在主机上运行的资源。您所有的逻辑（无论您是自己编写代码还是与第三方服务集成）都在完全弹性的操作环境中运行。您的状态也以类似的弹性形式存储。无服务器并不意味着服务器已经消失，这意味着您不再需要担心它们。</p>
<p>因为这个关键主题，巴斯和FAAS有着一些共同的优点和局限性，我们在章节看3和4。无服务器方法还有其他一些区别，这也是FaaS和BaaS的共同点，我们将在第5章中介绍。</p>
<h1 id="颠簸的进化"><a href="#颠簸的进化" class="headerlink" title="颠簸的进化"></a>颠簸的进化</h1><p>我们在序言中提到Serverless是一种演进。其原因是，在过去的十年中，我们将更多关于应用程序和环境的共同点转移到了外包的商品服务上。我们看到了无服务器的趋势，即将主机管理，操作系统管理，资源分配，扩展甚至应用逻辑的整个组件外包，并考虑这些因素。经济上和运营上都有自然的进步。</p>
<p>但是，在应用程序体系结构方面，Serverless发生了很大的变化。到目前为止，大多数云服务都没有从根本上改变我们设计应用程序的方式。例如，当使用诸如Docker之类的工具时，我们在应用程序周围放置了一个更薄的“盒子”，但它仍然是盒子，并且我们的逻辑体系结构没有明显改变。在云中托管我们自己的MySQL实例时，我们仍然需要考虑处理负载的虚拟机的功能，并且我们还需要考虑故障转移。</p>
<p>这种情况随着Serverless的改变而改变，并且不是逐渐的，而是震动。无服务器FaaS通过基本的事件驱动模型，更细化的部署形式以及需要在FaaS组件之外保持状态的方式来驱动非常不同类型的应用程序体系结构（我们将在后面详细介绍）。无服务器BaaS使我们无需编写整个逻辑组件，但需要我们将应用程序与供应商提供的特定接口和模型集成在一起。</p>
<p>那么，如果无服务器应用程序如此不同，它会是什么样呢？这就是我们接下来将在第2章中探讨的内容。</p>
<p><a href="https://www.oreilly.com/library/view/what-is-serverless/9781491984178/ch01.html" target="_blank" rel="noopener">https://www.oreilly.com/library/view/what-is-serverless/9781491984178/ch01.html</a></p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>constructure</tag>
      </tags>
  </entry>
  <entry>
    <title>Deploy php in docker</title>
    <url>/2019/12/15/Deploy-php-in-docker/</url>
    <content><![CDATA[<h2 id="Clone-project"><a href="#Clone-project" class="headerlink" title="Clone project"></a>Clone project</h2><p><code>git clone https://github.com/BurningBright/minishowcase</code><br><a href="https://github.com/BurningBright/minishowcase" target="_blank" rel="noopener">https://github.com/BurningBright/minishowcase</a></p>
<a id="more"></a>
<h2 id="Pull-images"><a href="#Pull-images" class="headerlink" title="Pull images"></a>Pull images</h2><p><a href="https://hub.docker.com/_/php?tab=tags&amp;page=1&amp;name=5.6" target="_blank" rel="noopener">https://hub.docker.com/_/php?tab=tags&amp;page=1&amp;name=5.6</a><br>pick version you like in docker<br><code>docker pull php:5.6.40-fpm-alpine</code></p>
<p>alpine release is not popular as the ‘apk’ command install software is not as usual as <code>debian</code> <code>fedora</code>.<br>so it’s better to pull other version php image like<br><code>docker pull php:5.6.40-fpm-jessie</code></p>
<p>pull stable version nginx version image.<br><code>docker pull nginx:stable</code></p>
<h2 id="Prepare"><a href="#Prepare" class="headerlink" title="Prepare"></a>Prepare</h2><h3 id="Copy-nginx-configuration"><a href="#Copy-nginx-configuration" class="headerlink" title="Copy nginx configuration"></a>Copy nginx configuration</h3><p>start nginx container first<br><code>docker run --name nginx-tmp -d nginx:stable</code><br>copy default.conf<br><code>docker cp nginx-tmp:/etc/nginx/confi.d nginx-tmp/</code><br>delete tmp container<br><code>docker rm nginx-tmp</code></p>
<h3 id="Start-php-container"><a href="#Start-php-container" class="headerlink" title="Start php container"></a>Start php container</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run --name php-mini \</span><br><span class="line">-p 9000:9000 -v /Users/root/minishowcase:/var/www \</span><br><span class="line">-d php:5.6.40-fpm-alpine</span><br></pre></td></tr></table></figure>
<p>run image mapping container port 9000 to host port 9000, mapping host project file to container.</p>
<p>check php inner ip<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker inspect --format=&apos;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&apos; php-mini</span><br></pre></td></tr></table></figure></p>
<p><a href="https://www.runoob.com/docker/docker-install-php.html" target="_blank" rel="noopener">https://www.runoob.com/docker/docker-install-php.html</a></p>
<h3 id="Start-nginx-container"><a href="#Start-nginx-container" class="headerlink" title="Start nginx container"></a>Start nginx container</h3><p>modify <code>conf.d/default.conf</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user  nginx;</span><br><span class="line">worker_processes  1;</span><br><span class="line">worker_rlimit_nofile 65535;</span><br><span class="line">error_log  /var/log/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line">events &#123;</span><br><span class="line">    use epoll;</span><br><span class="line">    worker_connections  65535;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    server_tokens off;</span><br><span class="line">    gzip on;</span><br><span class="line">    gzip_disable &quot;msie6&quot;;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen    80;       </span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        root   /var/www;</span><br><span class="line">        index  index.html index.htm index.php;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            try_files $uri $uri/ /index.php?$args;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ \.php$ &#123;</span><br><span class="line">            fastcgi_pass   172.17.0.2:9000;</span><br><span class="line">            fastcgi_index  index.php;</span><br><span class="line">            fastcgi_split_path_info ^((?U).+\.php)(/?.+)$;</span><br><span class="line">            fastcgi_param SCRIPT_NAME $fastcgi_script_name;</span><br><span class="line">            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">            fastcgi_param PATH_INFO $fastcgi_path_info;</span><br><span class="line">            fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;</span><br><span class="line">            include        fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location ~ /\.ht &#123;</span><br><span class="line">            deny  all;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a href="https://www.jianshu.com/p/5edfbb2af389" target="_blank" rel="noopener">https://www.jianshu.com/p/5edfbb2af389</a></p>
<p><code>fastcgi_pass   172.17.0.2:9000;</code> this line is php’s inner address.</p>
<p>start nginx<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run --name nginx-mini \</span><br><span class="line">-p 80:80 -v /Users/root/minishowcase:/var/www \</span><br><span class="line">-v /Users/root/nginx-mini/conf.d:/etc/nginx/conf.d \</span><br><span class="line">-d nginx:stable</span><br></pre></td></tr></table></figure></p>
<h3 id="check-php-status"><a href="#check-php-status" class="headerlink" title="check php status"></a>check php status</h3><p>add <code>info.php</code> check php status <a href="http://127.0.0.1/info.php" target="_blank" rel="noopener">http://127.0.0.1/info.php</a></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">echo</span> phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Install-php-extenstion"><a href="#Install-php-extenstion" class="headerlink" title="Install php extenstion"></a>Install php extenstion</h2><p>minishowcase needs php ‘gd’ extenstion, it be used to make thumbnail picture.</p>
<p>cause i use apline version php image, it wasted alot of time to insatll.</p>
<p>firt <code>apt</code> <code>yum</code> is not command to install dependency in apline, <code>apk</code> is the key.</p>
<p><a href="https://blog.csdn.net/flame1980/article/details/98851803" target="_blank" rel="noopener">https://blog.csdn.net/flame1980/article/details/98851803</a></p>
<p>get into php container<br><code>docker exec -it php-mini bash</code></p>
<p>install gd and it’s dependencies<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apk upgrade --update &amp;&amp; apk add \</span><br><span class="line">  coreutils \</span><br><span class="line">  freetype-dev \</span><br><span class="line">  libjpeg-turbo-dev \</span><br><span class="line">  libltdl \</span><br><span class="line">  libmcrypt-dev \</span><br><span class="line">  libpng-dev \</span><br><span class="line">&amp;&amp; docker-php-ext-install -j$(nproc) iconv mcrypt \</span><br><span class="line">&amp;&amp; docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \</span><br><span class="line">&amp;&amp; docker-php-ext-install -j$(nproc) gd</span><br></pre></td></tr></table></figure></p>
<p>it’s better to write a <code>Dockerfile</code> to build a integrated image</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FROM php:5.6.40-fpm-alpine</span><br><span class="line">RUN docker-php-ext-install mysqli</span><br><span class="line">RUN apk upgrade --update &amp;&amp; apk add \</span><br><span class="line">  coreutils \</span><br><span class="line">  freetype-dev \</span><br><span class="line">  libjpeg-turbo-dev \</span><br><span class="line">  libltdl \</span><br><span class="line">  libmcrypt-dev \</span><br><span class="line">  libpng-dev \</span><br><span class="line">&amp;&amp; docker-php-ext-install -j$(nproc) iconv mcrypt \</span><br><span class="line">&amp;&amp; docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \</span><br><span class="line">&amp;&amp; docker-php-ext-install -j$(nproc) gd</span><br></pre></td></tr></table></figure>
<p>check gd status<br>add <code>gd.php</code> to checkout gd extenstion.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">  if(extension_loaded(&apos;gd&apos;)) &#123;</span><br><span class="line">    echo &apos;gd ready&apos;;</span><br><span class="line">    foreach(gd_info() as $cate=&gt;$value)</span><br><span class="line">      echo &quot;$cate: $value&quot;;</span><br><span class="line">  &#125; else</span><br><span class="line">    echo &apos;no gd&apos;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p><a href="https://blog.csdn.net/wt1286331074/article/details/91425518" target="_blank" rel="noopener">https://blog.csdn.net/wt1286331074/article/details/91425518</a><br><a href="https://www.jb51.cc/php/139142.html" target="_blank" rel="noopener">https://www.jb51.cc/php/139142.html</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello RediSearch</title>
    <url>/2020/01/21/Hello-RediSearch/</url>
    <content><![CDATA[<h2 id="install"><a href="#install" class="headerlink" title="install"></a>install</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull redislabs/redisearch:latest</span><br><span class="line">docker run --name redisearch -d -p 6379:6379 redislabs/redisearch:latest</span><br></pre></td></tr></table></figure>
<h2 id="dependency"><a href="#dependency" class="headerlink" title="dependency"></a>dependency</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.redislabs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jredisearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="create-client"><a href="#create-client" class="headerlink" title="create client"></a>create client</h2><p>Initializing the client with JedisPool:<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Client client = <span class="keyword">new</span> Client(<span class="string">"testing"</span>, <span class="string">"localhost"</span>, <span class="number">6379</span>);</span><br></pre></td></tr></table></figure></p>
<p>Initializing the client with JedisSentinelPool:<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String MASTER_NAME = <span class="string">"mymaster"</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Set&lt;String&gt; sentinels;</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">    sentinels = <span class="keyword">new</span> HashSet();</span><br><span class="line">    sentinels.add(<span class="string">"localhost:7000"</span>);</span><br><span class="line">    sentinels.add(<span class="string">"localhost:7001"</span>);</span><br><span class="line">    sentinels.add(<span class="string">"localhost:7002"</span>);</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">Client client = <span class="keyword">new</span> Client(<span class="string">"testung"</span>, MASTER_NAME, sentinels);</span><br></pre></td></tr></table></figure></p>
<h2 id="create-schema"><a href="#create-schema" class="headerlink" title="create schema"></a>create schema</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Create schema</span></span><br><span class="line">Schema sc = <span class="keyword">new</span> Schema().addTextField(<span class="string">"name"</span>, <span class="number">1.0</span>)</span><br><span class="line">        .addNumericField(<span class="string">"age"</span>)</span><br><span class="line">        .addTagField(<span class="string">"job"</span>, <span class="string">","</span>)</span><br><span class="line">        .addSortableTextField(<span class="string">"welfare"</span>, <span class="number">1.0</span>)</span><br><span class="line">        .addSortableNumericField(<span class="string">"income"</span>)</span><br><span class="line">        .addSortableTagField(<span class="string">"dream"</span>, <span class="string">","</span>);</span><br><span class="line">client.createIndex(sc, Client.IndexOptions.Default());</span><br></pre></td></tr></table></figure>
<h2 id="adding-documents"><a href="#adding-documents" class="headerlink" title="adding documents"></a>adding documents</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Create document</span></span><br><span class="line">Map&lt;String, Object&gt; fields = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">fields.put(<span class="string">"name"</span>, <span class="string">"hello world"</span>);</span><br><span class="line">fields.put(<span class="string">"age"</span>, <span class="number">45</span>);</span><br><span class="line">fields.put(<span class="string">"job"</span>, <span class="string">"programmer"</span>);</span><br><span class="line">fields.put(<span class="string">"welfare"</span>, <span class="string">"996"</span>);</span><br><span class="line">fields.put(<span class="string">"income"</span>, <span class="string">"3000"</span>);</span><br><span class="line">fields.put(<span class="string">"dream"</span>, <span class="string">"handsome, rich"</span>);</span><br><span class="line">client.addDocument(<span class="string">"doc1"</span>, fields);</span><br></pre></td></tr></table></figure>
<h2 id="search"><a href="#search" class="headerlink" title="search"></a>search</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// actual search</span></span><br><span class="line">Query q = <span class="keyword">new</span> Query(<span class="string">"hello world"</span>)</span><br><span class="line">                .addFilter(<span class="keyword">new</span> Query.NumericFilter(<span class="string">"age"</span>, <span class="number">0</span>, <span class="number">1000</span>))</span><br><span class="line">                .limit(<span class="number">0</span>,<span class="number">5</span>);</span><br><span class="line">SearchResult res = client.search(q);</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// aggregation query</span></span><br><span class="line">AggregationBuilder r = <span class="keyword">new</span> AggregationBuilder(<span class="string">"hello"</span>)</span><br><span class="line">        .apply(<span class="string">"@income"</span>, <span class="string">"k"</span>)</span><br><span class="line">        .groupBy(<span class="string">"@job"</span>, Reducers.avg(<span class="string">"@k"</span>).as(<span class="string">"avgIncome"</span>))</span><br><span class="line">        .filter(<span class="string">"@avgIncome&gt;=2"</span>)</span><br><span class="line">        .sortBy(<span class="number">10</span>, SortedField.asc(<span class="string">"@dream"</span>));</span><br><span class="line">AggregationResult res = client.aggregate(r);</span><br></pre></td></tr></table></figure>
<p><a href="https://github.com/RediSearch/RediSearch" target="_blank" rel="noopener">https://github.com/RediSearch/RediSearch</a><br><a href="https://github.com/RediSearch/JRediSearch" target="_blank" rel="noopener">https://github.com/RediSearch/JRediSearch</a></p>
]]></content>
      <categories>
        <category>search</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Switch python/ node in mac</title>
    <url>/2020/02/06/Switch-python-node-in-mac/</url>
    <content><![CDATA[<h1 id="node-switch"><a href="#node-switch" class="headerlink" title="node switch"></a>node switch</h1><p>when <code>npm install</code> error happen<br>check whether the web problem or the node version problem.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node --version</span><br><span class="line">npm cache clean -f</span><br><span class="line">npm install -g n</span><br><span class="line"></span><br><span class="line"># switch</span><br><span class="line">n</span><br><span class="line"># delete</span><br><span class="line">n rm</span><br><span class="line"></span><br><span class="line"># node version</span><br><span class="line">n latest</span><br><span class="line">n stable</span><br><span class="line">n lts</span><br></pre></td></tr></table></figure>
<p><a href="https://stackoverflow.com/questions/32791657/node-gyp-rebuild-build-error-make-failed-npm-install" target="_blank" rel="noopener">https://stackoverflow.com/questions/32791657/node-gyp-rebuild-build-error-make-failed-npm-install</a><br><a href="https://segmentfault.com/q/1010000009734734" target="_blank" rel="noopener">https://segmentfault.com/q/1010000009734734</a><br><a href="https://blog.csdn.net/weixin_38190050/article/details/99644735" target="_blank" rel="noopener">https://blog.csdn.net/weixin_38190050/article/details/99644735</a></p>
<h1 id="install-python3"><a href="#install-python3" class="headerlink" title="install python3"></a>install python3</h1><p>brew install python3</p>
<h1 id="path-in-different-way"><a href="#path-in-different-way" class="headerlink" title="path in different way"></a>path in different way</h1><div class="table-container">
<table>
<thead>
<tr>
<th>origin</th>
<th style="text-align:right">path</th>
</tr>
</thead>
<tbody>
<tr>
<td>default(2.7)</td>
<td style="text-align:right">/System/Library/Frameworks/Python.framework/Versions/2.7</td>
</tr>
<tr>
<td>brew(2.7/3.x)</td>
<td style="text-align:right">/usr/local/Cellar/python</td>
</tr>
<tr>
<td>pkg(3.x)</td>
<td style="text-align:right">/Library/Frameworks/Python.framework/Versions/3.x</td>
</tr>
</tbody>
</table>
</div>
<h1 id="enviroment-setting"><a href="#enviroment-setting" class="headerlink" title="enviroment setting"></a>enviroment setting</h1><p><code>vi ~/.bash_profile</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Setting PATH <span class="keyword">for</span> Python 2.7</span></span><br><span class="line">PATH="/System/Library/Frameworks/Python.framework/Versions/2.7/bin:$&#123;PATH&#125;"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Setting PATH <span class="keyword">for</span> Python 3.7.6</span></span><br><span class="line">PATH="/usr/local/Cellar/python/3.7.6_1/bin:$&#123;PATH&#125;"</span><br><span class="line"></span><br><span class="line">export PATH</span><br></pre></td></tr></table></figure>
<p><code>vi ~/.bashrc</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alias python2=&apos;/System/Library/Frameworks/Python.framework/Versions/2.7/bin/python2.7&apos;</span><br><span class="line">alias python3=&apos;/usr/local/Cellar/python/3.7.6_1/bin/python3.7&apos;</span><br><span class="line">alias python=python3</span><br></pre></td></tr></table></figure>
<p><code>source ~/.bash_profile</code><br><code>source ~/.bashrc</code></p>
<p><a href="https://blog.csdn.net/u014259820/article/details/81023224" target="_blank" rel="noopener">https://blog.csdn.net/u014259820/article/details/81023224</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>hello</tag>
      </tags>
  </entry>
  <entry>
    <title>Switch python version in centos</title>
    <url>/2020/02/07/Switch-python-version-in-centos/</url>
    <content><![CDATA[<h1 id="install-dependencies-first"><a href="#install-dependencies-first" class="headerlink" title="install dependencies first"></a>install dependencies first</h1><p><code>yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make</code></p>
<p>this pack may not necessary<br><code>yum install libffi-devel -y</code></p>
<h1 id="download-amp-compile"><a href="#download-amp-compile" class="headerlink" title="download &amp; compile"></a>download &amp; compile</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.7.6/Python-3.7.6.tgz</span><br><span class="line">cd Python-3.7.6</span><br><span class="line">./configure</span><br><span class="line">make&amp;&amp;make install</span><br></pre></td></tr></table></figure>
<h1 id="modify-default-setting"><a href="#modify-default-setting" class="headerlink" title="modify default setting"></a>modify default setting</h1><p>python3.7 locate in <code>/usr/local/bin</code> in default<br>we need to change default python2.7 to python3.7</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># backup</span><br><span class="line">mv /usr/bin/python /usr/bin/python.bak</span><br><span class="line"># soft link</span><br><span class="line">ln -s /usr/local/bin/python3 /usr/bin/python</span><br></pre></td></tr></table></figure>
<p>modify <code>pip</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># backup</span><br><span class="line">mv /usr/bin/pip /usr/bin/pip.bak</span><br><span class="line"># soft link</span><br><span class="line">ln -s /usr/local/bin/pip3 /usr/bin/pip</span><br></pre></td></tr></table></figure></p>
<h1 id="modify-yum-setting"><a href="#modify-yum-setting" class="headerlink" title="modify yum setting"></a>modify <code>yum</code> setting</h1><p><code>yum</code> not support python3, so we need point to python2 manually.</p>
<p><code>vi /usr/libexec/urlgrabber-ext-down</code><br><img src="/2020/02/07/Switch-python-version-in-centos/20200207174547.jpg" alt="20200207174547.jpg"></p>
<p><code>vi /usr/bin/yum</code><br><img src="/2020/02/07/Switch-python-version-in-centos/20200207175001.jpg" alt="20200207175001.jpg"></p>
<p>modify the first line to <code>#! /usr/bin/python2.7</code></p>
<p><a href="https://blog.csdn.net/u013214212/article/details/81540840" target="_blank" rel="noopener">https://blog.csdn.net/u013214212/article/details/81540840</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>hello</tag>
      </tags>
  </entry>
  <entry>
    <title>Search content in files under folder</title>
    <url>/2020/04/10/Search-content-in-files-under-folder/</url>
    <content><![CDATA[<h2 id="regular-expression"><a href="#regular-expression" class="headerlink" title="regular expression"></a>regular expression</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/\bsys_.*?\b/</span><br></pre></td></tr></table></figure>
<p>match words begin with <code>sys_</code>, as short as possible.</p>
<h2 id="definite-scope"><a href="#definite-scope" class="headerlink" title="definite scope"></a>definite scope</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find --name &quot;*.xml&quot; .</span><br></pre></td></tr></table></figure>
<p>If you search directly under a folder<br><code>grep -r</code> —recursive may more suitable.</p>
<h2 id="turn-lower-to-upper-letter"><a href="#turn-lower-to-upper-letter" class="headerlink" title="turn lower to upper letter"></a>turn lower to upper letter</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tr &quot;[:lower:]&quot; &quot;[:upper:]&quot;</span><br></pre></td></tr></table></figure>
<h2 id="duplicate-removal"><a href="#duplicate-removal" class="headerlink" title="duplicate removal"></a>duplicate removal</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">awk &apos;!a[$0]++&#123;print&#125;&apos;</span><br></pre></td></tr></table></figure>
<p>when current line not show in below, print it.</p>
<h2 id="integration"><a href="#integration" class="headerlink" title="integration"></a>integration</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find -name &quot;*.xml&quot; | xargs grep -iohP &apos;\bsys_.*?\b&apos; | tr &quot;[:lower:]&quot; &quot;[:upper:]&quot; | awk &apos;!a[$0]++&#123;print&#125;&apos;</span><br></pre></td></tr></table></figure>
<ol>
<li>find target files</li>
<li>grep string in files, —ignore-case  —only-matching  —no-filename  —perl-regexp</li>
<li>turn capitalization</li>
<li>duplicate removal</li>
</ol>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Monitor jar by prometheus</title>
    <url>/2020/02/27/Monitor-jar-by-prometheus/</url>
    <content><![CDATA[<h2 id="Install-software-first"><a href="#Install-software-first" class="headerlink" title="Install software first"></a>Install software first</h2><div class="table-container">
<table>
<thead>
<tr>
<th>Env/Componet</th>
<th style="text-align:right">Description</th>
<th style="text-align:right">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>System</td>
<td style="text-align:right">CentOS 7.3</td>
<td style="text-align:right"><a href="http://archive.kernel.org/centos-vault/7.3.1611/isos/x86_64/CentOS-7-x86_64-DVD-1611.iso" target="_blank" rel="noopener">http://archive.kernel.org/centos-vault/7.3.1611/isos/x86_64/CentOS-7-x86_64-DVD-1611.iso</a></td>
</tr>
<tr>
<td>Go</td>
<td style="text-align:right">1.11.4</td>
<td style="text-align:right"><a href="https://prometheus.io/download/#prometheus" target="_blank" rel="noopener">https://prometheus.io/download/#prometheus</a></td>
</tr>
<tr>
<td>Prometheus</td>
<td style="text-align:right">2.6.0</td>
<td style="text-align:right"><a href="https://golang.org/dl/" target="_blank" rel="noopener">https://golang.org/dl/</a></td>
</tr>
<tr>
<td>Grafana</td>
<td style="text-align:right">5.4.2</td>
<td style="text-align:right"><a href="https://dl.grafana.com/oss/release/grafana-5.4.2-1.x86_64.rpm" target="_blank" rel="noopener">https://dl.grafana.com/oss/release/grafana-5.4.2-1.x86_64.rpm</a></td>
</tr>
</tbody>
</table>
</div>
<a id="more"></a>
<h3 id="Install-Go"><a href="#Install-Go" class="headerlink" title="Install Go"></a>Install Go</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -C /usr/local/ -xvf go1.11.4.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line">vim /etc/profile</span><br><span class="line">export PATH=$PATH:/usr/local/go/bin</span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line">go version</span><br></pre></td></tr></table></figure>
<h3 id="Install-prometheus"><a href="#Install-prometheus" class="headerlink" title="Install prometheus"></a>Install prometheus</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -C /usr/local/ -xvf prometheus-2.6.0.linux-amd64.tar.gz</span><br><span class="line">ln -sv /usr/local/prometheus-2.6.0.linux-amd64/ /usr/local/Prometheus</span><br></pre></td></tr></table></figure>
<p>If the target ip:port already know,then edit <code>prometheus.yml</code> may more convient.<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">/usr/local/Prometheus/prometheus --config.file=/usr/local/Prometheus/prometheus.yml &amp;</span><br></pre></td></tr></table></figure></p>
<p>check on browser <code>127.0.0.1:9090</code></p>
<h3 id="Install-grafana"><a href="#Install-grafana" class="headerlink" title="Install grafana"></a>Install grafana</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rpm -ivh --nodeps grafana-5.4.2-1.x86_64.rpm</span><br><span class="line">sudo /bin/systemctl daemon-reload</span><br><span class="line">sudo /bin/systemctl enable grafana-server.service</span><br><span class="line">sudo /bin/systemctl start grafana-server.service</span><br></pre></td></tr></table></figure>
<p>check on browser <code>127.0.0.1:3000</code></p>
<p><a href="https://blog.csdn.net/ywd1992/article/details/85989259" target="_blank" rel="noopener">https://blog.csdn.net/ywd1992/article/details/85989259</a></p>
<h2 id="jar-exporter"><a href="#jar-exporter" class="headerlink" title="jar exporter"></a>jar exporter</h2><ol>
<li>for mointor jar, we need dispatch unique jmx port to every jar process.</li>
<li>download prometheus jar exporter and jmx_exporter tomcat config file.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># target package</span><br><span class="line">/usr/local/Demo.jar</span><br><span class="line"></span><br><span class="line"># download https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.3.1/jmx_prometheus_javaagent-0.3.1.jar</span><br><span class="line">/usr/local/jmx_prometheus_javaagent-0.3.1.jar</span><br><span class="line"></span><br><span class="line"># download jmx_exporter tomcat https://github.com/prometheus/jmx_exporter/tree/master/example_configs</span><br><span class="line">/usr/local/tomcat.yaml</span><br></pre></td></tr></table></figure>
<ol>
<li><p>config jmx exporter<br>replace <code>Catalina</code> to <code>Tomcat</code><br>name with <code>jar_config.yaml</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---   </span><br><span class="line">lowercaseOutputLabelNames: true</span><br><span class="line">lowercaseOutputName: true</span><br><span class="line">rules:</span><br><span class="line">- pattern: &apos;Tomcat&lt;type=GlobalRequestProcessor, name=\&quot;(\w+-\w+)-(\d+)\&quot;&gt;&lt;&gt;(\w+):&apos;</span><br><span class="line">  name: tomcat_$3_total</span><br><span class="line">  labels:</span><br><span class="line">    port: &quot;$2&quot;</span><br><span class="line">    protocol: &quot;$1&quot;</span><br><span class="line">  help: Tomcat global $3</span><br><span class="line">  type: COUNTER</span><br><span class="line">- pattern: &apos;Tomcat&lt;j2eeType=Servlet, WebModule=//([-a-zA-Z0-9+&amp;@#/%?=~_|!:.,;]*[-a-zA-Z0-9+&amp;@#/%=~_|]), name=([-a-zA-Z0-9+/$%~_-|!.]*), J2EEApplication=none, J2EEServer=none&gt;&lt;&gt;(requestCount|maxTime|processingTime|errorCount):&apos;</span><br><span class="line">  name: tomcat_servlet_$3_total</span><br><span class="line">  labels:</span><br><span class="line">    module: &quot;$1&quot;</span><br><span class="line">    servlet: &quot;$2&quot;</span><br><span class="line">  help: Tomcat servlet $3 total</span><br><span class="line">  type: COUNTER</span><br><span class="line">- pattern: &apos;Tomcat&lt;type=ThreadPool, name=&quot;(\w+-\w+)-(\d+)&quot;&gt;&lt;&gt;(currentThreadCount|currentThreadsBusy|keepAliveCount|pollerThreadCount|connectionCount):&apos;</span><br><span class="line">  name: tomcat_threadpool_$3</span><br><span class="line">  labels:</span><br><span class="line">    port: &quot;$2&quot;</span><br><span class="line">    protocol: &quot;$1&quot;</span><br><span class="line">  help: Tomcat threadpool $3</span><br><span class="line">  type: GAUGE</span><br><span class="line">- pattern: &apos;Tomcat&lt;type=Manager, host=([-a-zA-Z0-9+&amp;@#/%?=~_|!:.,;]*[-a-zA-Z0-9+&amp;@#/%=~_|]), context=([-a-zA-Z0-9+/$%~_-|!.]*)&gt;&lt;&gt;(processingTime|sessionCounter|rejectedSessions|expiredSessions):&apos;</span><br><span class="line">  name: tomcat_session_$3_total</span><br><span class="line">  labels:</span><br><span class="line">    context: &quot;$2&quot;</span><br><span class="line">    host: &quot;$1&quot;</span><br><span class="line">  help: Tomcat session $3 total</span><br><span class="line">  type: COUNTER</span><br></pre></td></tr></table></figure>
</li>
<li><p>start jar with exporter</p>
</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">nohup java -javaagent:/usr/local/jmx_prometheus_javaagent-0.3.1.jar=30015:/usr/local/jar_config.yaml -jar /usr/local/Demo.jar &gt;/dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>
<ol>
<li>add prometheus config</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- job_name: &apos;tomcat&apos;</span><br><span class="line">  static_configs:</span><br><span class="line">  - targets: [&apos;10.86.86.100:30015&apos;]</span><br><span class="line">    labels:</span><br><span class="line">      appname: &apos;demo&apos;</span><br></pre></td></tr></table></figure>
<ol>
<li>add grafana dashboard<br>add jar dashboard <code>https://grafana.com/dashboards/8563</code></li>
</ol>
<p><a href="https://www.jianshu.com/p/8a5e681b18ce" target="_blank" rel="noopener">https://www.jianshu.com/p/8a5e681b18ce</a></p>
<h2 id="to-config-alert-on-grafana"><a href="#to-config-alert-on-grafana" class="headerlink" title="to config alert on grafana"></a>to config alert on grafana</h2><p>First i want add email channel, but the smtp inside is restricted,<br>and <code>go</code> not support none ssl unencrypted connection.</p>
<p>I even install a email server software <code>hmailserver</code>, but still not work.<br>So i give up, and use <code>dingding</code> notice robot instead.</p>
<p><img src="/2020/02/27/Monitor-jar-by-prometheus/20200227162128.jpg" alt="20200227162128.jpg"></p>
<h3 id="Add-grafana-alert-channel"><a href="#Add-grafana-alert-channel" class="headerlink" title="Add grafana alert channel"></a>Add grafana alert channel</h3><p><img src="/2020/02/27/Monitor-jar-by-prometheus/20200227162827.jpg" alt="20200227162827.jpg"></p>
<h3 id="Add-query-panel"><a href="#Add-query-panel" class="headerlink" title="Add query panel"></a>Add query panel</h3><p><img src="/2020/02/27/Monitor-jar-by-prometheus/20200227164011.jpg" alt="20200227164011.jpg"></p>
<p>If the <code>min step</code> format not correct like <code>60</code>, the alert rule may throw error.<br><code>parse error at char 88: missing unit character in duration</code></p>
<h3 id="Add-alert-rule"><a href="#Add-alert-rule" class="headerlink" title="Add alert rule"></a>Add alert rule</h3><p><img src="/2020/02/27/Monitor-jar-by-prometheus/20200227164204.jpg" alt="20200227164204.jpg"></p>
<p>The <code>8563</code> dashboard’s panel can’t be used to mointor target directly.<br>Exception will be throw when you edit panel and add alert directly.<br>Make sure the panel query has point the target instance, then add alert.</p>
<p><a href="https://grafana.com/docs/grafana/latest/alerting/rules/" target="_blank" rel="noopener">https://grafana.com/docs/grafana/latest/alerting/rules/</a><br><a href="https://www.jianshu.com/p/2b230390f37e" target="_blank" rel="noopener">https://www.jianshu.com/p/2b230390f37e</a><br><a href="https://github.com/FUSAKLA/alertmanager-grafana-dashboard/issues/1" target="_blank" rel="noopener">https://github.com/FUSAKLA/alertmanager-grafana-dashboard/issues/1</a><br><a href="https://yq.aliyun.com/articles/250063" target="_blank" rel="noopener">https://yq.aliyun.com/articles/250063</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>monitor</tag>
      </tags>
  </entry>
  <entry>
    <title>Segment level locking in Oracle</title>
    <url>/2020/04/10/Segment-level-locking-in-Oracle/</url>
    <content><![CDATA[<p>Simple demonstration of segment-level locking caused by concurrency in an Oracle database</p>
<p>reprint:简单演示 Oracle 数据库并发导致段级锁（表级锁）<br><a href="https://www.cnblogs.com/liuning8023/archive/2013/03/20/2971946.html" target="_blank" rel="noopener">https://www.cnblogs.com/liuning8023/archive/2013/03/20/2971946.html</a></p>
<h2 id="content"><a href="#content" class="headerlink" title="content"></a>content</h2><ul>
<li>environment</li>
<li>demonstration</li>
</ul>
<blockquote>
<p>本文简单演示并发导致的行级锁。并发是两个以上的用户对同样的数据进行修改（包括插入、删除和修改）。锁的产生是因为并发。没有并发，就没有锁。并发的产生是因为系统需要，系统需要是因为用户需要。</p>
<p>This article briefly demonstrates row-level locking caused by concurrency. Concurrency is when two or more users make changes (including inserts, deletes, and modifications) to the same data. Locks occur because of concurrency. <strong>No concurrency, no locking.</strong> Concurrency occurs because the system needs it, and the system needs it because the user needs it.</p>
</blockquote>
<a id="more"></a>
<h2 id="environment"><a href="#environment" class="headerlink" title="environment"></a>environment</h2><ul>
<li>Windows 2003 Server</li>
<li>Oracle 11g Release 1 (11.1)</li>
</ul>
<h2 id="demonstration"><a href="#demonstration" class="headerlink" title="demonstration"></a>demonstration</h2><h3 id="open-the-first-sql-session"><a href="#open-the-first-sql-session" class="headerlink" title="open the first sql session"></a>open the first sql session</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SQL&gt; select distinct sid from v$mystat;</span><br><span class="line"></span><br><span class="line">       SID</span><br><span class="line">----------</span><br><span class="line">       124</span><br><span class="line"></span><br><span class="line">SQL&gt; create table t(x int) partition by range(x)(partition p1 values less than(10),partition p2 values less than(maxvalue));</span><br><span class="line"></span><br><span class="line">表已创建。</span><br><span class="line"></span><br><span class="line">SQL&gt; insert into t values(1);</span><br><span class="line"></span><br><span class="line">已创建 1 行。</span><br><span class="line"></span><br><span class="line">SQL&gt; select * from t partition(p1);</span><br><span class="line"></span><br><span class="line">         X</span><br><span class="line">----------</span><br><span class="line">         1</span><br><span class="line"></span><br><span class="line">SQL&gt; select sid,type,id1,id2,lmode,request,block</span><br><span class="line">  2  from v$lock where sid=124;</span><br><span class="line"></span><br><span class="line">       SID TYPE         ID1        ID2      LMODE    REQUEST      BLOCK</span><br><span class="line">---------- ----- ---------- ---------- ---------- ---------- ----------</span><br><span class="line">       124 AE            99          0          4          0          0</span><br><span class="line">       124 TM        128807          0          3          0          0</span><br><span class="line">       124 TM        128808          0          3          0          0</span><br><span class="line">       124 TX        589847      46045          6          0          0</span><br><span class="line"></span><br><span class="line">SQL&gt; select object_name, subobject_name</span><br><span class="line">  2    from dba_objects</span><br><span class="line">  3   where object_id in (128807, 128808);</span><br><span class="line"></span><br><span class="line">OBJECT_NAME     SUBOBJECT_NAME</span><br><span class="line">--------------- ---------------</span><br><span class="line">T</span><br><span class="line">T               P1</span><br><span class="line"></span><br><span class="line">SQL&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>create partition table <code>t</code>, with two partitions, <code>p1</code> and <code>p2</code></li>
<li>insert a record into <code>p1</code></li>
<li>find <code>TM</code> share lock in <code>t</code> and <code>p1</code>, by view <code>V$LOCK</code></li>
<li><code>ID1</code> represents the locked object ID. You can get the object name by looking at the DBA_OBJECTS view. 128807 and 128808 correspond to the <code>p1</code> partition of table t and table t, respectively.</li>
</ul>
<h3 id="open-the-second-sql-session"><a href="#open-the-second-sql-session" class="headerlink" title="open the second sql session"></a>open the second sql session</h3><p>At this point, what happens if we do DDL operations on t table, p1 partition of t table, and p2 partition of t table:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SQL&gt; select distinct sid from v$mystat;</span><br><span class="line"></span><br><span class="line">       SID</span><br><span class="line">----------</span><br><span class="line">       140</span><br><span class="line"></span><br><span class="line">SQL&gt; truncate table t;</span><br><span class="line">truncate table t</span><br><span class="line">               *</span><br><span class="line">第 1 行出现错误:</span><br><span class="line">ORA-00054: 资源正忙, 但指定以 NOWAIT 方式获取资源, 或者超时失效</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SQL&gt; alter table t truncate partition p1;</span><br><span class="line">alter table t truncate partition p1</span><br><span class="line">            *</span><br><span class="line">第 1 行出现错误:</span><br><span class="line">ORA-00054: 资源正忙, 但指定以 NOWAIT 方式获取资源, 或者超时失效</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SQL&gt; alter table t truncate partition p2;</span><br><span class="line"></span><br><span class="line">表被截断。</span><br><span class="line"></span><br><span class="line">SQL&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>Only the <code>p2</code> partition is not section-locked, so DDL operations can be performed on <code>p2</code>.</p>
</li>
<li><p>A <code>TM</code> lock is a segmental-level lock that allows locks at the same level or lower, but rejects higher-level locks, making the DDL operation significantly higher. Oracle minimizes the scope of the lock as much as possible.</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SQL&gt; insert into t values(11);</span><br><span class="line"></span><br><span class="line">已创建 1 行。</span><br><span class="line"></span><br><span class="line">SQL&gt; select * from t partition(p2);</span><br><span class="line"></span><br><span class="line">         X</span><br><span class="line">----------</span><br><span class="line">        11</span><br><span class="line"></span><br><span class="line">SQL&gt; select sid,type,id1,id2,lmode,request,block</span><br><span class="line">  2  from v$lock where sid in (124,140)</span><br><span class="line">  3  order by sid,type;</span><br><span class="line"></span><br><span class="line">       SID TY        ID1        ID2      LMODE    REQUEST      BLOCK</span><br><span class="line">---------- -- ---------- ---------- ---------- ---------- ----------</span><br><span class="line">       124 AE         99          0          4          0          0</span><br><span class="line">       124 TM     128808          0          3          0          0</span><br><span class="line">       124 TM     128807          0          3          0          0</span><br><span class="line">       124 TX     327711      45817          6          0          0</span><br><span class="line">       140 AE         99          0          4          0          0</span><br><span class="line">       140 TM     128807          0          3          0          0</span><br><span class="line">       140 TM     128809          0          3          0          0</span><br><span class="line">       140 TX     196611      45960          6          0          0</span><br><span class="line"></span><br><span class="line">已选择8行。</span><br><span class="line"></span><br><span class="line">SQL&gt; select object_name, subobject_name</span><br><span class="line">  2    from dba_objects</span><br><span class="line">  3   where object_id in (128807, 128808, 128809);</span><br><span class="line"></span><br><span class="line">OBJECT_NAME     SUBOBJECT_NAME</span><br><span class="line">--------------- ---------------</span><br><span class="line">T</span><br><span class="line">T               P1</span><br><span class="line">T               P2</span><br><span class="line"></span><br><span class="line">SQL&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>When a piece of data is inserted into a <code>p2</code> partition, a Shared lock is also added to the <code>p2</code> partition, i.e. ID1=128809.</p>
</li>
<li><p>A <code>TM lock</code> is a table-level Shared lock. A table is usually viewed as a segment. When a table has several segments, each segment is individually locked.</p>
</li>
</ul>
<h2 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h2><ul>
<li>segmental-level lock allows locks at the same level or lower, but rejects higher-level locks. so <code>p1</code> reject DDL, but <code>p2</code> truncated.</li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>观察redis集群握手造成的带宽损耗</title>
    <url>/2020/05/21/Observe-the-bandwidth-loss-caused-by-the-redis-cluster-handshake/</url>
    <content><![CDATA[<h2 id="被槽吸引"><a href="#被槽吸引" class="headerlink" title="被槽吸引"></a>被槽吸引</h2><p><a href="https://github.com/antirez/redis/issues/2576" target="_blank" rel="noopener">why redis-cluster use 16384 slots? #2576</a><br><a href="https://www.cnblogs.com/rjzheng/p/11430592.html" target="_blank" rel="noopener">【原创】为什么Redis集群有16384个槽</a><br>看到这位博主的文章，感觉redis作者的考量很有意思。</p>
<p>打开集群的头文件，看了一下数据结构，不出所料是16384个槽<br><a href="https://github.com/antirez/redis/blob/6.0.0/src/cluster.h" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/cluster.h</a></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*-----------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> * Redis cluster data structures, defines, exported API.</span></span><br><span class="line"><span class="comment"> *----------------------------------------------------------------------------*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CLUSTER_SLOTS 16384</span></span><br><span class="line"></span><br><span class="line">line:<span class="number">248</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">uint16_t</span> type;      <span class="comment">/* Message type */</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> myslots[CLUSTER_SLOTS/<span class="number">8</span>];</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">union</span> clusterMsgData data;</span><br><span class="line">&#125; clusterMsg;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>博主解释的很挺清楚的了，说白了就是不会有这么多节点，不需要太多槽。</p>
<p>issue 里评论区有提到 <code>Compress bitmap to reduce network traffic</code>，<br>我觉得评论区最后的回复是对的，传输中的数据没有被压缩 <code>No compression, just 1 bit for 1 slot</code>。</p>
<p>追查代码：<br><a href="https://github.com/antirez/redis/blob/6.0.0/src/cluster.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/cluster.c</a><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">line:<span class="number">2433</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clusterSendPing</span><span class="params">(clusterLink *link, <span class="keyword">int</span> type)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    clusterBuildMessageHdr(hdr,type);</span><br><span class="line">    ...</span><br><span class="line">    clusterSendMessage(link,buf,totlen);</span><br><span class="line">    zfree(buf);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">line:<span class="number">2329</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clusterBuildMessageHdr</span><span class="params">(clusterMsg *hdr, <span class="keyword">int</span> type)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="built_in">memcpy</span>(hdr-&gt;myslots,master-&gt;slots,<span class="keyword">sizeof</span>(hdr-&gt;myslots));</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">line:<span class="number">2292</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clusterSendMessage</span><span class="params">(clusterLink *link, <span class="keyword">unsigned</span> <span class="keyword">char</span> *msg, <span class="keyword">size_t</span> msglen)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (sdslen(link-&gt;sndbuf) == <span class="number">0</span> &amp;&amp; msglen != <span class="number">0</span>)</span><br><span class="line">        connSetWriteHandlerWithBarrier(link-&gt;conn, clusterWriteHandler, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    link-&gt;sndbuf = sdscatlen(link-&gt;sndbuf, msg, msglen);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>并没有发现有压缩的过程，我猜作者想说的是，压缩位图以节省内存空间<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clusterInit</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    line:<span class="number">518</span></span><br><span class="line">    <span class="comment">/* The slots -&gt; keys map is a radix tree. Initialize it here. */</span></span><br><span class="line">    server.cluster-&gt;slots_to_keys = raxNew();</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="评论区老哥"><a href="#评论区老哥" class="headerlink" title="评论区老哥"></a>评论区老哥</h2><p>看完文章，评论区老哥的问题，引起了我的兴趣：<br><img src="/2020/05/21/Observe-the-bandwidth-loss-caused-by-the-redis-cluster-handshake/20200521111826.png" alt="20200521111826.png"></p>
<p>对呀，带宽损耗可不可以算出来？<br>给定节点数量、实例数量、超时时间，估算带宽损耗？<br>嗯，这很酷。。。</p>
<p>博主已经介绍了ping发送数量的计算公式：<br><code>数量=1+10*num(node.pong_received&gt;cluster_node_timeout/2)</code><br>可对GOSSIP协议不够了解，计算结果和《Redis运维与实现》的例子对不上<br>200节点，20台物理机，15s超时，真的是占25Mb带宽吗？</p>
<h2 id="跑一个看看"><a href="#跑一个看看" class="headerlink" title="跑一个看看"></a>跑一个看看</h2><p>没那么多物理机，用docker做个测试，创建20个节点，分布在2个桥接的网络上：<br><img src="/2020/05/21/Observe-the-bandwidth-loss-caused-by-the-redis-cluster-handshake/config.png" alt="config.png"><br><img src="/2020/05/21/Observe-the-bandwidth-loss-caused-by-the-redis-cluster-handshake/created.png" alt="created.png"></p>
<p>10分钟后docker的状态<br><img src="/2020/05/21/Observe-the-bandwidth-loss-caused-by-the-redis-cluster-handshake/docker-stats.png" alt="docker-stats.png"></p>
<p>10分钟后redis-0的集群信息<br><img src="/2020/05/21/Observe-the-bandwidth-loss-caused-by-the-redis-cluster-handshake/redis-0-info.png" alt="redis-0-info.png"></p>
<ol>
<li>通过容器的网络IO换算一下，带宽损耗1.66Mb，例子的数据是正确的~~~<br><code>((121.93MB / 600s) * 1024 / 1000) * 8 = 1.66Mbps</code></li>
<li>通过redis-0的网络Output来看，每个消息大约 2.91KB/msg<br><code>6.24MB * 1024 / 2197 = 2.91KB/msg</code></li>
<li>10分钟发送1114个ping，平均 1.86ping/s，可见公式里的 num(x) 大约是 0.086个</li>
</ol>
<h2 id="ping的发送"><a href="#ping的发送" class="headerlink" title="ping的发送"></a>ping的发送</h2><p>如果按本地所有节点都在默默等待超时来算，ping数量、带宽损耗会远高于观察到的结果<br>看源码可以知道，除了每秒固定的ping外，100ms发送ping的条件有3个</p>
<p><a href="https://github.com/antirez/redis/blob/6.0.0/src/cluster.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/cluster.c</a><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">line:<span class="number">3389</span></span><br><span class="line"><span class="comment">/* -----------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> * CLUSTER cron job</span></span><br><span class="line"><span class="comment"> * -------------------------------------------------------------------------- */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* This is executed 10 times every second */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clusterCron</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    line:<span class="number">3495</span></span><br><span class="line">    <span class="keyword">if</span> (!(iteration % <span class="number">10</span>)) &#123;</span><br><span class="line">        ...</span><br><span class="line">        clusterSendPing(min_pong_node-&gt;link, CLUSTERMSG_TYPE_PING);</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    line:<span class="number">3575</span></span><br><span class="line">    <span class="keyword">if</span> (node-&gt;link &amp;&amp;</span><br><span class="line">        node-&gt;ping_sent == <span class="number">0</span> &amp;&amp;</span><br><span class="line">        (now - node-&gt;pong_received) &gt; server.cluster_node_timeout/<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        clusterSendPing(node-&gt;link, CLUSTERMSG_TYPE_PING);</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<ol>
<li>当前节点和目标节点的连接有效</li>
<li>没有向目标节点发过ping（没收到过目标节点的pong）</li>
<li>目标节点的本地pong接收时间已经超时</li>
</ol>
<p>可见，我忽略了重要的第二点，即博主提到的：</p>
<blockquote>
<p>在消息体中，会携带一定数量的其他节点信息用于交换。</p>
</blockquote>
<p>也就是说，我向张三打听他是不是还活着，他会顺带着告诉我李四也还活着 :)</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>由于有GOSSIP协议的信息传播，集群ping数量大幅降低</p>
<hr>
<p>集群安装参考<br><a href="https://www.runoob.com/docker/docker-redis-cluster.html" target="_blank" rel="noopener">https://www.runoob.com/docker/docker-redis-cluster.html</a><br><a href="https://blog.csdn.net/alinyua/article/details/80936940" target="_blank" rel="noopener">https://blog.csdn.net/alinyua/article/details/80936940</a><br><a href="https://blog.csdn.net/u012882163/article/details/100033442" target="_blank" rel="noopener">https://blog.csdn.net/u012882163/article/details/100033442</a></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Redis-Lua脚本的抢购方案</title>
    <url>/2020/06/02/Second-kill-scheme-based-on-reids-lua-script/</url>
    <content><![CDATA[<blockquote>
<p>Lua 脚本功能是 Reids的一大亮点， 通过内嵌对 Lua 环境的支持，<br>Redis 解决了长久以来不能高效地处理 <strong>CAS （check-and-set）</strong> 命令的缺点。<br>并且可以通过组合使用多个命令， 轻松实现以前很难实现或者不能高效实现的模式。</p>
</blockquote>
<p>该抢购方案基于Lua脚本，实际项目中可根据需要扩展命令。</p>
<a id="more"></a>
<h2 id="伪代码"><a href="#伪代码" class="headerlink" title="伪代码"></a>伪代码</h2><ol>
<li>是否已抢购(是否达到抢购上限)</li>
<li>是否还有库存</li>
<li>如果未抢购、有库存则扣减，否则返回0</li>
<li>加入已抢购集合</li>
<li>加入购买处理队列</li>
<li>返回1</li>
</ol>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><h3 id="编写脚本"><a href="#编写脚本" class="headerlink" title="编写脚本"></a>编写脚本</h3><p><code>script.lua</code></p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- variable</span></span><br><span class="line"><span class="keyword">local</span> stockKey = KEYS[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">local</span> purchasedKey = KEYS[<span class="number">2</span>]</span><br><span class="line"><span class="keyword">local</span> handlerKey = KEYS[<span class="number">3</span>]</span><br><span class="line"><span class="keyword">local</span> userId = ARGV[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">-- check purchased set</span></span><br><span class="line"><span class="keyword">if</span> redis.call(<span class="string">"SISMEMBER"</span>, purchasedKey, userId) ~= <span class="number">0</span> <span class="keyword">then</span> <span class="keyword">return</span> <span class="number">0</span> <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- check stock</span></span><br><span class="line"><span class="keyword">local</span> stock = redis.call(<span class="string">"GET"</span>, stockKey)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> stock <span class="keyword">or</span> <span class="built_in">tonumber</span>(stock) &lt;= <span class="number">0</span> <span class="keyword">then</span> <span class="keyword">return</span> <span class="number">0</span> <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- stock decrease</span></span><br><span class="line">redis.call(<span class="string">"DECR"</span>, stockKey)</span><br><span class="line"><span class="comment">-- add purchased set</span></span><br><span class="line">redis.call(<span class="string">"SADD"</span>, purchasedKey, userId)</span><br><span class="line"><span class="comment">-- add purchased handler queue</span></span><br><span class="line">redis.call(<span class="string">"LPUSH"</span>, handlerKey, userId)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h3 id="调试脚本"><a href="#调试脚本" class="headerlink" title="调试脚本"></a>调试脚本</h3><p><img src="/2020/06/02/Second-kill-scheme-based-on-reids-lua-script/20200602171231.png" alt="20200602171231.png"></p>
<p>又是个坑：参数的分隔用逗号 <code>,</code> 而且空格不能少</p>
<p><code>redis-cli --ldb --eval script.lua apple_stock apple_purchased_set apple_purchased_queue , 711</code></p>
<p><img src="/2020/06/02/Second-kill-scheme-based-on-reids-lua-script/20200602165535.png" alt="20200602165535.png"><br><img src="/2020/06/02/Second-kill-scheme-based-on-reids-lua-script/20200602165550.png" alt="20200602165550.png"></p>
<h3 id="测试脚本"><a href="#测试脚本" class="headerlink" title="测试脚本"></a>测试脚本</h3><p><code>redis-cli</code></p>
<p>文本转换为命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">script load &quot;-- variable\nlocal stockKey = KEYS[1]\nlocal purchasedKey = KEYS[2]\nlocal handlerKey = KEYS[3]\nlocal userId = ARGV[1]\n\n-- check purchased set\nif redis.call(\&quot;SISMEMBER\&quot;, purchasedKey, userId) ~= 0 then return 0 end\n\n-- check stock\nlocal stock = redis.call(\&quot;GET\&quot;, stockKey)\nif not stock or tonumber(stock) &lt;= 0 then return 0 end\n\n-- stock decrease\nredis.call(\&quot;DECR\&quot;, stockKey)\n-- add purchased set\nredis.call(\&quot;SADD\&quot;, purchasedKey, userId)\n-- add purchased handler queue\nredis.call(\&quot;LPUSH\&quot;, handlerKey, userId)\nreturn 1&quot;</span><br></pre></td></tr></table></figure>
<p>得到sha1，执行命令：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">evalsha a80403df241c6d1823f5c820a4d2b6284995444e 3 apple_stock apple_purchased_set apple_purchased_queue 777</span><br></pre></td></tr></table></figure></p>
<p><img src="/2020/06/02/Second-kill-scheme-based-on-reids-lua-script/20200602171006.png" alt="20200602171006.png"></p>
<h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><h3 id="lua"><a href="#lua" class="headerlink" title="lua"></a>lua</h3><p><img src="/2020/06/02/Second-kill-scheme-based-on-reids-lua-script/20200608195605.png" alt="j-lua-10000"><br><img src="/2020/06/02/Second-kill-scheme-based-on-reids-lua-script/20200608195817.png" alt="j-lua-20000"></p>
<h3 id="lua-cluster"><a href="#lua-cluster" class="headerlink" title="lua-cluster"></a>lua-cluster</h3><p><img src="/2020/06/02/Second-kill-scheme-based-on-reids-lua-script/20200608193546.png" alt="j-lua-cluster-10000"><br><img src="/2020/06/02/Second-kill-scheme-based-on-reids-lua-script/20200608194858.png" alt="j-lua-cluster-20000"></p>
<h3 id="watch"><a href="#watch" class="headerlink" title="watch"></a>watch</h3><p><img src="/2020/06/02/Second-kill-scheme-based-on-reids-lua-script/20200608200047.png" alt="j-watch-10000"><br><img src="/2020/06/02/Second-kill-scheme-based-on-reids-lua-script/20200608200257.png" alt="j-watch-20000"></p>
<ul>
<li>lua 方案抢购先到先得，基本不会出现失败。</li>
<li>lua 3个Master节点集群，性能对比单实例性能低。</li>
<li>watch 方案里，会出现大概30%的抢购失败，且性能比lua方案低。</li>
</ul>
<p>ps. 由于集群版的 Key 批量操作限制，mset、mget、eval，目前只支持具有 <strong>相同slot值的Key</strong> 执行批量操作。<br>所以在集群版的抢购方案中，传入的Key需要带上<code>{}</code>把键值映射入相同的slot，让命令在一个节点执行。<br>例如：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">evalsha a80403df241c6d1823f5c820a4d2b6284995444e 3 apple_stock&#123;apple&#125; apple_purchased_set&#123;apple&#125; apple_purchased_queue&#123;apple&#125; 777</span><br></pre></td></tr></table></figure></p>
<h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><ul>
<li>可以把有<strong>原子性要求</strong>的操作放入脚本</li>
<li>监听<code>apple_purchased_queue</code>, 消费消息处理抢购。</li>
<li>如果架构里有MQ，可以去除脚本里的<code>LPUSH</code>。</li>
<li>消费者如果处理异常，可以使用延迟队列做”失败重试”、”失效检查”之类操作</li>
</ul>
<hr>
<p>队列&amp;延迟队列：<br><a href="https://www.cnblogs.com/shamo89/p/9873368.html" target="_blank" rel="noopener">https://www.cnblogs.com/shamo89/p/9873368.html</a></p>
<p>事务&amp;lua&amp;管道：<br><a href="https://blog.csdn.net/u013870094/article/details/82461527" target="_blank" rel="noopener">https://blog.csdn.net/u013870094/article/details/82461527</a></p>
<p>命令：<br><a href="https://redis.io/commands#" target="_blank" rel="noopener">https://redis.io/commands#</a><br><a href="https://redis.io/topics/ldb" target="_blank" rel="noopener">https://redis.io/topics/ldb</a><br><a href="https://redis.io/commands/script-load" target="_blank" rel="noopener">https://redis.io/commands/script-load</a><br><a href="https://redis.io/commands/evalsha" target="_blank" rel="noopener">https://redis.io/commands/evalsha</a><br><a href="https://www.runoob.com/redis/redis-commands.html" target="_blank" rel="noopener">https://www.runoob.com/redis/redis-commands.html</a></p>
<p>LUA脚本：<br><a href="https://yq.aliyun.com/articles/645851" target="_blank" rel="noopener">https://yq.aliyun.com/articles/645851</a><br><a href="https://blog.csdn.net/xixingzhe2/article/details/86167859" target="_blank" rel="noopener">https://blog.csdn.net/xixingzhe2/article/details/86167859</a><br><a href="https://www.jianshu.com/p/366d1b4f0d13" target="_blank" rel="noopener">https://www.jianshu.com/p/366d1b4f0d13</a><br><a href="https://www.jianshu.com/p/8028972cf735" target="_blank" rel="noopener">https://www.jianshu.com/p/8028972cf735</a><br><a href="https://www.runoob.com/lua/lua-miscellaneous-operator.html" target="_blank" rel="noopener">https://www.runoob.com/lua/lua-miscellaneous-operator.html</a></p>
<p>异常：<br>Too many cluster redirections redis:<br><a href="https://segmentfault.com/a/1190000016461888" target="_blank" rel="noopener">https://segmentfault.com/a/1190000016461888</a><br><a href="https://blog.csdn.net/slg1988/article/details/93638501" target="_blank" rel="noopener">https://blog.csdn.net/slg1988/article/details/93638501</a><br><a href="https://blog.kelu.org/tech/2019/04/05/docker-compose-using-net-host.html" target="_blank" rel="noopener">https://blog.kelu.org/tech/2019/04/05/docker-compose-using-net-host.html</a></p>
<p>Connection reset:<br><a href="https://www.cnblogs.com/liu-ke/p/7090698.html" target="_blank" rel="noopener">https://www.cnblogs.com/liu-ke/p/7090698.html</a></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello thinkphp</title>
    <url>/2020/06/28/Hello-thinkphp/</url>
    <content><![CDATA[<p>下载redis dll库，更新php.ini</p>
<p> TP 3.2.3支持 PHP 7以上版本，没错找了半天发现是数据库配置不正确造成的。</p>
<p>架构-URL模式，用的兼容模式，譬如：<br><code>http://localhost/?s=/home/user/login/var/value</code></p>
<p><a href="http://pecl.php.net/package/redis" target="_blank" rel="noopener">http://pecl.php.net/package/redis</a><br><a href="http://www.thinkphp.cn/topic/38198.html" target="_blank" rel="noopener">Failed to initialize storage module:user</a><br><a href="http://document.thinkphp.cn" target="_blank" rel="noopener">http://document.thinkphp.cn</a></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>hello</tag>
      </tags>
  </entry>
  <entry>
    <title>探索redis 键散列过程源码</title>
    <url>/2020/06/10/Explore-the-source-code-of-the-redis-key-hashing-process/</url>
    <content><![CDATA[<p>在lua方案里碰到了在redis集群中执行多键操作，Key要在同一slot的限制。</p>
<p>经查资料，说是要避免 <code>Max redirect exception</code>，节点会因为某些场景发生阻塞(阻塞时间大于 clutser-node-timeout)，被判断下线。<br>想来在多键命令执行时，节点是阻塞的，如果不做单slot限制，键槽所分布的节点都会受到阻塞的影响。</p>
<a id="more"></a>
<h2 id="命令的探索"><a href="#命令的探索" class="headerlink" title="命令的探索"></a>命令的探索</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p><code>server.c</code>的<code>redisCommandTable</code>定义了每个命令对应的函数，<br>源码中的<code>set</code>命令对应的函数是<code>setCommand</code>函数，这个函数在<code>t_string.c</code>中定义。<br>源码中的<code>cluster</code>命令对应的函数是<code>clusterCommand</code>函数，这个函数在<code>cluster.c</code>中定义。</p>
<p><a href="https://github.com/antirez/redis/blob/6.0.0/src/server.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/server.c</a><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">line:<span class="number">182</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">redisCommand</span> <span class="title">redisCommandTable</span>[] = &#123;</span></span><br><span class="line">    ...</span><br><span class="line">    &#123;<span class="string">"set"</span>,setCommand,<span class="number">-3</span>,</span><br><span class="line">     <span class="string">"write use-memory @string"</span>,</span><br><span class="line">     <span class="number">0</span>,<span class="literal">NULL</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">     ...</span><br><span class="line">     &#123;<span class="string">"cluster"</span>,clusterCommand,<span class="number">-2</span>,</span><br><span class="line">     <span class="string">"admin ok-stale random"</span>,</span><br><span class="line">     <span class="number">0</span>,<span class="literal">NULL</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">     ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="set命令追踪"><a href="#set命令追踪" class="headerlink" title="set命令追踪"></a><code>set</code>命令追踪</h3><p>打开文件 <code>t_string.c</code> 查看调用过程<br><code>setCommand</code> -&gt; <code>setGenericCommand</code> -&gt; <code>genericSetKey</code>，函数<code>genericSetKey</code>在<code>db.c</code>中定义。<br><a href="https://github.com/antirez/redis/blob/6.0.0/src/t_string.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/t_string.c</a><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">line:<span class="number">96</span></span><br><span class="line"><span class="comment">/* SET key value [NX] [XX] [KEEPTTL] [EX &lt;seconds&gt;] [PX &lt;milliseconds&gt;] */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setCommand</span><span class="params">(client *c)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    setGenericCommand(c,flags,c-&gt;argv[<span class="number">1</span>],c-&gt;argv[<span class="number">2</span>],expire,unit,<span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">line:<span class="number">68</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setGenericCommand</span><span class="params">(client *c, <span class="keyword">int</span> flags, robj *key, robj *val, robj *expire, <span class="keyword">int</span> unit, robj *ok_reply, robj *abort_reply)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    genericSetKey(c,c-&gt;db,key,val,flags &amp; OBJ_SET_KEEPTTL,<span class="number">1</span>);</span><br><span class="line">    ...</span><br><span class="line">    addReply(c, ok_reply ? ok_reply : shared.ok);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>打开文件 <code>db.c</code> 查看调用过程<br><code>genericSetKey</code> -&gt; <code>dbAdd</code> -&gt; <code>slotToKeyAdd</code> -&gt; <code>slotToKeyUpdateKey</code> -&gt; <code>keyHashSlot</code><br>终于看到散列计算的函数了，<code>keyHashSlot</code>在<code>cluster.c</code>中定义<br><a href="https://github.com/antirez/redis/blob/6.0.0/src/db.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/db.c</a><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">line:<span class="number">244</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">genericSetKey</span><span class="params">(client *c, redisDb *db, robj *key, robj *val, <span class="keyword">int</span> keepttl, <span class="keyword">int</span> signal)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (lookupKeyWrite(db,key) == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        dbAdd(db,key,val);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        dbOverwrite(db,key,val);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">line:<span class="number">179</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dbAdd</span><span class="params">(redisDb *db, robj *key, robj *val)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">if</span> (server.cluster_enabled) slotToKeyAdd(key-&gt;ptr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">line:<span class="number">1691</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">slotToKeyAdd</span><span class="params">(sds key)</span> </span>&#123;</span><br><span class="line">    slotToKeyUpdateKey(key,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">line:<span class="number">1672</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">slotToKeyUpdateKey</span><span class="params">(sds key, <span class="keyword">int</span> add)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> hashslot = keyHashSlot(key,keylen);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="cluster-keyslot命令追踪"><a href="#cluster-keyslot命令追踪" class="headerlink" title="cluster keyslot命令追踪"></a><code>cluster keyslot</code>命令追踪</h3><p><code>cluster keyslot</code> 该命令能获取集群中key的slot值，可以看到调用的也是<code>keyHashSlot</code>函数<br><a href="https://github.com/antirez/redis/blob/6.0.0/src/cluster.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/cluster.c</a><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">line:<span class="number">4251</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clusterCommand</span><span class="params">(client *c)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!strcasecmp(c-&gt;argv[<span class="number">1</span>]-&gt;ptr,<span class="string">"keyslot"</span>) &amp;&amp; c-&gt;argc == <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="comment">/* CLUSTER KEYSLOT &lt;key&gt; */</span></span><br><span class="line">        sds key = c-&gt;argv[<span class="number">2</span>]-&gt;ptr;</span><br><span class="line"></span><br><span class="line">        addReplyLongLong(c,keyHashSlot(key,sdslen(key)));</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="散列函数"><a href="#散列函数" class="headerlink" title="散列函数"></a>散列函数</h2><p>打开文件 <code>cluster.c</code>，可以看到散列计算过程<br>看函数、函数注释可知，当有花括号<code>{}</code> 时，仅计算括号内内容的散列<br><a href="https://github.com/antirez/redis/blob/6.0.0/src/cluster.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/cluster.c</a><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">line：<span class="number">694</span></span><br><span class="line"><span class="comment">/* -----------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> * Key space handling</span></span><br><span class="line"><span class="comment"> * -------------------------------------------------------------------------- */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* We have 16384 hash slots. The hash slot of a given key is obtained</span></span><br><span class="line"><span class="comment"> * as the least significant 14 bits of the crc16 of the key.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * However if the key contains the &#123;...&#125; pattern, only the part between</span></span><br><span class="line"><span class="comment"> * &#123; and &#125; is hashed. This may be useful in the future to force certain</span></span><br><span class="line"><span class="comment"> * keys to be in the same node (assuming no resharding is in progress). */</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">keyHashSlot</span><span class="params">(<span class="keyword">char</span> *key, <span class="keyword">int</span> keylen)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s, e; <span class="comment">/* start-end indexes of &#123; and &#125; */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (s = <span class="number">0</span>; s &lt; keylen; s++)</span><br><span class="line">        <span class="keyword">if</span> (key[s] == <span class="string">'&#123;'</span>) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* No '&#123;' ? Hash the whole key. This is the base case. */</span></span><br><span class="line">    <span class="keyword">if</span> (s == keylen) <span class="keyword">return</span> crc16(key,keylen) &amp; <span class="number">0x3FFF</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* '&#123;' found? Check if we have the corresponding '&#125;'. */</span></span><br><span class="line">    <span class="keyword">for</span> (e = s+<span class="number">1</span>; e &lt; keylen; e++)</span><br><span class="line">        <span class="keyword">if</span> (key[e] == <span class="string">'&#125;'</span>) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* No '&#125;' or nothing between &#123;&#125; ? Hash the whole key. */</span></span><br><span class="line">    <span class="keyword">if</span> (e == keylen || e == s+<span class="number">1</span>) <span class="keyword">return</span> crc16(key,keylen) &amp; <span class="number">0x3FFF</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* If we are here there is both a &#123; and a &#125; on its right. Hash</span></span><br><span class="line"><span class="comment">     * what is in the middle between &#123; and &#125;. */</span></span><br><span class="line">    <span class="keyword">return</span> crc16(key+s+<span class="number">1</span>,e-s<span class="number">-1</span>) &amp; <span class="number">0x3FFF</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="异常追踪"><a href="#异常追踪" class="headerlink" title="异常追踪"></a>异常追踪</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;mset a 1 b 2</span><br><span class="line">CROSSSLOT Keys in request don&apos;t hash to the same slot</span><br></pre></td></tr></table></figure>
<p>倒查异常的触发链：</p>
<h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>异常定义在 <code>cluster.c</code><br><a href="https://github.com/antirez/redis/blob/6.0.0/src/cluster.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/cluster.c</a><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">line:<span class="number">5711</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clusterRedirectClient</span><span class="params">(client *c, clusterNode *n, <span class="keyword">int</span> hashslot, <span class="keyword">int</span> error_code)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (error_code == CLUSTER_REDIR_CROSS_SLOT) &#123;</span><br><span class="line">        addReplySds(c,sdsnew(<span class="string">"-CROSSSLOT Keys in request don't hash to the same slot\r\n"</span>));</span><br><span class="line">    &#125; ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="触发"><a href="#触发" class="headerlink" title="触发"></a>触发</h3><p>触发点在<code>clusterNode *getNodeByQuery</code>函数中<br>外层循环遍历多指令，内层循环遍历多键，确保同一命令的所有键落在一个槽里。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">line:<span class="number">5515</span></span><br><span class="line"><span class="function">clusterNode *<span class="title">getNodeByQuery</span><span class="params">(client *c, struct redisCommand *cmd, robj **argv, <span class="keyword">int</span> argc, <span class="keyword">int</span> *hashslot, <span class="keyword">int</span> *error_code)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">/* Check that all the keys are in the same hash slot, and obtain this</span></span><br><span class="line"><span class="comment">     * slot and the node associated. */</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; ms-&gt;count; i++) &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; numkeys; j++) &#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="keyword">if</span> (firstkey == <span class="literal">NULL</span>) &#123;</span><br><span class="line">                ...</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">/* If it is not the first key, make sure it is exactly</span></span><br><span class="line"><span class="comment">                 * the same key as the first we saw. */</span></span><br><span class="line">                <span class="keyword">if</span> (!equalStringObjects(firstkey,thiskey)) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (slot != thisslot) &#123;</span><br><span class="line">                        <span class="comment">/* Error: multiple keys from different slots. */</span></span><br><span class="line">                        getKeysFreeResult(keyindex);</span><br><span class="line">                        <span class="keyword">if</span> (error_code)</span><br><span class="line">                            *error_code = CLUSTER_REDIR_CROSS_SLOT;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="comment">/* Flag this request as one with multiple different</span></span><br><span class="line"><span class="comment">                         * keys. */</span></span><br><span class="line">                        multiple_keys = <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>继续向上寻找，函数被多个地方调用，这里主要看<code>server.c</code><br>在集群模式下处理命令会在此重定向，如果<code>getNodeByQuery</code>发现错误，会在<code>clusterRedirectClient</code>中应答<br><a href="https://github.com/antirez/redis/blob/6.0.0/src/server.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/server.c</a><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">line:<span class="number">3368</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">processCommand</span><span class="params">(client *c)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    line:<span class="number">3448</span></span><br><span class="line">    clusterNode *n = getNodeByQuery(c,c-&gt;cmd,c-&gt;argv,c-&gt;argc,</span><br><span class="line">                                        &amp;hashslot,&amp;error_code);</span><br><span class="line">    ...</span><br><span class="line">    line:<span class="number">3456</span></span><br><span class="line">    clusterRedirectClient(c,n,hashslot,error_code);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h3><p>继续向上寻找，函数仅在<code>networking.c</code>中被调用<br>这里让人下意识感觉有点不一样，从命名上看函数更偏向底层。<br><a href="https://github.com/antirez/redis/blob/6.0.0/src/networking.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/networking.c</a><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">line:<span class="number">1757</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">processCommandAndResetClient</span><span class="params">(client *c)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">if</span> (processCommand(c) == C_OK) &#123;</span><br><span class="line">        commandProcessed(c);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">line:<span class="number">1775</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">processInputBuffer</span><span class="params">(client *c)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* Keep processing while there is something in the input buffer */</span></span><br><span class="line">    <span class="keyword">while</span>(c-&gt;qb_pos &lt; sdslen(c-&gt;querybuf)) &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="comment">/* Multibulk processing could see a &lt;= 0 length. */</span></span><br><span class="line">        <span class="keyword">if</span> (c-&gt;argc == <span class="number">0</span>) &#123;</span><br><span class="line">            resetClient(c);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="comment">/* We are finally ready to execute the command. */</span></span><br><span class="line">            <span class="keyword">if</span> (processCommandAndResetClient(c) == C_ERR) &#123;</span><br><span class="line">                <span class="comment">/* If the client is no longer valid, we avoid exiting this</span></span><br><span class="line"><span class="comment">                 * loop and trimming the client buffer later. So we return</span></span><br><span class="line"><span class="comment">                 * ASAP in that case. */</span></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">line:<span class="number">1858</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">readQueryFromClient</span><span class="params">(connection *conn)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">/* There is more data in the client input buffer, continue parsing it</span></span><br><span class="line"><span class="comment">     * in case to check if there is a full command to execute. */</span></span><br><span class="line">     processInputBuffer(c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">line:<span class="number">3091</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">handleClientsWithPendingReadsUsingThreads</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">while</span>((ln = listNext(&amp;li))) &#123;</span><br><span class="line">        client *c = listNodeValue(ln);</span><br><span class="line">        readQueryFromClient(c-&gt;conn);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">/* Run the list of clients again to process the new buffers. */</span></span><br><span class="line">    <span class="keyword">while</span>(listLength(server.clients_pending_read)) &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">if</span> (c-&gt;flags &amp; CLIENT_PENDING_COMMAND) &#123;</span><br><span class="line">            c-&gt;flags &amp;= ~CLIENT_PENDING_COMMAND;</span><br><span class="line">            <span class="keyword">if</span> (processCommandAndResetClient(c) == C_ERR) &#123;</span><br><span class="line">                <span class="comment">/* If the client is no longer valid, we avoid</span></span><br><span class="line"><span class="comment">                 * processing the client later. So we just go</span></span><br><span class="line"><span class="comment">                 * to the next. */</span></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        processInputBuffer(c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> processed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="看不下去了"><a href="#看不下去了" class="headerlink" title="看不下去了"></a>看不下去了</h3><p>好吧，看到这已经没有方向了。继续查找调用，都是线程、IO相关的函数，实在不明白其中机制。<br>开始在网上搜索相关资料，一开始搜”get/set源码解析”，一直找不到想要的内容，异常的源头在哪？正常的命令从哪执行？</p>
<p>直到在一篇文章中，发现自己错过了命令调用的地方<code>int processCommand(client *c)</code>。<br>而且追踪的思路是错的，之前一直以为异常是在命令函数执行之后报的，事实是<strong>异常检查在命令函数之前执行</strong>。</p>
<p><a href="https://segmentfault.com/a/1190000015246793" target="_blank" rel="noopener">［Redis源码阅读］当你输入get/set命令的时候，Redis做了什么</a></p>
<p><a href="https://github.com/antirez/redis/blob/6.0.0/src/server.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/server.c</a><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">line:<span class="number">3368</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">processCommand</span><span class="params">(client *c)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    line:<span class="number">3381</span></span><br><span class="line">    <span class="comment">/* Now lookup the command and check ASAP about trivial error conditions</span></span><br><span class="line"><span class="comment">     * such as wrong arity, bad command name and so forth. */</span></span><br><span class="line">    c-&gt;cmd = c-&gt;lastcmd = lookupCommand(c-&gt;argv[<span class="number">0</span>]-&gt;ptr);</span><br><span class="line">    ...</span><br><span class="line">    line:<span class="number">3448</span></span><br><span class="line">    clusterNode *n = getNodeByQuery(c,c-&gt;cmd,c-&gt;argv,c-&gt;argc,</span><br><span class="line">                                            &amp;hashslot,&amp;error_code);</span><br><span class="line">    ...</span><br><span class="line">    line:<span class="number">3601</span></span><br><span class="line">    <span class="comment">/* Exec the command */</span></span><br><span class="line">    <span class="keyword">if</span> (c-&gt;flags &amp; CLIENT_MULTI &amp;&amp;</span><br><span class="line">        c-&gt;cmd-&gt;proc != execCommand &amp;&amp; c-&gt;cmd-&gt;proc != discardCommand &amp;&amp;</span><br><span class="line">        c-&gt;cmd-&gt;proc != multiCommand &amp;&amp; c-&gt;cmd-&gt;proc != watchCommand)</span><br><span class="line">    &#123;</span><br><span class="line">        queueMultiCommand(c);</span><br><span class="line">        addReply(c,shared.queued);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        call(c,CMD_CALL_FULL);</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> C_OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">line:<span class="number">3200</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">call</span><span class="params">(client *c, <span class="keyword">int</span> flags)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    c-&gt;cmd-&gt;proc(c);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><code>proc</code> 即是文章开头提到的命令对应的函数</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>命令：</p>
<blockquote>
<p>redis-cli -&gt; network -&gt; acceptTcpHandler -&gt; anetTcpAccept -&gt; acceptCommonHandler -&gt; createClient -&gt; readQueryFromClient</p>
</blockquote>
<p>异常：</p>
<blockquote>
<p>readQueryFromClient -&gt; processInputBuffer -&gt; processCommandAndResetClient -&gt; processCommand -&gt; getNodeByQuery -&gt; clusterRedirectClient</p>
</blockquote>
<p>执行：</p>
<blockquote>
<p>readQueryFromClient -&gt; processInputBuffer -&gt; processCommandAndResetClient -&gt; processCommand -&gt; lookupCommand -&gt; call</p>
</blockquote>
<p>散列：</p>
<blockquote>
<p>proc(c) -&gt; setCommand -&gt; setGenericCommand -&gt; genericSetKey -&gt; dbAdd -&gt; slotToKeyAdd -&gt; slotToKeyUpdateKey -&gt; keyHashSlot</p>
</blockquote>
<p>至此基本可以知道，Key中花括号的散列在哪计算，跨slot异常在哪抛出，命令定义函数在哪执行。</p>
<hr>
<p><a href="https://www.jianshu.com/p/220b8d2c41c3" target="_blank" rel="noopener">Redis集群的5种使用方式，各自优缺点分析</a><br><a href="https://www.cnblogs.com/jessema/p/6065855.html" target="_blank" rel="noopener">redis中set命令的源码分析</a><br><a href="https://segmentfault.com/a/1190000015246793" target="_blank" rel="noopener">［Redis源码阅读］当你输入get/set命令的时候，Redis做了什么</a></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分2.1 - 微积分是什么？是切线问题</title>
    <url>/2020/07/01/Stroll-calculus-2-1-What-is-Calculus/</url>
    <content><![CDATA[<blockquote>
<p>大家都知道，我们生活的世界是以运动和变化为主导的。地球绕着太阳转动；向上扔一块石头，它的速度会慢慢变小停下，然后返回地面，并且速度一直增加；印度的人口每年增加，并且增长的速度也在增加；放射性元素的衰变。这些都是无数现象中的沧海一粟，而数学是沟通和理解他们最自然的媒介。伽利略在三百多年前就说过，“大自然最伟大的书籍都被写进了数学符号里”</p>
</blockquote>
<p>我们以微积分是什么以及它为什么的重要来这两个主题开始我们微积分之旅。鸟瞰前方的道路可以让我们清晰的看到目的和把握方向，还将让我们更好的理解许多技术细节，而这些技术细节做成了我们微积分课程的大体内容。</p>
<p>&ensp;&ensp;&ensp;&ensp;微积分通常分为两个部分，微分学和积分学。每部分都有各自的术语，繁多的符号和特定的计算方法。习惯这些需要大量的时间和练习，就像学习一门新语言一样。然而，这个事实不应把我们欺骗了，这门课核心问题真的很简单、很清晰，它们并不奇怪和神秘。</p>
<p>&emsp;&emsp;几乎所有微积分解决的问题和想法，都围绕着两个非常容易理解的几何问题。它们都是关于函数 $y=f(x)$ 的图形。为避免复杂性，我们假设图像完全在x轴之上，如图2.1所示。</p>
<ul>
<li>问题一 基础微分问题，切线问题：计算切线在函数图像给定点 $P$ 上的斜率</li>
<li>问题二 基础积分问题，面积问题：计算在$x=a$、$x=b$之间 函数图像下的面积<br><img src="/2020/07/01/Stroll-calculus-2-1-What-is-Calculus/2.1.jpg" alt="Figure 2.1"></li>
</ul>
<a id="more"></a>
<p>&emsp;&emsp;乍一看这些问题看起来局限在斜率中。我们期望他们可以弄清楚几何上的显著特性，他们也做到了。令我们吃惊的是，他们也被用于许多重大而深远的各种科学中。微积分通过科学上的应用已经走出了数学的范围，我们主要目的之一是尽可能多的介绍他的广泛性。同时我们将不停强调几何和几何应用，基于这种方式可以让我们更容易理解微积分的思想。</p>
<p>&emsp;&emsp;人们有时候说微积分由十七世纪后期牛顿和莱布尼兹两个人发明的。实际上，微积分的产生经历了一个漫长的进化，它始于古希腊一直到十九世纪。牛顿和莱布尼兹确实很了不起，他们的贡献起着决定性的意义，但微积分并没有开始也没有结束。上文所述的问题深受十七世纪欧洲科学家的关注（尤其是费马），这两个天才用特殊的方法取得了突破性的进展。牛顿和莱布尼兹的成就就是认识到并探索了这些问题之间的联系，而其他任何人都不完全明白。具体来说，他们是最早掌握微积分基本定理的精髓，即是说，切线问题的解可用于解决面积问题。这个定理在整个数学来说非常重要，并且是由他俩独立发明的。他们和他们的继任者用它来衔接微分和积分，产生许多非凡的方法。</p>
<blockquote>
<p>基于这些事实，我们从研究切线问题入手。然后，再转向面积问题。然后我们扩展我们的基本概念和工具到更广泛函数，这些函数被用于许多重要的应用中。</p>
</blockquote>
<p>&emsp;&emsp;在尝试计算切线的斜率之前，我们首先得定义切线是什么，这看起来并不容易。</p>
<p>&emsp;&emsp;对圆来说这并不困难，圆的切线就是与圆只有一个交点的直线，这个点叫做切点；而其余的直线要么有两个交点，要么没有交点。这种情况给我们提供了非常直观的想法，我们可以在曲线上给定一个点，在那个点处与曲线相交得到的线就是切线。还有种定义是与曲线只相交于一点的线。这一定义被希腊人用于处理圆和一些特殊的曲线，但一般情况下，这个定义并非对所有曲线成立。考虑图1的曲线：下面那条线是切线，但是不满足定义。上面那条线满足定义，但明显不适切线。</p>
<p><img src="/2020/07/01/Stroll-calculus-2-1-What-is-Calculus/2.2.jpg" alt="Figure 2.2"></p>
<p align="center">Figure 2.2</p>


<p>&emsp;&emsp;切线的现代概念由费马提出。之后我们会看到，这个概念不仅是对切线几何性质和油的说明，也是构造切线的关键。</p>
<p>&emsp;&emsp;简单地说，想法是这样的：考虑曲线 $y:f(x)$，$P$ 是给定的点 (图2.3)。 $Q$ 是曲线上临近的点，绘制割线 $PQ$ 。点 $P$ 的切线可以看作随着 $Q$ 沿曲线移向P时割线的极限位置。之后我们会看到这个定性的想法是如何产生计算函数 $f(x)$ 切线斜率的定量方法。</p>
<p><img src="/2020/07/01/Stroll-calculus-2-1-What-is-Calculus/2.3.jpg" alt="Figure 2.3"></p>
<p>&emsp;&emsp;对此不要有任何误解。不要小觑这种切线的思维方式。相反地，它是数学中几个最富有成效想法中的一个，没有它，就没有物理学中的速度或加速度，没有牛顿动力学或天文学，没有任何形式的物理学，只有现象的口头描述而已，当然也不会有现在的工业时代。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/51912318" target="_blank" rel="noopener">漫步微积分二——微积分是什么</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分 - 引言</title>
    <url>/2020/07/01/Stroll-calculus-To-the-Student/</url>
    <content><![CDATA[<p>Appearances to the contrary, no writer deliberately sets out to produce an un­ readable book; we all do what we can and hope for the best. Naturally, I hope that my language will be clear and helpful to students, and in the end only they are qualified to judge. However, it would be a great advantage to all of us­ teachers and students alike-if student users of mathematics textbooks could somehow be given a few hints on the art of reading mathematics, which is a very different thing from reading novels or magazines or newspapers.</p>
<p>没有哪位作家会故意写没有可读性的书;我们也尽我们能做并抱以最好的希望。当然，我希望我的语言对于学生来说是清晰的，而最终也只有他们有资格来评判。但是，对所有教师和学生一样，如果学生的数学教科书在某种程度上给出一些读数学的方法，那将是非常有益的事。当然这与阅读小说或杂志或报纸并不是一回事。</p>
<p>In high school mathematics courses, most students are accustomed to tackling their homework problems first, out of impatience to have the whole burdensome task over and done with as soon as possible. These students read the explana­ tions in the text only as a last resort, if at all. This is a grotesque reversal of rea­ sonable procedure, and makes about as much sense as trying to put on one’s shoes before one’s socks. I suggest that students should read the text first, and when this has been thoroughly assimilated, then and only then turn to the home­ work problems. After all, the purpose of these problems is to nail down the ideas and methods described and illustrated in the text.</p>
<p>在高中数学课程中，大多数学生都习惯于首先处理家庭作业，对整体的课程任务没有耐心也希望尽快结束。这些学生只有在万不得已的时候才会阅读书上的解释。这真是完全颠倒的方法，相当于教一个人穿袜子之前先穿鞋。我建议学生首先阅读书本，当只是被彻底理解了，再转到作业上的问题。毕竟，这些问题的目的是为了确定书中描述与说明的想法与方法。</p>
<p>How should a student read the text in a book like this? Slowly and carefully, and in full awareness that a great many details have been deliberately omitted. If this book contained every detail of every discussion, it would be five times as long, which God forbid! There is a saying of Voltaire: “The secret of being a bore is to tell everything.” Every writer of a book of this kind tries to walk a nar­ row path between saying too much and saying too little.</p>
<p>学生想这样读书将会如何呢？慢慢地，会意识到许多细节被故意省略了。如果这本书写下讨论的所有细节，那么它会有现在的五倍之多。伏尔泰曾说:”无聊的秘诀在于告诉他一切”。每个作家试图在说得太多和太少选择折中的做法。</p>
<p>The words “clearly,” “it is easy to see,” and similar expressions are not in­ tended to be taken literally, and should never be interpreted by any student as a putdown on his or her abilities. These are code-phrases that have been used in mathematical writing for hundreds ofyears. Their purpose is to give a signal to the careful reader that in this particular place, the exposition is somewhat con­ densed, and perhaps a few details of calculations have been omitted. Any phrase like this amounts to a friendly hint to the student that it might be a good idea to read even more carefully and thoughtfully in order to fill in omissions in the ex­ position, or perhaps get out a piece of scratch paper to verify omitted details of calculations. Or better yet, make full use of the margins of this book to empha­ size points, raise questions, perform little computations, and correct misprints.</p>
<p>单词”很明显”“很容易看出”以及类似的表达式不应作就字面意思来理解，学生也不该理解为不需要去思考证明。这些是代码短语，曾出在数百年来的数学写作中。他们的目的是在那个特别的地方向细心的读者发出一个信号，（the exposition is somewhat condensed）计算的一些细节也许被省略。任何此类短语是对更细心学生的友好提示，或许需要拿出一张草稿纸验证省略的细节部分，或者可以充分利用这本书的空白地方，提出问题，简单计算一下或写出没有打印的部分。</p>
<p align="right">George F. Simmons</p>

<p><a href="https://b-ok.cc/book/2328903/e25a3f" target="_blank" rel="noopener">CALCULUS WITH ANALYTIC GEOMETRY</a><br><a href="https://blog.csdn.net/u010182633/article/details/51864044" target="_blank" rel="noopener">漫步微积分一 —— 引言</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分2.2 - 如何计算切线的斜率</title>
    <url>/2020/07/02/Stroll-calculus-2-2-How-to-Calculate-the-Slope-of-the-Tangent/</url>
    <content><![CDATA[<p>各种想法都有自己的一席之地，但是时间会剔除许多细节。</p>
<p>$P＝(x_0,y_0)$ 是抛物线$y＝x_2$上的任意一个定点，如图2.4所示。作为基本思想的第一个图例，给定抛物线上一点P，计算切线的斜率。首先，我们选择曲线上的一个临近点 $Q=(x_1,y_1)$。接下来，我们画出由这两点确定的割线$PQ$，割线的斜率明显是：</p>
<script type="math/tex; mode=display">
m_{sec}={\rm slope\ of} \ PQ=\frac{y_1-y_0}{x_1-x_0}\tag 1</script><p><img src="/2020/07/02/Stroll-calculus-2-2-How-to-Calculate-the-Slope-of-the-Tangent/2.4.jpg" alt="Figure 2.4"></p>
<p align="center">图一</p>

<a id="more"></a>
<p>现在是关键的一步︰我们让 $x_1$ 靠近 $x_0$，以便点$Q$接近定点$P$，就像一串沿着线滑动的佛珠。这样的话，割线开始改变方向并明显接近 $P$。而且，直观上来看，切线的斜率是割线斜率计算得到的极限值。用标准符号来表达就是:</p>
<script type="math/tex; mode=display">
m={\rm \lim_{Q\to P}}\ m_{sec}=\lim_{x_1\to x_0}\frac{y_1-y_0}{x_1-x_0}\tag 2</script><p>缩略词“lim”且下方有“$x_1\to x_0$”读作“当$x_1$趋向$x_0$，…的极限是”。<br>我们不能简单的设置 $x_1=x_0$ 来计算极限值$m$，因为那样的话$y_1=y_0$并且给出了无意义的结果：</p>
<script type="math/tex; mode=display">
m=\frac{y_0-y_0}{x_0-x_0}=\frac{0}{0}</script><p>我们必须将 $x_1$ 看做非常接近 $x_0$ 而有别于它。然而，当 $x_1$ 趋进 $x_0$ 时，$y_1−y_0$和$x_1−x_0$变的非常小，他们商的极限值是多少并不清楚。<br>解决这个困难的办法是用曲线的方程。因为$P$和$Q$都落在曲线上，我们有$y_0＝x_0^2$和$y1＝x_1^2$，所以（1）可以写成：</p>
<script type="math/tex; mode=display">
m_{sec}=\frac{y_1-y_0}{x_1-x_0}=\frac{x_1^2-x_0^2}{x_1-x_0}\tag 3</script><p>分子变小的原因是它的一个因子包含分母。如果约掉这个公因子，得到：</p>
<script type="math/tex; mode=display">
m_{sec}=\frac{y_1-y_0}{x_1-x_0}=\frac{x_1^2-x_0^2}{x_1-x_0}=\frac{(x_1-x_0)(x_1+x_0)}{x_1-x_0}=x_1+x_0</script><p>（2）式就变成：</p>
<script type="math/tex; mode=display">
m=\lim_{x_1\to x_0}\frac{y_1-y_0}{x_1-x_0}=\lim_{x_1\to x_0}(x_1+x_0)</script><p>现在明显的看到：当$x_1$越来越接近$x_0$时，$x_1+x_0$越来越接近于等式$x_1+x_0=2x_0$。相应的：</p>
<script type="math/tex; mode=display">
m=2x_0\tag 4</script><p>是曲线$y＝x^2$在点$P(x_0,y_0)$处切线的斜率。<br>例1:点（1,1）和（-1/2,1/4）在抛物线$y＝x^2$（图2）上。根据（4），这些点切线的斜率是$m=2$，$m=−1$。用直线的点斜方程，两条切线明显有两个方程：</p>
<script type="math/tex; mode=display">
\frac{y-1}{x-1}=2\quad \frac{y-\frac{1}{4}}{x+\frac{1}{2}}=-1</script><p>同样的，</p>
<script type="math/tex; mode=display">
\frac{y-x_0^2}{x-x_0}=2x_0</script><p>是点$(x_0,x_0^2)$处的切线方程。</p>
<p><img src="/2020/07/02/Stroll-calculus-2-2-How-to-Calculate-the-Slope-of-the-Tangent/2.5.jpg" alt="Figure 2.5"></p>
<p align="center">图二</p>

<p>现在我们介绍一个被广泛使用的符号，读作delta。</p>
<p>刚刚描述的过程从独立变量$x$的变化量开始。这种变化量的标准符号是$\Delta x$，所以</p>
<script type="math/tex; mode=display">
\Delta x=x_1-x_0\tag 5</script><p>是x从第一个值到第二个值的变化量。我们也可以将第二个值看成是第一个值加上变化量得到的：</p>
<script type="math/tex; mode=display">
x_1=x_0+\Delta x\tag 6</script><p>$x$ 不是一个数$\Delta$和一个数$x$的乘积，而是一个数，叫做$x$的增量。增量$x$可以为正也可以为负。因此，如果$x_0=1$，$x_1=3$，那么$x=3−1=2$；如果$x_0=1$，$x_1=−2$，那么$x=−2−1=−3$。<br>字母$\Delta$是希腊字母$d$；当它写在一个变量前面时，它表示该变量两个值之差。这个简单的符号是极为方便的，几乎扩展到数学和科学的每个部分。我们用它来重写上述计算过程。</p>
<p>将（5）或（6）带入（3）的：</p>
<script type="math/tex; mode=display">
m_{sec}=\frac{x_1^2-x_0^2}{x_1-x_0}=\frac{(x_0+\Delta x)^2-x_0^2}{\Delta x}\tag 7</script><p>这一次没有分解分子，我们增加了它的第一项，化简得：</p>
<script type="math/tex; mode=display">
\begin{split}(x_0+\Delta x)^2-x_0^2 &=x_0^2+2x_0\Delta x+(\Delta x)^2-x_0^2\\
&=2x_0\Delta x+(\Delta x)^2\\
&=\Delta x(2x_0+\Delta x)
\end{split}</script><p>所以（7）变为：</p>
<script type="math/tex; mode=display">
m_{sec}=2x_0+\Delta x</script><p>如果我们将它带入（2），利用$x1\to x0$等价于$\Delta x\to 0$，我们发现：</p>
<script type="math/tex; mode=display">
m=\lim_{\Delta x\to 0}(2x_0+\Delta x)=2x_0</script><p>跟之前的结果一样。再次看到指定的极限过程发生了什么：随着$x$越来越趋近于0，$2x_0+\Delta x$越来越趋近于$2x_0$。<br>第二种方法（即使用delta符号）取决于扩大$(x_0+x)^2$，而第一种取决于分解表达式$x_1^2−x_0^2$。这种特定情况下，两种计算明显比其他方法容易。然而，第二种比第一种容易，为此我们采用增量作为我们的标准过程。</p>
<p>我们只进行了抛物线$y=x^2$的计算，理论上，任何函数$y=f(x)$（图3）都可以用此计算进行描述。我们首先计算通过两个点$P$和$Q$（对应于$x_0$和$x_0+x$）割线的斜率：</p>
<script type="math/tex; mode=display">
m_{sec}=\frac{f(x_0+\Delta x)-f(x_0)}{\Delta x}</script><p>然后计算$x$趋进$0$时$m_{sec}$的极限，得到一个数$m$，几何上它是曲线上点$P$割线的斜率：</p>
<script type="math/tex; mode=display">
m=\lim_{\Delta x\to 0}\frac{f(x_0+\Delta x)-f(x_0)}{\Delta x}</script><p>这个极限值经常用$f’(x_0)$表示，来强调它依赖于点$x_0$和函数$f(x)$。因此，根据定义我们有：</p>
<script type="math/tex; mode=display">
f'(x_0)=\frac{f(x_0+\Delta x)-f(x_0)}{\Delta x} \tag 8</script><p>上面给出的计算结果也可以表示为：如果$f(x)=x_2$，则$f′(x_0)=2x_0$。</p>
<p><img src="/2020/07/02/Stroll-calculus-2-2-How-to-Calculate-the-Slope-of-the-Tangent/2.6.jpg" alt="Figure 2.6"></p>
<p align="center">图三</p>

<p>例2:计算$f′(x0)$ 其中$f(x)=2x_2−3x$<br>解：（8）中的分子是：</p>
<script type="math/tex; mode=display">
\begin{align}
f(x_0+\Delta x)-f(x_0)
 &=[2(x_0+\Delta x)^2-3(x_0+\Delta x)]-[2x_0^2-3x_0]\\
&=2x_0^2+4x_0\Delta x+2(\Delta x)^2-3x_0-3\Delta x-2x_0^2+3x_0\\
&=4x_0\Delta x+2(\Delta x)^2-3\Delta x\\
&=\Delta x(4x_0+2\Delta x-3)
\end{align}</script><p>因此（8）变为：</p>
<script type="math/tex; mode=display">
\frac{f(x_0+\Delta x)-f(x_0)}{\Delta x}=\Delta x(4x_0+2\Delta x-3)</script><script type="math/tex; mode=display">
f'(x_0)=\lim_{\Delta x\to 0}\Delta x(4x_0+2\Delta x-3)=4x_0-3</script><p>我们根据假设得到 (8)，即曲线有单一明确的切线。这的确是个假设，因为一些曲线并没有这种切线(图4)。然而，当切线存在时，它显然需要割线$PQ$靠近极限位置，无论$Q$是从右还是从左。这两种方法区别在于$x$靠近$0$时是只通过正值还是只通过负值。当极限存在时，两个方向靠近得到的极限值相同，这是（8）含义的一部分。</p>
<p><img src="/2020/07/02/Stroll-calculus-2-2-How-to-Calculate-the-Slope-of-the-Tangent/2.7.jpg" alt="Figure 2.7"></p>
<p align="center">图四</p>



<p><a href="https://blog.csdn.net/u010182633/article/details/51918579" target="_blank" rel="noopener">漫步微积分三——如何计算切线的斜率</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分2.3 - 导数的定义</title>
    <url>/2020/07/04/Stroll-calculus-2-3-The-Definition-of-the-Derivative/</url>
    <content><![CDATA[<p>从几何上考虑，我们利用2.2，并丢掉下标$x_0$，就得到导数的基本定义：给定任意函数$f(x)$，导数$f′(x)$是新的函数，在点$x$处的值定义为</p>
<script type="math/tex; mode=display">
\begin{equation}
f'(x)=\lim_{\Delta x\to 0}\frac{f(x+\Delta x)-f(x)}{\Delta x}\tag1
\end{equation}</script><p>在计算它的极限时，$x$是固定的，而$\Delta x$是变化的且接近于零。某些$x$存在极限值，某些却不存在。如果$x=a$的极限值存在，就说函数在点$a$处可导。如果一个函数在其定义域内的每个点均可导，那么该函数是可导函数。这本书讨论的大部分函数都有此性质。<br>我们知道$f′(x)$可以像图1那样可视化，在图中$f(x)$是曲线上动点$P$的高度。然而，严格意义上讲，上述的导数定义不依赖于任何几何想法。图1构成一种几何解释，对理解导数来说非常重要，可以作为一种辅助手段，但它不是导数概念的基本组成部分。下一节我们将看到其他与几何无关的解释，那些解释跟几何解释同等重要。因此，我们必须将$f′(x)$作为纯粹的函数，并且需要认识到它有多种解释，但与其中任何之一都没有必要的联系。</p>
<p><img src="/2020/07/04/Stroll-calculus-2-3-The-Definition-of-the-Derivative/2.8.jpg" alt="figure 2.8"></p>
<a id="more"></a>
<p>实际上形成导数$f′(x)$的过程称为给定函数$f(x)$的微分。这是微积分的基本运算，其他一切依赖于此。原则上，我们遵循（1）中指定的计算说明。这些说明可以整理为一个系统的过程，叫做三步法。<br>第一步：写出函数的差$f(x+\Delta x)−f(x)$。<br>第二步：除以$\Delta x$得到差商的形式</p>
<script type="math/tex; mode=display">
\frac{f(x+\Delta x)-f(x)}{\Delta x}</script><p>大部分问题只涉及分子分母消去$\Delta x$<br>第三步：估计$\Delta x\to 0$时的极限值。如果第二步已经完成了，那么该步可以作为简单的检查。<br>如果我们记得符号$f(x)$几乎包含了所有可以想象到的函数，那么我们将了解到这些步骤有时容易，有时很难。下面的示例只涉及初等代数，但即使如此，还是需要一点知识和技巧。</p>
<p>例1:对函数$f(x)=x^3$求$f′(x)$<br>第一步：</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
f(x+\Delta x)-f(x)
&=&(x+\Delta x)^3-x^3\\
&=&x^3+3x^2\Delta x+3x\Delta x^2+\Delta x^3-x^3\\
&=&3x^2\Delta x+3x\Delta x^2+\Delta x^3\\
&=&\Delta x(3x+3x\Delta x+\Delta x^2)
\end{eqnarray*}</script><p>第二步：</p>
<script type="math/tex; mode=display">
\frac{f(x+\Delta x)-f(x)}{\Delta x}=3x+3x\Delta x+\Delta x^2</script><p>第三步：</p>
<script type="math/tex; mode=display">
f'(x)=\lim_{\Delta x\to 0}[3x+3x\Delta x+\Delta x^2]=3x^2</script><p>例2:对函数$f(x)=1/x$求$f′(x)$<br>第一步：</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
f(x+\Delta x)-f(x)
&=&\frac{1}{(x+\Delta x)}-\frac{1}{x}\\
&=&\frac{x-(x+\Delta x)}{x(x+\Delta x)}=\frac{-\Delta x}{x(x+\Delta x)}\\
\end{eqnarray*}</script><p>第二步：</p>
<script type="math/tex; mode=display">
\frac{f(x+\Delta x)-f(x)}{\Delta x}=-\frac{1}{x(x+\Delta x)}</script><p>第三步：</p>
<script type="math/tex; mode=display">
f'(x)=\lim_{\Delta x\to 0}\frac{1}{x(x+\Delta x)}=-\frac{1}{x^2}</script><p>让我们简要地分析一下例2的结果告诉了我们哪些关于函数$y=f(x)=1/x$图像的信息。首先，多所有$x\neq 0\ f’(x)=-1/x^2$为负值，而且由于这是切线的斜率，所有切线斜向右下方。更进一步，当$x$接近0时，$f′(x)$非常大，这意味着切线非常陡峭的;而当$x$很大时，$f′(x)$非常小，所以切线是趋近水平的。通过测试图来验证我们的观察时很有启发意义的。一般来说，导数能够告诉我们许多函数的行为以及图像的性质，因为某点的导数给出的了该点的切线斜率。我们之后会更加充分的探讨这一主题。<br>例3:对函数$f(x)=\sqrt{x}$求$f′(x)$<br>第一步：</p>
<script type="math/tex; mode=display">
f(x+\Delta x)-f(x)=\sqrt{(x+\Delta x)}-\sqrt{x}\\</script><p>第二步：</p>
<script type="math/tex; mode=display">
\frac{f(x+\Delta x)-f(x)}{\Delta x}=\frac{\sqrt{(x+\Delta x)}-\sqrt{x}}{\Delta x}</script><p>这种形式不方便取消$\Delta x$，所以我们用一个巧妙的代数技巧去除分子中的平方根。分子和分母均乘以$\sqrt{x+\Delta x}+\sqrt{x}$，这就相当于分数乘以1，然后我们使用代数式$(a-b)(a+b)=a^2-b^2$进行简化：</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{f(x+\Delta x)-f(x)}{\Delta x}
&=&\frac{\sqrt{x+\Delta x}-\sqrt{x}}{\Delta x}\cdot \frac{\sqrt{x+\Delta x}+\sqrt{x}}{\sqrt{x+\Delta x}+\sqrt{x}}\\
&=&\frac{(x+\Delta x)-x}{\Delta x(\sqrt{x+\Delta x}+\sqrt{x})}\\
&=&\frac{1}{\sqrt{x+\Delta x}+\sqrt{x}}
\end{eqnarray*}</script><p>现在第三步就容易了。<br>第三步：</p>
<script type="math/tex; mode=display">
f'(x)=\lim_{\Delta x\to 0}\frac{1}{\sqrt{x+\Delta x}+\sqrt{x}}=\frac{1}{\sqrt{x}+\sqrt{x}}=\frac{1}{2\sqrt{x}}</script><h2 id="符号的一些说明"><a href="#符号的一些说明" class="headerlink" title="符号的一些说明"></a>符号的一些说明</h2><p>微积分有个令人困惑的特点，就是几个不同的符号都可以用来表示微分，符号的使用带有某种偏好，通过环境来选择相应的符号。可能有人会问，使用这些符号有什么问题吗？事实是，问题很大，好的符号可以铺平道路，为我们做许多工作，而不好的类似于沼泽，很难轻松移动。</p>
<p>函数$f(x)$的导数上文表示为$f′(x)$。这个符号的优点在于强调$f(x)$的导数是关于x的另一个函数，它与给定函数以某种方式关联起来。如果我们给出的函数形式为$y=f(x)$，即用一个独立变量来表示，那么更短的符号$y′$常用来代替$f′(x)$。</p>
<p>用这种符号来表示导数最大的缺点是它没有显示出$f(x)$得到$f′(x)$过程。从这个层面考虑莱布尼兹设计的符号更好，当然在其他方面也不错。</p>
<p>下面解释莱布尼兹的符号，对一个函数$y=f(x)$，它的差商形式</p>
<script type="math/tex; mode=display">
c{f(x+\Delta x)-f(x)}{\Delta x}</script><p>可以记为</p>
<script type="math/tex; mode=display">
\frac{f(x+\Delta x)-f(x)}{\Delta x}</script><p>其中$\Delta y=f(x+\Delta x)-f(x)$，$\Delta y$ 不是$y$的一个任意变化量；而是x变为x+Δx时特定的变化量。我们知道，差商可以理解为y,x变化量之比，就是割线的斜率(图2)。莱布尼兹写出差商的极限形式，也就是导数f′(x)。用这个符号表示的话，导数的定义就变为</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{dy}{dx}=\lim_{\Delta x \to 0} \frac{\Delta y}{\Delta x}  \tag 2
\end{equation}</script><p>这就是图2中割线的斜率。$dy/dx$有两种不同的等价形式</p>
<script type="math/tex; mode=display">
\frac{df(x)}{dx}\qquad \frac{d}{dx}f(x)</script><p>对第二种形式，可以将$d / dx$看作一个运算，对函数$f(x)$运算得到它的导数$f′(x)$</p>
<script type="math/tex; mode=display">
\frac{d}{dx}f(x)=f'(x)</script><p><img src="/2020/07/04/Stroll-calculus-2-3-The-Definition-of-the-Derivative/2.9.jpg" alt="figure 2.9"></p>
<p>有一点非常重要，(2)中$dy/dx$是一个不可分割的符号。尽管书写形式上看可以，但是它不是平常意义上的两个变量$dy$与$dx$的商，因为他们没有定义，而且无法单独存在。在莱布尼兹的符号中，（2）中右边的极限形式象征性的用$\Delta$来代替字母$d$。从这个角度来说，导数的符号$dy/dx$提醒我们差商$\Delta y/\Delta x$以及$\Delta x\to 0$时计算极限的过程。从计算角度考虑也是有利的。当用莱布尼兹的符号时，许多基本的公式很容易被记住。<br>这个符号虽然好，但时也不完美。例如，加入我们要写出某个点的导数值，像$x=3$。因为$dy/dx$没有像$f′(x)$那样很方便的显示变量$x$，我们不得不用些难看的符号</p>
<script type="math/tex; mode=display">
\left( \frac{dy}{dx} \right )_{x=3}\qquad\left. \frac{dy}{dx}\right |_{x=3}</script><p>清晰明了的符号$f′(3)$明显比笨拙的表达时要占优势。<br>正如我们所看到的，上面的每种表达式各有各的优点。他们都广泛应用于科学和数学文献中，为了彻底熟悉他们，我们应该经常使用并且在他们之间自由的转换。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/51925367" target="_blank" rel="noopener">漫步微积分四——导数的定义</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分2.4 - 速度和变化率</title>
    <url>/2020/07/04/Stroll-calculus-2-4-Velocity-and-Rates-of-Change/</url>
    <content><![CDATA[<p>导数的概念与运动物体速度的计算密切相关。正是由于这一个事实，在牛顿努力寻找动力学定理并理解行星运动的思考中将微积分作为他基本的工具。看起来似乎只有物理系的学生有必要关注对于速度准确的想法。但是，这些想法对变化率这个广泛概念提供了非常简单的说明，这个概念在其他研究领域也非常重要，包括生物和社会科学。</p>
<p>在本节中，我们考虑速度问题的一个特殊情况:所讨论的对象可以看成沿着一条直行运动的点，所以它的位置由一个坐标(图1) 确定。如果我们知道每一时刻点的位置，那么真个运动轨迹就都已知，也就是说，如果我们知道位置$S$关于时间$t$的函数，</p>
<script type="math/tex; mode=display">
\begin{equation}
s=f(t)\tag1
\end{equation}</script><p>为了方便，$t$的初始值通常从$0$开始。</p>
<center>
<img src="/2020/07/04/Stroll-calculus-2-4-Velocity-and-Rates-of-Change/20160717211431023" alt="这里写图片描述" title>
图1
</center>

<a id="more"></a>
<p>例1：考虑一个自由落体的物体。或者说一个石头从悬崖边下落，悬崖的高度为400英尺(图2)。已经有许多实验表明$t$内石头下降的距离为</p>
<script type="math/tex; mode=display">
\begin{equation}
s=16t^2\tag2
\end{equation}</script><p>我们可以看出，当$t=5,s=400$时，石头到达地面，用时为5 秒，当$0\leq t\geq 5$时(2)式成立。</p>
<center>
<img src="/2020/07/04/Stroll-calculus-2-4-Velocity-and-Rates-of-Change/20160717211602825" alt="这里写图片描述" title>
图2
</center>
示例中描述的运动涉及到两个基本问题。第一，在某一时刻石头的的速度是多少？第二，如何利用(2)计算速度？

我们都熟悉日常生活中的速度，表示行走一段路程的速率。我们说走路的速度为$3$米每小时($mi/h$)，驾驶速度为$55mi/h$等等。我们也说平均速度，这些都是我们经常计算的。如果我$5$小时行驶了$200mi$，那么我的平均速度就是$40mi/h$，因为

$$

\rm \frac{distance\ traveled}{elapsed\ time}=\frac{200mi}{5h}=40\ mi/h.

$$
通常，

$$

\rm average velocity=\frac{distance\ traveled}{elapsed\ time}

$$
这个公式几乎每个人都知道。

例1(续)：从落石的位置函数($f(t)=16t^2$)我们可以得到一秒后石头下降的距离是$f(1)=16$英尺，两秒后距离是$f(2)=64$英尺，三秒后是$f(3)=144$英尺。前三秒内每秒的平均速度是

$$

\frac{16}{1}=16\ ft/s,\quad \frac{64-16}{1}=48\ ft/s,\quad \frac{144-64}{1}=80\ ft/s.

$$
很明显石头下降的越来越快，但是我们无法精确的知道每个瞬间下降的有多快。

为了求出$t$时刻石头的速度$v$，我们这样进行处理。$t$和之后很短的时间$t+\Delta t$时间间隔为$\Delta t$，石头下落的距离为$\Delta s$(图2)。这段时间的平均速度是$\Delta s/\Delta t$。当$\Delta t$很小时，平均速度很接近于开始的速度$v$；也就是，

$$

v\cong \frac{\Delta s}{\Delta t}

$$

其中符号$\cong$表示近似等于。更进一步，随着$\Delta t$ 越来越小，近似就越来越精确，所以我们有

$$
\begin{equation}
v=\lim_{\Delta t\to 0}\frac{\Delta s}{\Delta t}tag3
\end{equation}
$$

在这里速度$v$是很直观的概念，并且(3)演示了如何计算它。但是，也可以将(3)作为速度的定义，前面的叙述都是为了引出它。(3)中的极限显然是$ds/dt$ 的导数，具体计算为

$$
\begin{eqnarray*}
v=\frac{ds}{dt}
&=&\lim_{\Delta t\to 0}\frac{\Delta s}{\Delta t}\\
&=&\lim_{\Delta t\to 0}\frac{16(t+\Delta t)^2-16t^2}{\Delta t}\\
&=&\lim_{\Delta t\to 0}(32t+16\Delta t)=32t.
\end{eqnarray*}
$$

根据公式可以得出石头下落$1,2,3$秒时刻的速度分别为$32,64,96\ ft/s$，落地时的速度为$160\ ft/s$。我们注意到速度每秒增加$32\ ft/s$。通常我们用加速度为$32 \ ft/s^2$来表述这一事实，在十进制中，是$9.80\ m/s^2$

本例中的推论对所有直线运动都是成立的。所以对于如(1)那样的运动，我们可以用相同的方式来计算$t$时刻的速度$v$；也就是说，我们让时间间隔越来越短，从而让$v$越来越近似平均速度：

$$

v=\lim_{\Delta t\to 0}\frac{\Delta s}{\Delta t}=\lim_{\Delta t\to 0}\frac{f(t+\Delta t)-f(t)}{\Delta t}.

$$
我们发现这就是函数$s=f(t)$的导数，所以沿直线运动的点的速度是位置函数的导数

$$

v=\frac{ds}{dt}=f'(t)

$$
有时我们称为瞬时速度，这是为了强调这是$t$时刻计算得到。velocity和speed在日常用语中经常混用，但是在数学和物理学中他们是有区别的。speed是velocity的绝对值

$$

speed=|v|=\left|\frac{ds}{dt}\right|=|f'(t)|

$$
velocity可能是正，也可能是负，具体取决于点是正向移动还是反向移动；但speed是velocity的幅度，永远是正或零。speed的概念在曲线轨迹运动的研究中特别有用，因为它告诉我们点移动的速度有多快而不需要考虑方向。在我们的日常生活中，我们看里程表就能知道一辆车在任何时刻的速度大小。

例2：考虑从地面垂直向上发射的炮弹，初始速度为$128 \ ft/s$。该炮弹沿着一条直线向上和向下移动。但是，为了视觉上更加清晰，这里将它的路径分开考虑图3。$s=f(t)$是炮弹发射$t$秒后的高度。如果没有重力，炮弹将以恒定的速度向上移动，则$s=f(t)=128t$。然而，由于重力作用，它将慢下来，在顶部有短暂的停止，再落回地球且速度一直增加。实验证据表明，弹丸飞行的高度公式为

$$
\begin{equation}
s=f(t)=128t-16t^2\tag4
\end{equation}
$$
写成因式相乘的形式为$s=16t(8-t)$，我们看到$t=0,8$时$ s=0$。也就是炮弹$8$秒后回到地面，当$0\leq t\leq 8$时，(4)式成立。

为了了解更多关于运动的性质，知道速度是非常必要的。如果将计算二阶多项式的计算规则应用到(4)式，我们得到

$$
\begin{equation}
v=\frac{ds}{dt}=128-32t\tag5
\end{equation}
$$
在顶部，炮弹停止，也就是$v=0$。根据(5)式，$v=0$时$t=4$；根据(4)式，$t=4$时$s=256$。从而我们找到了炮弹飞行的最大高度以及到达此高度所用的时间(图3)。当$t$从$0$ 增加到$8$时，根据(5)式可以看到$v$从$128\ ft/s$降到$-128\ ft/s$；事实上，$v$每秒降低$32\ ft/s$，也可以说加速度是$32 \ ft/s^2$。我们还能看到速度在$t=0$到$t=4$ 期间是正的，在$t=4$到$t=8$期间是负的。尤其是，根据(5) 式可以看到$t=2$时$v=64\ ft/s$，$t=6$时$v=-64\ ft/s$。 （speed都是$64\ ft/s$）。
<center>
<img src="/2020/07/04/Stroll-calculus-2-4-Velocity-and-Rates-of-Change/20160717212012734" alt="这里写图片描述" title>
图3
</center>
速度是变化率的一个例子。对于任何函数$y=f(x)$，导数$dy/dx$叫做$y$对$x$的变化率。直观上讲，就是$x$变化一个单位时$y$的变化量(图4)。用这个术语描述的话，速度是位置对于时间的变化量。当时间是独立变量时，我们经常忽略对于时间这个形容，只说变化量。

例3：(a)我们知道速度对于直线运动的研究非常重要，但是速度变化的形式也很重要。根据定义，加速度是速度$v$的变化率

$$

a=\frac{dv}{dt}

$$
<center>
<img src="/2020/07/04/Stroll-calculus-2-4-Velocity-and-Rates-of-Change/20160717212047842" alt="这里写图片描述" title>
图4
</center>
(b)假设水被泵入图5所示的锥形容器，速度为$5 ft^3/min$。 如果$V$表示$t$时刻容器中水的体积$V$，那么

$$

\frac{dV}{dt}=5.

$$

深度$x$变化率是导数$dx/dt$，它不是常数。从直觉上看，当水面面积比较小时，变化率应该比较大。并且随着面积的增加，变化率会越来越小。
<center>
<img src="/2020/07/04/Stroll-calculus-2-4-Velocity-and-Rates-of-Change/20160717212145655" alt="这里写图片描述" title>
图5
</center>

<p>(c)我们知道半径为$r$的圆面积$A$为$A=\pi r^2$，这个函数的到数为</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{dA}{dr}=2\pi r\tag6
\end{equation}</script><p>该式说明圆面积对于半径的变化率等于它的周长。为了理解几何意义，让$\Delta r$表示半径的增量，$\Delta A$对应面积的增量(图6)。可以清楚的看到$\Delta A$是圆外围窄带的面积，近似等于周长$2\pi r$和窄带长度$\Delta r$的乘积。所以差商$\Delta A/\Delta r$接近$2\pi r$，让$\Delta r\to 0$，我们得到(6)式的几何意义。</p>
<center>
<img src="/2020/07/04/Stroll-calculus-2-4-Velocity-and-Rates-of-Change/20160717212228703" alt="这里写图片描述" title>
图6
</center>

<p>本部分介绍了两个主题：速度，运动目标位置的变化率；加速度，速度的变化率。这些都是微积分中很重要的内容。以后会经常讨论到他们。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/51934679" target="_blank" rel="noopener">漫步微积分五——速度和变化率</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分2.5 - 极限的概念</title>
    <url>/2020/07/04/Stroll-calculus-2-5-The-Concept-of-a-Limit/</url>
    <content><![CDATA[<p>前面给出的导数定义都依赖于函数极限的概念，我们对极限只做了最简短的解释。现在，我们已经知道了这一概念的目的，接下来关心一下它的意义。</p>
<p>考虑函数$f(x)$，自变量在点$a$的领域内都有定义，但是$a$ 点本身没定义。假设存在一个实数值$L$，当$x$越来越接近$a$时，$f(x)$越来越接近$L$(图1)。对于这种情况我们说$L$是$x$趋近$a$时$f(x)$的极限，用符号表示为</p>
<script type="math/tex; mode=display">
\begin{equation}
\lim_{x\to a}f(x)=L.\tag1
\end{equation}</script><center>
<img src="/2020/07/04/Stroll-calculus-2-5-The-Concept-of-a-Limit/20160718182913134" alt="这里写图片描述" title>
图1
</center>

<a id="more"></a>
<p>如果不存在这样的实数 $L$，我们说$x$趋近$a$时$f(x)$没有极限，或者$\lim_{x\to a}f(x)$ 不存在。另一种和(1)等价且被广泛使用的符号是</p>
<script type="math/tex; mode=display">

f(x)\to L\quad as \quad x\to a</script><p>现在考虑(1)式的意义，$x$等于$a$时$f(x)$会如何是没有意义的；而对于$x$接近$a$时的$f(x)$值才是有意义的，理解这一点非常重要。</p>
<p>对于(1)式来说，这些非正式的描述对我们直观的理解非常有利，并且对于实际需求也足够了。然而，作为定义，他们又不严谨也不精确，因为有越来越接近和趋近这样的含糊用语。(1)式的精确意义非常重要，所以我们不能只留给学生去想象。我们尽可能简洁又清晰的给出一个令人满意的定义。接下来的部分，阅读的时候最好比平时更仔细些，及饬令他们自然的不耐烦用什么似乎是过度的挑剔的精度。</p>
<p>首先分析一个具体的实例，希望从中可以提取出通用情况的本质</p>
<script type="math/tex; mode=display">

\lim_{x\to 0}\frac{2x^2+x}{x}=1</script><p>这里我们必须验证的函数是</p>
<script type="math/tex; mode=display">

y=f(x)=\frac{2x^2+x}{x}</script><p>这个函数在$x=0$处无定义，除了$x\neq 0$外的所有$x$，化简表达式的</p>
<script type="math/tex; mode=display">

f(x)=\frac{x(2x+1)}{x}=2x+1.</script><p>从图2中，我们可以清楚的看到，当$x$趋近于$0$时，$f(x)$ 趋近于$1$。为了给出定量的描述，我们需要$f(x)$与极限值$1$之差的公式：</p>
<script type="math/tex; mode=display">

f(x)-1=(2x+1)-1=2x.</script><center>
<img src="/2020/07/04/Stroll-calculus-2-5-The-Concept-of-a-Limit/20160718183031776" alt="这里写图片描述" title>
图2
</center>
从公式中可以看到$f(x)$可以越来越接近$1$，也就是说，当$x$无线靠近$0$时，这个差可以变得任意小。

$$
\begin{eqnarray*}
f(x)-1
&=&\frac{1}{100}\ \ \qquad when\qquad x=\frac{1}{200}\\
f(x)-1
&=&\frac{1}{1000}\qquad when\qquad x=\frac{1}{2000}
\end{eqnarray*}
$$
更一般的，让$\epsilon$是任意正数，无论多小，定义$\delta$为它的一半$\delta =\frac{1}{2}\epsilon$。那么当$x$和$0$的距离小于$\delta$时，$f(x)$到$1$的距离将小于$\epsilon$；也就是

$$

if\quad |x|<\delta =\frac{1}{2}\epsilon\quad then\quad |f(x)-1|="2|x|<\epsilon" . $$ 这个说法比$x$趋近$0$时$f(x)$趋近$1$的模糊说法更精确。它精确地告诉我们$x$必须接近$0$到什么程度时，才能保证$f(x)$ 靠近$1$的程度。当然，$x$不能等于$0$，因为$x="0$处$f(x)$没意义。" 现在这个$\epsilon -\delta$定义应该很容易掌握了:对于任意一个正数$\epsilon$，存在一个正数$\delta$，使得 |f(x)-l|<\epsilon 其中$x\neq a$，且满足不等式 |x-a|<\delta 换句话说：如果给定一个$\epsilon>0$，那么可以找到这样的一个正数$\delta$，满足当$x$在$a$的$\delta$邻域内时，$f(x)$将在$L$的$\epsilon$邻域内。跟之前一样，我们只关心$x=a$附近的$f(x)$行为，不在乎$x=a$处发生什么。

用函数$y=f(x)$的图像来解释这个想法会更直观一些，如图3。图中，$2\epsilon$是水平带的宽度，它的中心线是$y=L$，$2\delta$是垂直带的宽度，它的中心线是$x=a$，上面的定义可以表达为

对于每条水平带，无论它多窄，存在这样的一条垂直带，如果$x\neq a$限定在垂直带内，那么对应部分限定在水平带内。
<center>
<img src="/2020/07/04/Stroll-calculus-2-5-The-Concept-of-a-Limit/20160718183222060" alt="这里写图片描述" title>
图3
</center>
(1)式的精确定义应该是我们最关注的，并且它在微积分理论中扮演着重要的角色。但是，对于极限直观的理解足够满足我们的实际需要，从这个层面来说，下面的例子现在应该不难解决了。

例1：首先

$$

\lim_{x\to 2}(3x+4)=10

$$
当$x$趋近$2$时，$3x$趋近$6$，$3x+4$趋近$6+4=10$。下一个

$$

\lim_{x\to 1}\frac{x^2-1}{x-1}=\lim_{x\to 1}\frac{(x+1)(x-1)}{x-1}=\lim_{x\to 1}(x+1)=2

$$
我们首先注意到函数$(x^2-1)/(x-1)$在$x=1$处没有定义，因为此时分子分母均等于$0$。但是这无关紧要，因为重要的是$x$在$1$附近而不是$1$处的函数行为，所以对所有$x$均可进行消去操作，得到$x+1$，它趋近$2$。

例2：考虑一些极限不存在的函数是非常有启发意义的。例如图4，这些极限行为通过图像都很容易理解。第一种情况，当$x$为正数时，函数等于$1$，当$x$为负数时，函数等于$-1$，在$x=0$处没有定义，所以当$x$趋近$0$时，函数不存在一个确定的数。专业点来说就是极限不存在，记为

$$

\lim_{x\to 0+}\frac{x}{|x|}=1\qquad \lim_{x\to 0-}\frac{x}{|x|}=-1.

$$
<center>
<img src="/2020/07/04/Stroll-calculus-2-5-The-Concept-of-a-Limit/20160718183306664" alt="这里写图片描述" title>
图4
</center>
符号$x\to 0+$和$x\to 0-$表明变量$x$分别从正向(右边)和反向(左边)趋近$0$。另外两个极限因为$x$趋近$0$时绝对值任意大所以也不存在极限。用符号表示就是

$$

\lim_{x\to 0+}\frac{1}{x}=\infty ,\quad \lim_{x\to 0-}\frac{1}{x}=-\infty ,\quad \lim_{x\to 0}\frac{1}{x^2}=\infty.

$$
记住：(1)式中的数$L$必须是实数；$L=\infty$不符合要求。

计算极限的主要规则就是我们期待的那样。例如

$$

\lim_{x\to a}x=a;

$$
如果$c$是常数，那么

$$

\lim_{x\to a}c=c.

$$
还有，如果$\lim_{x\to a}f(x)=L$，$\lim_{x\to a}g(x)=M$，那么

$$
\begin{eqnarray*}
\lim_{x\to a}[f(x)+g(x)]
&=&L+M,\\
\lim_{x\to a}[f(x)-g(x)]
&=&L-M,\\
\lim_{x\to a}f(x)g(x)
&=&LM,\\
\lim_{x\to a}\frac{f(x)}{g(x)}
&=&\frac{L}{M}\quad (M\neq 0).
\end{eqnarray*}
$$
也就是说，和的极限是极限的和，差，乘和商同样满足。这些叫做极限法则或者极限定理。

我们之前说过微积分是解决问题的一种技能，不是逻辑的分支。相比于演绎推理，它更多的是处理直观理解带来的方法。当然了，我们将试图让读者相信我们论述的真实性和过程的合法性。然而，为了避免用大量难理解的理论材料充斥文本，我们尽可能简洁，不那么正式的表达。（对于这里陈述的极限性质，相关证明可能以番外的形式给出，至于是否更新，还是看呼声吧，哈哈哈）

在结束本部分主题之前，我们讨论两个具体的三角极限。之后会发现他们非常重要。第一个是

$$
\begin{equation}
\lim_{\theta\to 0}\frac{sin\theta}{\theta}\tag2
\end{equation}
$$

注意，这里的$\theta$是弧度。我们不能简单的设$\theta =0$，因为结果将是无意义的等式$0/0$。我们注意到它不同于下面的代数极限，

$$

\lim_{x\to 0}\frac{3x^2+2x}{x}=\lim_{x\to 0}\frac{x(3x+2)}{x}=\lim_{x\to 0}(3x+2)=2

$$
因为$sin\theta$无法明显的消去$\theta$。为了对(2)式的函数行为有个印象，我们计算几个很小的$\theta$对应的比值。我们注意到，如果用$-\theta$代替$\theta$，我们有

$$

\frac{sin -\theta}{-\theta}=\frac{-sin\theta}{-\theta}=\frac{sin\theta}{\theta}

$$
所以我们只关于正的$\theta$。利用计算器我们得到几个八位小数值(表1)。这些值说明(但不能证明!)
<center>
<img src="/2020/07/04/Stroll-calculus-2-5-The-Concept-of-a-Limit/20160718183424095" alt="这里写图片描述" title>
表1
</center>

<script type="math/tex; mode=display">
\begin{equation}
\lim_{\theta\to 0}\frac{sin\theta}{\theta}=1.\tag3
\end{equation}</script><p>现在我们从几何角度来证实(3)式。让$P$，$Q$是单位圆上彼此濒临的两个点(图5)，让$\overline{PQ}$和$\widehat{PQ}$表示两点的弦长和弧长。那么当两点移动到一起时，弦长比弧长趋近于$1$</p>
<script type="math/tex; mode=display">

\frac{chord\ length\ \overline{PQ}}{arc\ length\ \widehat{PQ}}\to 1\quad as\quad \widehat{PQ}\to 0.</script><p><center>
<img src="/2020/07/04/Stroll-calculus-2-5-The-Concept-of-a-Limit/20160718183518846" alt="这里写图片描述" title>
图5
</center><br>对于图中的符号，这个几何陈述等价于</p>
<script type="math/tex; mode=display">

\frac{2sin\theta}{2\theta}=\frac{sin\theta}{\theta}\to 1\quad as\quad 2\theta \to 0\quad or\quad \theta\to 0,</script><p>这就是(3)式。</p>
<p>第二个极限是</p>
<script type="math/tex; mode=display">
\begin{equation}
\lim_{\theta\to 0}\frac{1-cos\theta}{\theta}=0.\tag4
\end{equation}</script><p>利用三角恒等式$sin^2\theta+cos^2\theta=1$以及(3)式得：</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\lim_{\theta\to 0}\frac{1-cos\theta}{\theta}
&=&\lim_{\theta\to 0}\left(\frac{1-cos\theta}{\theta}\cdot\frac{1+cos\theta}{1+cos\theta}\right)\\
&=&\lim_{\theta\to 0}\frac{1-cos^2\theta}{\theta(1+cos\theta)}\\
&=&\lim_{\theta\to 0}\frac{sin^2\theta}{\theta(1+cos\theta)}\\
&=&\lim_{\theta\to 0}\left(\frac{sin\theta}{\theta}\cdot\frac{sin\theta}{1+cos\theta}\right)\\
&=&\left(\lim_{\theta\to 0}\frac{sin\theta}{\theta}\right)\left(\frac{sin\theta}{1+cos\theta}\right)\\
&=&1\cdot\frac{0}{1+1}=0.
\end{eqnarray*}</script><p>最后一步用到了当$\theta\to 0$时$sin\theta\to 0$，$cos\theta\to 1$，从图5的$sin\theta$和$cos\theta$几何意义可以很容易证实他们。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/51944420" target="_blank" rel="noopener">漫步微积分六——极限的概念</a></p>
</\delta>]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分2.6 - 连续函数</title>
    <url>/2020/07/04/Stroll-calculus-2-6-Continuous-Functions/</url>
    <content><![CDATA[<p>随着我们进一步深入主题，知道什么是连续函数就变得非常重要。在日常用语中，一个连续的过程表示处理中没有空隙或中断或突然的变化。大体说来，如果一个函数显示相似的行为那它就是连续的，也就是说，如果$x$发生小的变化，相应的$f(x)$值也发生小的变化。图1所示的函数在点$a$处是连续，因为$x$趋近$a$时，$f(x)$趋近$f(a)$。或更确切地说，$x$充分趋近$a$时，$f(x)$要多接近就多接近$f(a)$。用极限的语言说就是</p>
<script type="math/tex; mode=display">
\begin{equation}
\lim_{x\to a}f(x)=f(a).\tag1
\end{equation}</script><p>目前为止，我们对于连续的陈述非常松散和直观，更像是在解释而不是定义。现在，我们将等式(1)作为函数$f(x)$在点$a$处连续的定义。我们发现，函数$f(x)$在点$a$处连续需要满足三个条件：$a$必须在$f(x)$定义域内，这样的话$f(a)$就存在；$f(x)$在$x$趋近$a$时有极限；这个极限值必须等于$f(a)$。我们通过图1可以更好的理解这些条件，函数在点$b,c,d$处不连续，并且不连续的方式也不同。在点$b$处，$\lim<em>{x\to c}f(x)$存在但是$f(b)$不存在；点$c$，$f(c)$存在但$\lim</em>{x\to c}f(x)$不存在；点$d$，$f(d),\lim_{x\to d}f(x)$都存在但值不相同。这个函数图存在三种不同情况的空隙或洞。</p>
<center>
<img src="/2020/07/04/Stroll-calculus-2-6-Continuous-Functions/20160719094242625" alt="这里写图片描述" title>
图1
</center>

<a id="more"></a>
<p>这里给出的定义告诉我们函数在其定义域内某点连续意味着什么。如果函数对定义域内所有点连续，那么该函数就是连续函数。尤其是，根据极限的性质，所有多项式和有理函数都是连续函数；通过观察图像，我们看到函数$\sqrt(x),sin\theta$和$cos\theta$也是连续的。我们对闭区间上连续的函数非常感兴趣。这些函数经常用他们的图像进行描述。</p>
<p>对符号进行小小的修改，我们就可以用点$x$(而不是点$a$)来表达函数$f(x)$的连续性</p>
<script type="math/tex; mode=display">

\lim_{\Delta x\to 0}f(x+\Delta x)=f(x)\quad or\quad \lim_{\Delta x\to 0}[f(x+\Delta x)-f(x)]=0;</script><p>如果$\Delta y=f(x+\Delta x)-f(x)$，那么条件就变成</p>
<script type="math/tex; mode=display">

\lim_{\Delta x\to 0}\Delta y=0.</script><p>重新书写公式的目的是为了给出一个非常简单的证明，即函数在某点是可导的，那么函数在该点连续。证明只需一行：</p>
<script type="math/tex; mode=display">

\lim_{\Delta x\to 0}\Delta y=\lim_{\Delta x\to 0}\frac{\Delta y}{\Delta x} \cdot \Delta x=\left[\lim_{\Delta x\to 0}\frac{\Delta y}{\Delta x}\right]\left[\lim_{\Delta x\to 0}{\Delta x}\right]=\frac{dy}{dx}\cdot 0=0.</script><p>该命题的逆不成立，因为函数可以在某点连续，但没有导数。(例如，图1中的点$a$)。</p>
<p>之后会用到一些微积分定理，所以有必要将似是而非的推理转到严谨的证明。我们应该知道这些定理，但不必死记他们。我们论述三个基本定理，先不给出证据，但都会进行评论，阐明他们的含义。三个定理都是似是而非的，有些人可能会说直观上很显然。对于初学者而言，困难的部分在于面对这些非常可信的内容，我们需要持怀疑态度。</p>
<p><strong><em>中值定理</em></strong>：函数$y=f(x)$满足下面两条性质：<br>$\qquad f(x)$在闭区间$[a,b]$上连续；<br>$\qquad f(x)$在开区间$(a,b)$上可导。<br>那么在开区间$(a,b)$上，至少存在一点$c$使得</p>
<script type="math/tex; mode=display">
\begin{equation}
f'(c)=\frac{f(b)-f(a)}{b-a}.\tag2
\end{equation}</script><p>或等价的</p>
<script type="math/tex; mode=display">
\begin{equation}
f(b)-f(a)=f'(c)(b-a).\tag3
\end{equation}</script><p><strong><em>中值定理的注解</em></strong></p>
<p>通过观察图2的几何意义，我们感觉该定义是非常合理的。等式(2)的右边是$A,B$两点弦长的斜率，左边是$x=c$处的切线斜率。中值定理表明，图中至少存在一个点，该点的切线平行于弦。图3中存在两个这样的点，分别是$x=c_1,x=c_2$。但是这也符合要求，因为定理说至少存在一个点，这就表明允许有两个，三个或更多。</p>
<p><center>
<img src="/2020/07/04/Stroll-calculus-2-6-Continuous-Functions/20160719094659932" alt="这里写图片描述" title>
图2
</center><br>中值定理的结论严格依赖于假设，因为如果假设有一点不满足，结论就不满足。考虑定义在区间$[-1,1]$上的函数$y=|x|$。该函数(图4)在闭区间$[-1,1]$上是连续的，在开区间$(-1,1)$上是可导的，除了点$x=0$，此处导数不存在。结论对该函数就不成立，因为弦是水平的，很明显图像上没有水平的切线。</p>
<p><center>
<img src="/2020/07/04/Stroll-calculus-2-6-Continuous-Functions/20160719094748277" alt="这里写图片描述" title>
图3
<img src="/2020/07/04/Stroll-calculus-2-6-Continuous-Functions/20160719094804652" alt="这里写图片描述" title>
图4
</center><br>为了理解中值定理的重要性，我们简单非正式的考虑三个结论(之后的博文会详细介绍)。每种情况都可导，而可导暗含着函数的一个性质。中值定理是两个性质之间的桥梁。</p>
<ol>
<li>如果在一个区间上$f'(x)>0$，那么$f(x)$在这个区间上是增函数[增的意思是$a<b$那么$f(a)<f(b)$]。我们的几何直觉让我们确定这是真的，因为$f(x)>0$意味着切线指向右上方(图5)。基于中值定理更明确的结论是，等式(3)的右边是正的，所以左边也是正的，这就意味着$f(a)<f(b)$。< li>
<li>同理，如果在一个区间上$f'(x)<0$，那么$f(x)$在这个区间上是减函数[减的意思是$a<b$那么$f(a)>f(b)$]。</0$，那么$f(x)$在这个区间上是减函数[减的意思是$a<b$那么$f(a)></li>
<li>如果在一个区间上$f'(x)=0$，那么$f(x)$在这个区间上是常数。为了说明这种情况，我们反过来考虑，即，假设函数不是常数。那么存在两个点$a,b$且$a<b$，那么函数有两个不同的值$f(a),f(b)$。但是这意味着等式(3)的左边不等于0，而右边一定是0。这个矛盾表明我们的假设(函数不是常数)是错的。< li>
</b$，那么函数有两个不同的值$f(a),f(b)$。但是这意味着等式(3)的左边不等于0，而右边一定是0。这个矛盾表明我们的假设(函数不是常数)是错的。<></li></f(b)$。<></b$那么$f(a)<f(b)$]。我们的几何直觉让我们确定这是真的，因为$f(x)></li></ol>

<p><strong><em>极值定理</em></strong>：如果$y=f(x)$在闭区间$[a,b]$上有定义且连续，那么在区间内存在最小值和最大值；也就是说，在区间$[a,b]$上存在点$c,d$，使得$f(c)\geq f(x)\geq f(d)$，其中$x$在$[a,b]$上。</p>
<p><center>
<img src="/2020/07/04/Stroll-calculus-2-6-Continuous-Functions/20160719095147552" alt="这里写图片描述" title>
图5
</center><br><strong><em>极值定理的注解</em></strong></p>
<p>通俗地讲，这个定理断定闭区间上连续函数的图总有一个高点和一个低点。考虑图6，很明显命题是成立的，所以我们惊奇怎么可能去怀疑它呢。然而，很难用严谨的方式来证明，因为它依赖于实数轴的一个性质(完整性，意味着没有”丢失”一个点)，这通常只在高级课程中讨论。</p>
<p><center>
<img src="/2020/07/04/Stroll-calculus-2-6-Continuous-Functions/20160719095045051" alt="这里写图片描述" title>
图6
</center><br>另外，相对于中值定理，这里的结论只依赖于函数连续和区间是封闭的这两个假设。例如，图7所示的函数在区间$[0.1)$上是连续的，但是区间不封闭，因为不包含右端点。我们看的该函数在区间$[0,1)$上不存在最大值，因为唯一可能的最大值1在$x=1$处，但是$f(1)$没有定义。另一方面，图8中$[0,2]$区间是封闭的，函数在该区间的各处均连续，除了$x=0$外。而该函数在区间内没有最大值。</p>
<p><center>
<img src="/2020/07/04/Stroll-calculus-2-6-Continuous-Functions/20160719095244331" alt="这里写图片描述" title>
图7
</center><br>关于极值有一个非常重要的事实，那就是费马定理：如果闭区间$[a,b]$上的连续函数$f(x)$在区间$[a,b]$内的一点$c$取得最大值或最小值，且$f(x)$在点$c$处可导，那么$f’(c)=0$。之后我们会经常计算闭区间上连续函数的极值。费马定理告诉我们，在区间的端点或内部，我们肯定可以找到这样的点，要么$f’(x)=0$，要么$f’(x)$不存在。</p>
<p><center>
<img src="/2020/07/04/Stroll-calculus-2-6-Continuous-Functions/20160719095326740" alt="这里写图片描述" title>
图8
</center><br><strong><em>介值定理</em></strong>：如果在闭区间$[a,b]$上$y=f(x)$有定义且连续，那么函数值都在$f(a)$和$f(b)$之间；也就是说，如果$K$是$f(a)$和$f(b)$之间的任何一个数，那么在$(a,b)$内至少存在一点$c$，使得$f(c)=K$。</p>
<p><strong><em>介值定理的注解</em></strong></p>
<p>观察图9，如果$K$位于$f(a)$和$f(b)$之间，那么高度为$K$的水平线与$y=f(x)$图像有交点。</p>
<p><center>
<img src="/2020/07/04/Stroll-calculus-2-6-Continuous-Functions/20160719095447459" alt="这里写图片描述" title>
图9
</center><br>介值定理最好的形式是如果函数$f(x)$在区间$[a,b]$上连续，且$f(a)$和$f(b)$异号，那么$(a,b)$上至少存在一点$c$，使得$f(c)=0$。换句话说，图像不可能在没有穿过横轴的情况下从一边到另一边(图10)。这看起来似乎非常明显，但是如果函数哪怕在一个点处不连续，该命题就不成立。考虑定义在$[0,2]$上的函数</p>
<script type="math/tex; mode=display">

y=f(x)=
\begin{cases}
-1&\text{$0<x<1$},\\
1&\text{$1\leq x\leq 2$}
\end{cases}</script><p>该函数的图像如图11所示，$f(0)<0,f(2)>0$，因为在点$x=1$处不连续，所以区间$(0,2)$上不存在点$c$使得$f(c)=0$。</0,f(2)></p>
<p><center>
<img src="/2020/07/04/Stroll-calculus-2-6-Continuous-Functions/20160719095519085" alt="这里写图片描述" title>
图10
</center><br>介值定理的实际意义通过一个例子可以更好的理解。观察方程</p>
<script type="math/tex; mode=display">
\begin{equation}
x^3+2x-4=0\tag4
\end{equation}</script><p>它不容易因式分解，因为左边没有明显的因式。然而，连续函数$f(x)=x^3+2x-4$在$x=1$处为负，在$x=2$处为正[$f(1)=-1,f(2)=8$]。因此介值定理保证$f(x)$在$(1,2)$上有零点，等式在该区间内有解。更进一步，对所有$x$，$f’(x)=3x^2+2&gt;0$，所以只有一个零点，(4)式只有一个解。假设有两个解，那么根据中值定理，存在一点$c$使得$f’(c)=0$，而这是不会发生的。<br> <center>
 <img src="/2020/07/04/Stroll-calculus-2-6-Continuous-Functions/20160719095726260" alt="这里写图片描述" title>
 图11
 </center><br><strong><em>评论</em></strong>：许多人学习微积分会失去耐心，这无可厚非，因为微积分的本质不在于定理以及如何证明他们，而在于将它们作为工具以及如何使用。数学上的严密思维是一件好事；但是就像美德一样，它被夸大了，微积分也往往如此。关注微积分证明的技巧而不是中心思想使我们对原本简单而清晰的概念生成了神秘感。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/51953140" target="_blank" rel="noopener">漫步微积分七——连续函数</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分3.1 - 多项式求导</title>
    <url>/2020/07/04/Stroll-calculus-3-1-Derivatives-of-Polynomials/</url>
    <content><![CDATA[<p>微分学有其自身的独特性和重要性，已被应用到物理、生物和社会科学中。它能够快速渗入到应用中，并得到问题的核心。然而，从整体效率的角度看，它的具体内容推迟一下，我们先花一点时间学习如何快速而准确的求导。</p>
<p>我们已经知道，对函数求导的过程称作微分。这个过程直接依赖于导数的极限定义，</p>
<script type="math/tex; mode=display">
f(x)=\lim_{\Delta x\to 0}\frac{f(x+\Delta x)-f(x)}{\Delta x}</script><p>或等价的</p>
<script type="math/tex; mode=display">
\frac{dy}{dx}=\lim_{\Delta x\to 0}\frac{\Delta y}{\Delta x}</script><a id="more"></a>
<p>我们看到这种方法非常慢而且麻烦。现在我们的目的就是建立一些法则，利用他们可以快速求导大部分函数。本篇以及之后的几篇文章，我们会学到在完全不考虑极限的情况下，如何计算多项式的导数；即便是类似下面棘手的代数函数，我们也能轻松应对</p>
<script type="math/tex; mode=display">
\frac{x}{\sqrt{x^2+1}},\qquad \left[\frac{x+\sqrt{x+1}}{x-\sqrt{x+1}}\right]^{1/3},\qquad \sqrt{1+\sqrt{1+\sqrt{1+x}}}</script><p>我们还将学习如何对三角函数求导。目前阶段，我们的目标是培养计算技能，这种技能只能通过实践得到。在没有实践的情况下，我们不可能学会如何拼写，或滑雪，或演奏乐器，正是在实践中不断发现问题，纠正问题，最终拥有相应的技能。微分也不例外。</p>
<p>回顾一下，$x$的多项式就是常数乘以$x$幂次方的和。幂可以是零或一个正数：</p>
<script type="math/tex; mode=display">
P(x)=a_nx^n+a_{n-1}x^{n-1}+\cdots+a_1x+a_0</script><p>多项式由一些简单的部分拼凑起来的方式启发我们对求导法则的讨论：</p>
<p>1.常数的导数是零</p>
<script type="math/tex; mode=display">
\frac{d}{dx}c=0</script><p>这个命题的几何意义是一条水平直线$y=f(x)=c$斜率是零。为了根据定义证明该命题，我们注意到$\Delta y=f(x+\Delta x)-f(x)=c-c=0$所以</p>
<script type="math/tex; mode=display">
\frac{dy}{dx}=\lim_{\Delta x\to 0}\frac{\Delta y}{\Delta x}=\lim_{\Delta x\to  0}\frac{0}{\Delta x}=\lim_{\Delta x\to 0}0=0</script><p>2.如果nn是一个正数，那么</p>
<script type="math/tex; mode=display">
\frac{d}{dx}x^n=nx^{n-1}</script><p>用语言来描述就是，$x^n$的导数是指数$n$作为系数，指数减1作为新的指数。前面的文章中我们已经知道了三个具体的例子：</p>
<script type="math/tex; mode=display">
\frac{d}{dx}x^2=2x,\quad \frac{d}{dx}3x^2=6x,\quad \frac{d}{dx}x^4=4x^3.</script><p>为了证明通用性，对于$y=f(x)=x^n$我们利用二项式定理的</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\Delta y
&=&f(x+\Delta x)-f(x)=(x+\Delta x)n-xn\\
&=&\left[xn+nx{n-1}\Delta x+\frac{n(n-1)}{2}x^{n-2}(\Delta x)^2+\cdots +(\Delta x)n\right]-xn\\
&=&nx^{n-1}\Delta x+\frac{n(n-1)}{2}x^{n-2}(\Delta x)^2+\cdots +(\Delta x)^n
\end{eqnarray*}</script><p>据此可以得出</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{dy}{dx}
&=&\lim_{\Delta x\to 0}\frac{\Delta y}{\Delta x}\\
&=&\lim_{\Delta x\to 0}\left[nx{n-1}+\frac{n(n-1)}{2}x{n-2}(\Delta x)+\cdots +(\Delta x)^{n-1}\right]\\
&=&nx^{n-1}
\end{eqnarray*}</script><p>所以</p>
<script type="math/tex; mode=display">
\frac{dy}{dx}=324x^3-648x^2+432x-96</script><p>例4：虽然$x,y$经常被用来表示自变量和因变量，但是这不妨碍我们选择我们喜欢的任何字母来表示他们，并且计算方法是一样。</p>
<script type="math/tex; mode=display">
s=13t^3-4t^2+25</script><p>是关于时间$t$的多项式；根据利用本文得出的法则，它的导数为</p>
<script type="math/tex; mode=display">
\frac{ds}{dt}=39t^2-8t</script><p>例5：沿着直线运动的物体，位置$s$对于时间$t$的函数为</p>
<script type="math/tex; mode=display">
s=t^3+5t^2-8t</script><p>停止运动时它的加速度是多少？</p>
<p>速度$v$和加速度$a$分别是</p>
<script type="math/tex; mode=display">
v=\frac{ds}{dt}=3t^2+10t-8\quad a=\frac{dv}{dt}=6t+10</script><p>物体停止时，$v=0$</p>
<script type="math/tex; mode=display">
3t^2+10t-8=(3t-2)(t+4)=0</script><p>即$t=\frac{2}{3},-4$。对应的加速度分别为$a=14,−14$</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/51971576" target="_blank" rel="noopener">漫步微积分八——多项式求导</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分3.2 - 乘法和除法法则</title>
    <url>/2020/07/05/Stroll-calculus-3-2-The-Product-and-Quotient-Rules/</url>
    <content><![CDATA[<p>上篇文章中，我们学习了如何对和函数，差函数和常数乘函数进行求导。现在考虑</p>
<script type="math/tex; mode=display">

products\ uv\quad quotions\ \frac{u}{v}.</script><a id="more"></a>
<p>其中$u,v$可以看作对$x$可导的函数。</p>
<p>因为和的导数时导数的和，自然而然我们猜想，乘积的导数可能等于导数的乘积。然而，通过一个简单的例子我们就看出这个猜想不正确。例如，$x^3,x^4$的乘积是$x^7$，所以它的导数是$7x^6$，但是按照猜想得出的导数是$3x^2\cdot 4x^3=12x^5$。这表明我们的初步猜想不正确。而正确的形式比较奇怪。</p>
<p><strong><em>5乘法法则</em></strong></p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{d}{dx}(uv)=u\frac{dv}{dx}+v\frac{du}{dx}.\tag1
\end{equation}</script><p>用口头语言来记忆就是：两个函数乘积的导数等于第一项乘以第二项的导数加上第二项乘以第一项的导数。为了证明它，考虑$y=uv$，让$x$有一个小的增量$\Delta x$，那么变量$u,v,y$对应的改变量分别为$\Delta u,\Delta v,\Delta y$</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
y+\Delta y
&=&(u+\Delta u)(v+\Delta v)=uv+u\Delta v+v\Delta u+\Delta u\Delta v,\\
\Delta y&=&(y+\Delta y)-y=u\Delta v+v\Delta u+\Delta u\Delta v,\\
\frac{\Delta y}{\Delta x}&=&u\frac{\Delta v}{\Delta x}+v\frac{\Delta u}{\Delta x}+\Delta u\frac{\Delta v}{\Delta x}.
\end{eqnarray*}</script><p>取$\Delta x\to 0$时的极限得</p>
<script type="math/tex; mode=display">

\frac{dy}{dx}=u\frac{dv}{dx}+v\frac{du}{dx}+0\cdot \frac{dv}{dx}</script><p>和(1)式相等。这里我们利用了$\Delta x\to 0$时，$\Delta u\to 0$这个事实。这是因为$u$是连续的。</p>
<p><strong>例1</strong>：首先用$x^3,x^4$测试公式(1)。</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{d}{dx}(x^3\cdot x^4)
&=&x^3\frac{d}{dx}x^4+x^4\frac{d}{dx}x^3\\
&=&x^3\cdot 4x^3+x^4\cdot 3x^2=7x^6.
\end{eqnarray*}</script><p>考虑一个更复杂的例子$y=(x^3-4x)(3x^4+2)$：</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{dy}{dx}
&=&(x^3-4x)\frac{d}{dx}(3x^4+2)+(3x^4+2)\frac{d}{dx}(x^3-4x)\\
&=&(x^3-4x)(12x^3)+(3x^4+2)(3x^2-4)\\
&=&12x^6-48x^4+9x^6-12x^4+6x^2-8\\
&=&21x^6-60x^4+6x^2-8.
\end{eqnarray*}</script><p>注意，我们也可以在开始的时候让两个因子乘开，然后求导。</p>
<script type="math/tex; mode=display">

y=3x^7-12x^5+2x^3-8x</script><p>所以</p>
<script type="math/tex; mode=display">

\frac{dy}{dx}=21x^6-60x^4+6x^2-8</script><p>我们没有利用乘法法则依然结局了问题，似乎法则就没存在的必要的。当因子都是多项式时的确如此，因为两个多项式的乘积依然时多项式。然而，对于更复杂的情况，尤其是因子为不同类型的函数，该法则是必不可少的。</p>
<p><strong><em>6除法法则</em></strong></p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{d}{dx}\left(\frac{u}{v}\right)=\frac{vdu/dx-udv/dx}{v^2}\qquad v\neq 0\tag2
\end{equation}</script><p>大部分人发现操作流程比符号更容易记忆：商的导数就是分母乘以分子的导数减去分子乘以分母的导数，然后除以分母的平方。为了证明它，考虑$y=u/v$，$x$变化量为<br>$\Delta x$。变量$u,v,y$的变化量为$\Delta u,\Delta v ,\Delta y$。</p>
<script type="math/tex; mode=display">

y+\Delta y=\frac{u+\Delta u}{v+\Delta v},\qquad \Delta y=\frac{u+\Delta u}{v+\Delta v}-\frac{u}{v},</script><script type="math/tex; mode=display">

\Delta y=\frac{uv+v\Delta u-uv-u\Delta v}{v(v+\Delta v)}=\frac{v\Delta u-u\Delta v}{v(v+\Delta v)}</script><script type="math/tex; mode=display">

\frac{\Delta y}{\Delta x}=\frac{v\Delta u/\Delta x-u\Delta v/\Delta x}{v(v+\Delta v)}.</script><p>取$\Delta x\to 0$的极限，就得到公式(2)</p>
<script type="math/tex; mode=display">

\frac{dy}{dx}=\frac{vdu/dx-udv/dx}{v^2}.</script><p>根据$v$的连续性(回顾：因为$v$可导，所以连续)，当$\Delta x\to 0$时$\Delta v\to 0$。</p>
<p><strong>例2</strong>：商$y=(3x^2-2)/(x^2+1)$的导数。</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{dy}{dx}
&=&\frac{(x^2+1)(d/dx(3x^2-2))-(3x^2-2)(d/dx)(x^2+1)}{(x^2+1)^2}\\
&=&\frac{(x^2+1)(6x)-(3x^2-2)(2x)}{(x^2+1)^2}\\
&=&\frac{6x^3+6x-6x^3+4x}{(x^2+1)^2}=\frac{10x}{(x^2+1)^2}.
\end{eqnarray*}</script><p>除法法则可以扩展到法则2</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{d}{dx}x^n=nx^{n-1}\tag3
\end{equation}</script><p>$n$为负数。为了看出是负数，我们令$n=-m$，其中$m$是正数。现在利用(2)式我们有</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{d}{dx}x^n
&=&\frac{d}{dx}x^{-m}=\frac{d}{dx}\frac{1}{x^m}=\frac{x^m(0)-1(mx^{m-1})}{(x^m)^2}\\
&=&\frac{-mx^{m-1}}{x^{2m}}=-mx^{-m-1}=nx^{n-1}.
\end{eqnarray*}</script><p>因此，</p>
<script type="math/tex; mode=display">

\frac{d}{dx}x^{-1}=(-1)x^{-2}=-x^{-2},\qquad \frac{d}{dx}x^{-2}=(-2)x^{-3}=-2x^{-3},\qquad etc.</script><p>因为$n=0$时，(3)式依然成立，所有对于所有的实数均成立。</p>
<p><strong>例3</strong>：求导</p>
<script type="math/tex; mode=display">

y=3x^2-\frac{2}{x^3},</script><p>可以写为</p>
<script type="math/tex; mode=display">

y=3x^2-2x^{-3}</script><p>那么</p>
<script type="math/tex; mode=display">

\frac{dy}{dx}=6x+6x^{-4}</script><p>可以重写为</p>
<script type="math/tex; mode=display">

\frac{dy}{dx}=6x+\frac{6}{x^4}</script><p>最好记住乘法和除法法则，并通过练习把它深深铭记在脑子里。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/51986313" target="_blank" rel="noopener">漫步微积分九——乘法和除法法则</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分3.3 - 复合函数和链式法则</title>
    <url>/2020/07/05/Stroll-calculus-3-3-Composite-Functions-and-the-Chain-Rule/</url>
    <content><![CDATA[<p>考虑下面函数的导数</p>
<script type="math/tex; mode=display">
\begin{equation}
y=(x^3+2)^5\tag1
\end{equation}</script><a id="more"></a>
<p>根据目前现有的工具，我们可以利用二项式定理将函数展开成多项式进行求导。</p>
<script type="math/tex; mode=display">
\begin{equation}
y=x^{15}+10x^{12}+40x^9+80x^6+80x^3+32.\tag2
\end{equation}</script><p>然后可以立马求出导数</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{dy}{dx}=15x^{14}+120x^{11}+360x^8+480x^5+240x^2.\tag3
\end{equation}</script><p>展开比较讨人厌但是不难。然而，很少人愿意对函数$y=(x^3+2)^{100}$进行同样的操作。最好能有一种链式法则，可以对每个函数的求导都变得容易。</p>
<p>出于此目的，理解函数(1)的结构非常重要。通过引入辅助变量$u=x^3+2$来实现此目的，这样的话(1)式就可以分解成两个简单的部分：</p>
<script type="math/tex; mode=display">
\begin{equation}
y=u^2\qquad u=x^3+2\tag4
\end{equation}</script><p>我们将$u$的表达式带入$y=u^5$重新构成(1)。这样的函数叫做复合函数，或函数的函数。一般来说，假设$y$是$u$的函数，而$u$是$x$的函数，</p>
<script type="math/tex; mode=display">
\begin{equation}
y=f(u)\qquad u=f(x)\tag5
\end{equation}</script><p>对应的复合函数就是</p>
<script type="math/tex; mode=display">
\begin{equation}
y=f(g(x))\tag6
\end{equation}</script><p>假定我们现在有一个(6)那样的复合函数，我们希望知道如何将它分解成(5)那样容易求导的形式来计算它的导数。这就是链式法则的内容。</p>
<p><strong>7 链式法则</strong>：在上面描述的环境下，我们有</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{dy}{dx}=\frac{dy}{du}\cdot\frac{du}{dx}.\tag7
\end{equation}</script><p>如我们所见，链式法则有点代数的特点；因为莱布尼兹的导数符号表明两个分式中的$du$可以消掉，所以这个公式很好记忆。如果我们将导数看作变化率的话，直观上也很容易理解：</p>
<p><strong><em>如果$y$的变化速度是$u$的$a$倍，$u$的变化速度是$x$的$b$倍，那么$y$的变化速度是$x$的$ab$倍。</em></strong></p>
<p>或者用日常用语来说，如果车的速度是自行车的两倍，自行车的速度是步行的四倍，那么车的速度是步行的$2\cdot 4=8$倍。</p>
<p>在进行链式法则证明之前，让我们先看看它是如何应用刚才讨论的问题上，(1)是给定的函数，(4)是它的分解形式。根据(7)</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{dy}{dx}=\frac{dy}{du}\cdot\frac{du}{dx}=5u^4\cdot 3x^2=15x^2(x^3+2)^4.\tag8
\end{equation}</script><p>最后一步用$x^3+2$替换辅助变量$u$。这个结果跟(3)一样，直接看似乎不太明显，但是等价是很容易建立起来的。更进一步，$y=(x^3+2)^{100}$的导数可以用相同的方式很容易就计算出来：</p>
<script type="math/tex; mode=display">

y=u^{100}\qquad u=x^3+2</script><p>利用(7)式得到</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{dy}{dx}=\frac{dy}{du}\frac{du}{dx}
&=&100u^{99}\cdot 3x^2\\
&=&300x^2(x^3+2)^{99}.
\end{eqnarray*}</script><p>正如这些例子展示的那样，链式法则是个强大的工具。</p>
<p>跟之前一样，我们用自变量的变化量$\Delta x$来证明(7)式；对于变量$u$产生的变化量是$\Delta u$，那么对于$y$就是$\Delta y$。我们知道可导隐含着连续，所以$\Delta x\to 0$时$\Delta u\to 0$。看三个导数的定义，我们现在试图将它们连接起来</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{dy}{dx}=\lim_{\Delta x\to 0}\frac{\Delta y}{\Delta x},\quad \frac{dy}{du}=\lim_{\Delta u\to 0}\frac{\Delta y}{\Delta u},\quad \frac{du}{dx}=\lim_{\Delta x\to 0}\frac{\Delta u}{\Delta x},\tag9
\end{equation}</script><p>那么很自然的我们尝试用简单的代数知识来完成证明：</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{\Delta y}{\Delta x}=\frac{\Delta y}{\Delta u}\cdot \frac{\Delta u}{\Delta x}, \tag{10}
\end{equation}</script><p>所以</p>
<script type="math/tex; mode=display">
\begin{align}
\frac{dy}{dx}
&=\lim_{\Delta x\to 0}\frac{\Delta y}{\Delta x}=\lim_{\Delta x\to 0}\frac{\Delta y}{\Delta u}\cdot \frac{\Delta u}{\Delta x}=\left[\lim_{\Delta x\to 0}\frac{\Delta y}{\Delta u}\right]\left[\lim_{\Delta x\to 0}\frac{\Delta u}{\Delta x}\right]\notag\\
&=\left[\lim_{\Delta u\to 0}\frac{\Delta y}{\Delta u}\right]\left[\lim_{\Delta x\to 0}\frac{\Delta u}{\Delta x}\right]=\frac{dy}{du}\cdot \frac{du}{dx}\tag{11}
\end{align}</script><p>这个推理几乎完全正确，但是不绝对。难点在于除数为零。根据(9)中的定义来计算$dy/dx$时，增量$\Delta x$趋近于0但不等于零时，公式才是有意义的。另一方面，$\Delta x$可能对$u$不产生影响，即$\Delta u= 0$，这样的话(10)(11)就不成立。这个缺陷用巧妙的数学诡计就能填补。</p>
<p>链式法则对所有级别的求导包括最简单的都是必不可少的。在寻找$(x^3+2)^5$和$(x^3+2)^{100}$导数的联系中给出了说明。通用的法则可以表示为如下的形式</p>
<script type="math/tex; mode=display">

\frac{d}{dx}()^n=n(\ )^{n-1}\frac{d}{dx}(\ )</script><p>任何对$x$可导的函数都能放入括号内。如果给定一个关于$u$的函数，那么公式可以写成如下形式。<br><strong>8 幂法则</strong>：</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{d}{dx}u^n=nu^{n-1}\frac{du}{dx}.\tag{12}
\end{equation}</script><p>目前我们知道指数$n$可以为正，可以为负，也可以为零。之后我们将会看到它也可以为分数。</p>
<p><strong>例1</strong>：对$y=(3x^4+1)^7$求导，应用公式(12)</p>
<script type="math/tex; mode=display">

\frac{dy}{dx}=7(3x^4+1)^6\frac{d}{dx}(3x^4+1)=7(3x^4+1)^6\cdot 12x^3.</script><p>而对$y=[(3x^4+1)^7+1]^5$求导，我们需要连续用两次(12)：</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{dy}{dx}
&=&5[(3x^4+1)^7+1]^4\frac{d}{dx}[(3x^4+1)^7+1]\\
&=&5[(3x^4+1)^7+1]^4\cdot 7(3x^4+1)^6\frac{d}{dx}(3x^4+1)\\
&=&5[(3x^4+1)^7+1]^4\cdot 7(3x^4+1)^6\cdot 12x^3.
\end{eqnarray*}</script><p>对这个过程熟悉后，经常跳过其中的几步直接写出来。目前为了更清晰，我们将计算的每一步都写出来。</p>
<p><strong>例2</strong>：如果$y=[(1-2x)/(1+2x)]^4$，那么根据(12)和除法法则</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{dy}{dx}
&=&4\left(\frac{(1-2x)}{1+2x}\right)\frac{d}{dx}\left(\frac{1-2x}{1+2x}\right)\\
&=&4\left(\frac{(1-2x)}{1+2x}\right)\cdot \frac{(1+2x)(-2)-(1-2x)(2)}{(1+2x)^2}\\
&=&\frac{-16(1-2x)^3}{(1+2x)^5}.
\end{eqnarray*}</script><p><strong>例3</strong>：如果$y=(x^2-1)^3(x^2+1)^{-2}$，那么根据(12)和乘法法则</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{dy}{dx}
&=&(x^2-1)^3\frac{d}{dx}(x^2+1)^{-2}+(x^2+1)^{-2}\frac{d}{dx}(x^2-1)^3\\
&=&(x^2-1)^3\cdot (-2)(x^2+1)^{-3}(2x)+(x^2+1)^{-2}\cdot 3(x^2-1)^2(2x).
\end{eqnarray*}</script><p>为了化简，我们提出公因子$2x(x^2-1)^2$，去掉负指数，并通分：</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{dy}{dx}
&=&2x(x^2-1)^2\left[\frac{-2(x^2-1)}{(x^2+1)^3}+\frac{3}{(x^2+1)^2}\right]\\
&=&2x(x^2-1)^2\left[\frac{-2(x^2-1)+3(x^2+1)}{(x^2+1)^3}\right]=\frac{2x(x^2-1)(x^2+5)}{(x^2+1)^3}.
\end{eqnarray*}</script><p>之后我们将在许多科学和几何的具体问题上将求导作为工具，那时候将清楚的看到将我们计算的导数化简成最简形式是非常值得的。</p>
<p>还有一些结束语应给给出。我们一直没有解释为什么链式法则是合适的。理由就是，(7)式中我们处理的三个变量$y,u,x$都是互相联系的，每一个依赖于下一个。这个关系可以写成</p>
<p>$y$依赖于$u$依赖于$x$.<br>公式</p>
<script type="math/tex; mode=display">

\frac{dy}{dx}=\frac{dy}{du}\cdot \frac{du}{dx}</script><p>告诉我们如何计算第一个变量相对于最后一个变量的导数，那就是考虑链中的各个部分。这个公式很容易扩展到多变量的情况。例如，如果$x$依赖于$z$，那么</p>
<script type="math/tex; mode=display">

\frac{dy}{dz}=\frac{dy}{du}\cdot \frac{du}{dx}\cdot \frac{dx}{dz}</script><p>如果$z$依赖于$w$，那么</p>
<script type="math/tex; mode=display">

\frac{dy}{dw}=\frac{dy}{du}\cdot \frac{du}{dx}\cdot \frac{dx}{dz}\cdot\frac{dz}{dw}</script><p>等等。每个新变量链中就增加一个新的链接，公式中就增加一个新的导数。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/51998175" target="_blank" rel="noopener">漫步微积分十——复合函数和链式法则</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分3.4 - 三角函数求导</title>
    <url>/2020/07/05/Stroll-calculus-3-4-Some-Trigonometric-Derivatives/</url>
    <content><![CDATA[<p>目前为止，我们求导的最基本函数是幂函数$x^n$：</p>
<script type="math/tex; mode=display">

\frac{d}{dx}x^n=nx^{n-1}</script><a id="more"></a>
<p>所有其他的函数可以通过加，减，乘，除和形成函数的函数构建出来。我们的通用规则可以找出这些组合的导数。现在我们学习如何对基本的三角函数$\sin x,\cos x$求导，从而扩展基本初等代数的工具包：</p>
<script type="math/tex; mode=display">
\begin{align}
\frac{d}{dx}\sin x\ &=\ \cos x\tag 1\\
\frac{d}{dx}\cos x\ &=\ -\sin x\tag2
\end{align}</script><p>为了得到这些公式，我们回到函数$f(x)$导数的定义，</p>
<script type="math/tex; mode=display">

\frac{d}{dx}f(x)=\lim_{\Delta x\to 0}\frac{f(x+\Delta x)-f(x)}{\Delta x}.</script><p>我们将定义应用到函数$f(x)=\sin x$，那么</p>
<script type="math/tex; mode=display">
\begin{align}
\frac{d}{dx}\sin x
&=\lim_{\Delta x\to 0}\frac{\sin(x+\Delta x)-\sin x}{\Delta x}\notag \\
&=\lim_{\Delta x\to 0}\frac{\sin x\cos \Delta x+\cos x\sin \Delta x-\sin x}{\Delta x}\tag3
\end{align}</script><p>对(3)进行重组得</p>
<script type="math/tex; mode=display">
\begin{align}
\frac{d}{dx}\sin x
&=\lim_{\Delta \to 0}\left[\cos x\left(\frac{\sin \Delta x}{\Delta x}\right)-\sin x\left(\frac{1-\cos \Delta x}{\Delta x}\right)\right]\notag \\
&=\cos x\left[\lim_{\Delta \to 0}\frac{\sin \Delta x}{\Delta x}\right]-\sin x\left[\lim_{\Delta x\to 0}\frac{1-\cos \Delta x}{\Delta x}\right]\tag4
\end{align}</script><p>上面$\sin x,\cos x$的极限运算是常数，用$\theta$代替$\Delta x$，就之前经过的极限一样</p>
<script type="math/tex; mode=display">

\lim_{\Delta x\to 0}\frac{\sin \Delta x}{\Delta x}=1\quad \lim_{\Delta x\to 0}\frac{1-\cos\Delta x}{\Delta x}=0</script><p>利用这个事实，(4)可以写为</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{d}{dx}\sin x
&=&\cos x\cdot 1-\sin x\cdot 0\\
&=&\cos x
\end{eqnarray*}</script><p>也就是(1)式。</p>
<p>对(2)的证明跟它类似</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{d}{dx}\cos x
&=&\lim_{\Delta x\to 0}\frac{\cos(x+\Delta x)-\cos x}{\Delta x}\\
&=&\lim_{\Delta x\to 0}\frac{\cos x\cos \Delta x-\sin x\sin Delta x-\cos x}{\Delta x}\\
&=&\lim_{\Delta x\to 0}\left[-\sin x\left(\frac{\Delta x}{\Delta x}\right)-\cos x\left(\frac{1-\cos \Delta x}{\Delta x}\right)\right]\\
&=&-\sin x\left[\lim_{\Delta x\to 0}\frac{\sin \Delta x}{\Delta x}\right]-\cos x\left[\lim_{\Delta x\to 0}\frac{1-\cos \Delta x}{\Delta x}\right] \\
&=&-\sin x\cdot 1-\cos x\cdot 0=-\sin x.
\end{eqnarray*}</script><p>这就证明了(2)。</p>
<p>将(1)、(2)和链式法则结合起来，就得到我们这部分最主要的工具了</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{d}{dx}\sin u=\cos u\frac{du}{dx}\tag5
\end{equation}</script><script type="math/tex; mode=display">
\begin{equation}
\frac{d}{dx}\cos u=-\sin u\frac{du}{dx}\tag6
\end{equation}</script><p>其中$u=u(x)$可以看做任何对$x$可导的函数。</p>
<p><strong>例1</strong>：$y=\sin(5+4x^3)$，求$dy/dx$。这里$u=5+4x^3$，利用(5)得</p>
<script type="math/tex; mode=display">

\frac{dy}{dx}=\cos(5+4x^3)\frac{d}{dx}(5+4x^3)=12x^2\cos(5+4x^3)</script><p><strong>例2</strong>：$y=\cos(\sin x)$，求$dy/dx$。这里$u=\sin x$，利用(6)(1)得</p>
<script type="math/tex; mode=display">

\frac{dy}{dx}=-\sin(\sin x)\frac{d}{dx}(\sin x)=-\cos x\cdot \sin(sin x)</script><p><strong>例3</strong>：$y=\sin[(1-x^2)/(1+x^2)]$，求$dy/dx$。这里$u=(1-x^2)/(1+x^2)$，利用(5)和除法法则得</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{dy}{dx}
&=&\cos\left(\frac{1-x^2}{1+x^2}\right)\frac{d}{dx}\left(\frac{1-x^2}{1+x^2}\right)\\
&=&\cos\left(\frac{1-x^2}{1+x^2}\right)\frac{(1+x^2)(-2x)-(1-x^2)2x}{(1+x^2)^2}\\
&=&\frac{-4x}{(1+x^2)^2}\cos\frac{1-x^2}{1+x^2}
\end{eqnarray*}</script><p><strong>例4</strong>：$y=\cos(1+\sin 5x)$，求$dy/dx$。 这里$u=1+\sin 5x$，其中$du/dx$还需要用一次链式法则</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{dy}{dx}
&=&-\sin(1+\sin 5x)\frac{(1+\sin 5x)}{dx}\\
&=&-\sin(1+\sin 5x)\cdot \cos 5x\cdot \frac{d}{dx}(5x)\\
&=&-5\cos 5x\cdot \cdot \sin(1+\sin 5x)
\end{eqnarray*}</script><p>这些例子中，链式法则应用到了更广的范围，并不仅仅局限于之前所讲的。</p>
<p>我们需要提醒读者三角函数幂形式的标准符号：通常$\sin^{n}x$表示$(\sin x)^n$。但是$(\sin x)^{-1}$可不能写成$\sin^{-1}x$。因为后者表示反函数。</p>
<p><strong>例5</strong>：$y=\cos^57x^2$，求$dy/dx$。 这里令$w=\sin 7x^2$，那么$y=w^5$</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{dy}{dx}
&=&5w^4\frac{dw}{dx}=5w^4\cdot \cos 7x^2\cdot \frac{d}{dx}(7x^2)\\
&=&5w^4\cdot \cos 7x^2\cdot 14x\\
&=&70x\sin^47x^2\cdot \cos 7x^2
\end{eqnarray*}</script><p>之前的文章我们使用的是弧度而不是角度。现在我们解释这么做的原因。$\sin x^o,\cos x^o$表示$x$度角的正弦和余弦值。因为$x$度等于$\pi x/180$弧度，所以</p>
<script type="math/tex; mode=display">

\sin x^o=\sin \frac{\pi x}{180}</script><p>那么</p>
<script type="math/tex; mode=display">

\frac{d}{dx}\sin x^o=\cos \frac{\pi x}{180}\frac{d}{dx}\left(\frac{\pi x}{180}\right)=\frac{\pi}{180}\cos \frac{\pi x}{180}</script><p>所以</p>
<script type="math/tex; mode=display">

\frac{d}{dx}\sin x^o=\frac{\pi}{180}\cos x^o</script><p>如果我们坚持用度做为角的单位，那么我们只得用上式，而无法使用更简单的(1)。因此，我们使用弧度从而避免计算过程中重复计算因子$\pi/180$</p>
<p>其他四种三角函数可以用$\sin x,\cos x$来表示，他们的导数可以根据定义来计算。他们的定义为</p>
<script type="math/tex; mode=display">
\begin{align}
\tan x&=\frac{\sin x}{\cos x}\tag7\\
\cot x&=\frac{\cos x}{\sin x}\left(=\frac{1}{\tan x}\right)\notag\\
\sec x&=\frac{1}{\cos x}\notag\\
\csc x&=\frac{1}{\sin x}\notag
\end{align}</script><p>他们分别是正切，余切，正割和余割函数。这些函数在后面的文章中会详细讨论，目前我们只关注正切以及它的导数</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{d}{dx}\tan x=\sec^2x\tag8
\end{equation}</script><p>为了得到这个式子，我们参考(7)并使用除法法则：</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{d}{dx}\tan x
&=&\frac{d}{dx}\frac{\sin x}{\cos x}=\frac{\cos x\cdot \cos x-\sin x\cdot (-\sin x)}{\cos^2x}\\
&=&\frac{\cos^2x+\sin^2x}{\cos^2x}=\frac{1}{\cos^2x}=\sec^2x
\end{eqnarray*}</script><p>(8)的链式法则为</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{d}{dx}\tan u=\sec^2u\frac{du}{dx}\tag9
\end{equation}</script><p><strong>例6</strong>：$y=\tan^5(3x^2+1)$，求$dy/dx$。 这里令$w=\tan(3x^2+1)$，那么$y=w^5$，利用(9)得</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{dy}{dx}&=&5w^4\frac{dw}{dx}=5w^4\cdot \sec^2(3x^2+1)\cdot \frac{d}{dx}(3x^2+1)\\
&=&5w^4\cdot\sec^2(3x^2+1)\cdot 6x\\
&=&30x\cdot\tan^4(3x^2+1)\cdot \sec^2(3x^2+1).
\end{eqnarray*}</script><p><a href="https://blog.csdn.net/u010182633/article/details/52005889" target="_blank" rel="noopener">漫步微积分十一——三角函数求导</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分3.5 - 隐函数、分数指数</title>
    <url>/2020/07/05/Stroll-calculus-3-5-Implicit-Functions-and-Fractional-Exponents/</url>
    <content><![CDATA[<p>目前我们遇到的大部分函数形式都是$y=f(x)$，$y$直接或明确的表示成$x$的形式。然而，我们常常看到如下形式的定义</p>
<script type="math/tex; mode=display">
\begin{equation}
F(x,y)=0\tag1
\end{equation}</script><a id="more"></a>
<p>不仅仅牵涉到$y$，$x,y$他们互相或多或少有点牵连。当给定一个$x$值，等式通常对应一个或多个$y$值。对这种情况，我们称$y$是$x$的隐函数。</p>
<p><strong>例1</strong>：(a)考虑一个简单的等式，$xy=1$，它确定了一个$x$的隐函数，我们可以显示的写为</p>
<script type="math/tex; mode=display">

y=\frac{1}{x}</script><p>(b)等式$x^2+y^2=25$确定了两个$x$的隐函数，显示的表达为</p>
<script type="math/tex; mode=display">

y=\sqrt{25-x^2}\qquad y=-\sqrt{25-x^2}.</script><p>我们都知道，这两个函数图像分别是半径为5的圆的上下两部<br>分，如图1。</p>
<center>
<img src="/2020/07/05/Stroll-calculus-3-5-Implicit-Functions-and-Fractional-Exponents/20160724103142206" alt="这里写图片描述" title>
图1
</center>

<p>(c)等式$2x^2-2xy=5-y^2$也确定了两个隐函数。如果看作$y$ 的二次函数，那么函数解为</p>
<script type="math/tex; mode=display">

y=x+\sqrt{5-x^2}\quad y=x-\sqrt{5-x^2}</script><p>(d)等式$^3+y^3=3axy(a&gt;0)$确定了几个隐函数，但是解决它比较麻烦，所以跳过它吧(嘿嘿嘿)。</p>
<p>我们经常会遇到需要计算隐函数的导数$\frac{dy}{dx}$但开始却没有$y$等式的情况。根据链式法则，等式两边直接对$x$ 求导,无论$y$在哪里出现，都将其看作$x$的函数。例如，$y^3$看作$x$函数的立方，它的导数为</p>
<script type="math/tex; mode=display">

\frac{d}{dx}y^3=3y^2\frac{dy}{dx}</script><p>$x^3y^4$看作两个$x$函数相乘，其导数为</p>
<script type="math/tex; mode=display">

\frac{d}{dx}(x^3y^4)=x^3\cdot 4y^3\frac{dy}{dx}+y^4\cdot 3x^2</script><p>为了完成整个过程，将$dy/dx$代入即可。这个方法叫做隐函数求导。我们将它应用到例1，展示了它的工作过程。</p>
<p><strong>例2</strong>：(a)我们把等式$xy=1$看作两个相等的$x$函数(即：$xy$和1)。这两个函数的导数是相等的，所以</p>
<script type="math/tex; mode=display">

x\frac{dy}{dx}+y=0\quad or \quad \frac{dy}{dx}=-\frac{y}{x}</script><p>根据原等式可以求出$y=1/x$，代入的</p>
<script type="math/tex; mode=display">

\frac{dy}{dx}=-\frac{y}{x}=-\frac{1}{x}\cdot\frac{1}{x}=-\frac{1}{x^2}</script><p>对$y=1/x$直接求导得</p>
<script type="math/tex; mode=display">

\frac{dy}{dx}=-\frac{1}{x^2}</script><p>(b)对等式$x^2+y^2=25$进行求导得</p>
<script type="math/tex; mode=display">

2x+2y\frac{dy}{dx}=0\quad or\quad \frac{dy}{dx}=-\frac{x}{y}</script><p>无论对那个隐函数，它都给出了正确的结果。图1中点(4,3)位于上半部分，$dy/dx$是$-\frac{4}{3}$，点(4,-3)位于下半部分，$dy/dx$是$\frac{4}{3}$</p>
<p>(c)对等式$2x^2-2xy=5-y^2$隐式求导得</p>
<script type="math/tex; mode=display">

4x-2x\frac{dy}{dx}-2y=-2y\frac{dy}{dx}\quad or\quad \frac{dy}{dx}=\frac{2x-y}{x-y}.</script><p>(d)在例1(d)中，$dy/dx$的导数无法直接计算。然而，利用隐函数将会容易许多。对$x^3+y^3=3axy$，我们有</p>
<script type="math/tex; mode=display">

3x^2+3y\frac{dy}{dx}=3ax\frac{dy}{dx}+3ay\quad or \quad \frac{dy}{dx}=\frac{ay-x^2}{y^2-ax}</script><p>很明显，隐函数求导通常给出$dy/dx$的形式，包含了$x,y$而不是只有$x$。但是，在许多情况下这并非是个缺点。例如，如果我们计算一个等式在点$(x_0,y_0)$处切线的斜率，我们需要做的就是将$x_0,y_0$代入公式$dy/dx$。 例2(b)在点(4,3)和(4,-3)的情况就说明了这一点。</p>
<p>现在我们利用隐函数求导来说明下面的公式对所有分数指数$n=p/q$依然成立</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{d}{dx}x^n=nx^{n-1}\tag2
\end{equation}</script><p>为了方便，我们对(2)式引入一个因变量</p>
<script type="math/tex; mode=display">

y=x^{p/q}</script><p>两边都去$q$次方的</p>
<script type="math/tex; mode=display">

y^q=x^p</script><p>两边对$x$求导并利用整数的幂规则得</p>
<script type="math/tex; mode=display">

qy^{q-1}\frac{dy}{dx}=px^{p-1}</script><p>或者</p>
<script type="math/tex; mode=display">

\frac{dy}{dx}=\frac{p}{q}\frac{x^{p-1}}{y^{q-1}}</script><p>而$y^{q-1}=y^q/y=x^p/x^{p/q}$，所以</p>
<script type="math/tex; mode=display">

\frac{dy}{dx}=\frac{p}{q}\frac{x^{p-1}}{y^{q-1}}=\frac{p}{q}\frac{x^{p-1}}{x^p}\cdot x^{p/q}=\frac{p}{q}x^{p/q-1}</script><p>得证。</p>
<p><strong>例3</strong>：根据上面的结论，我们立马可以得出</p>
<script type="math/tex; mode=display">

\frac{d}{dx}x^{1/2}=\frac{1}{2}x^{-1/2},\quad \frac{d}{dx}x^{-2/3}=-\frac{2}{3}x^{-5/3},\quad \frac{d}{dx}x^{5/4}=\frac{5}{4}x^{1/4}</script><p>第一个经常写成如下形式</p>
<script type="math/tex; mode=display">

\frac{d}{dx}\sqrt{x}=\frac{1}{2\sqrt{x}}</script><p><strong>例4</strong>：对于有基底的表达式求导，首先用分数来替换所有基底。</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{d}{dx}\frac{x}{\sqrt{x^2-1}}
&=&\frac{d}{dx}x(x^2-1)^{-1/2}=x\left(-\frac{1}{2}\right)(x^2-1)^{-3/2}(2x)+(x^2-1)^{-1/2}\\
&=&\frac{-x^2}{(x^2-1)^{3/2}}+\frac{1}{(x^2-1)^{1/2}}=\frac{-x^2+(x^2-1)}{(x^2-1)^{3/2}}=-\frac{1}{(x^2-1)^{3/2}}
\end{eqnarray*}</script><p>目前为止提到的所有规则将被用于许多方面。因此，最好能够记住他们，并多加练习达到能立马写出的地步。一位哲学家曾说过：文明进步依赖于不加思索就能够说出的运算数量。</p>
<p>有一点值得说明，在计算导数时，幂规则和除法法则最容易出错。例如，对于幂规则，很容易忘记$du/dx$。而除法法则易错点是分子里减法的顺序。如果忘记的话，我们可以利用乘法法则迅速推导出来：</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{d}{dx}\left(\frac{u}{v}\right)
&=&\frac{d}{dx}(uv^{-1})=u\cdot (-1)v^{-2}\frac{dv}{dx}+v^{-1}\frac{du}{dx}\\
&=&\frac{1}{v}\frac{du}{dx}-\frac{u}{v^2}\frac{dv}{dx}=\frac{vdu/dx-udv/dx}{v^2}
\end{eqnarray*}</script><p>{\color{red}{注解}}$\quad$例1(d)有一段很长的历史，值得进一步评论一下。它的图像叫做笛卡尔叶，如图2。考虑最简单的情况即$a=1$，那么等式变为</p>
<script type="math/tex; mode=display">
\begin{equation}
x^3+y^3=3xy\tag3
\end{equation}</script><p>用$x$的形式表示$y$求不出解。因此有许多历史爱好者的故事。</p>
<p><center>
<img src="/2020/07/05/Stroll-calculus-3-5-Implicit-Functions-and-Fractional-Exponents/20160724103455334" alt="这里写图片描述" title>
图2
</center><br>1545年，意大利医生家、数学家、占星家吉罗拉莫 卡尔达诺(1501-1576)用基的方法发现了任何三次方程解的公式。这个公式类似于大家熟悉的二次公式但是要复杂得多。如果用卡尔达诺的公式求解方程(3)，那么有三个解函数</p>
<script type="math/tex; mode=display">

y_1=\sqrt[3]{-\frac{x^3}{2}+\sqrt{\frac{x^6}{4}-x^3}}+\sqrt[3]{-\frac{x^3}{2}-\sqrt{\frac{x^6}{4}-x^3}}</script><p>和</p>
<script type="math/tex; mode=display">

y_2,y_3=-\frac{1}{2}y_1\pm \frac{1}{2}\sqrt{-3}\left(\sqrt[3]{-\frac{x^3}{2}+\sqrt{\frac{x^6}{4}-x^3}}-\sqrt[3]{-\frac{x^3}{2}-\sqrt{\frac{x^6}{4}-x^3}}\right)</script><p>隐函数求导的方法明显比这样直接求导好许多。再说，对于下面的等式</p>
<script type="math/tex; mode=display">

x^5+5x^4y^2+3xy^3+y^5=1</script><p>无法用$x$的形式来表示$y$，但是利用隐函数求导法则可以很容易的得到导数。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/52012762" target="_blank" rel="noopener">漫步微积分十二——隐函数、分数指数</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分3.6 - 高阶导数</title>
    <url>/2020/07/05/Stroll-calculus-3-6-Derivatives-of-Higher-Order/</url>
    <content><![CDATA[<p>$y=x^4$的导数是$y’=4x^3$。但是$4x^3$依然可导，$12x^2$。用$y’’$表示，叫做原函数的二阶导。对二阶导$y’’=12x^2$求导得到三阶导$y’’’=24x$，一直这样做知道没有定义为止。对于高阶导，有些符号是共用的，我们都应该熟悉他们。对函数$u=f(x)$逐次求导得</p>
<script type="math/tex; mode=display">
\begin{equation}
\begin{array}{ccccc}
一阶导数 &f'(x)&y'&\frac{dy}{dx}&\frac{d}{dx}f(x)\\
二阶导数&f''(x)&y''&\frac{d^2y}{dx^2}&\frac{d^2}{dx^2}f(x)\\ \
三阶导数&f'''(x)&y'''&\frac{d^3y}{dx^3}&\frac{d^3}{dx^3}f(x)\\
n阶导数&f^{n}(x)&y^{(n)}&\frac{d^ny}{dx^n}&\frac{d^n}{dx^n}f(x)
\end{array}\notag
\end{equation}</script><a id="more"></a>
<p>这些符号按阶数给出。用符号$’$表示比较麻烦，所以在三阶导以上不经常用。有时候，将原函数看作零阶导数会非常方便，写作$f(x)=f^{(0)}(x)$。第三列的上标位置看着很奇怪，我们这样理解，它是一阶导数的二次求导</p>
<script type="math/tex; mode=display">

\frac{d^2y}{dx^2}=\frac{d}{dx}\left(\frac{dy}{dx}\right)</script><p>等式的左边，上标$2$在$d$和$dx$的上部，和右边的符号相一致。</p>
<p>更高阶的导数有什么用呢？之后我们会看到，在几何上，$f’’(x)$的符号决定了曲线$y=f(x)$是凸的还是凹的。另外二阶导数的定性分析还会提炼成定量的计算公式。</p>
<p>物理学中，二阶导非常重要。如果$f=f(t)$给出了时刻$t$运动目标的位置，那么我们就知道位置函数的一阶和二阶导</p>
<script type="math/tex; mode=display">

v=\frac{ds}{dt}\qquad a=\frac{dv}{dt}=\frac{d^2s}{dt^2}</script><p>分别是时间$t$对应的速度和加速度。加速的的中心地位来源于牛顿第二定律，即运动物体的加速度与施加于它的力成正比。牛顿力学的基本问题是利用微积分来推导运动的性质。之后我们会接触到相关问题。</p>
<p>高阶导不像二阶导，它没有这样基本的几何或物理解释。然而，我们会看到，这些导数也是有用的，它将函数扩展成无穷级数。</p>
<p>所有的应用在后面的文章中都会进行详细的讨论。同时，我们目前需要熟练计算方法。</p>
<p><strong>例1</strong>：很容易求出函数$y=x^5$的所有导数：</p>
<script type="math/tex; mode=display">
\begin{align}
y'&=5x^4,\quad y'=20x^3,\quad y'''=60x^2\notag\\
y^{(4)}&=120x,\quad y^{(5)}=120,\quad y^{(n)}=0\quad n>5\notag
\end{align}</script><p>下面的符号将经常用到。对于任何正数$n$，符号$n!$是从$1$到$n$所有正数的乘积:</p>
<script type="math/tex; mode=display">

n!=1\cdot 2\cdot 3\cdots n</script><p>因此，$1!=1,2!=1\cdot 2=2,3!=1\cdot 2\cdot 3=6,4!=1\cdot 2\cdot 3\cdot 4=24$等等。如果我们重复对$y=x^n$求导，那么</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
y'&=&nx^{n-1}\\
y''&=&n(n-1)x^{n-2}\\
y'''&=&n(n-1)(n-2)x^{n-3}\\
y^{(n)}&=&n(n-1)(n-2)\cdots 2\cdot 1=n!\\
y^{(k)}&=&0\quad k>n.
\end{eqnarray*}</script><p><strong>例2</strong>：为了找到$y=1/x=x^{-1}$$n$阶导数的通式，我们从一阶导开始计算直到观察出模式来：</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
y'&=&-x^{-2}\\
y''&=&2x^{-3}\\
y'''&=&-2\cdot 3x^{-4}=-3!x^{-4}\\
y^{(4)}&=&2\cdot 3\cdot 4x^{-5}=4!x^{-5}\\
y^{(5)}&=&-2\cdot 3\cdot 4\cdot 5x^{-6}=-5!x^{-6}.
\end{eqnarray*}</script><p>观察上面的过程，不考虑符号，那么$y^{(n)}=n!x^{-(n+1)}$。对于符号有种比较方便的形式$(-1)^n$，如果是奇数，那么它等于$-1$，如果是偶数，那么它等于$1$。因此对于所有的正整数$n$</p>
<script type="math/tex; mode=display">

y^{(n)}=(-1)^nn!x^{-(n+1)}</script><p><strong>例3</strong>：对一个圆$x^2+y^2=a^2$，利用隐函数求导，可以找到$y’’$的简洁形式。首先对等式两边求导得</p>
<script type="math/tex; mode=display">
\begin{equation}
2x+2yy'=0\quad or\quad y'=-\frac{x}{y}.\tag1
\end{equation}</script><p>利用除法法则在求导得</p>
<script type="math/tex; mode=display">

y''=-\frac{y-xy'}{y^2}.</script><p>将(1)代入上式得</p>
<script type="math/tex; mode=display">

y''=-\frac{y-x(-x/y)}{y^2}=-\frac{y^2+x^2}{y^3}=-\frac{a^2}{y^3}</script><p>这对每个人来说都是比较简洁的形式了。</p>
<p><strong>例4</strong>：重复求导很容易的证明二项式定理。对于任意正整数$n$，考虑函数</p>
<script type="math/tex; mode=display">

(1+x)^n=(1+x)(1+x)\cdots (1+x)</script><p>很明显，该函数是$n$次多项式，即</p>
<script type="math/tex; mode=display">
\begin{equation}
(1+x)^n=a_0+a_1x+a_2x^2+a_3x^3+\cdots +a_nx^n\tag2
\end{equation}</script><p>我们的问题是找出系数是多少。如果我们令$x=0$，立马得出$a_0=1$。接下来，对(2)式两边重复求导得</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
n(1+x)^{n-1}&=&a_1+2a_2x+3a_3x^2+\cdots +na_nx^{n-1}\\
n(n-1)(1+x)^{n-2}&=&2a_2+3\cdot 2a_3x+\cdots +n(n-1)a_nx^{n-2}\\
n(n-1)(n-2)(1+x)^{n-3}&=&3\cdot 2a_3+\cdots +n(n-1)(n-2)a_nx^{n-3}
\end{eqnarray*}</script><p>等等。这些等式对所有$x$都成立，所以我们取$x=0$。从而得出系数值为：</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
a_1&=&n,\quad a_2=\frac{n(n-1)}{2},\quad a_3=\frac{n(n-1)(n-2)}{2\cdot 3},\quad \ldots\\
a_k&=&\frac{n(n-1)(n-2)\cdots (n-k+1)}{1\cdot 2\cdot 3\cdots k},\quad \ldots ,\quad a_n=1.
\end{eqnarray*}</script><p>得到系数后，代入等式(2)得</p>
<script type="math/tex; mode=display">
\begin{align}
(1+x)^n=&1+nx+\frac{n(n-1)}{1\cdot 2}x^2+\frac{n(n-1)(n-2)}{1\cdot 2\cdot 3}x^3 \notag\\
&+\cdots+\frac{n(n-1)(n-2)\cdots (n-k+1)}{1\cdot 2\cdot 3\cdots k}x^k+\cdots+x^n.\tag3
\end{align}</script><p>这就是二项式定理。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/52027579" target="_blank" rel="noopener">漫步微积分十三——高阶导数</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>Perl 正则表达式替换文本</title>
    <url>/2020/07/06/Replace-text-with-Perl-regular-expressions/</url>
    <content><![CDATA[<p>第一次接触”驼”语言，它的正则确实很强。</p>
<h2 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h2><p>Perl的正则表达式的三种形式，分别是匹配，替换和转化:</p>
<ul>
<li>匹配：m//（还可以简写为//，略去m）</li>
<li>替换：s///</li>
<li>转化：tr///</li>
</ul>
<p>这里的 <code>/</code> 是界定符，并不是固定的，比如有表达式正好出现<code>/</code>，那界定符可改为 <code>#</code>或其他字符。<br>这个规则在 <code>sed</code> 里也适用，例如：<code>sed &#39;s#hello#world#&#39; hello.txt</code></p>
<ul>
<li><code>=~</code> 表示相匹配</li>
<li><code>!~</code> 表示不匹配</li>
</ul>
<a id="more"></a>
<h2 id="模式匹配修饰符"><a href="#模式匹配修饰符" class="headerlink" title="模式匹配修饰符"></a>模式匹配修饰符</h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">修饰符</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">i</td>
<td style="text-align:left">忽略模式中的大小写</td>
</tr>
<tr>
<td style="text-align:left">m</td>
<td style="text-align:left">多行模式</td>
</tr>
<tr>
<td style="text-align:left">o</td>
<td style="text-align:left">仅赋值一次</td>
</tr>
<tr>
<td style="text-align:left">s</td>
<td style="text-align:left">单行模式，”.”匹配”\n”（默认不匹配）</td>
</tr>
<tr>
<td style="text-align:left">x</td>
<td style="text-align:left">忽略模式中的空白</td>
</tr>
<tr>
<td style="text-align:left">g</td>
<td style="text-align:left">全局匹配</td>
</tr>
<tr>
<td style="text-align:left">cg</td>
<td style="text-align:left">全局匹配失败后，允许再次查找匹配串</td>
</tr>
</tbody>
</table>
</div>
<h2 id="替换操作修饰符"><a href="#替换操作修饰符" class="headerlink" title="替换操作修饰符"></a>替换操作修饰符</h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">修饰符</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">i</td>
<td style="text-align:left">如果在修饰符中加上”i”，则正则将会取消大小写敏感性，即”a”和”A” 是一样的。</td>
</tr>
<tr>
<td style="text-align:left">m</td>
<td style="text-align:left">默认的正则开始”^”和结束”&#36;”只是对于正则字符串如果在修饰符中加上”m”，<br>那么开始和结束将会指字符串的每一行：每一行的开头就是”^”，结尾就是”$”。</td>
</tr>
<tr>
<td style="text-align:left">o</td>
<td style="text-align:left">表达式只执行一次。</td>
</tr>
<tr>
<td style="text-align:left">s</td>
<td style="text-align:left">如果在修饰符中加入”s”，那么默认的”.”代表除了换行符以外的任何字符将会变成任意字符，也就是包括换行符！</td>
</tr>
<tr>
<td style="text-align:left">x</td>
<td style="text-align:left">如果加上该修饰符，表达式中的空白字符将会被忽略，除非它已经被转义。</td>
</tr>
<tr>
<td style="text-align:left">g</td>
<td style="text-align:left">替换所有匹配的字符串。</td>
</tr>
<tr>
<td style="text-align:left">e</td>
<td style="text-align:left">替换字符串作为表达式</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p>使用Perl将文件中所有的MathJax标签替换为<code>$</code>,并输出到指定文件：</p>
<h3 id="输入参数"><a href="#输入参数" class="headerlink" title="输入参数"></a>输入参数</h3><ul>
<li><code>$ARGV[0]</code> 代表输入</li>
<li><p><code>$ARGV[1]</code> 代表输出</p>
<h3 id="文件IO"><a href="#文件IO" class="headerlink" title="文件IO"></a>文件IO</h3><p>为一次性加载全部文件内容，安装 <code>Path:Tiny</code>模块</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">perl -MCPAN -e shell</span><br><span class="line">install Path:Tiny</span><br></pre></td></tr></table></figure>
<p>或<br><code>perl -MCPAN -e &#39;install Path:Tiny&#39;</code></p>
</li>
<li><p>读取：</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> Path::Tiny;</span><br><span class="line"><span class="keyword">my</span> $all_of_it = path($ARGV[<span class="number">0</span>])-&gt;slurp;</span><br></pre></td></tr></table></figure>
</li>
<li><p>写入：</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">open</span>(DATA, <span class="string">"&gt;"</span>.$ARGV[<span class="number">1</span>]) <span class="keyword">or</span> <span class="keyword">die</span> <span class="string">"file.txt 文件无法打开, $!"</span>;</span><br><span class="line"><span class="keyword">print</span> DATA $all_of_it;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="正则替换"><a href="#正则替换" class="headerlink" title="正则替换"></a>正则替换</h3>  <figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">$all_of_it =~ <span class="keyword">s</span><span class="comment">#&lt;script type="math/tex; mode=display".*?&gt;(.*?)&lt;/script&gt;#\n\$\$\n\1\n\$\$\n#sg;</span></span><br><span class="line">$all_of_it =~ <span class="keyword">s</span><span class="comment">#&lt;script type="math/tex".*?&gt;(.*?)&lt;/script&gt;#\$\1\$#sg;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>s</code> 替换模式</li>
<li>将展示模式的MathJax，替换为 &#36;&#36;exp&#36;&#36; 形式</li>
<li>将单行模式的MathJax，替换为 &#36;exp&#36; 形式</li>
<li><code>sg</code> 替换修饰符，<code>.</code>匹配所有字符、替换所有匹配的字符串</li>
</ul>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>input.txt<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script type=&quot;math/tex; mode=display&quot; id=&quot;MathJax-Element-50&quot;&gt;\begin&#123;equation&#125;</span><br><span class="line">f&apos;(c)=\frac&#123;f(b)-f(a)&#125;&#123;b-a&#125;.\tag2</span><br><span class="line">\end&#123;equation&#125;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>
<p>demo.pl<br><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> Path::Tiny;</span><br><span class="line"><span class="keyword">my</span> $all_of_it = path($ARGV[<span class="number">0</span>])-&gt;slurp;</span><br><span class="line">$all_of_it =~ <span class="keyword">s</span><span class="comment">#&lt;script type="math/tex; mode=display".*?&gt;(.*?)&lt;/script&gt;#\n\$\$\n\1\n\$\$\n#sg;</span></span><br><span class="line">$all_of_it =~ <span class="keyword">s</span><span class="comment">#&lt;script type="math/tex".*?&gt;(.*?)&lt;/script&gt;#\$\1\$#sg;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span>(DATA, <span class="string">"&gt;"</span>.$ARGV[<span class="number">1</span>]) <span class="keyword">or</span> <span class="keyword">die</span> <span class="string">"file.txt 文件无法打开, $!"</span>;</span><br><span class="line"><span class="keyword">print</span> DATA $all_of_it;</span><br><span class="line"><span class="keyword">close</span> DATA;</span><br></pre></td></tr></table></figure></p>
<p>command: <code>perl demo.pl input.txt output.txt</code></p>
<p>output.txt<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">$$</span><br><span class="line">\begin&#123;equation&#125;</span><br><span class="line">f&apos;(c)=\frac&#123;f(b)-f(a)&#125;&#123;b-a&#125;.\tag2</span><br><span class="line">\end&#123;equation&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li>相比于 <code>sed</code> <code>gawk</code>，<code>perl</code> 明显有更强、更灵活的文本控制力</li>
<li>在<code>grep</code>的匹配器选项中，可以用 <code>-P, --perl-regexp</code> 选项来使用更强的 <code>PCRE</code> 匹配器</li>
</ul>
<blockquote>
<p>尽管PCRE声称与Perl兼容，但现代版本的Perl和PCRE之间存在足够多的差异，可以认为它们具有不同的正则风味。Perl的最新版本甚至在Perl收录前，从PCRE那复制了，PCRE从别的编程语言那复制的功能，目的是使Perl与PCRE更加兼容。如今，PCRE比Perl更加广泛地使用，因为PCRE是众多库和应用程序的组成部分。</p>
</blockquote>
<p><a href="https://www.runoob.com/perl/perl-regular-expressions.html" target="_blank" rel="noopener">Perl 正则表达式</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9557041.html" target="_blank" rel="noopener">Perl的命令行参数和ARGV</a><br><a href="https://www.v2ex.com/t/316771" target="_blank" rel="noopener">问下 perl 怎么读取整个文件里的内容（包括所有换行）？</a><br><a href="https://perldoc.perl.org/perlfaq5.html#How-do-I-print-to-more-than-one-file-at-once%3f" target="_blank" rel="noopener">How can I read in an entire file all at once?</a><br><a href="https://www.jianshu.com/p/40b12429e28f" target="_blank" rel="noopener">各个平台下 Perl 模块安装总结
</a><br><a href="https://www.regular-expressions.info/pcre.html" target="_blank" rel="noopener">The PCRE Open Source Regex Library</a></p>
]]></content>
      <categories>
        <category>perl</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>regex</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分4.1 - 增、减函数和极大、极小值</title>
    <url>/2020/07/06/Stroll-calculus-4-1-Increasing-and-Decreasing-Functions-Maxima-and-Minima/</url>
    <content><![CDATA[<p>本篇将会看到，我们学习到的计算导数的用武之地。</p>
<p>我们第一个应用是导数作为曲线切线斜率的解释。通过这个应用，我们可以快速发现函数最重要的特征并描绘出它的图像。在物理科学中画图是最基本的要求。在经济、生物和心理学的研究中，微积分也是一项最有用的技能之一。</p>
<p>如果$x$轴的某个区间上$x_1<x_2$暗含着$f(x_1)<f(x_2)$，那么函数$f(x)$在此区间上是增函数。用几何语言来说就是，从左到右，图像上升。同样的，如果$x_1<x_2$暗含$f(x_1)>f(x_2)$，那么函数$f(x)$是减函数(图像下降)。如图1 所示。</x_2$暗含着$f(x_1)<f(x_2)$，那么函数$f(x)$在此区间上是增函数。用几何语言来说就是，从左到右，图像上升。同样的，如果$x_1<x_2$暗含$f(x_1)></p>
<center>
<img src="/2020/07/06/Stroll-calculus-4-1-Increasing-and-Decreasing-Functions-Maxima-and-Minima/20160726231323513" alt="这里写图片描述" title>
图1
</center>

<a id="more"></a>
<p>画函数图像时，知道哪些区间是增的，哪些区间时减的非常重要。而导数的符号给出了这些信息：</p>
<p>对任意区间，如果$f‘(x)&gt;0$，那么$f(x)$递增，如果$f’(x)&lt;0$，那么$f(x)$递减。</p>
<p>从几何上来考虑会非常明显，如果斜率为正，那么就是一条斜向右上的直线，如果斜率为负，就是斜向右下的直线。如图2。</p>
<p>平滑的曲线通过波峰(斜率为零)从上升过渡到下降。同样的，通过波谷(斜率为零)从下降过渡到上升。在这些点中，有函数的极大值和极小值。我们通过找到函数的驻点(也就是$f’(x)=0$)可以定位这些值。也就是说，我们令导数等于零即切线是水平方向的，然后求解等式$f’(x)=0$，找出对应的$x$ 值。在图2中，驻点是$x_1,x_2,x_3$，拐点对应的值为$f(x_1),f(x_2),f(x_3)$。</p>
<center>
<img src="/2020/07/06/Stroll-calculus-4-1-Increasing-and-Decreasing-Functions-Maxima-and-Minima/20160726231413289" alt="这里写图片描述" title>
图2
</center>

<p>驻点是极大值或极小值的充分条件，但不是必要条件。理解这一点很重要。在图2中，驻点$x_3$处，图像即不是极大值也不是极小值，只是在导数为正的两个区间之间平缓通过。</p>
<p>还有一点应该指出，我们讨论的是局部最大最小值。这些值相比于附近的点来说是最大或最小。例如，图2中，虽然有许多点比$f(x_1)$高，但是它依然是极大值。如果我们要寻找全局最大值，我们必须比较不同的极大值来确定哪一个更大。</p>
<p><strong>例1</strong>：画下面多项式的图像</p>
<script type="math/tex; mode=display">

y=f(x)=2x^3-3x^2-1x+12</script><p>首先计算导数并尽可能分解因式：</p>
<script type="math/tex; mode=display">

f'(x)=6x^2-6x-12=6(x+1)(x-2)</script><p>驻点是$x=-1,x=2$，将$-1,2$带入$f(x)$得，对应的值为$y=19,-8$。现在我们测试拐点划分的三个区间，每个区间内的导数符号是一样的。当$x&lt;-1$时，$x+1,x-2$都是负的，所以他们的乘积为正，即$f’(x)&gt;0$。当$-1<x<2$时，$x+1$为正，$x-2$为负，所有他们的乘积为负，即$f'(x)<0$。当$x>2$时，$x+1,x-2$ 均为正，所有他们的乘积为正，即$f'(x)>0$。这些结果展示在图3 中，斜线给出了每个区间图像的示意方向。在图4中，我们画出点$(-1,19),(2,-8)$并利用图3 提供的导数符号信息画出通过这些点的平滑曲线，也就是，当$x&lt;-1$时，$f(x)$递增，当$-1<x<2$时，函数递减，当$x>2$时，函数递增。注意，在图4中两个轴我们用了不同的单位长度，这只是为了节省空间而已(我们这里只是为了可视化函数的大致趋势，所有没必要对数轴精确相等)。很明显，极大值在点$x=-1$ 处，极小值在$x=2$ 处，并且不存在最大或最小值。</x<2$时，函数递减，当$x></x<2$时，$x+1$为正，$x-2$为负，所有他们的乘积为负，即$f'(x)<0$。当$x></p>
<center>
<img src="/2020/07/06/Stroll-calculus-4-1-Increasing-and-Decreasing-Functions-Maxima-and-Minima/20160726231500133" alt="这里写图片描述" title>
图3
</center>

<p>函数零点在绘制图像时是非常有用，但是找到他们有不太容易。在图4中，近似为$-2.2,0.9,2.9$。事实上，有时候绘制图像可以帮助我们以任意的精度来估计零点的位置。后面我们会介绍一个标准的求解方法。</p>
<center>
<img src="/2020/07/06/Stroll-calculus-4-1-Increasing-and-Decreasing-Functions-Maxima-and-Minima/20160726231536672" alt="这里写图片描述" title>
图4
</center>

<p><strong>例2</strong>：有理函数</p>
<script type="math/tex; mode=display">

y=\frac{x}{x^2+1}</script><p>它的函数图像如图5。为了准确地找到最大值和最小值，我们先计算导数并让它等于0：</p>
<script type="math/tex; mode=display">

y'=\frac{(x^2+1)\cdot 1-x\cdot 2x}{(x^2+1)^2}=\frac{1-x^2}{(x^2+1)^2}=0</script><p>等式的根为$x=1,x=-1$，所以最大值和最小值分别位于$x=1,x=-1$处。最大值和最小值为$y=\frac{1}{2},y=-\frac{1}{2}$。再根据导数符号，$-1<x<1$时为正，$x<-1,x>1$时为负，基于这些事实，可以得出在区间$-1<x<1$ 上，函数递增，在$x<-1,x>1$ 上，函数递减。</x<1$></x<1$时为正，$x<-1,x></p>
<center>
<img src="/2020/07/06/Stroll-calculus-4-1-Increasing-and-Decreasing-Functions-Maxima-and-Minima/20160726231615813" alt="这里写图片描述" title>
图5
</center>

<p>这些例子给出了画函数$f(x)$图像的一般法则。</p>
<p>1、f(x)的驻点<br>2、f(x)驻点处的值<br>3、驻点之间}f’(x)的符号<br>4、f(x)零点<br>5、当$x\to \infty ,\quad x\to -\infty$时,f(x)的行为<br>6、函数 f(x)在未定义点附近的行为</p>
<p>然而，最重要法则是：不要做任何的法则的奴隶、要灵活、注意常识。匈牙利有句古老的谚语“所有固定的想法都是错的，包括这一句”</p>
<p><strong>注解1</strong>：极大值与极小值可以发生在下面三种情况里：端点、尖点和拐角点，这些在前面的讨论中没有涉及到。作为例子，我们考虑这三个函数</p>
<script type="math/tex; mode=display">

x=\sqrt{1-x^2},\quad y=x^{2/3},\quad y=1-\sqrt{x^2}=1-|x|.</script><p>他们的图像如图6。第一个函数在定义域为$-1\leq x\leq 1$，在端点处有极小值，但是导数不等于零。第二个函数在尖点$x=0$的位置有极小值，因为它的导数</p>
<script type="math/tex; mode=display">

y'=\frac{2}{3}x^{-1/3}=\frac{2}{3\sqrt[3]{x}}</script><p>在0的左边为负，右边为正。无限接近于0。第三个函数在$x=0$处有极大值，这个极大值是个拐角。在寻找函数的极大值和极小值时，让导数等于零是一方面，还需要时刻记得这三种可能性。</p>
<center>
<img src="/2020/07/06/Stroll-calculus-4-1-Increasing-and-Decreasing-Functions-Maxima-and-Minima/20160726231918417" alt="这里写图片描述" title>
图6
</center>

<p><strong>注解2</strong>：数学家们是专业的怀疑论者。他们的一个爱好就是训练自己去攻击松散的论点并只接受那些他们发现毫无疑问的命题，最终的确定性就是对他们努力最大的奖励。我们关于增减函数和极大极小值的命题仅仅有几何可行性的支持。命题本身是真的，要更仔细地研究他们涉及到一个研究领域，叫做分析。它是彻底研究微积分的基础。然而，这本书是面向学生的，不是数学家。我们最关心的是用<br>工具而不是工具本身。我们只是给除了一些初步讨论，对于严格证明感兴趣的同学可以搜索相关书籍和资料。(至于博主是否写出来……看心情)</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/52040635" target="_blank" rel="noopener">漫步微积分十四——增、减函数和极大、极小值</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分4.2 - 凹凸性和拐点</title>
    <url>/2020/07/06/Stroll-calculus-4-2-Concavity-and-Points-of-Inflection/</url>
    <content><![CDATA[<p>图像有个最显著的特征，就是它弯曲的朝向。图1的左边，曲线是凹的，右边是凸的。二阶导的符号可以向我们提供凹凸信息。</p>
<center>
<img src="/2020/07/06/Stroll-calculus-4-2-Concavity-and-Points-of-Inflection/20160810181120670" alt="这里写图片描述" title>
图1
</center>

<a id="more"></a>
<p>正的二阶导$f’’(x)&gt;0$说明$f’(x)$的斜率是$x$的增函数。这意味着切线从左到右逆时针转动，如图2左边。我们说曲线是凹的(凹面是空心的那一边)。除了切点外，曲线位于切线的上方。同样的，如果二阶导是负的$f’’(x)&lt;0$，那么$f’(x)$的斜率是减函数，切线从左到右顺时针转动，如图2右边。我们说曲线是凸的。除了切点以外，曲线位于切线的下方。</p>
<center>
<img src="/2020/07/06/Stroll-calculus-4-2-Concavity-and-Points-of-Inflection/20160810181241384" alt="这里写图片描述" title>
图2
</center>
大部分曲线在某些区间为凹的，在其他区间为凸的。像图2中的点P，通过它后凹凸性会改变，这样的点叫做拐点。如果$f''(x)$是连续的，且在点$P$两侧符号相反，那么P本身就是零点。找拐点主要就是求解等式$f''(x)=0$，检查每个根两边的凹凸性。

<strong>例1</strong>：考虑函数

$$

y=f(x)=2x^3-12x^2+18x-2

$$

的凹凸性，计算一阶导

$$

f'(x)=6x^2-24x+18=6(x-1)(x-3)

$$

二阶导

$$

f''(x)=12x-24=12(x-2).

$$

驻点($f'(x)=0$的根)是$x=1,x=3$，对应的值为$y=6,y=-2$。 可能的拐点是$x=2$，因为它是$f''(x)=0$的根。很明显$x<2$ 时函数为正，$x>2$时函数为负，所以图像在$x=2$左边为凸，右边为凹。所以的确存在一个拐点，如图3。

<center>
<img src="/2020/07/06/Stroll-calculus-4-2-Concavity-and-Points-of-Inflection/20160810181554107" alt="这里写图片描述" title>
图3
</center>

<p><strong>例2</strong>：有理函数</p>
<script type="math/tex; mode=display">

y=\frac{1}{x^2+1}</script><p>比较容易画出来，因为它关于$y$轴对称。在$x=0$处有最小值，因为此时分母最小，当$|x|\to \infty$时，$y\to 0$。 从直觉上它的图像如图4。很明存在两个拐点，接下来的问题是如果确定他们的位置。首先，计算一阶导</p>
<script type="math/tex; mode=display">

y'=\frac{-2x}{(x^2+1)^2}</script><p>二阶导</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
y''
&=&\frac{(x^2+1)^2\cdot (-2)+2x\cdot 2(x^2+1)\cdot 2x}{(x^2+1)^4}\\
&=&\frac{(x^2+1)\cdot (-2)+8x^2}{(x^2+1)^3}=\frac{2(3x^2-1)}{(x^2+1)^3}
\end{eqnarray*}</script><p>解等式$y’’=0$的$x=\pm1/\sqrt{3}$，拐点的位置。我们可以根据每部分凹凸性来证实最开始我们对它的大致印象。当$x^2&lt;\frac{1}{3}$时，$y’’<0$。当$x^2>\frac{1}{3}$时，$y’’&gt;0$。这些事实告诉我们$-1/\sqrt{3}&lt;x&lt;1/\sqrt{3}$时，图像时凸的，其余部分是凹的。</0$。当$x^2></p>
<center>
<img src="/2020/07/06/Stroll-calculus-4-2-Concavity-and-Points-of-Inflection/20160810181700124" alt="这里写图片描述" title>
图4
</center>

<p><strong>注解1</strong>：我们已经在例子中说明，知道了$f’’(x_0)=0$不能保证$x=x_0$是拐点。我们还必须知道图像在$x_0$两侧的凹凸情况。考虑一个最简单的函数$y=f(x)=x^4$(图5)。$f’(x)=4x^3,f’’(x)=12x^2$，所以$x=0$处$f’’(x)=0$。然而，$f’’(x)$在$x=0$点的两侧均是正的，因此这个点对应的是极小值，不是拐点。函数$y=x^5-5x^4$给出了一个更复杂的类似情况。</p>
<center>
<img src="/2020/07/06/Stroll-calculus-4-2-Concavity-and-Points-of-Inflection/20160810181743313" alt="这里写图片描述" title>
图5
</center>

<script type="math/tex; mode=display">

y'=5x^4-20x^3\quad y''=20x^3-60x^2=20x^2(x-3).</script><p>$y’’=0$的根是$x=0,x=3$。然而，$y’’$在$x=0$处没有改变符号，所有只有$x=3$是拐点。图像在该点左边是凸的，右边是凹的。</p>
<p><strong>注解2</strong>：我们很容易做出函数$y=x^{1/3}=\sqrt[3]{x}$的图像(图6)，明显在$x=0$处有拐点。我们也可以通过求二阶导验证它</p>
<script type="math/tex; mode=display">

y'=\frac{1}{3}x^{-2/3}</script><script type="math/tex; mode=display">

y''=-\frac{2}{9}x^{-5/3}=\frac{-2}{9\sqrt[3]{x^5}}</script><p>所以如果$x<0$，$y''$为正，$x>0$，$y’’$为负。然而，$y’’$在$x=0$处不存在。为了找到拐点，我们不仅要考虑$y’’=0$，还得考虑$y’’$不存在的情况。</0$，$y''$为正，$x></p>
<center>
<img src="/2020/07/06/Stroll-calculus-4-2-Concavity-and-Points-of-Inflection/20160810182426238" alt="这里写图片描述" title>
图6
</center>

<p><strong>注解3</strong>：有一个二阶导测试，也就是用二阶导来确定驻点是否为极大或极小值(非正式的用图7 来说明：如果$f’(x_0)=0$且$f’’(x_0)&lt;0$，那么它是极大值(左图)；如果$f’(x_0)=0$且$f’’(x_0)&gt;0$，那么它是极小值(右图))。有时候这个测试非常有用，但是经常被夸大了。之后我们会看到许多应用来确定极大极小值，没有哪种测试是万能的。</p>
<center>
<img src="/2020/07/06/Stroll-calculus-4-2-Concavity-and-Points-of-Inflection/20160810182506542" alt="这里写图片描述" title>
图7
</center>

<p><a href="https://blog.csdn.net/u010182633/article/details/52175051" target="_blank" rel="noopener">漫步微积分十五——凹凸性和拐点</a></p>
</2$>]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分4.3 - 最大最小值问题</title>
    <url>/2020/07/06/Stroll-calculus-4-3-Applied-Maximum-and-Minimum-Problems/</url>
    <content><![CDATA[<p>微积分最引人注目的应用就是寻找函数的最大或最小值或者需要用到最大和最小值。</p>
<p>日常生活充满了这样的问题，数学家和其他人觉得它们很有趣也非常重要。一个商人旨在使利润最大化和成本最小化。工程师设计的新汽车希望其效率最大化。航空公司飞行员希望减少飞行时间和燃料消耗。在科学中，我们经常发现自然以某种方式在最大化或最小化某一量。例如，一缕光线穿过透镜，总是沿着时间最短的那条路径。挂链最终的形状其重力势能最小。</p>
<a id="more"></a>
<p>每当我们使用<code>“最大</code>最小”<code>最多”</code>至少”“最好的”等等这类字眼时，它是一个合理的猜测，某些最大或最小问题只限于某个范围内。如果这个问题可以用变量和函数来表示(并非所有情况都是如此)，那么微积分的方法将帮助我们理解并解决它。</p>
<p>这里许多例子和问题都是用几何的想法来解决，因为最大和最小值在几何中表示特别生动。</p>
<p>我们与一个相当简单有关数的实例开始。</p>
<p><strong>例1</strong>：找出两个正数，他们的和为16，乘积尽可能大。</p>
<p><strong>解</strong>：如果$x,y$是两个变量，他们的和为16</p>
<script type="math/tex; mode=display">
\begin{equation}
x+y=16\tag1
\end{equation}</script><p>那么我们需要找的就是特定的$x,y$，并最大化他们的乘积</p>
<script type="math/tex; mode=display">
\begin{equation}
P=xy\tag2
\end{equation}</script><p>我们的难点在于$P$依赖于两个变量，而我们的求导只对单个自变量函数有效。等式(1)可以解决这个难点。我们可以用$x$ 来表示$y$，$y=16-x$，这样$P$就能只用$x$表示</p>
<script type="math/tex; mode=display">
\begin{equation}
P=x(16-x)=16x-x^2\tag3
\end{equation}</script><p>图1我们给出了(3)的大致图像。它的目的是对函数已知事实$x=0,16,P=0;0<x<16,p>0$给出可视化，最高点根据条件$dP/dx=0$得出，因为这个条件意味着切线是水平的。对(3)求导</x<16,p></p>
<script type="math/tex; mode=display">

\frac{dP}{dx}=16-2x</script><p>我们令导数等于零</p>
<script type="math/tex; mode=display">

\frac{d^2P}{dx^2}=-2</script><center>
<img src="/2020/07/06/Stroll-calculus-4-3-Applied-Maximum-and-Minimum-Problems/20160811152941225" alt="这里写图片描述" title>
图1
</center>
回忆一下，负的二阶导意味着曲线是凸的，因为存在最大值。在给定的限定条件下，如果让$P$尽可能小，那么将没有解，因为$x,y$必须是正数意味着$x$必须属于开区间$0<x<16$，从图像中可以看出这部分不存在最小点。 <strong>例2：一个矩形花园的面积为450$ft^2$，现在打算围上篱笆防止兔子进入。如果一边已经有一堵墙，那么哪种尺寸可以让篱笆的长度最短？
<center>
<img src="/2020/07/06/Stroll-calculus-4-3-Applied-Maximum-and-Minimum-Problems/20160811153033226" alt="这里写图片描述" title>
图2
</center>

<p><strong>解</strong>：我们先画一幅图(图2)，介绍一些符号，来方便我们处理问题。如果$L$表示篱笆的长度，我们需要最小化</p>
<script type="math/tex; mode=display">
\begin{equation}
L=2x+y\tag4
\end{equation}</script><p>限制条件为</p>
<script type="math/tex; mode=display">
\begin{equation}
xy=450\tag5
\end{equation}</script><p>利用(5)式，$L$可以单独用$x$表示</p>
<script type="math/tex; mode=display">
\begin{equation}
L=2x+\frac{450}{x}\tag6
\end{equation}</script><p>快速的画个草图(图3)帮助我们可视化函数并看出它的性质，尤其是它存在最小值，没有最大值(我们只对正的$x$感兴趣)。下一步就是对(6)求导</p>
<script type="math/tex; mode=display">

\frac{dL}{dx}=2-\frac{450}{x^2}</script><p>然后让它等于零</p>
<script type="math/tex; mode=display">

2-\frac{450}{x^2}=0,\quad x^2=225,\quad x=15.</script><center>
<img src="/2020/07/06/Stroll-calculus-4-3-Applied-Maximum-and-Minimum-Problems/20160811153151656" alt="这里写图片描述" title>
图3
</center>

<p>(我们忽略了根$x=-15$)带入(5)，对应的$y$值为$y=30$，所以最短的花园尺寸为$15,30$，或者长是宽的两倍。</p>
<p><strong>例3</strong>：找出使矩阵面积最大的尺寸，面积可以用半径为$a$的半圆来描述。</p>
<p><strong>解</strong>：我们选取圆$x^2+y^2=a^2$的上半部分(图4左)，那么我们需要最大化</p>
<script type="math/tex; mode=display">
\begin{equation}
A=2xy\tag7
\end{equation}</script><p>限制条件为</p>
<script type="math/tex; mode=display">
\begin{equation}
x^2+y^2=a^2\tag8
\end{equation}</script><p>由(8)可得$y=\sqrt{a^2-x^2}=(a^2-x^2)^{1/2}$，(7)就变为</p>
<script type="math/tex; mode=display">
\begin{equation}
A=2x(a^2-x^2)^{1/2}\tag9
\end{equation}</script><p><center>
<img src="/2020/07/06/Stroll-calculus-4-3-Applied-Maximum-and-Minimum-Problems/20160811153307354" alt="这里写图片描述" title>
图4
</center><br>很明显$x$位于区间$0&lt;x&lt;a$内。图4右中，我们考虑极端的情况：当$x$趋近0 时，矩形又高又窄，当$x$趋近$a$时，矩阵又矮又宽，这两种情况下面积都很小，所以在这之间的某个地方存在最大面积。为了找出最大面积，我们从(9)中计算$dA/dx$，令它等于零得：</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
&2x\cdot \frac{1}{2}(a^2-x^2)^{-1/2}\cdot (-2x)+2(a^2-x^2)^{1/2}=0,\quad \frac{x^2}{\sqrt{a^2-x^2}}=\sqrt{a^2-x^2}\\
&x^2=a^2-x^2,\quad 2x^2=a^2,\quad x=\frac{a}{\sqrt{2}}=\frac{1}{2}\sqrt{2}a.
\end{eqnarray*}</script><p>因为$y=\sqrt{a^2-x^2}$，对应的$y$值为$\frac{1}{2}\sqrt{2}a$，所以最大矩形的尺寸为$2x=\sqrt{2}a,y=\frac{1}{2}\sqrt{2}a$，这个矩形长是宽的两倍。</p>
<p>如果不考虑具体尺寸，只关心形状的话，还有一个更有效的方法。首先我们注意到(8) 式可以看做$x$ 的隐函数，所以对$x$进行隐式求导得</p>
<script type="math/tex; mode=display">
\begin{equation}
2x+2y\frac{dy}{dx}=0\quad or\quad \frac{dy}{dx}=-\frac{x}{y}\tag10
\end{equation}</script><p>下一步，(7)式求导并利用最大值时$dA/dx=0$得</p>
<script type="math/tex; mode=display">
\begin{equation}
2x\frac{dy}{dx}+2y=0\quad or \quad x\frac{dy}{dx}+y=0.\tag11
\end{equation}</script><p>将(10)代入(11)得</p>
<script type="math/tex; mode=display">

x\left(-\frac{x}{y}\right)+y=0,\quad -x^2+y^2=0,\quad y^2=x^2\quad or\quad y=x.</script><p>最后的等式给出了最大面积对应的矩形形状。我们也可以说矩阵的高度和宽度之比为</p>
<script type="math/tex; mode=display">

\frac{y}{2x}=\frac{x}{2x}=\frac{1}{2}</script><p><strong>例4</strong>：一根长为$L$的线被切成两部分，一个折成正方形，另一个折成圆。如果要使两部分围成的面积和最大或最小，应该如何切呢？</p>
<p><strong>解</strong>：用$x$表示正方形的边长，$r$表示圆的半径，如图5所示，那么面积和为</p>
<script type="math/tex; mode=display">
\begin{equation}
A=x^2+\pi r^2\tag12
\end{equation}</script><p>其中$x$和$r$的关系为</p>
<script type="math/tex; mode=display">
\begin{equation}
4x+2\pi r=L\tag13
\end{equation}</script><p><center>
<img src="/2020/07/06/Stroll-calculus-4-3-Applied-Maximum-and-Minimum-Problems/20160811153447892" alt="这里写图片描述" title>
图5
</center><br>根据(13)式，我们用$x$表示$r$</p>
<script type="math/tex; mode=display">

r=\frac{1}{2\pi}(L-4x)</script><p>利用此式可以得到只用$x$表示的$A$</p>
<script type="math/tex; mode=display">
\begin{align}
A
&=x^2+\pi\cdot \frac{1}{4\pi^2}(L-4x)^2\notag\\
&=x^2+\frac{1}{4\pi}(L-4x)^2
\end{align}</script><p>现在我们注意到，当$x=0$时，线都用来做圆，当$x=\frac{1}{4}L$时，都用来做正方形。为了解决问题，我们必须完全理解函数(14)在区间$0\leq x\leq \frac{1}{4}L$上的行为。在$x=0,x=\frac{1}{4}L$处的值为$L^2/4\pi,L^2/16$，第一个更大(因为$16&gt;4\pi$)。图5表示了出来。因为(14)表明，图像是开口向上($x^2$系数为正)的抛物线，接下来的工作就是求出最低点的位置。为此，我们对(14)求导</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{dA}{dx}
&=&2x+\frac{1}{4\pi}\cdot 2(L-4x)\cdot(-4)\\
&=&2x-\frac{2}{\pi}(L-4x)
\end{eqnarray*}</script><p>令等式为零得</p>
<script type="math/tex; mode=display">

x-\frac{1}{\pi}(L-4x)=0,\quad \pi x=L-4x,\quad x=\frac{L}{4+\pi}</script><p>最高点位于左边的端点处，因此要最大化$A$，必须选择$x=0$,也就说都用来围成一个圆。如果我们坚持两样都需要，那么不存在最大值；因为无论我们用于正方形的长度多么小，我们总能够让它更来使得面积更大。</p>
<p>如果是最小化的话，解为$x=L/(4+\pi)$。因此，正方形的长度为$4x=4L/(4+\pi)$，圆的周长为</p>
<script type="math/tex; mode=display">

L-4x=L-\frac{4L}{4+\pi}=\frac{\pi L}{4+\pi}</script><p>我们还注意到，当圆的周长等于正方形的边长时可以得到最小面积</p>
<script type="math/tex; mode=display">

2r=\frac{1}{\pi}(L-4x)=\frac{1}{\pi}\cdot\frac{\pi L}{4+\pi}=\frac{L}{4+\pi}</script><p><strong>例5</strong>：土豆削皮器以单价1.5美元(成本是70美分)出售，那么可以卖出500个。单价每降低一美分，销售量就增加25个。问单价为多少时总利润最高？</p>
<p><strong>解</strong>：$x$表示价格降低了多少美分，那么每个产品的利润为$80-x$，销售量为$500+25x$。总利润为</p>
<script type="math/tex; mode=display">

P=(80-x)(500+25x)=40000+1500x-25x^2</script><p>我们令它的导数等于零的</p>
<script type="math/tex; mode=display">

\frac{dP}{dx}=1500-50x,\quad 1500-50x=0\quad 50x=1500,\quad x=30</script><p>最有利的销售价格为1.2美元。</p>
<p>这些例子表明，用于求解最大最小问题的数学方法相当简单。最难的部分如何用简单的形式来建模。这是分析、思考的问题，与计算不一样。我们强调这一点是为了说明，在科学中将微积分作为一种工具的话，那它不太可能有太大的价值，除非学会如何理解问题以及将问题翻译成合适的数学语言。</p>
<p>对于待解决的问题规则并不见得都有效，因为还需要想象力和智力，这是没法教的。然而，以下的一般性建议可能会有帮助。他们并不能保证成功，但没有他们就不太可能有所进展。</p>
<p><strong>求最大最小值的策略</strong></p>
<p><strong>1理解问题</strong>$\quad$ 开始先认真的读问题，如果需要可以多读几遍，直到完全理解。然而现实却比较让人难过，那多学生在对问题还不清晰的情况下就看是考虑如何解决。所以花些时间理解问题，让你的努力不至于白费。</p>
<p><strong>2如果涉及几何，那就认真画出图像</strong>$\quad$ 例如，如果一个问题是关于一般三角形的，那就不要画直角或等腰三角形误导自己。要认真画图，图像将是得到有效想法的来源，因此要认真对待。</p>
<p><strong>3认真标注图像</strong>$\quad$ 确定你理解哪些量是不变的，哪些是变化的。如果方便的话，最好用首字母来表示变量，例如用$A$表示面积(area)，用$V$表示体积(volume)，用$h$表示高度(height)。知道图像中量之间的关系，尤其是涉及到直角和相似三角形。写下他们的等式，提前做好准备。</p>
<p><strong>4</strong>如果$Q$是最大或最小化的量，用图像中的量进行表示，尝试用步骤3中的关系得到一个量表示的$Q$。在合适的区间内快速画出函数的大致图像，可以在图像上观察一些极端情况并用求导发现具体细节从而得到问题的解。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/52183229" target="_blank" rel="noopener">漫步微积分十六——最大最小值问题</a></p>
</x<16$，从图像中可以看出这部分不存在最小点。>]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分4.4 - 最大最小值问题（续）</title>
    <url>/2020/07/06/Stroll-calculus-4-4-More-Maximum-Minimum-Problems-Reflection-and-Refraction/</url>
    <content><![CDATA[<p>我们用其他的例子继续讨论上一篇文章的基本方法。</p>
<p><strong>例1</strong>：圆柱形汤罐头的制造商接了一笔大订单，订单要求罐头的体积为$V_0$。哪种尺寸可以最小化罐头的表面积，也就是所需的金属最少？</p>
<p><strong>解</strong>：$r,h$分别表示圆柱底的半径和高(图1，左)，那么体积为</p>
<script type="math/tex; mode=display">
\begin{equation}
V_0=\pi r^2h\tag1
\end{equation}</script><p>总的表面积为</p>
<script type="math/tex; mode=display">
\begin{equation}
A=2\pi r^2+2\pi rh\tag2
\end{equation}</script><a id="more"></a>
<p>我们必须最小化$A$，它是两个变量的函数，利用等式(1)得到$h=V_0/\pi r^2$，代入$A$得</p>
<script type="math/tex; mode=display">
\begin{align}
A
&=2\pi r^2+2\pi r\cdot \frac{V_0}{\pi r^2}\\
&=2\pi r^2+\frac{2V_0}{r}\tag3
\end{align}</script><center>
<img src="/2020/07/06/Stroll-calculus-4-4-More-Maximum-Minimum-Problems-Reflection-and-Refraction/20160812150602933" alt="这里写图片描述" title>
图1
</center>

<p>函数图像(图1，右)表明，$r$小或大时，$A$都大，那么在中间的某个位置存在最小值。跟之前一样，为了找到最小值的精确位置，我们对(3)求导，并让它等于零得</p>
<script type="math/tex; mode=display">

\frac{dA}{dr}=4\pi r-\frac{2V_0}{r^2},\quad 4\pi r-\frac{2V_0}{r^2}=0,\quad 4\pi r^3=2V_0,</script><script type="math/tex; mode=display">
\begin{equation}
2\pi r^3=V_0\tag4
\end{equation}</script><p>如果需要更多参数的解，可以根据等式(4)解出$r$，然后用它来计算$h$</p>
<script type="math/tex; mode=display">

r=\sqrt[3]{\frac{V_0}{2\pi}},\quad h=\frac{V_0}{\pi r^2}=\frac{V_0}{\pi}\left(\frac{2\pi}{V_0}\right)^{2/3}=2\sqrt[3]{\frac{V_0}{2\pi}}</script><p>从中我们可以看到$h=2r$。如果主要对形状感兴趣，那么将$V_0=\pi r^2h$代入(4)得</p>
<script type="math/tex; mode=display">

2\pi r^3=\pi r^2h\quad or\quad 2r=h.</script><p>从降低原材料的角度考虑(最制造商非常重要)，这个结果告诉我们圆柱形罐头最好的形状是高等于底的直径。</p>
<p><strong>例2</strong>：找出使圆柱体体积最大时的高与直径比。圆柱可以内接于半径为$R$的球内。</p>
<p><strong>解</strong>：画一个外接球，如图2左，那么我们看到</p>
<script type="math/tex; mode=display">
\begin{equation}
V=2\pi x^2y\tag5
\end{equation}</script><p>其中</p>
<script type="math/tex; mode=display">
\begin{equation}
x^2+y^2=R^2\tag6
\end{equation}</script><p><center>
<img src="/2020/07/06/Stroll-calculus-4-4-More-Maximum-Minimum-Problems-Reflection-and-Refraction/20160812154601035" alt="这里写图片描述" title>
图2
</center><br>可视化极端的情况(图2，右)，当$x$趋近$0,R$时，$V$都很小，所以在极端情况之间存在最大体积的尺寸。为了找到它，将(6)代入(5)的</p>
<script type="math/tex; mode=display">

V=2\pi y(R^2-y^2)=2\pi(R^2y-y^3)</script><p>求导得</p>
<script type="math/tex; mode=display">

\frac{dV}{dy}=2\pi(R^2-3y^2)</script><p>令其等于零得出$y$，然后利用(6)得出$x$</p>
<script type="math/tex; mode=display">

y=\frac{R}{\sqrt{3}}\qquad x=\sqrt{R^2-\frac{1}{3}R^2}=\frac{\sqrt{2}}{\sqrt{3}}R</script><p>最大圆柱的高与直径比为</p>
<script type="math/tex; mode=display">

\frac{2y}{2x}=\frac{y}{x}=\frac{1}{\sqrt{2}}=frac{1}{2}\sqrt{2}\cong 0.707</script><p>这个结果利用隐函数求导会效率更高。$x$作为独立变量，$y$ 作为函数的因变量，那么根据(6)得到</p>
<script type="math/tex; mode=display">

2x+2y\frac{dy}{dx}=0\quad or\quad\frac{dy}{dx}=-\frac{x}{y}</script><p>根据(5)可得</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\frac{dV}{dx}
&=&2\pi\left(x^2\frac{dy}{dx}+2xy\right)=2\pi\left[x^2\left(-\frac{x}{y}\right)+2xy\right]\\
&=&2\pi\left(\frac{-x^3+2xy^2}{y}\right)=\frac{2\pi x}{y}(2y^2-x^2)
\end{eqnarray*}</script><p>令上式等于零得到</p>
<script type="math/tex; mode=display">

2y^2=x^2\quad or\quad \frac{y}{x}=\frac{1}{\sqrt{2}}=\frac{1}{2}\sqrt{2}</script><p><strong>例3</strong>：一束光从点$A$入射到平面镜上的一点$P$，反射到达点$B$，如图3，准确测量得出入射光线和出射光线与镜子的夹角相当$\alpha=\beta$。假设光线从$A$经过镜子的反射到$B$的路径是最短的，证明当$\alpha=\beta$时，路径就是最短的。</p>
<p><center>
<img src="/2020/07/06/Stroll-calculus-4-4-More-Maximum-Minimum-Problems-Reflection-and-Refraction/20160812154624486" alt="这里写图片描述" title>
图3
</center><br><strong>解</strong>：将点$P$看做镜面上可变化的点，每个位置用$x$ 表示，那么我们希望路径$L$可以表示成$x$的函数。从图中可以明显得出</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
L
&=&\sqrt{a^2+x^2}+\sqrt{b^2+(c-x)^2}\\
&=&(a^2+x^2)^{1/2}+[b^2+(c-x)^2]^{1/2}
\end{eqnarray*}</script><p>求导得</p>
<script type="math/tex; mode=display">
\begin{align}
\frac{dL}{dx}
&=\frac{1}{2}(a^2+x^2)^{-1/2}\cdot(2x)+\frac{1}{2}[b^2+(c-x)^2]^{-1/2}\cdot2(c-x)\cdot(-1)\\
&=\frac{x}{\sqrt{a^2+x^2}}-\frac{c-x}{\sqrt{b^2+(c-x)^2}}\tag7
\end{align}</script><p>为了最小化$L$，令上式等于零得</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{x}{\sqrt{a^2+x^2}}=\frac{c-x}{\sqrt{b^2+(c-x)^2}}\tag8
\end{equation}</script><p>变换一下等式的形式</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
&\frac{\sqrt{a^2+x^2}}{x}=\frac{\sqrt{b^2+(c-x)^2}}{c-x},\quad \sqrt{\left(\frac{a}{x}\right)^2+1}=\sqrt{\left(\frac{b}{c-x}\right)^2+1}\\
&\frac{a}{x}=\frac{b}{c-x}
\end{eqnarray*}</script><p>最后的等式可以轻松的解出$x$。然而，没必要这么做，因为最后比值的形式已经告诉了我们想要的：对于两个直角三角形中的角$\alpha,\beta$，对边比邻边相等，所以两角相等。</p>
<p>直观上看，很明显，我们可以最小化$L$。如果想用二阶导来证实，利用(7)式计算二阶导</p>
<script type="math/tex; mode=display">

\frac{d^2L}{dx^2}=\frac{a^2}{(a^2+x^2)^{3/2}}+\frac{b^2}{[b^2+(c-x)^2]^{3/2}}</script><p>(我们跳过了具体计算细节)，注意到这个值是正的。</p>
<p><strong>注解1</strong>：回顾一下一个锐角$A$余弦的定义。如果我们将$A$看作直角三角形(图4)锐角中的一个，那么根据定理</p>
<script type="math/tex; mode=display">

\cos A=\frac{b}{c}=\frac{adjacent\ side}{hypotenuse}</script><p>利用此定义，最小化(8)可以重新写为</p>
<script type="math/tex; mode=display">

\cos \alpha=\cos\beta</script><p>所以$\alpha=\beta$。在回顾一下正弦的定义</p>
<script type="math/tex; mode=display">

\sin A=\frac{a}{c}=\frac{opposite\ side}{hypotenuse}</script><p><center>
<img src="/2020/07/06/Stroll-calculus-4-4-More-Maximum-Minimum-Problems-Reflection-and-Refraction/20160812154708802" alt="这里写图片描述" title>
图4}
</center><br><strong>注解2</strong>：例3讨论的反射定律在古希腊时期就存在了。然而，反射光线遵从最短路径这个事实却是很晚之后才被发现，发现者是公元一世纪亚历山大时期的$Heron$，他的几何证明简单而巧妙。论述如下：$A,B$两点的位置跟之前一样(如图5)，$B’$是$B$的镜像，这样的话镜面就是$BB’$的垂直平分线。$AB’$与镜面交于点$P$，也就是光线入射的位置，因为$\alpha=\gamma,\gamma=\beta$，所以$\alpha=\beta$。路径的长度为$AP+PB=AP+PB’=AB’$。对于镜面上的其他位置$P’$，总长度为$AP’+P’B=AP’+P’B’$，它比$AB’$大，因为三角形任意两边之和大于第三边。这说明光的反射路径是最短的。</p>
<p><center>
<img src="/2020/07/06/Stroll-calculus-4-4-More-Maximum-Minimum-Problems-Reflection-and-Refraction/20160812154734177" alt="这里写图片描述" title>
图5
</center><br><strong>例4</strong>：前面讨论的反射光线都是以恒定的速度在单一介质中传播。然而，在不同的介质(水，空气，玻璃)中，光的传播速度不一样。如果光线是从空气进入到水中，如图6，它朝与水面垂直的方向折射(弯曲)。路径$APB$明显不是最短路径。那么它由什么定律确定呢？在1621 年，荷兰科学家$Snell$发现光线的路径满足</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{\sin \alpha}{\sin\beta}=a\ constant\tag9
\end{equation}</script><p>常数与$A,B$的位置无关。这个事实叫做$Snell$折射定律。可以通过最小化光线的传播时间来证明它。</p>
<p><center>
<img src="/2020/07/06/Stroll-calculus-4-4-More-Maximum-Minimum-Problems-Reflection-and-Refraction/20160812154817787" alt="这里写图片描述" title>
图6
</center><br><strong>解</strong>：如果空气中光的速度为$v_a$，水中速度为$v_w$，那么总时间$T$为</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
T
&=&\frac{\sqrt{a^2+x^2}}{v_a}+\frac{\sqrt{b^2+(c-x)^2}}{v_w}\\
&=&\frac{1}{v_a}(a^2+x^2)^{1/2}+\frac{1}{v_w}[b^2+(c-x)^2]^{1/2}
\end{eqnarray*}</script><p>如果计算这个函数的导数，那么</p>
<script type="math/tex; mode=display">
\begin{align}
\frac{dT}{dx}
&=\frac{1}{v_a}\frac{x}{\sqrt{a^2+x^2}}-\frac{1}{v_w}\frac{c-x}{\sqrt{b^2+(c-x)^2}}\\
&=\frac{\sin \alpha}{v_a}-\frac{\sin \beta}{v_w}\tag10
\end{align}</script><p>现在最小化$T$，结果为</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{\sin \alpha}{v_a}=\frac{\sin \beta}{v_w}\quad or\quad \frac{\sin \alpha}{\sin \beta}=\frac{v_a}{v_w}\tag11
\end{equation}</script><p>这是$Snell$定律的显示表达，因为它告诉我们等式(9)右边常数的物理含义：光在空气中的速度与水中速度之比。这个常数叫做折射率。如果水用其他介质代替，例如酒精、甘油或玻璃，那么会得到不同的数值。</p>
<p>在例3中，我们可以计算二阶导为正值来证实(11)存在最小值$T$：</p>
<script type="math/tex; mode=display">

\frac{d^2T}{dx^2}=\frac{1}{v_a}\frac{a^2}{(x^2+x^2)^{3/2}}+\frac{1}{v_w}\frac{b^2}{[b^2+(c-x)^2]^{3/2}}>0</script><p>但是有必要提一下另一种方法。首先观察可得(10)式给出的$dT/dx$有两项。当$x$从$0$增加到$c$时，第一项($\sin\alpha/v_a$)从$0$增加到某个正值。第二项($\sin\beta/v_w$)从某个正值减小到$0$。这表明$dT/dx$在$x=0$处为负值，增加到$x=c$的一个正值。所以$T$的最小值只存在一个，精确的值可由(11)得到。</p>
<p><strong>注解3</strong>：例4的想法是费马在1657年发现的，为此光在光学系统中总是沿最短时间路径传播这个命题叫做费马最短时间原则。(应该注意到，当光在同一均匀介质中传播时，最短路径等价于最短时间)在他之后的两个世纪，费马的想法催生出了许多理论，最大最小原理，欧拉微积分变分法的创立，哈密尔顿的最小行动原则，它是物理学中最统一($deepest\ unifying$)的原则之一。欧拉有句令人难忘的话：</p>
<p><strong><em>Since the fabric of the world is the most perfect and was established by the wisest Creator,nothing happens in this world in which some reason of maximum or minimum would not come to light.</em></strong></p>
<p><strong>注解4</strong>：$Snell$的正弦定律(9)由笛卡尔在1637年发表(其中没有提及$Snell$)，他本意是想用等式</p>
<script type="math/tex; mode=display">

\frac{\sin\alpha}{\sin\beta}=\frac{v_w}{v_a}</script><p>证明它。笛卡尔将他的论点建立在奇特的模型上，根据他的观点，光在高密度的介质中传播速度更快。费马拒绝他的观点(违背常识)。多年来笛卡尔只得被动接受费马的看法但是一直持怀疑态度，直到1657年他证明他的结论是对的，并且伴随着创造出了微积分方法。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/52192781" target="_blank" rel="noopener">漫步微积分十七——最大最小值问题（续）</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分4.5 - 变化率问题</title>
    <url>/2020/07/06/Stroll-calculus-4-5-Related-Rates/</url>
    <content><![CDATA[<p>向一个水箱注水，那么水平面将上升。为了描述水平面上升的快慢，我们用水平面变化率或者等价的，深度的变化率。如果水深用$h$表示，$t$表示时间，那么导数$dh/dt$就是深度的变化率。更进一步，水箱中水的体积$V$也在变化，$dV/dt$是体积的变化率。</p>
<p>同样地，任何随时间变化的几何或物理量$Q$是时间函数，即$Q=Q(t)$，它的导数$dQ/dt$是变化率。我们现在考虑的问题基于以下事实：如果两个变化量互相相关，那么他们的变化率也相关。</p>
<a id="more"></a>
<p><strong>例1</strong>：往球形气球中以恒定的速度$8\ ft^3/min$注入气体。(a)当$r=2\ ft$时，球半径$r$增加的速度；(b)当$r=4\ ft$时，求半径$r$增加的速度。</p>
<p><strong>解</strong>：球的体积(图1)公式 如下</p>
<script type="math/tex; mode=display">
\begin{equation}
V=\frac{4}{3}\pi r^3\tag1
\end{equation}</script><p><center>
<img src="/2020/07/06/Stroll-calculus-4-5-Related-Rates/20160813143939608" alt="这里写图片描述" title>
图1
</center><br>根据问题的陈述我们知道$dV/dt=8$，我们需要两个特定$r$ 值对应的$dr/dt$。我们需要理解问题的背景，即$V,r$ 都是因变量，$t$是潜在的自变量。有了这个想法，很自然想到(1)两边对$t$求导可得到$V,r$的变化率</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{dV}{dt}=\frac{4}{3}\pi\cdot 3r^2\frac{dr}{dt}=4\pi r^2\frac{dr}{dt}\tag2
\end{equation}</script><p>其中用到了链式法则。根据$dV/dt=8$，对(2)变形得</p>
<script type="math/tex; mode=display">

\frac{dr}{dt}=\frac{1}{4\pi r^2}\frac{dV}{dt}=\frac{2}{\pi r^2}</script><p>所以对于情况(a)</p>
<script type="math/tex; mode=display">

\frac{dr}{dt}=\frac{1}{2\pi}\cong 0.16\ ft/min</script><p>对于情况(b)</p>
<script type="math/tex; mode=display">

\frac{dr}{dt}=\frac{1}{8\pi}\cong 0.04\ ft/min</script><p>这些结果证实了我们的常识。因为球的体积以恒定的速度增加，随着体积的增大，半径增加的会越来越慢。</p>
<p><strong>例2</strong>：一个$13\ ft$长的梯子斜靠着墙。梯子的底端以恒定的速度$6\ ft/min$远离墙面。问：当梯子的底部离墙$5\ ft$时，顶部向下移动有多快？</p>
<p><strong>解</strong>：第一步是画出图像并标出相关量，注意用字母来表示变化的量(图2)。通过图就能看出哪些是已知的，哪些是未知的：</p>
<script type="math/tex; mode=display">

\frac{dx}{dt}=6,\quad -\frac{dy}{dt}=? when\ x=5</script><p><center>
<img src="/2020/07/06/Stroll-calculus-4-5-Related-Rates/20160813144019152" alt="这里写图片描述" title>
图2
</center>这里的负号我们可以这么理解，$dy/dt$表示$y$增加的速率，$-dy/dt$表示$y$减小的速率。粗略地讲，我们知道了一个关于时间的导数，现在想知道另一个。因此我们需要找到连接$x,y$的等式，通过对$t$求导得到连接他们变化率的等式。从图中可以清楚的看到可以应用毕达哥拉斯定理</p>
<script type="math/tex; mode=display">
\begin{equation}
x^2+y^2=169\tag3
\end{equation}</script><p>两边分别对$t$求导得</p>
<script type="math/tex; mode=display">

2x\frac{dx}{dt}+2y\frac{dy}{dt}=0\quad or\quad \frac{dy}{dt}=-\frac{x}{y}\frac{dx}{dy}\quad or\quad -\frac{dy}{dt}=\frac{x}{y}\frac{dx}{dt}</script><p>因为$dx/dt=6$，所以</p>
<script type="math/tex; mode=display">
\begin{equation}
-\frac{dy}{dt}=\frac{6x}{y}\tag4
\end{equation}</script><p>利用等式(3)，当$x=5$时，$y=12$，代入(4)得到我们的结果</p>
<script type="math/tex; mode=display">

-\frac{dy}{dx}=\frac{6\cdot 5}{12}=2\frac{1}{2}\ ft/min</script><p>警告：不要过早的使用$x=5,y=12$。问题的本质是$x,y$为变量；如果早早地使用具体值，如图3，那么我们不可能理解或解决问题。</p>
<p><center>
<img src="/2020/07/06/Stroll-calculus-4-5-Related-Rates/20160813144055105" alt="这里写图片描述" title>
图3
</center><strong>例3</strong>：一个锥形的水箱高为$12\ ft$，最高处的直径为$12\ ft$。水以$4\ ft^3/min$的速度注入水箱中。问：(a)当水深为$2\ ft$时，水面上升的速率是多少；(b)当水深为$8\ ft$时，速率又是多少。</p>
<p><strong>解</strong>：跟之前一样，我们画出图像并标注已知和未知量(图4)。下一步是使用这些符号描述已知条件和我们要找的量：</p>
<script type="math/tex; mode=display">

\frac{dV}{dt}=4,\quad \frac{dx}{dt}=?\ when\ x=2\ and x=8</script><p>水箱中变化的体积$V$是锥形，所以利用锥形体积公式</p>
<script type="math/tex; mode=display">
\begin{equation}
V=\frac{1}{3}\pi y^2x\tag5
\end{equation}</script><p>我们关注的变量是$V,x$，所以我们希望消去$y$。观察图4，利用相似三角形的性质得</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{y}{x}=\frac{6}{12}=\frac{1}{2}\quad or\quad y=\frac{1}{2}x\tag6
\end{equation}</script><p>将它代入(5)得</p>
<script type="math/tex; mode=display">
\begin{equation}
V=\frac{\pi}{12}x^3\tag7
\end{equation}</script><p>现在(7)两边分别对$t$求导得</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{dV}{dt}=\frac{\pi}{4}x^2\frac{dx}{dt}\tag8
\end{equation}</script><p>或者因为$dV/dt=4$</p>
<script type="math/tex; mode=display">

\frac{dx}{dt}=\frac{4}{\pi x^2}\frac{dV}{dt}=\frac{16}{\pi x^2}</script><p>这个式子告诉我们，当$x=2$时</p>
<script type="math/tex; mode=display">

\frac{dx}{dt}=\frac{4}{\pi}\cong 1.27\ ft/min</script><p>当$x=8$时</p>
<script type="math/tex; mode=display">

\frac{dx}{dt}=\frac{1}{4\pi}\cong 0.08\ ft/min</script><p>至此问题解决。</p>
<p><center>
<img src="/2020/07/06/Stroll-calculus-4-5-Related-Rates/20160813143821060" alt="这里写图片描述" title>
图4
</center>下面总结一下这些例题产生的方法：<br><strong>求解有关速率问题的策略</strong></p>
<ol>
<li>认真读问题，如果有必要就多读几遍，直到完全理解题意。</li>
<li>根据题意认真作图。将已知的常数量标注出来，对变量用字母进行标注。</li>
<li>以导数的形式写出已知的变化率和要求的变化率。</li>
<li>找出第3步里连接两个变量的等式，如果需要的话可以使用几何知识来消去多余的变量。利用链式法则，等式两边分别对$t$求导。</li>
<li>将第3步已知的变化率代入到第4步求得的微分等式中，解得所求的变化率。</li>
</ol>
<p><a href="https://blog.csdn.net/u010182633/article/details/52199305" target="_blank" rel="noopener">漫步微积分十八——变化率问题</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分4.6 - 牛顿法解方程</title>
    <url>/2020/07/06/Stroll-calculus-4-6-Newton-s-Method-for-Solving-Equations/</url>
    <content><![CDATA[<p>考虑三次方程</p>
<script type="math/tex; mode=display">
\begin{equation}
x^3-3x-5=0\tag1
\end{equation}</script><p>用正确的方法可能解决这个等式，也就是说，类似于二次公式</p>
<a id="more"></a>
<script type="math/tex; mode=display">

x=\frac{-b\pm\sqrt{b^2-4ac}}{2a}</script><p>是二次方程$ax^2+bx+c=0$的精确解那样，存在一个公式也用基的形式来表示三次方程的解。然而，如果我们想要(1)的数值解，也就是精确几位数，那么更方便的是找找出近似解而不是精确解。更进一步，即便对于2,3,4次的等式有类似于二次公式那样的解，但对于5次或更高次不可能存在这种形式的解。因此，为了求解类似于$x^5-3x^2+9x-11=0$这样的5次方程，我们只能使用近似的方法，因为目前没有其他方法。</p>
<p>回到等式(1)，如果用$f(x)$表示$x^3-3x-5$，那么我们可以很容易计算出下面的值：</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
f(-2)=-7,\quad f(-1)=-3,\quad f(0)=-5\\
f(1)=-7,\quad f(2)=-3,\quad f(3)=13.
\end{eqnarray*}</script><p>$f(2)=-3,f(3)=13$表明当$x$从$x=2$到$x=3$之间连续变化时，$f(x)$在-3到13之间连续变化，因此存在$x$值，使得$f(x)=0$。从直觉上感觉很明显，但是给出一个严格的证明确很困难。在这里我们不去证明，而是直接用结论。如果连续函数$f(x)$的两个值$f(a),f(b)$符号相反，那么至少在$a,b$之间至少存在一个值使得$f(x)=0$。这说明(2)式在$x=2,x=3$之间至少存在一个根，我们可以在这之间任取一个作为近似值。$x=2$似乎好一点，因为-3比13更靠近0。</p>
<p>一般来说，假设等式$f(x)=0$有一个近似值$x=x_1$。这个根就是曲线$y=f(x)$通过$x$轴的点，如图1；牛顿方法就是将$x=x_1$点处的切线作为基础来获得更好的近似解$x_2$。从近似解$x=x_1$开始，我们画出点$(x_1,f(x_1))$处的切线。这条线与$x$轴交于点$x=x_2$，从图中看它似乎更好。重复这个过程，用$(x_2,f(x_2))$处的切线得到点$x=x_3$，比$x_2$还好。图1从几何过程解释了这个步骤，但是为了用于计算，我们需要具体的公式。推导如下。</p>
<p>第一条切线的斜率为$f’(x_1)$。考虑由点$(x_2,0),(x_1,f(x_1)$确定的直线，其斜率也是</p>
<script type="math/tex; mode=display">

\frac{0-f(x_1)}{x_2-x_1},\quad so\quad \frac{0-f(x_1)}{x_2-x_1}=f'(x_1)</script><p>根据等式可得</p>
<script type="math/tex; mode=display">

-f(x_1)=(x_2-x_1)f'(x_1)\quad or \quad x_2-x_1=-\frac{f(x_1)}{f'(x_1)}</script><p>所以</p>
<script type="math/tex; mode=display">
\begin{equation}
x_2=x_1-\frac{f(x_1)}{f'(x_1)}\tag2
\end{equation}</script><p>由此有了第一个近似值$x_1$，那么根据(2)可以得到第二个近似值；再由第二个可以得到第三个</p>
<script type="math/tex; mode=display">

x_3=x_2-\frac{f(x_2)}{f'(x_2)}</script><p>如此进行下去直到无定义为止。</p>
<center>
<img src="/2020/07/06/Stroll-calculus-4-6-Newton-s-Method-for-Solving-Equations/20160814123534358" alt="这里写图片描述" title>
图1
</center>
<strong>例1</strong>：应用此方法到公式(1)得

$$
\begin{eqnarray*}
&f(x)=x^3-3x-5,\quad f'(x)=3x^2-3,\quad x_1=2\\
&f(x_1)=-3,\quad f'(x_1)=9,\quad x_2=x_1-\frac{f(x_1)}{f'(x_1)}=2-\frac{-3}{9}=2\frac{1}{3}
\end{eqnarray*}
$$
将$x_2$表示成小数形式$x_2=2.333333$，精确六位数，继续计算得

$$

x_3=x_2-\frac{f(x_2)}{f'(x_2)}=2.333333-\frac{0.703699}{13.333329}=2.280556

$$
四舍五入到了第六位小数。因为计算负担都给了计算器，计算器计算很方便，所以我们继续进行下去。当连续的两个近似值第一次出现相等时，我们认为得到了精确解。因此，对于等式(1)，两次计算后得到$x_3=2.280556$。就像重复计算得

$$
\begin{eqnarray*}
&x_4=2.279020\\
&x_5=2.279019\\
&x_6=2.279019
\end{eqnarray*}
$$
由此我们得出结论$x=2.279019$是等式(1)精确六位小数的解。

牛顿法对于像(1)那样多项式的解没有限制条件，也可以用于任何可导函数。

<strong>例2</strong>：考虑等式

$$
\begin{equation}
x=\cos x\tag3
\end{equation}
$$
右边的$x$单位是弧度。最好先在同一坐标内画出$y=x,y=\cos x$ 两个函数的图像，如图2。从图中很容易看出他们交点只有一个，点的$x$坐标就是(3)的解，因为交点处$y$值是相等的。通过图像，先给出一个近似解：

$$

x_1=0.7

$$
<center>
<img src="/2020/07/06/Stroll-calculus-4-6-Newton-s-Method-for-Solving-Equations/20160814123630734" alt="这里写图片描述" title>
图2
</center>
为了使用牛顿法，我们将(3)式改为

$$

x-\cos x=0

$$
令$f(x)=x-\cos x$，则$f'(x)=1+\sin x$。现在，将计算器设置为弧度模式，得

$$
\begin{eqnarray*}
x_2=x_1-\frac{f(x_1)}{f'(x_1)}=0.739436\\
x_3=x_2-\frac{f(x_2)}{f'(x_2)}=0.739085\\
x_4=x_3-\frac{f(x_3)}{f'(x_3)}=0.739085
\end{eqnarray*}
$$
精确六位小数得到的解为$x=0.739085$

<strong>注解</strong>：在某些情况下，牛顿法产生的近似结果可能无法收敛到希望的解。例如，图3所示的函数$x_1$推到$x_2$，$x_2$推回到$x_1$，所以重复此过程不会求解到$r$。对于保证牛顿法可行的条件的数学理论可以参考数值分析的书籍。
<center>
<img src="/2020/07/06/Stroll-calculus-4-6-Newton-s-Method-for-Solving-Equations/20160814123713266" alt="这里写图片描述" title>
图3
</center>

<p><a href="https://blog.csdn.net/u010182633/article/details/52203967" target="_blank" rel="noopener">漫步微积分十九——牛顿法解方程</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分5.2 - 微分和切线逼近</title>
    <url>/2020/07/07/Stroll-calculus-5-2-Differentials-and-Tangent-Line-Approximations/</url>
    <content><![CDATA[<p>前面的文章主要关注切线问题，即给定一条曲线，找出它切线的斜率；或者等价地，给定一个函数，求它的导数。</p>
<p>除了全面研究导数外，牛顿和莱布尼兹还发现，几何和物理中许多问题需要求导的逆过程。有时叫做切线问题的逆问题：给定函数的导数，找出函数本身。</p>
<p>之后的文章，我们会用到许多之前学到的求导规则。但是，这些规则都反过来用，由此产生了多项式积分。这些过程虽然简单，但是有许多非凡的应用，之后的文章会详细进行讨论。</p>
<a id="more"></a>
<p>我们知道，函数$y=f(x)$的导数$f’(x)$的定义为</p>
<script type="math/tex; mode=display">
\begin{equation}
f'(x)=\lim_{\Delta x\to 0}\frac{\Delta y}{\Delta x}\tag1
\end{equation}</script><p>需要理解的是这里的$\Delta x$是自变量$x$的非零变化量，$\Delta y=f(x+\Delta x)-f(x)$是对应$y$的变化量。之前也介绍过与它等价的符号</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{dy}{dx}\tag2
\end{equation}</script><p>我们强调过(2)是一个单独的符号，不是分数。然而(2)看起来的确像一个分数，在某些情况下甚至可以像分数那样用。最重要的一个例子就是链式法则</p>
<script type="math/tex; mode=display">

\frac{dy}{du}\frac{du}{dx}=\frac{dy}\frac{dx}=\frac{dy}{dx}</script><p>复合函数导数的正确形式通过消去过程得到，导数就像分数一样。</p>
<p>现在我们要给出(2)式各个部分的含义，即$dy,dx$，这么看得话，他们的商就是微分$f’(x)$。我们这么做的原因目前比较难解释。但是这些符号对于将要介绍的计算方法(积分中的换元法，求解微分方程的分离变量法)都是非常必要的先修知识。</p>
<p>考虑一个例子，$y$是$x$的线性函数</p>
<script type="math/tex; mode=display">
\begin{equation}
y=mx+b\tag3
\end{equation}</script><p>$P=(x,y)$是这条直线上的点(图1)。如果$x$的增量为$\Delta x$， $y$ 对应的增量为$\Delta y$，那么(3)的斜率是</p>
<script type="math/tex; mode=display">

m=\frac{change\ in\ y}{change\ in\ x}=\frac{\Delta y}{\Delta x}</script><p>所以</p>
<script type="math/tex; mode=display">
\begin{equation}
\Delta y=m\Delta x\tag4
\end{equation}</script><p>我们用符号$dx,dy$分别表示这些增量，那么根据定义</p>
<script type="math/tex; mode=display">

dx=\Delta x\quad and\quad dy\Delta y</script><p>我们称他们为微分。利用这些符号，(4)式变为</p>
<script type="math/tex; mode=display">
\begin{equation}
dy=m\ dx\tag5
\end{equation}</script><center>
<img src="/2020/07/07/Stroll-calculus-5-2-Differentials-and-Tangent-Line-Approximations/20160815143633047" alt="这里写图片描述" title>
图1
</center>

<p>现在考虑任意一个函数</p>
<script type="math/tex; mode=display">
\begin{equation}
y=f(x)\tag6
\end{equation}</script><p>假设该函数在$x$处有导数。如果$P$是图像中对应的点(图2)。点$P$是图中对应的点，那么点$P$的切线就是直线$PR$，斜率是$m=f’(x)$。根据$(6)$得到的微分$dx,dy$，我们可以发现变量$x,y$的增量和这条切线有关联。为了更精确的描述，自变量$x$的微分$dx$在$x$处的任意增量为$\Delta x$ 即</p>
<script type="math/tex; mode=display">
\begin{equation}
dx=\Delta x\tag7
\end{equation}</script><p>因变量$y$的微分$dy$对应的增量为$\Delta y$即</p>
<script type="math/tex; mode=display">
\begin{equation}
dy=f'(x)dx\tag8
\end{equation}</script><p><center>
<img src="/2020/07/07/Stroll-calculus-5-2-Differentials-and-Tangent-Line-Approximations/20160815143702063" alt="这里写图片描述" title>
图2
</center><br>因此，如图2所示，如果$dx=\Delta x=PQ$是$x$的任意变化量，那么$\Delta y=QS$和$dy=QR$分别是$y$沿着曲线和切线的相应变化量。当$f(x)=mx+b$时，$(8)$ 简化成$(5)$。</p>
<p>如果$dx\neq =0$，那么我们可以用它除以$(8)$得到</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{dy}{dx}=f'(x)\tag9
\end{equation}</script><p>从这点来看，等式$(9)$确实成立，因为它的两边是同一件事物的不同书写形式，即函数$y=f(x)$的导数。根据$(9)$的新特性，目前我们可以说左边的莱布尼兹不仅仅看起来像一个分数，实际就是个分数</p>
<script type="math/tex; mode=display">

\frac{dy}{dx}=\frac{differential\ of\ y}{differential\ of\ x}</script><p>给定函数$y=f(x)$，通过计算微分然后乘以$dx$，莱布尼兹符号很容易得到如$(8)$ 所示的微分形式。第一列的计算给出了通用模板</p>
<script type="math/tex; mode=display">
\begin{align*}
y&=f(x)&
y&=x^2\\
\frac{dy}{dx}&=f'(x)&
\frac{dy}{dx}&=2x\\
dy&=f'(x)dx&
dy&=2xdx
\end{align*}</script><p>第二列的计算给出了具体实例$y=x^2$是如何计算的。利用这个符号我们就可以直接将$y=x^2$写成$dy=2xdx$的形式，而不需要中间步骤$dy/dx=2x$。需要强调的是，等式左边有微分那么右边必须也要有微分。也就是说，不能写成$dy=2x$，而应该是$dy=2xdx$</p>
<p>一般而言，经常使用$df(x)$而不是$dy$，因为前者更加方便。</p>
<p><strong>例1</strong>：</p>
<script type="math/tex; mode=display">

d(x^2)=2xdx,\quad d(5x^4)=20x^3dx,\quad d(\frac{1}{x})=(-\frac{1}{x^2})dx=-\frac{dx}{x^2}</script><script type="math/tex; mode=display">

d(x^4+7x^2+6)=(4x^3+14x)dx</script><p>以及</p>
<script type="math/tex; mode=display">

d(x\sin x)=(x\cos x+\sin x)dx</script><p>现在，对于我们熟悉的计算导数公式都可以给出等价的微分形式。假设$y=f(u)$，那么$dy=f’(u)du$。对于任意函数$f(u)$，我们有</p>
<script type="math/tex; mode=display">
\begin{equation}
d(u^n)=nu^{n-1}du,\quad d(\sin u)=\cos udu\tag{10}
\end{equation}</script><p>等等。当微分符号可以这样使用时，我们就可以不需要自变量直接写出微分形式。根据这个思想，如果我们用$dx$乘以乘法法则和除法法则，那么我们得到</p>
<script type="math/tex; mode=display">

d(uv)=udv+vdu\quad and\quad d(\frac{u}{v})=\frac{vdu-udv}{v^2}</script><p>更进一步，如果$y=f(u)$并且$u$是关于变量$x$的函数，$u=g(x)$，那么我们可以将$du=g’(x)dx$代入$dy=f’(u)du$得到</p>
<script type="math/tex; mode=display">
\begin{equation}
dy=f'(u)g'(x)dx\tag{11}
\end{equation}</script><p>这是链式法则的微分形式</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{dy}{dx}=\frac{dy}{du}\frac{du}{dx}\tag{12}
\end{equation}</script><p>在$(11),(12)$中，链式法则是微分代数运算的结果。这个完美的钥匙锁配合使得微分符号成为微积分中不可或缺的工具，这会在之后详述。</p>
<p><strong>例2</strong>：利用$(10)$，并且根据链式法则我们有</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
d(x^2+1)^4
&=&4(x^2+1)^3d(x^2+1)\\
&=&4(x^2+1)^3\cdot 2xdx\\
&=&8x(x^2+1)^3dx
\end{eqnarray*}</script><p>以及</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
d(\sin 4x^3)
&=&\cos 4x^3d(4x^3)\\
&=&\cos 4x^3\cdot 12x^2dx\\
&=&12x^2\cos 4x^3dx
\end{eqnarray*}</script><p>对于经常使用微积分的人，他们习惯将微分看做很小的量，虽然定义里没有这么要求。他们之所以这样是有理由。一方面看图5.2，曲线某点的切线在切点处非常靠近曲线，这意味着当$dx$很小时，曲线和切线几乎很难区分，因此$dy$是增量$\Delta y$非常好的近似，而且$dy$比$\Delta y$更容易计算。将它陈述成计算步骤就是(图3)：</p>
<p><em>对于给定的$x$值，可以求出$f(x)$和$f’(x)$，当然$dy=f’(x)dx$是已知的，那么我们可以利用公式</em></p>
<script type="math/tex; mode=display">
\begin{equation}
f(x+dx)\cong f(x)+dy\tag{13}
\end{equation}</script><p><em>来计算$x$附近的近似函数值。</em></p>
<p>公式$(13)$叫做切线逼近，又是也叫作线性逼近。</p>
<p><strong>例3</strong>：用微分求出$\sqrt[3]{28}$ 的近似值</p>
<p><strong>解</strong>：对于$x=27$，$\sqrt[3]{x}$很容易求出，所以我们取$y=f(x)=\sqrt[3]{x},dx=1$。因为$dy=\frac{1}{3}x^{-2/3}dx$，我们有</p>
<script type="math/tex; mode=display">

dy=\frac{1}{3}(27)^{-2/3}\cdot 1=\frac{1}{3\cdot 9}=\frac{1}{27}</script><p>因此</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\sqrt[3]{28}=f(28)
&\cong &f(27)+dy\\
&=&3+\frac{1}{27}\cong 3.037
\end{eqnarray*}</script><p>利用计算器得到$\sqrt[3]{28}$的精确值为$3.036588972\ldots$。即便是在$dx=1$的情况下，我们利用微分得到的近似值精确到了三位小数。</p>
<p><center>
<img src="/2020/07/07/Stroll-calculus-5-2-Differentials-and-Tangent-Line-Approximations/20160815143742235" alt="这里写图片描述" title>
图3
</center><br>当然，这个例子的计算值比较小，因为立方根的计算比较容易得到精确值。之所以举这个例子是为了强调微分对于更加复杂的函数增量来说，是个很好的线性近似。在以后的文章中，当我们遇到几个变量函数的微分时，会理解到它的重要性。</p>
<p>下面再举几个例子。</p>
<p><strong>例4</strong>：计算$4.01\ ft$立方的精确和近似值。</p>
<p><strong>解</strong>：如果$x$表示边长，那么体积就是$V(x)=x^3$。精确体积为$V(4.01)=(4.01)^3=64.481201\ ft^3$。现在$dV=3x^2dx$，$x=4,dx=0.01$。近似体积为</p>
<script type="math/tex; mode=display">

V(4.01)\cong V(4)+dV=4^3+3\cdot 4^2(0.01)=64.48\ ft^3</script><p>结果看着不糟糕啊。(就是这么神奇，哈哈哈)</p>
<p><strong>例5</strong>：如果地球的半径增加$1\ ft$，那么它的表面积近似增加多少？</p>
<p><strong>解</strong>：半径为$r$的球表面积为$A=4\pi r^2$，地球的半径为$4000\ mi$。如果我们用$dA$来近似表示精确值$\Delta A$，其中$r=4000\ mi,dr=1$，从而</p>
<script type="math/tex; mode=display">

\Delta A\cong dA=8\pi rdr=8\pi (4000)\cdot \frac{1}{5280}\ mi^2</script><p>其中$1\ ft=1/5280\ mi$。计算之后我们发现$\Delta A\cong 19.04\ mi^2$。将近曼哈顿岛的面积$(22\ mi^2)$</p>
<p><strong>例6</strong>：如果地球的半径减小$1\ in$，那么它的体积近似减少多少？</p>
<p><strong>解</strong>：半径为$r$的球的体积为$V=\frac{4}{3}\pi r^3$，所以$dV=4\pi r^2dr$</p>
<script type="math/tex; mode=display">
\begin{eqnarray*}
\Delta V\cong dV
&=&4\pi(4000)^2\cdot\left(\frac{-1}{12\cdot 5280}\right)\\
&\cong&-3173.32\ mi^3
\end{eqnarray*}</script><p>这里出现负号是因为$r$是缩小的，所以答案是体积减小$3173.32\ mi^3$</p>
<p><strong>注解1</strong>：函数$y=f(x)$二阶导的标准符号之一为$d^2y/dx^2$。根据本文的观点，需要指出的是分子$d^2y$和分母$dx^2$本身没有任何意义。表达式$d^2y/dx^2$是一个不可分割的符号。</p>
<p><strong>注解2</strong>：关于曲线和微分的莱布尼兹神话。知道是十九世界早期极限的现代概念才被提出来，所以类似等式$(1)$那样的导数定义不可能是莱布尼兹以及他的继承者们想出来的。那么关于导数和微分的早期想法是什么呢？</p>
<p>那个时期大部分最富有成效的数学思想是基于一种形式或者说另一种无限小的符号。对于等式</p>
<script type="math/tex; mode=display">

\frac{dy}{dx}=\lim_{\Delta x\to 0}\frac{\Delta y}{\Delta x}</script><p>莱布尼兹的想法是：当$\Delta x$趋近0时，$\Delta y,\Delta x$都变成无限小。这样的话将极限$dy/dx$看做两个无穷小量$dy,dx$的商就是合理的，称作微分。在莱布尼兹的思想里，无穷小是一个特殊的数，它不是零，但是比任何其他数都小。</p>
<p>这个想法还有个几何解释，曲线可以看做是无穷多个无限小的直线段组成的(图4)。切线就是一条包含几个这种小线段的直线。为了求出点$(x,y)$处的切线斜率，沿着曲线我们移动无限小的距离到达点$(x+dx,y+dy)$，观察到连接着两个点的无限小线段的斜率就是两个无限小量的商$dy/dx$。</p>
<p><center>
<img src="/2020/07/07/Stroll-calculus-5-2-Differentials-and-Tangent-Line-Approximations/20160815143815608" alt="这里写图片描述" title>
图4
</center><br>莱布尼兹引入了微分$dx,dy$来表示变量$x,y$无限小的变化量。为了理解这些微分如何使用，我们假设</p>
<script type="math/tex; mode=display">
\begin{equation}
y=x^2\tag{14}
\end{equation}</script><p>然后莱布尼兹会用$x+dx,y+dy$来替换$x,y$，从而得到</p>
<script type="math/tex; mode=display">

y+dy=(x+dx)^2=x^2+2xdx+dx^2</script><p>利用$(14)$得到</p>
<script type="math/tex; mode=display">
\begin{equation}
dy=2xdx+dx^2\tag{15}
\end{equation}</script><p>到这一步，莱布尼兹简单的去掉$dx^2$，从而得到我们熟悉的形式</p>
<script type="math/tex; mode=display">
\begin{equation}
dy=2xdx\tag{16}
\end{equation}</script><p>用$dx$除以两边，得到分数形式</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{dy}{dx}=2x\tag{17}
\end{equation}</script><p>莱布尼兹解释说无限小的平方是无限无限小或者说更高阶的无限小，因此完全可以忽略。对于莱布尼兹来说，导数就是一个商，一个无限小的等式，计算方法如$(17)$，图示如图4。他的微积分形式之后被叫做无限小微积分。</p>
<p>比较莱布尼兹无限小的使用和现代基于极限的方法可能是有益的。对于函数$y=x^2$，如果$\Delta x$是$x$的非零增量，$\Delta y$是$y$对应的增量，那么利用上面的计算我们得到</p>
<script type="math/tex; mode=display">

\Delta y=2x\Delta x+\Delta x^2</script><p>这是没有像莱布尼兹那样忽略掉$\Delta x^2$得到的结果，利用现代的方法，我们两边都除以$\Delta x$得到商$\Delta y/\Delta x$，然后定义导数为$\Delta x$趋近零时这个商的极限</p>
<script type="math/tex; mode=display">

\frac{dy}{dx}=\lim_{\Delta x\to 0}\frac{\Delta y}{\Delta x}=\lim_{\Delta x\to 0}(2x+\Delta x)=2x</script><p>我们用极限计算替换无穷小得到的$(17)$的形式。</p>
<p>莱布尼兹的想法几乎奇迹般的易用和有效，引导微积分和物理科学发展将近150年。然而，这些想法是由缺陷的，上面描述的无限小根本不存在，因为不存在一个正数，它比任何其他的正数都小。在超过一个世纪的时间段内，微积分作为工具的确取得了巨大的成功，但对于微积分是什么一直没有人能够给出逻辑上可接受的解释。困扰基本概念的迷雾直到十九世纪早期利用经典的极限概念才被揭开。幸运的是，早期的数学家-莱布尼兹，伯努利，欧拉，拉格朗日-对他们研究问题中合理和正确的部分有比较直观的认识。虽然从现在来看他们的观点经常是不严谨的，但是这些开拓者很少会进入结论的歧途中。</p>
<p>如果神话是复杂或隐藏了部分事实的含蓄，精炼，象征性的表达，那么数学的确和历史与文学一样有它的神话。莱布尼兹的微分被极限理论的“官方微积分”摒弃了，但是无论如何，他们依然是这个神话主题的一部分。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/52211147" target="_blank" rel="noopener">漫步微积分二十——微分和切线逼近</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分5.4 - 微分方程和分离变量法</title>
    <url>/2020/07/07/Stroll-calculus-5-4-Differential-Equations-Separation-of-Variables/</url>
    <content><![CDATA[<p>我们已经明白等式</p>
<script type="math/tex; mode=display">
\begin{equation}
\int f(x)dx=F(x)\tag1
\end{equation}</script><p>等价于</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{d}{dx}F(x)=f(x)\tag2
\end{equation}</script><p>这个命题可以从两个角度解释。</p>
<a id="more"></a>
<p>$(a)$按照上篇文章的解释，我们可以将符号</p>
<script type="math/tex; mode=display">

\int \cdots dx</script><p>看做对函数$f(x)$的一种运算，该运算得到函数的积分或者反导$F(x)$。从这个角度来看积分符号和$dx$一起构成符号的一部分；积分符号表明是积分运算，而$dx$告诉我们$x$是积分变量。</p>
<p>$(b)$第二种解释来自于上篇文章中的例4和例5。$(2)$可以写成下面的形式</p>
<script type="math/tex; mode=display">

dF(x)=f(x)dx</script><p>这样的话$f(x)dx$很明显就是$F(x)$的微分。如果我们将$(1)$中的$dx$看做$x$的微分，那么$(1)$中的积分作用在$F(x)$的微分上即$f(x)dx$，从而得到函数本身。因此，积分符号$\int$表示的运算是符号$d$表示的运算的逆过程。</p>
<p>这两种解释我们都会用到。但是，第二种特别方便，不仅限于计算过程，对于某些简单的微分方程同样如此。</p>
<p>微分方程涉及到一个未知函数和一个或多个导数。这种等式的阶数为最高阶导数的阶数。</p>
<p>在积分过程中，我们已经解决过形如下面的一阶微分方程</p>
<script type="math/tex; mode=display">

\frac{dy}{dx}=f(x)</script><p>其中$f(x)$是给定的函数。因此，等式</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{dy}{dx}=3x^2\quad is\ equivalent\ to\quad dy=3x^2dx\tag3
\end{equation}</script><p>对其积分得到解</p>
<script type="math/tex; mode=display">
\begin{equation}
\int dy=\int 3x^2dx\quad or \quad y=x^3+c\tag4
\end{equation}</script><p>注意积分中的常数在两边都会出现</p>
<script type="math/tex; mode=display">

y+c_1=x^3+c_2</script><p>但是它可以写作$y=x^3+(c_2-c_1)$，不失一般性，用$c_2-c_1$代替$c$。因此，只在一边添加常数就够了，正如$(4)$那样。</p>
<p>我们也能处理更复杂的微分方程。例如</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{dy}{dx}=-2xy^2\tag5
\end{equation}</script><p>如果我们暂时不考虑平凡解$y=0$，它可以写成</p>
<script type="math/tex; mode=display">

-\frac{dy}{y^2}=2xdx</script><p>对它积分得到</p>
<script type="math/tex; mode=display">

\frac{1}{y}=x^2+c</script><p>或者</p>
<script type="math/tex; mode=display">
\begin{equation}
y=\frac{1}{x^2+c}\tag6
\end{equation}</script><p>这叫做$(5)$的通解，选择不同的$c$将得到不同的特解。</p>
<p>我们可以用分离变量法来解决等式$(5)$，也就是说，从$x$中分理处$y$然后积分。一般来说，如果一阶微分方程可以写成如下形式</p>
<script type="math/tex; mode=display">

g(y)dy=f(x)dx</script><p>变量分离到两侧，如果可以计算出积分，那么我们得到解</p>
<script type="math/tex; mode=display">
\begin{equation}
\int g(y)dy=\int f(x)dx+c\tag7
\end{equation}</script><p>应该指出，只有非常特殊的例子能够用这种方式非礼变量。例如，微分方程</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{dy}{dx}=\frac{x+y}{x-y}\tag8
\end{equation}</script><p>就不能用这种方法求解。</p>
<p>方程$(3),(5)$的解$(4),(6)$组成了一簇曲线，他们对应于不同的常数值$c$。这些如图1和2。出现在一阶方程通解中的任意常数给出一个特定数值解，如初始条件，位置函数$y=f(x)$ 在点$x$处的值，我们说当$x=x_0$时$y=y_0$。用几何语言表述就是，初始条件意味着曲线需要通过平面上的一个特定点。如图2，上方和下面的实线对应的初始条件为</p>
<script type="math/tex; mode=display">

y=1\ when\ x=0\quad and\quad y=-1\ when \ x=0</script><center>
<img src="/2020/07/07/Stroll-calculus-5-4-Differential-Equations-Separation-of-Variables/20160817193120873" alt="这里写图片描述" title>
图1
</center>

<p>在下一篇文章中我们会看到这些术语非常适合力学问题，其中时间表示自变量，指定出移动物体的初始位置或初始速度。</p>
<center>
<img src="/2020/07/07/Stroll-calculus-5-4-Differential-Equations-Separation-of-Variables/20160817193053857" alt="这里写图片描述" title>
图2
</center>

<p>在刚刚讨论的问题中，方程$(7)$很容易求解出$y$从而得到给定微分方程的解。在没有明确要求写出函数的情况下，将方程族作为通解是比较方便的。</p>
<p>下面我们说明如何找到曲线，它各点的法向量通过原点，并且还过点$(2.3)$。法向量$OP$斜率为$y/x$(图3)，切线的斜率是它倒数的负值，所以我们的微分方程为</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{dy}{dx}=-\frac{x}{y}\tag9
\end{equation}</script><p>分离变量的$ydy=-xdx$，积分的</p>
<script type="math/tex; mode=display">

\frac{1}{2}y^2=-\frac{1}{2}x^2+c</script><p>如果令$r^2=2c$，(9)的通解取更整齐的形式为</p>
<script type="math/tex; mode=display">

x^2+y^2=r^2</script><p>这是圆心在原点的所有圆。令$x=2,y=3$得$r^2=13$，所以</p>
<script type="math/tex; mode=display">

x^2+y^2=13</script><p>是(9)通过点(2,3)的一个特解。很明显留下这个解比坚持要解出$y$更加合理。</p>
<center>
<img src="/2020/07/07/Stroll-calculus-5-4-Differential-Equations-Separation-of-Variables/20160817193018686" alt="这里写图片描述" title>
图3
</center>

<p><strong>注解1</strong>：按理说，微分方程也许该被叫做求导方程。然而在微积分早期，微分是基本概念，导数是次要的，所以自然而言就这么叫了。对任何情况，几百年来一直用这种标准的用法，现在也没有人打算改变它的叫法。</p>
<p><strong>注解2</strong>：物理或生物或化学过程的数学描述通常用函数的形式给出，它说明了随着时间的推移涉及到的量是如何变化的。当我们知道某个函数，我们通过计算导数就知道它的变化率。然而，我们经常遇到的问题是相反的，知道变化率的信息，想要找出未知的函数。这些信息通常用未知函数导数方程的形式给出。这些微分方程在科学中非常常见所以他们的研究构成了数学的一个主要分支。下篇文章我们继续讨论本文主题的一些重要应用。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/52233911" target="_blank" rel="noopener">漫步微积分二十二——微分方程和分离变量法</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分5.3 - 不定积分和换元法</title>
    <url>/2020/07/07/Stroll-calculus-5-3-Indefnite-Integrals-Integration-by-Substitution/</url>
    <content><![CDATA[<p>如果$y=F(x)$是导数已知的函数，例如</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{d}{dx}F(x)=2x\tag1
\end{equation}</script><p>我们能够知道函数$F(x)$？不需要多想我们就能写出符合要求的函数，即$F(x)=x^2$。更进一步，添加一个常数不会改变导数结果，所以下面的所有函数</p>
<script type="math/tex; mode=display">

x^2+1,\quad x^2-\sqrt{3},\quad x^2+5\pi</script><p>或者更一般地</p>
<script type="math/tex; mode=display">

x^2+c</script><p>其中$c$是常数，都会满足性质(1)。还存在其他的答案吗？答案是没有了。</p>
<a id="more"></a>
<p>这个答案的理由出自下面的原则：</p>
<p><strong><em>如果$F(x),G(x)$是两个函数，并且有相同的导数$f(x)$，那么$G(x),F(x)$只相差一个常数，也就是说，存在一个常数$c$，使得</em></strong></p>
<script type="math/tex; mode=display">

G(x)=F(x)+c</script><p><strong><em>该结果对区间上的所有$x$均成立。</em></strong></p>
<p>为了明白为什么这个命题是正确的，我们注意到在区间上$G(x)-F(x)$的导数为零</p>
<script type="math/tex; mode=display">

\frac{d}{dx}[G(x)-F(x)]=\frac{d}{dx}G(x)-\frac{d}{dx}F(x)=f(x)-f(x)=0</script><p>这个差本身肯定是一个常数值$c$，所以</p>
<script type="math/tex; mode=display">

G(x)-F(x)=c\quad or\quad G(x)=F(x)+c</script><p>这就是我们想要建立的内容。</p>
<p>这个原则告诉我们等式$(1)$解的形式肯定是$x^2+c$。</p>
<p>刚刚讨论的问题涉及到寻找一个函数，而该函数导数是已知的。如果$f(x)$是已知的，那么函数$F(x)$使得</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{d}{dx}F(x)=f(x)\tag2
\end{equation}</script><p>叫做$f(x)$的反导，从$f(x)$寻找$F(x)$的过程是求导逆过程。我们已经看到$f(x)$的反导并非是唯一确定的，但是如果我们能够找到一个$F(x)$，那么所有其他的形式就是</p>
<script type="math/tex; mode=display">

F(x)+c</script><p>例如，$\frac{1}{3}x^3$是$x^2$的一个反导，那么所有$x^2$ 反导的可能形式为</p>
<script type="math/tex; mode=display">

\frac{1}{3}x^3+c</script><p>因为历史原因，$f(x)$的反导通常叫做$f(x)$的积分，反微分叫做积分。$f(x)$积分的标准符号为</p>
<script type="math/tex; mode=display">
\begin{equation}
\int f(x)dx\tag3
\end{equation}</script><p>读作$f(x)dx$的积分。等式</p>
<script type="math/tex; mode=display">

\int f(x)dx=F(x)</script><p>完全等价于$(2)$。函数$f(x)$叫做被积函数。$(3)$中细长的$S$符号叫做积分符号，最早由莱布尼兹引入。</p>
<p>为了说明这一点，我们注意到公式</p>
<script type="math/tex; mode=display">
\begin{equation}
\int x^2dx=\frac{1}{3}x^3\quad and\quad \int x^2dx=\frac{1}{3}x^3+c\tag4
\end{equation}</script><p>都是正确的，但是第一个只给出了一个积分，第二个给出了所有可能的情况。正因为此，积分$(3)$经常被叫做不定积分，这是相对于定积分而言的(注：关于定积分会在后续的文章里详细介绍)。$(4)$中第二个公式里的常数$c$叫做积分常数，经常引用为任意常数。之前讨论过，为了找到函数$f(x)$的所有积分，首先找到一个积分比较有效，然后在末尾添加一个任意常数。</p>
<p>我们之前计算过得所有导数下载都可以反过来，重写成积分的形式。例如，对于幂函数</p>
<script type="math/tex; mode=display">

\frac{d}{dx}x^n=nx^{n-1}\quad becomes\quad \int nx^{n-1}dx=x^n</script><p>更加方便的版本是</p>
<script type="math/tex; mode=display">

\frac{d}{dx}\frac{x^{n+1}}{n+1}=x^n</script><p>它的积分形式为(最好记住它)</p>
<script type="math/tex; mode=display">
\begin{equation}
\int x^ndx=\frac{x^{n+1}}{n+1},\quad n\neq -1\tag5
\end{equation}</script><p>总结：对幂函数积分，就是指数加1后除以新的指数。</p>
<p><strong>例1</strong>：求积分：</p>
<script type="math/tex; mode=display">
\begin{align*}
\int x^3dx=&\frac{x^4}{4}=\frac{1}{4}x^4,\quad \int x^{572}dx=\frac{x^{573}}{573}=\frac{1}{573}x^{573}\\
&\int \frac{dx}{x^5}=\int x^{-5}dx=\frac{x^{-4}}{-4}=-\frac{1}{4x^4}\\
&\int \sqrt{x}dx=\int x^{1/2}dx=\frac{x^{3/2}}{\frac{3}{2}}=\frac{2}{3}x^{3/2}
\end{align*}</script><p>读者应该注意到，当$n=-1$时，$(5)$的右边分母变为零，因此没有意义。这时候</p>
<script type="math/tex; mode=display">

\int \frac{dx}{x}</script><p>的积分是微积分中最重要的一部分，有广泛的应用。后续的文章会详细介绍。</p>
<p>下面附加的积分规则是个变相版本</p>
<script type="math/tex; mode=display">
\begin{equation}
\int cf(x)dx=c\int f(x)dx\tag6
\end{equation}</script><p>以及</p>
<script type="math/tex; mode=display">
\begin{equation}
\int [f(x)+g(x)]dx=\int f(x)dx+\int g(x)dx\tag7
\end{equation}</script><p>第一个说明常数因子可以从积分号的一边移到另一边。注意这只会适用于常数，不适用于变量</p>
<script type="math/tex; mode=display">

\int x^2dx\neq x\int xdx</script><p>左右两边分别是$\frac{1}{3}x^3,x\cdot \frac{1}{2}x^2=\frac{1}{2}x^3$。公式$(7)$是说和的积分就是各项分别积分的和。对任何有限项均成立。</p>
<p>为了证实$(6),(7)$，注意到他们等价于微分形式</p>
<script type="math/tex; mode=display">

\frac{d}{dx}cF(x)=c\frac{d}{dx}F(x)</script><p>以及</p>
<script type="math/tex; mode=display">

\frac{d}{dx}[F(x)+G(x)]=\frac{d}{dx}F(x)+\frac{d}{dx}G(x)</script><p>其中$(d/dx)F(x)=f(x),(d/dx)G(x)=g(x)$</p>
<p><strong>例2</strong>：将规则$(5),(6),(7)$组合起来，我们可以积分任何多项式。例如</p>
<script type="math/tex; mode=display">
\begin{align*}
\int (3x^4+6x^2)dx
&=3\int x^4dx+6\int x^2dx\\
&=\frac{3}{5}x^5+2x^3+c
\end{align*}</script><p>以及</p>
<script type="math/tex; mode=display">
\begin{align*}
\int (5-2x^5+3x^11)dx
&=5\int dx-2\int x^5dx+3\int x^{11}dx\\
&=5x-\frac{1}{3}x^6+\frac{1}{4}x^{12}+c
\end{align*}</script><p>观察可以发现$\int dx=\int 1dx=x$。每个计算中都在某位添加了一个任意常数，保证包含了所有可能的积分。</p>
<p><strong>例3</strong>：我们也能积分许多非多项式的，例如幂函数的线性组合：</p>
<script type="math/tex; mode=display">

\int \sqrt[3]{x^2}=\int x^{2/3}dx=\frac{3}{5}x^{5/3}+c</script><script type="math/tex; mode=display">
\begin{align*}
\int\frac{2x^3-x^2-2}{x^2}dx
&=\int(2x-1-2x^{-2})dx\\
&=x^2-x+\frac{2}{x}+c\\
\int\frac{5x^{1/3-2x^{-1/3}}}{\sqrt{x}}dx
&=\int(5x^{-1/6-2x^{5/6}})dx\\
&=66x^{5/6}-12x^{1/6}+c
\end{align*}</script><p>公式</p>
<script type="math/tex; mode=display">
\begin{equation}
\int u^ndu=\frac{u^{n+1}}{n+1},\quad n\neq =-1\tag8
\end{equation}</script><p>与$(5)$只有一点区别，就是$x$被$u$替换掉了。然而，我们将$u$看做$x$的某个函数$f(x)$，$u$的微分为$du$，这样的话</p>
<script type="math/tex; mode=display">

u=f(x)</script><p>以及</p>
<script type="math/tex; mode=display">

du=f'(x)dx</script><p>$(8)$就变为</p>
<script type="math/tex; mode=display">
\begin{equation}
\int [f(x)^n]f'(x)dx=\frac{[f(x)]^{n+1}}{n+1},\quad n\neq -1\tag9
\end{equation}</script><p>这是$(5)$更一般的泛化。</p>
<p><strong>例4</strong>：实际中，我们通常显示地改变变量来使用这个想法，从而将一个复杂的积分变成如$(8)$ 那样简单的形式。例如</p>
<script type="math/tex; mode=display">

\int (3x^2-1)^{1/3}4xdx</script><p>我们注意到括号内的积分为$6xdx$，与$4xdx$只相差一个常数因子，所以我们写为</p>
<script type="math/tex; mode=display">
\begin{align*}
u&=3x^2+1\\
du&=6xdx\\
xdx&=\frac{1}{6}du
\end{align*}</script><p>这个方法叫做换元法，因为它通过替换或改变变量来简化问题。正如公式$(9)$那样，该方法之所以成功取决去存在一个积分，被积函数的一部分实质上是另一部分的导数(当然除了常数因子外)。</p>
<p><strong>注解1</strong>：例4的积分是有意构造出来似的换元法有效。为了说明这一点，观察一个类似的积分</p>
<script type="math/tex; mode=display">
\begin{equation}
\int (3x^2-1)^{1/3}dx\tag{10}
\end{equation}</script><p>形式上看着比例4要简单，实际上却是更加复杂了，因为积分项缺少重要的因子$x$。如果我们尝试用之前提到的换元法，我们将得到</p>
<script type="math/tex; mode=display">

\int (3x^2-1)^{1/3}dx=\int u^{1/3}\cdot \frac{du}{6x}</script><p>分母中的$x$无法消掉。后面的文章我们会讲到其他方法来解决这种问题，但是目前我们无法继续做下去。</p>
<p><strong>注解2</strong>：许多人试图将$(10)$写成</p>
<script type="math/tex; mode=display">
\begin{equation}
\int(3x^2-1)^{1/3}dx=\frac{(3x^2-1)^{4/3}}{4/3}=\frac{3}{4}(3x^2-1)^{4/3}+c\tag{11}
\end{equation}</script><p>这是不对的。为了理解为何错误，回顾一下计算积分的时候，我们总是简单的验证结果，如果我们对$f(x)$的积分有所怀疑时，通过计算它的导数看是否等于$f(x)$来进行验证。很明显$(11)$不满足，因为右边的导数是</p>
<script type="math/tex; mode=display">

\frac{3}{4}\cdot \frac{4}{3}(3x^2-1)^{1/3}\cdot 6x=(3x^2-1)^{1/3}6x</script><p>确实不是$(10)$的积分项。</p>
<p>最后，$\sin,\cos$函数的导数形式可以得出下面的积分形式：</p>
<script type="math/tex; mode=display">
\begin{equation}
\int \cos udu=\sin u+c\tag{12}
\end{equation}</script><p>以及</p>
<script type="math/tex; mode=display">
\begin{equation}
\int \sin u du=-\cos u+c\tag{13}
\end{equation}</script><p>这些都是许多应用的有力工具，从概率论到声波的传播。</p>
<p><strong>例5</strong>：$(a)$求积分</p>
<script type="math/tex; mode=display">

\int \cos 3xdx</script><p>观察$(12)$，我们看出利用$u=3x$使得$du=3dx,dx=\frac{1}{3}du$，然后我们可以写出</p>
<script type="math/tex; mode=display">
\begin{align*}
\int \cos 3xdx
&=\int \cos u\cdot\frac{1}{3}du=\frac{1}{3}\int \cos udu\\
&=\frac{1}{3}\sin u+c=\frac{1}{3}\sin 3x+c
\end{align*}</script><p>$(b)$求积分</p>
<script type="math/tex; mode=display">

\int x\sin(1-x^2)dx</script><p>我们利用$u=1-x^2$使得$du=-2x,xdx=-\frac{1}{2}du$，然后利用$(13)$：</p>
<script type="math/tex; mode=display">
\begin{align*}
\int x\sin(1-x^2)dx
&=\int \sin u\cdot(-\frac{1}{2}du)=-\frac{1}{2}\int \sin udu\\
&=\frac{1}{2}\cos u+c=\frac{1}{2}\cos(1-x^2)+c
\end{align*}</script><p><strong>注解3</strong>：从例4和例5中可以看到微分符号在用换元法计算不定积分时极其有用。这个方法对许多学生而言就像一种魔术。为了理解为何它是合法的(数学中不允许有魔术)，将积分形式应用到该方法有效的积分上</p>
<script type="math/tex; mode=display">
\begin{equation}
\int f[g(x)]g'(x)dx\tag{14}
\end{equation}</script><p>我们需要做的就是使$u=g(x)$，那么$du=g’(x)dx$。现在$(14)$可以重新写成</p>
<script type="math/tex; mode=display">

\int f[g(x)]g'(x)dx=\int f(u)du</script><p>如果我们对它进行积分，则</p>
<script type="math/tex; mode=display">

\int f(u)du=F(u)+c</script><p>或者</p>
<script type="math/tex; mode=display">

F'(u)=f(u)</script><p>然后因为$u=g(x)$，$(14)$可以写成</p>
<script type="math/tex; mode=display">
\begin{equation}
\int f[g(x)]g'(x)dx=\int f(u)du=F(u)+c=F[g(x)]+c\tag{15}
\end{equation}</script><p>证明这个过程的一切就是观察到$(15)$是正确的答案，因为利用链式法则</p>
<script type="math/tex; mode=display">

\frac{d}{dx}F[g(x)]=F'[g(x)]g'(x)=f[g(x)]g'(x)</script><p>链式法则让我们可以利用符号$dx,du$。</p>
<p>最后，给出换元法的基本流程：</p>
<p>1.认真选择$u$，也就是$u=g(x)$<br>2.计算$du=g’(x)dx$<br>3.换元$g(x)=u,g’(x)dx=du$。这时候积分必须只是关于$u$的项，不能存在$x$。如果不满足，那么重新选择$u$<br>4.计算步骤3中的积分<br>5.用$g(x)$替换$u$，得到全部关于$x$的结果</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/52219761" target="_blank" rel="noopener">漫步微积分二十一——不定积分和换元法</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分6.1 - 定积分引言</title>
    <url>/2020/07/08/Stroll-calculus-6-1-Introduction/</url>
    <content><![CDATA[<p>在之前的文章中我们提到过，微积分就是与曲线有关的两种计算方法即</p>
<ol>
<li>曲线上切线的斜率</li>
<li>曲线围成的面积<br>当然，这将主题描述的过于简单，因为它强调微积分作为几何的工具，没有说它在科学研究中起着不可或缺的作用。然而，它解释了传统微积分可以划分为两个截然不同的部分：微分学(处理切线的斜率)和积分学(处理面积)。</li>
</ol>
<p>古希腊人对面积问题非常感兴趣。他们知道如何计算三角形、圆和相关图形的面积，但是任何其他图形是一个新问题。阿基米德应用一种叫做逼近的方法来计算一段抛物线的面积以及其他几个几何量。但近2000年来由阿基米德这个天才自己创造出来的计算法其他人都是无法比拟的。然而，由十七世纪中叶几个欧洲思想家(特别是费马和帕斯卡)开始推动阿基米德留下的逼近法。之后的牛顿和莱布尼兹取得了决定性的突破，他们表明，可以用逼近法计算的量，那么很容易通过使用反导来计算。这一重要发现被称为微积分基本定理。它将主题的两部分结合起来，并且无疑是(正如我们以前说过的)整个数学中最重要的一个事实。</p>
<p>下面的几篇文章我将遵循这个路径。计算似乎在我们的工作中是比较突出的部分，但是实际上，牢牢记住基本的思想比计算方法更加重要。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/52276196" target="_blank" rel="noopener">漫步微积分二十四——定积分引言</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分5.5 - 重力作用下的运动 逃逸速度和黑洞</title>
    <url>/2020/07/07/Stroll-calculus-5-5-Motion-under-Gravity-Escape-Velocity-and-Black-Holes/</url>
    <content><![CDATA[<p>微积分发展的许多原始灵感来自于力学，这两个主题到今天为止一直是不可分割的。力学建立在牛顿提出的基本原则上。这些原则的陈述需要导数的概念，在本文我们会看到这些应用依赖于积分和微分方程的解。</p>
<p>直线运动是沿着一条直线的运动，与之相对应，沿着曲线的运动有时称为曲线运动。我们目前是研究单个微粒的直线运动，也就是说，将质量为$m$的物体想象成一个点。在讨论物理对象的运动时，例如汽车，子弹，落石等，我们经常忽略对象的大小和形状，将它看成一个质点。</p>
<p>质点的位置完全取决于坐标系的选择(图1)。因为质点移动，$s$是时间$t$的函数，为了测量初始时间为$t=0$。用符号表示就是$s=s(t)$。正如前面文章所讨论的，质点的速度是位置的变化率</p>
<a id="more"></a>
<script type="math/tex; mode=display">

v=\frac{ds}{dt}</script><center>
<img src="/2020/07/07/Stroll-calculus-5-5-Motion-under-Gravity-Escape-Velocity-and-Black-Holes/20160821195617726" alt="这里写图片描述" title>
图1
</center>

<p>速度(speed)是速度(velocity)的绝对值。一般情况，移动质点的速度随着时间而改变，加速度$a$是速度的变化率</p>
<script type="math/tex; mode=display">

a=\frac{dv}{dt}=\frac{d}{dt}\left(\frac{ds}{dt}\right)=\frac{d^2s}{dt^2}</script><p>它的正负取决于$v$是增加还是减小。</p>
<p>牛顿力学的基本假设是力引起速度的变化，也就是说加速度是由力造成的。力的概念来源于我们日常中的主观感受，例如当我们推一辆车或者扔一个石头时我们改变了物理的速度。对于直线运动，我们假设运动是一个具体数值，它的正负由运动方向的正负确定。</p>
<p>牛顿第二运动定律说质点的加速度和作用在它上面的力$F$成正比，与质量$m$成反比</p>
<script type="math/tex; mode=display">
\begin{equation}
a=\frac{F}{m}\tag1
\end{equation}</script><p>或等价地</p>
<script type="math/tex; mode=display">
\begin{equation}
F=ma\tag2
\end{equation}</script><p>如果力加倍，那么根据(1)加速度也加倍；如果质量加倍，那么加速度减倍。在这种情况下，物体的质量可以解释为抑制加速力的能力。</p>
<p>等式(2)可以看做力的一种定义，因为右边的量都可以计算得到，他们确定力力。另一方面，力$F$经常会提前知道。那么方程$F=ma$可以写成二阶微分方程</p>
<script type="math/tex; mode=display">
\begin{equation}
m\frac{d^2s}{dt^2}=F\tag3
\end{equation}</script><p>此式有深远的影响，在合适的初始条件下，通过求解(3)可以得出任意时间$t$时的质点位置$s$。</p>
<p><strong>例1</strong>：质量为$m$的石头从地球表面上的某点下降，求出它的运动方程。</p>
<p><strong>解</strong>：最重要的例子就是大家熟悉的重力。根据实验结果，我们知道作用在石头上的重力竖直向下并且$F=mg$，其中$g$是恒定的加速度($g=32\ ft/s^2\ or\ 9.80\ m/s^2$)。如果$s$是垂直坐标轴上测量的石头位置，向下为正方向，原点是石头的初始位置(图2)，那么方程(3)就是</p>
<script type="math/tex; mode=display">

m\frac{d^2s}{dt^2}=mg\quad or\quad \frac{d^2s}{dt^2}=g</script><center>
<img src="/2020/07/07/Stroll-calculus-5-5-Motion-under-Gravity-Escape-Velocity-and-Black-Holes/20160821195714431" alt="这里写图片描述" title>
图2
</center>
方程两边积分两次得

$$
\begin{align}
u&=\frac{ds}{dt}=gt+c_1\tag4\\
s&=\frac{1}{2}gt^2+c_1t+c_2\tag5
\end{align}
$$

其中$c_1,c_2$是常数。因为石头在$t=0$时下降，也就是没有初始速度，所以初始条件为

$$

v=0\quad and \quad s=0\quad when \quad t=0

$$

条件$v=0\ when \ t=0$求出$c_1=0$，条件$s=0\ when \ t=0$求出$c_2=0$。因此我们有

$$
\begin{align}
v&=gt\tag6\\
s&=\frac{1}{2}gt^2\tag7
\end{align}
$$

如果我们改变条件，在$t=0$时，初始位置为$s=s_0$，以初始速度为$v_0$向下扔石头，那么初始条件为

$$

v=v_0\quad and \quad s=s_0\quad when\quad t=0

$$

(4)(5)变为

$$
\begin{align*}
v&=gt+v_0\\
s&=\frac{1}{2}gt^2+v_0t+s_0
\end{align*}
$$

需要说明的是，在我们的讨论中我们忽略掉了空气阻力，假设只要重力作用在落石上。也可以考虑空气阻力，但是那样方程(3)会变得很复杂，以至于我们无法解决。不过我们会在后面讨论这个主题。

我们还说明了如果距离单位用$ft$，时间单位用$s$，即$g$的大小为32，那么(6)(7)变为

$$

v=32t\quad and \quad s=16t^2

$$

从第一个方程可以看出石头的速度以每秒$32\ ft/s$增加，当然这也是加速度的大小。

<strong>例2</strong>：从高为$320\ ft$的建筑物上向上以初速度为$128\ ft/s$扔石头。写出时间表示的高度函数。找出石头的最大高度。假设石头落向地面，那么从抛出到落地需要多久？落地的瞬间，石头的速度和加速度分别是多少？

<strong>解</strong>：我们取原点为地面，正方向朝上的坐标轴(图3)。因为重力是竖直向下的，根据方程(2)，力和加速度有相同的符号，石头的加速度为

$$
\begin{equation}
a=\frac{d^2s}{dt^2}=-32\tag8
\end{equation}
$$

对它积分得

$$

v=\frac{ds}{dt}=-32t+c_1

$$

利用初始条件$v=128\ when \ t=0$得

$$
\begin{equation}
v=\frac{ds}{dt}=-32t+128\tag9
\end{equation}
$$

再次积分得

$$

s=-16t^2+128t+c_2

$$

因为$s=320\ when \ t=0$，所以

$$
\begin{equation}
s=-16t^2+128t+320\tag{10}
\end{equation}
$$

这就是任何时刻$t$石头离地面的高度函数。
<center>
<img src="/2020/07/07/Stroll-calculus-5-5-Motion-under-Gravity-Escape-Velocity-and-Black-Holes/20160821195807416" alt="这里写图片描述" title>
图3
</center>

<p>为了找到石头的最大高度，我们将(9)写为以下形式</p>
<script type="math/tex; mode=display">

v=-32(t-4)</script><p>这说明在$t<4$时，速度一直为正，所以石头一直在向上运动。当$t=4$时，速度为零，石头在那一时刻静止。当$t>4$，速度为负，石头开始向下运动。因此最大高度就是$t=4$时刻方程(10)的解。即$s=-16\cdot 16+128\cdot 4+320=-256+512+320=576$。</4$时，速度一直为正，所以石头一直在向上运动。当$t=4$时，速度为零，石头在那一时刻静止。当$t></p>
<p>当$s=0$时，石头到达地面。利用方程(10)得</p>
<script type="math/tex; mode=display">
\begin{align*}
-16t^2+128t+320&=0\\
-16(t^2-8t-20)&=0\\
(t-10)(t+2)&=0
\end{align*}</script><p>当$t=10\ or \ t=-2$时，$s=0$。在该环境中第二个结果是没有意义的所以舍弃掉。所以石头抛出$10\ s$后落地。</p>
<p>为了求出落地时石头的速度和加速度，我们将$t=10$代入(9): $v=-32\cdot 10+128=320+128=-192$。那个时刻的速度为$-192\ ft/s$，符号表明石头是向下运动的。速度大小为$|-192|=192\ ft/s$</p>
<p>这些例子中加速度都是重力产生的，所以都是个常数。对于地球表面运动的物体几乎如此。然而，为了研究太空中物体的运动，我们必须了解到，重力是变化的，并且跟物理离地球中心距离的平方反向变化。</p>
<p><strong>例3</strong>：假设火箭以初始速度$v_0$垂直向上发射，然后在不消耗任何能量的情况下滑行。那么$v_0$越大，所到达的高度就越高。为了让火箭不停下来从而完全逃离地球引力，需要多大的$v_0$？</p>
<p><strong>解</strong>：根据牛顿万有引力定律，宇宙中任何两个物体之间存在引力，这和他们的质量成正比，距离的平方成反比。根据题意(图4),地球吸引火箭的力$F$为</p>
<script type="math/tex; mode=display">

F=-G\frac{Mm}{s^2}</script><p>其中$G$是一个正的常数，$M,m$分别是地球和火箭的质量，$s$是火箭与球心的距离。</p>
<center>
<img src="/2020/07/07/Stroll-calculus-5-5-Motion-under-Gravity-Escape-Velocity-and-Black-Holes/20160821195855074" alt="这里写图片描述" title>
图4
</center>

<p>根据牛顿第二定律$F=ma$得</p>
<script type="math/tex; mode=display">

m\frac{d^2s}{dt^2}=-G\frac{Mm}{s^2}</script><p>所以</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{d^2s}{dt^2}=-\frac{GM}{s^2}\tag{11}
\end{equation}</script><p>这告诉我们火箭额运动不依赖于自身的重量。注意到$s=R$时$d^2s/dt^2=-g$，所以我们用常数替换的得到更加简便的形式</p>
<script type="math/tex; mode=display">

-g=-\frac{GM}{R^2}\quad or\quad GM=gR^2</script><p>因为$d^2s/dt^2=dv/dt$，所以(11)可写为</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{dv}{dt}=-\frac{gR^2}{s^2}\tag{12}
\end{equation}</script><p>下一步是利用链式法则消除方程中的$t$</p>
<script type="math/tex; mode=display">

\frac{dv}{dt}=\frac{dv}{ds}\frac{ds}{dt}=\frac{dv}{ds}v</script><p>方程(12)就变为</p>
<script type="math/tex; mode=display">

v\frac{dv}{ds}=-\frac{gR^2}{s^2}</script><p>分离变量并积分得</p>
<script type="math/tex; mode=display">

\int vdv=gR^2\int -\frac{ds}{s^2}</script><p>或者</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{1}{2}v^2=\frac{gR^2}{s}+c\tag{13}
\end{equation}</script><p>为了估计常数$c$，我们用初始条件$v=v_0\ when \ s=R$，所以</p>
<script type="math/tex; mode=display">

\frac{1}{2}v_0^2=gR+c</script><p>故</p>
<script type="math/tex; mode=display">

c=\frac{1}{2}v_0^2-gR</script><p>将其代入(13)得</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{1}{2}v^2=\frac{gR^2}{s}+(\frac{1}{2}v_0^2-gR)\tag{14}
\end{equation}</script><p>从(14)得到的结论如下;火箭要想从地球表面逃离，那么$\frac{1}{2}v^2$必须始终为正，如果没有速度，那么火箭将会停止移动然后回到地球上。但是但是右边的第一项，当$s$ 增加时，它将区域零。因此，无论$s$多大，为了保证$\frac{1}{2}v^2$为正，我们必须让$\frac{1}{2}v^2-gR\geq 0$。等价于$v_0^\geq 2gR\ or\ v_0\geq \sqrt{gR}$。$\sqrt{gR}$通常称为地球的逃逸速度。通过近似取$g\cong 32\ ft/s^2,R\cong 4000\ mi$可以很容易的计算出它的值为：</p>
<script type="math/tex; mode=display">
\begin{align*}
\sqrt{2gR}&\cong\sqrt{2\cdot 32\ ft/s^2\cdot 4000\ mi}\\
&\cong\sqrt{2\cdot 32\cdot \frac{1}{5280}\ mi/s^2\cdot 4000\ mi}\\
&\cong 7\ mi/s\cong 25000\ mi/h
\end{align*}</script><p><strong>注解1</strong>：利用例子中的方法，$\sqrt{2g’R’}$可以计算出任何行星，卫星或恒星的逃逸速度，其中$R’,g’$可以看做半径和表面的加速度。如果质量不变而半径减小，那么表面的逃逸速度将增大，为什么？</p>
<p><strong>注解2</strong>：大多数恒星由于内部的辐射力保持着气态、膨化态。辐射力是由于内部核燃料的燃烧造成的。当核燃料散发的时候，恒星因为引力坍塌变成几乎质量不变体积变小的球体。减小的质量能够维持两种类型的平衡，这取决于恒星的质量。当质量小于1.3个太阳质量时，是一种类型，如白矮星。当质量介于1.3和2个太阳质量之间时，产生中子星。对于质量更大的，不可能存在平衡，坍塌会继续直到表面的逃逸速度达到光速为止。这种类型的恒星完全看不见，因为没有任何辐射能够逃离。这就是所谓的黑洞。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/52269090" target="_blank" rel="noopener">漫步微积分二十三——重力作用下的运动 逃逸速度和黑洞</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分6.2 - 面积问题</title>
    <url>/2020/07/08/Stroll-calculus-6-2-The-Problem-of-Areas/</url>
    <content><![CDATA[<p>每个矩形和三角形都和一个称为面积的数相关。矩形的面积定义为它的高和底之积，三角形的面积是高和底乘积的一半(图1)。因为多边形总可以分解成三角形(图2)，其面积就是这些三角形面积的总和。</p>
<center>
<img src="/2020/07/08/Stroll-calculus-6-2-The-Problem-of-Areas/20160823192709707" alt="这里写图片描述" title>
图1
</center>
<center>
<img src="/2020/07/08/Stroll-calculus-6-2-The-Problem-of-Areas/20160823192737394" alt="这里写图片描述" title>
图2
</center>

<a id="more"></a>
<p>圆是比较困难的图形。希腊人找到一种非常自然的方式解决它的问题。第一，他们用一个内接正方形来近似圆的面积(图3)。然后他们逐渐增加边的数目，由正八边形加倍边数就是正十六边形，等等。这些内接多边形的面积显然越来越接近圆的精确面积。这种想法得出大家熟悉的公式</p>
<script type="math/tex; mode=display">
\begin{equation}
A=\pi r^2\tag1
\end{equation}</script><p>圆的面积$A$用半径$r$的形式来表示。推理的细节如下。假设圆内接一个正多边形(图4)。图中每个小的等腰三角形面积是$\frac{1}{2}hb$，这些面积的总和等于多边形面积，它非常接近圆的面积。如果$p$表示多边形的周长，那么我们将看到</p>
<script type="math/tex; mode=display">
\begin{align*}
A_{ {\rm polygon}}
&=\frac{1}{2}hb+\frac{1}{2}hb+\cdots+\frac{1}{2}hb\\
&=\frac{1}{2}h(b+b+\cdots+b)=\frac{1}{2}hp
\end{align*}</script><p>现在让$c$表示圆的周长，那么根据$\pi$的定义($\pi$的定义是周长与直径的比，即$\pi=c/2r$)得$c=2\pi r$。随着多边形边的增加，$h$趋近于$r$(用符号表示就是$h\to r$)，$p\to c$，从而</p>
<script type="math/tex; mode=display">
A_{ {\rm polygon}}=\frac{1}{2}hp\to \frac{1}{2}rc=\frac{1}{2}r(2\pi r)=\pi r^2</script><p>得到$(1)$。短语逼近法非常形象地描述了这个过程，因为圆的面积就是由内接多边形逼近出来的。</p>
<center>
<img src="/2020/07/08/Stroll-calculus-6-2-The-Problem-of-Areas/20160823192850122" alt="这里写图片描述" title>
图3
</center><center>
<img src="/2020/07/08/Stroll-calculus-6-2-The-Problem-of-Areas/20160823192909857" alt="这里写图片描述" title>
图4
</center>
接下来我们通过阿基米德计算一段抛物线面积的例子检验这个过程，也就是，图5中由任意弦$AB$和弧$ADCEB$围成的部分抛物线面积。图中无法方便的找出常规内接多边形，因此阿基米德改用三角形。他第一个近似是三角形$ABC$，顶点$C$的切线与$AB$平行。他第二个近似是给三角形$ABC$增加两个三角形$ACD$和$BCE$，其中顶点$D$的切线平行于$AC$，顶点$E$的切线平行$BC$。为了得到他的第三个近似，它在其余四个区域仍未包含的区域(例如其中一个区域是弧$CE$和弦$CE$之间)以同样的方式内接三角形，所以他第三次近似是三角形$ABC,ACD,BCE$和四个新三角形的面积之和。通过这种方式继续逼近抛物线，他得出面积是第一个三角形$ABC$面积的三分之四。他的论点细节上有点复杂；而且我们这里的关注点是逼近法的想法，所以我们省略这些细节。
<center>
<img src="/2020/07/08/Stroll-calculus-6-2-The-Problem-of-Areas/20160823192946405" alt="这里写图片描述" title>
图5
</center>
摆在我们面前的普遍问题是找到曲线边界围成的面积。然而，我们的大部分工作集中于一种特殊情况，即找出函数$y=f(x)$下面与$x=a,x=b$所围成区域的面积，如图6 所示。此类区域只有上边界是曲线，因此更容易解决。知道了这种特殊情况后，我们一般就能够应付更复杂的区域。为了说明，注意图7，整个边界都是曲线围成的面积往往可以通过上面曲线下方的面积减去下面曲线下方的面积得到，后者的面积和图6是一个类型。

后面我们将会看到，图6所示的面积用符号便是就是

$$
\begin{equation}
\int ^b_af(x)dx\tag2
\end{equation}
$$
这个符号之后会详细介绍，目前提醒大家不要将它和不定积分符号弄混了

$$
\begin{equation}
\int f(x)dx\tag3
\end{equation}
$$
尽管他们看着非常相似，但是他们实际完全不同：定积分(2)是一个数，而不定积分(3) 是一个函数(或者函数集合)。

乍一看，它可能出现在计算几何面积的问题中然后就没有什么了，也许，除了数学家，在现实世界中它没有实际用途。实际并非如此。之后会详细给出它的应用，物理和工程问题中很多重要的概念和问题完全依赖于一些想法，他们和用于计算面积的想法相同。作为例子，考虑物理中功和能量的概念，以及工程上由于水的压力水坝所承受的合力问题。因此更多的情况是寻找面积，而不是一个数学家为了解闷纯粹在玩。然而，为了清楚起见，本文只限于我们讨论面积问题本身，后面我们会介绍该基本思想下各种各样的应用。
<center>
<img src="/2020/07/08/Stroll-calculus-6-2-The-Problem-of-Areas/20160823193015468" alt="这里写图片描述" title>
图6
</center><center>
<img src="/2020/07/08/Stroll-calculus-6-2-The-Problem-of-Areas/20160823193046708" alt="这里写图片描述" title>
图7
</center>
<strong>注解1</strong>：作为一个历史趣题，第一个发现曲线围成区域确切面积的人是希波克拉底，公元前五世纪最著名的希腊数学家。为了了解他的做法，考虑图8所示的圆，点$A,B,C,D$是水平和垂直半径的两端。用$C$表示是圆心，$A,B$的连线用弧$AEB$表示。由弧$ADB$和$AEB$围成的月牙状叫做希波克拉底月亮(lune of Hippocrates，其中lune是拉丁语”月亮”的意思)，之后他得出了非凡的发现，它的面积完全等于阴影方形的面积，它的边长等于圆的半径。因此希波克拉底“将月牙形状变成了方形,”但是他不能将圆本身变成方形。
<center>
<img src="/2020/07/08/Stroll-calculus-6-2-The-Problem-of-Areas/20160823193122547" alt="这里写图片描述" title>
图8
</center>
<strong>注解2</strong>：我们大部分在上学时就知道$\pi$ 的近似值是3.14，有些人能够记得更精确的近似值$\pi\cong 3.14159$。在阿基米德的论著中，他推导出了一个著名的不等式

$$

3\frac{10}{71}<\pi<3\frac{1}{7}=\frac{22}{7} $$ 虽然很粗略但却是非常有用的近似$\pi\cong \frac{22}{7}$。那么这些值是从哪里来的呢？ 上面将$\pi$定义为圆的周长与直径的比值。正如我们看到的，由它得到公式$a="\pi" r^2$，这告诉我们$\pi$也是单位圆$x^2+y^2="1$的面积。因此计算$\pi$的问题转变成计算单位圆面积的问题。" 为了做到这一点，让$p_n,p_n$分别表示$n$边正多边形，$p_n$是内接于单位圆，$p_n$ 外接于单位圆，如图9所示。为了求出多边形的面积，找出组成多边形$p_n,p_n$ 的等腰三角形的面积，然后乘以$n$即可。如果$\theta$是顶角的一半，那么很明显所有等腰三角形的$\theta$相等；利用角度度量，我们有 \theta="\frac{1}{2}\cdot\frac{360^\circ}{n}=\frac{180^\circ}{n}" 观察图像我们可以看出$p_n$的面积是 \begin{equation} a(p_n)="n\cdot" 2\cdot \frac{1}{2}\sin \theta\cos \end{equation} $p_n$的面积是 \frac{1}{2}\tan 将不同的$n$值代入公式(4)(5)并利用计算器，可以很快计算出相应的面积值(表1)。因为对于所有的$n$ a(p_n)\leq\pi\leq 所以精确到五位小数得$\pi\cong 3.14159$。之后我们还会看到其他计算$\pi$的方法，有些甚至可以精确到500000位小数。 <center>
<img src="/2020/07/08/Stroll-calculus-6-2-The-Problem-of-Areas/20160823193201709" alt="这里写图片描述" title>
图9

<center>
<img src="/2020/07/08/Stroll-calculus-6-2-The-Problem-of-Areas/20160823193228611" alt="这里写图片描述" title>
表1
</center>

<p><a href="https://blog.csdn.net/u010182633/article/details/52293779" target="_blank" rel="noopener">漫步微积分二十五——面积问题</a></p>
</\pi<3\frac{1}{7}=\frac{22}{7}>]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分6.3 - Sigma符号和一些特殊和</title>
    <url>/2020/07/08/Stroll-calculus-6-3-The-Sigma-Notation-and-Certain-Special-Sums/</url>
    <content><![CDATA[<p>为了理清定积分，我们首先介绍一个标准的数学符号，它用于缩写长的求和公式。这就所谓sigma符号，用希腊字母$\Sigma$表示。在希腊字母表中，字母$\Sigma$对应于英语字母的$S$，也就是sum的第一个字母。这可以帮助我们记住这个符号，提示我们是和或加运算。</p>
<p>如果给定一些数$a_1,a_2,\ldots ,a_n $，他们的和表示为</p>
<script type="math/tex; mode=display">
\begin{equation}
\sum_{k=1}^{n}a_k\tag1
\end{equation}</script><a id="more"></a>
<p>其中$k$的变化范围是1到$n$(即$a_1,a_2,\ldots,a_n$)，所有这些数相加得到：</p>
<script type="math/tex; mode=display">

\sum_{k=1}^{n}a_k=a_1+a_2+\cdots+a_n</script><p>在(1)中$\sigma$下面是$k=1$，上面是$n$，也就说求和项$a_k$从$k=1$开始终止于$k=n$。下标$k$叫做和的索引，也可以用任何其他字母(如$i,j$)。</p>
<script type="math/tex; mode=display">

\sum_{k=1}^{5}k^3,\quad \sum_{i=1}^{5}i^3,\quad and\quad \sum_{j=1}^{5}j^5</script><p>他们都表示同一个和，即$1^3+2^3+3^3+4^3+5^3=225$。</p>
<p>这里再给一些其他的例子：</p>
<script type="math/tex; mode=display">
\begin{align*}
\sum_{k=1}^3\frac{k}{k^2+1}
&=\frac{1}{1^2+1}+\frac{2}{2^2+1}+\frac{3}{3^2+1}\\
\sum_{k=1}^4(-1)^{k+1}\frac{1}{k^2}
&=\frac{1}{1^2}-\frac{1}{2^2}+\frac{1}{3^2}-\frac{1}{4^2}\\
\sum_{k=1}^nk
&=1+2+\cdots+n\\
\sum_{k=1}^n2k
&=2+4+\cdots+2n\\
\sum_{k=1}^n(2k-1)
&=1+3+\cdots+(2n-1)
\end{align*}</script><p>注意第二个求和公式中的因子$(-1)^{k+1}$用于产生交替的正负符号$+,-,+,-$。后三个分别是所有正整数之和，偶数之和，奇数之和。</p>
<p>还有一些来自基本代数的公式：</p>
<script type="math/tex; mode=display">
\begin{align}
\sum_{k=1}^nk
&=1+2+\cdots+n=\frac{n(n+1)}{2}\tag2\\
\sum_{k=1}^nk^2
&=1^2+2^2+\cdots+n^2=\frac{n(n+1)(2n+1)}{6}\tag3\\
\sum_{k=1}^nk^3
&=1^3+2^3+\cdots+n^3=\left[\frac{n(n+1)}{2}\right]^2\tag4
\end{align}</script><p>这些公式可以用数学归纳法来证明。然而，得到(2)更简单的方法是按自然顺序写出求和公式，再按相反的顺序写出来：</p>
<script type="math/tex; mode=display">
\begin{align*}
s&=1+2+\cdots+n\\
s&=n+(n-1)+\cdots+1
\end{align*}</script><p>将等式相加得$2s=n(n+1)$，从而立马得到(2)。</p>
<p>还有一种方法可以来证明(2)，这需要知道一个事实，即$(k+1)^2=k^2+2k=1$，等价地</p>
<script type="math/tex; mode=display">
\begin{equation}
(k+1)^2-k^2=2k+1\tag5
\end{equation}</script><p>如果我们让$k$取$1,2,3,\ldots,n$，就得到</p>
<script type="math/tex; mode=display">
\begin{align*}
2^2-1^2&=2\cdot 1+1\\
3^2-2^2&=2\cdot 2+1\\
4^2-3^2&=2\cdot 3+1\\
\cdots\\
(n+1)^2-n^2&=2\cdot n+1
\end{align*}</script><p>将他们相加并消元得</p>
<script type="math/tex; mode=display">

(n+1)^2-1^2=2\left[\sum_{k=1}^nk\right]+n</script><p>求出括号里的值即可得到(2)：</p>
<script type="math/tex; mode=display">
\begin{align*}
\sum_{k=1}^nk&=\frac{1}{2}[(n+1)^2-1^2-n]=\frac{1}{2}[n^2+n]\\
&=\frac{n(n+1)}{2}
\end{align*}</script><p><a href="https://blog.csdn.net/u010182633/article/details/52303314" target="_blank" rel="noopener">漫步微积分二十六——Sigma符号和一些特殊和</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分6.4 - 曲线下的面积 定积分 黎曼</title>
    <url>/2020/07/08/Stroll-calculus-6-4-The-Area-under-a-Curve-Defnite-Integrals-Riemann/</url>
    <content><![CDATA[<p>我们继续讨论我们要解决的问题。$y=f(x)$是定义在闭区间$a\leq x\leq b$上的非负函数，如图1所示。我们如何计算阴影部分(即图像下方，$x$轴上方以及垂直直线$x=a,x=b$共同围成的部分)面积呢？</p>
<center>
<img src="/2020/07/08/Stroll-calculus-6-4-The-Area-under-a-Curve-Defnite-Integrals-Riemann/20160825154038127" alt="这里写图片描述" title>
图1}
</center>

<a id="more"></a>
<p>像这里提到的闭区间会经常出现在我们的讨论中，所以我们用更简短的符号$[a,b]$表示。此外，我们研究的大多数函数都是连续的。这意味着：从直观的角度来看，图像由一片组成，没有隙缝或洞；更确切地说，$[a,b]$上的每个点$c$，一定满足</p>
<script type="math/tex; mode=display">

\lim_{x\to c}f(x)=f(c)</script><p>这种函数具有几个基本属性：它是有界的，也就是说存在常数$K$使得区间$[a,b]$上的所有$x$都满足$f(x)\leq K$；存在最大和最小值，也就是说图像有最高和最低点。</p>
<p>回到图1，符合在$[a,b]$上函数$y=f(x)$连续。我们如何找出阴影区域的面积呢？考虑区域的性质，即只要上边是曲线，那么通过狭小的矩形可以逼近出近似值。</p>
<p>$n$是一个正整数，区间$[a,b]$分割成相等的$n$个子区间。将每个子区间作为底，构建一个曲线下方最高的矩形。所有这些长方形面积的总和为用$s_n$表示。和的面积近似等于图形的面积，$n$越大就越相似，或等价地，区间$[a,b]$ 被分成更多更小的子区间。最后，通过求出$s_n$的极限值得出图像面积的准确值：</p>
<script type="math/tex; mode=display">
\begin{equation}
{\rm {area\ of\ region}}=\lim_{n\to\infty}s_n\tag1
\end{equation}</script><p>这个过程的效果如图2，矩形越细，它的数目就越多。</p>
<p>现在我们引入一些合适的符号更准确的描述这个想法。</p>
<center>
<img src="/2020/07/08/Stroll-calculus-6-4-The-Area-under-a-Curve-Defnite-Integrals-Riemann/20160825154120921" alt="这里写图片描述" title>
图2
</center>

<p>依然是，$n$是一个正整数，区间$[a,b]$分割成相等的$n$个子区间，在区间内插入$n-1$个间隔点$x<em>1,x_2,\ldots,x</em>{n-1}$。如果用$a$表示$x_0$，$b$表示$x_n$，那么这些自区间的端点是</p>
<script type="math/tex; mode=display">
\begin{equation}
a=x_0<x_1<x_2<\cdots<x_{n-1}<x_n=b\tag2
\end{equation}</script><p>子区间为</p>
<script type="math/tex; mode=display">
\begin{equation}
[x_0,x_1],[x_2,x_3],\ldots,[x_{n-1},x_n]\tag3
\end{equation}</script><p>如图3所示。我们用$\Delta x_k$表示第$k$个子区间，那么</p>
<script type="math/tex; mode=display">
\begin{equation}
\Delta x_k=x_k-x_{k-1}\tag4
\end{equation}</script><center>
<img src="/2020/07/08/Stroll-calculus-6-4-The-Area-under-a-Curve-Defnite-Integrals-Riemann/20160825154156125" alt="这里写图片描述" title>
图3
</center>

<p>因为子区间长度相等，很明显$\Delta x_k=(b-a)/n$。让$m_k$表示$f(x)$在第$k$个区间$[x_k-1,x_k]$上的最小值。子区间内的对应点假定为$\bar x_k$：</p>
<script type="math/tex; mode=display">

f(\bar x_k)=m_k,\qquad x_{k-1}\leq \bar x_k\leq x_k</script><p>对于图3的情况，$\bar x_k$很明显看出是当曲线上升时是子区间的左端点，当下降时是右端点。因为每个内嵌矩形的面积都是底乘高，所以所有矩阵面积的和$s_n$为</p>
<script type="math/tex; mode=display">

s_n=f(\bar x_1)\Delta x_1+f(\bar x_2)\Delta x_2+\cdots+f(\bar x_k)\Delta x_k+\cdots+f(\bar x_n)\Delta x_n</script><p>用sigma符号来简化求和公式得</p>
<script type="math/tex; mode=display">
\begin{equation}
s_n=\sum_{k=1}^nf(\bar x_k)\Delta x_k\tag5
\end{equation}</script><p>(1)就变成了</p>
<script type="math/tex; mode=display">
\begin{equation}
{\rm {area\ of\ region}}=\lim_{n\to\infty}\sum_{k=1}^nf(\bar x_k)\Delta x_k\tag6
\end{equation}</script><p>这个公式正确性自然不言而喻，但从某些方面来说它不方便而且限制也比较多。我们扩大一下它的范围并深化其意义。</p>
<p><strong>注解1</strong>：子区间(3)的长度没有必要一定相等。事实上，如果去掉了这个限制，基本理论将大大简化。因此，我们允许子区间(3)长度不相等，以便增量(4)彼此间可以不同。在公式(6)中，就没必要让$n$趋于无穷大；我们必须要求最长区间的长度趋于零。因为后者的条件包括了前者，因此(6)可以换为</p>
<script type="math/tex; mode=display">
\begin{equation}
{\rm {area\ of\ region}}=\lim_{ {\rm max\ \Delta x_k}\to\infty}\sum_{k=1}^nf(\bar x_k)\Delta x_k\tag7
\end{equation}</script><p>其中$\Delta x_k$表示最长子区间的长度。</p>
<p><strong>注解2</strong>：(5)的总和称为下部和，因为它使用的内接矩形和从区域的下方逼近面积。我们也可以从上面逼近面积。粗略地说，我们依然使用之前的子区间作为底，但我们构建的矩形是曲线上面最低的。</p>
<p>为了用符号说明，我们用$M<em>k$表示第$k$个区间$[x</em>{k-1},x_k]$上$f(x)$的最大值。这个最大值假定在区间内点$\bar{\bar{x}}_k$处取得：</p>
<script type="math/tex; mode=display">

f(\bar{\bar{x}}_k)=M_k,\qquad x_{k-1}\leq \bar{\bar{x}}_k\leq x_k</script><p>矩形面积之和为</p>
<script type="math/tex; mode=display">
\begin{equation}
S_n=\sum_{k=1}^nf(\bar{\bar x}_k)\Delta x_k\tag8
\end{equation}</script><p>这称作上部和，因此它从上面逼近区域面积，如图4所示。几何直觉告诉我们，当取上部和的极限时，我们同样能得到较好的区域面积，所以我们有</p>
<script type="math/tex; mode=display">
\begin{equation}
{\rm {area\ of\ region}}=\lim_{ {\rm max\ \Delta x_k}\to\infty}\sum_{k=1}^nf(\bar{\bar x}_k)\Delta x_k\tag9
\end{equation}</script><p>然而，除了直觉(有时会产生误导)外，它可以用纯数学定理来证明，对任何连续函数，(7)(9)的极限都存在且有相同的函数值。</p>
<center>
<img src="/2020/07/08/Stroll-calculus-6-4-The-Area-under-a-Curve-Defnite-Integrals-Riemann/20160825154243955" alt="这里写图片描述" title>
图4
</center>

<p>更进一步，如果$x<em>k^*$取第$k$个区间$[x</em>{k-1},x_k]$上$f(x)$的任意一点，那么我们有</p>
<script type="math/tex; mode=display">

s_n\leq \sum_{k=1}^nf(x_k^*)\Delta x_k\leq S_n</script><p>那么(7)(9)描述的定理就能换成如下的形式</p>
<script type="math/tex; mode=display">
\begin{equation}
{\rm {area\ of\ region}}=\lim_{ {\rm max\ \Delta x_k}\to\infty}\sum_{k=1}^nf(x_k^*)\Delta x_k\tag{10}
\end{equation}</script><p>其中对$x<em>k^*$只存在一个约束$x</em>{k-1}\leq x_k^*\leq x_k$</p>
<p><strong>注解3</strong>：(10)或(7)或(9)的极限用标准的莱布尼兹符号表示是</p>
<script type="math/tex; mode=display">
\begin{equation}
\int_a^bf(x)dx\tag{11}
\end{equation}</script><p>如果要写出(11)的定义，</p>
<script type="math/tex; mode=display">
\begin{equation}
\int_a^bf(x)dx=\lim_{ {\rm max\ \Delta x_k}\to\infty}\sum_{k=1}^nf(x_k^*)\Delta x_k\tag{12}
\end{equation}</script><p>左侧符号的每一部分都在提醒我们相应的右侧逼近和的部分。积分符号$\int$是拉长的字母$S$，就像“sum”，因为定积分和和的相似性所以选择了它；(12)的极限端似乎用$\int$替换了$\sum$。此外，常用的增量符号$\Delta$用字母$d$取代，这提醒我们这是个极限运算，就像莱布尼茨符号$dy/dx$。 因此，对于(12)的极限端</p>
<script type="math/tex; mode=display">
\begin{align*}
\sum_{k=1}^n\qquad&{\rm becomes}\qquad \int_a^b\\
f(x_k^*)\qquad&{\rm becomes}\qquad f(x)\\
\Delta x_k\qquad&{\rm becomes}\qquad dx
\end{align*}</script><p>积分符号上的数字$a,b$叫做积分的上下限。定积分中，积分限总是存在的，这有助于区分不定积分</p>
<script type="math/tex; mode=display">

\int f(x)dx</script><p>(11)中的函数$f(x)$称为被积函数，变量$x$是积分变量。作为定积分直观特征的$dx$，我们后面后详细介绍。</p>
<p><strong>注解4</strong>：目前为止，我们采纳朴素但合理的态度，即图像区域下方的面积明显存在，而且我们需要做的是设计方法来计算它。然而，下面的示例表明，情况比我们想象的要复杂。</p>
<p>考虑区间$[0,1]$上的函数$f(x)$</p>
<script type="math/tex; mode=display">

f(x)=\left\{
\begin{array}{ll}
0&\text{如果$x$是有理数}\\
1&\text{如果$x$是无理数}
\end{array}\right.</script><p>图像如图5所示，这个函数是不连续的，因为至少存在一个无理数介于每对有理数之间并且至少存在一个有理数介于每对无理数之间。根据此图，区域的面积是什么呢？很容易看到每个下部和是0而上部和是1，所以由(7)计算面积的面积是0和由(9)计算的面积是1。此外，(12)右边的极限不存在。像这种情况，面积的概念还有意义吗？</p>
<p>这个怪异的例子给出了以下间接但更有逻辑的面积问题的求法。如果我们给定一个有界的非负函数$f(x)$，但在区间$[a,b]$上不一定连续，现在我们开始检查(12)右边的极限。如果极限存在，那么我们将它定义为区域下面的面积，并且我们说函数$f(x)$在$[a,b]$上是可积的。如果极限不存在，那么将面积的没有意义。我们在实践中遇到几乎所有函数都是连续的，注解2所述的定理保证每个连续函数是可积的，所以这些逻辑的细点在我们大多数的工作中意义不大。然而，这些问题从微积分基本理论的角度来讲是有趣和重要的，学生应该知道他们，即便我们不去强调他们。</p>
<center>
<img src="/2020/07/08/Stroll-calculus-6-4-The-Area-under-a-Curve-Defnite-Integrals-Riemann/20160825154331535" alt="这里写图片描述" title>
图5
</center>

<p>这里定义的定积分通常称为黎曼积分，他是十九世纪德国数学家，因为他第一个给出了不连续函数积分的详细讨论，所以为了纪念他就称为黎曼积分。此外，(12)右侧的和通常称为黎曼和。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/52315238" target="_blank" rel="noopener">漫步微积分二十七——曲线下的面积 定积分 黎曼</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分6.5 - 极限思想下的面积计算</title>
    <url>/2020/07/08/Stroll-calculus-6-5-The-Computation-of-Areas-as-Limits/</url>
    <content><![CDATA[<p>上篇文章中讨论的概念给出了计算面积的实际过程。现在我们利用一些实例来测试这个过程是如何工作的。</p>
<p><strong>例1</strong>：考虑区间$[0,b]$上的函数$y=f(x)=x$。图像(图1)下面的区域是高和底都为$b$的矩形，所以它的面积明显是$b^2/2$。然而，我们需要去证实我们极限过程给出相同的答案，更重要的是，理解立即过程如何给出答案。</p>
<center>
<img src="/2020/07/08/Stroll-calculus-6-5-The-Computation-of-Areas-as-Limits/20160826201301972" alt="这里写图片描述" title>
图1
</center>

<a id="more"></a>
<p>$n$是一个正整数，区间$[0,b]$分割成相等的$n$个子区间，得到$n-1$个间断点</p>
<script type="math/tex; mode=display">
\begin{equation}
x_1=\frac{b}{n},\quad x_2=\frac{2b}{n},\ldots,x_{n-1}=\frac{(n-1)b}{n}\tag1
\end{equation}</script><p>矩形的底是$\Delta x_k=b/n$，如果我们用图1那样的上部和，那么矩形的高为</p>
<script type="math/tex; mode=display">

f(x_1)=\frac{b}{n},\quad f(x_2)=\frac{2b}{n},\ldots,f(x_{n-1})=\frac{(n-1)b}{n}</script><p>于是我们有</p>
<script type="math/tex; mode=display">
\begin{align*}
S_n
&=\left(\frac{b}{n}\right)\left(\frac{b}{n}\right)+\left(\frac{2b}{n}\right)\left(\frac{b}{n}\right)+\cdots+\left(\frac{nb}{n}\right)\left(\frac{b}{n}\right)\\
&=\frac{b^2}{n^2}(1+2+\cdots+n)
\end{align*}</script><p>利用之前讲过的求和公式，可以写成</p>
<script type="math/tex; mode=display">

S_n=\frac{b^2}{n^2}\cdot\frac{n(n+1)}{2}=\frac{b^2}{2}\cdot\frac{n}{n}\cdot\frac{n+1}{n}=\frac{b^2}{2}\left(1+\frac{1}{n}\right)</script><p>所以我们得到</p>
<script type="math/tex; mode=display">

{\rm {area\ of\ region}}=\lim_{n\to\infty}S_n=\lim_{n\to\infty}\frac{b^2}{2}\left(1+\frac{1}{n}\right)=\frac{b^2}{2}</script><p>这就是开始我们得到的。用定积分的符号表示就是</p>
<script type="math/tex; mode=display">
\begin{equation}
\int_a^bxdx=\frac{b^2}{2}\tag2
\end{equation}</script><p>在本例中我们选择了相等的子区间及上部和。不代表必须作出这些选择；我们的目的仅仅是为了使计算尽可能容易。</p>
<p><strong>例2</strong>：现在考虑区间$[0,b]$上的函数$y=f(x)=x^2$，如图2所示。$n$是一个正整数，区间$[0,b]$分割成相等的$n$个子区间，长度为$\Delta x_k=b/n$。我们继续用上部和$S_n$，所以矩形的高度为</p>
<script type="math/tex; mode=display">

f(x_1)=\left(\frac{b}{n}\right)^2,\quad f(x_2)=\left(\frac{2b}{n}\right)^2,\ldots,f(x_{n-1})=\left(\frac{(n-1)b}{n}\right)^2</script><p>从而得到</p>
<script type="math/tex; mode=display">
\begin{align*}
S_n
&=\left(\frac{b}{n}\right)^2\left(\frac{b}{n}\right)+\left(\frac{2b}{n}\right)^2\left(\frac{b}{n}\right)+\cdots+\left(\frac{nb}{n}\right)^2\left(\frac{b}{n}\right)\\
&=\frac{b^3}{n^3}(1^2+2^2+\cdots+n^2)
\end{align*}</script><p>利用前面文章提到的公式，上式可写为</p>
<script type="math/tex; mode=display">
\begin{align*}
S_n
&=\frac{b^3}{n^3}\cdot\frac{n(n+1)(2n+1)}{6}=\frac{b^3}{6}\cdot\frac{n}{n}\cdot\frac{n+1}{n}\cdot\frac{2n+1}{n}\\
&=\frac{b^3}{6}\left(1+\frac{1}{n}\right)\left(2+\frac{1}{n}\right)
\end{align*}</script><p>当$n\to\infty$时我们得到</p>
<script type="math/tex; mode=display">

{\rm {area\ of\ region}}=\lim_{n\to\infty}S_n=\frac{b^3}{3}</script><p>或等价地</p>
<script type="math/tex; mode=display">
\begin{equation}
\int_a^bx^2dx=\frac{b^3}{3}\tag3
\end{equation}</script><center>
<img src="/2020/07/08/Stroll-calculus-6-5-The-Computation-of-Areas-as-Limits/20160826201407770" alt="这里写图片描述" title>
图2
</center>

<p>用同样的方式我们可以得到$y=f(x)=x^3$的定积分</p>
<script type="math/tex; mode=display">
\begin{equation}
\int_a^bx^3dx=\frac{b^4}{4}\tag4
\end{equation}</script><p>很自然地我们根据(2)(3)(4)可以猜想</p>
<script type="math/tex; mode=display">
\begin{equation}
\int_a^bx^ndx=\frac{b^{n+1}}{n+1}\tag5
\end{equation}</script><p>它可能对所有正整数$n=1,2,3,\ldots$成立。对于$n=3,4,\ldots,9$的情况，(5)的有效性由意大利数学家Cavalieri在1635年和1647年建立起来，但他费力的几何方法在$n=10$时就很难进行下去。几年以后费马发现了这个美丽的论点，一次就证明了(5)对所有正整数成立。这个论点有点远离我们的这里的主题。</p>
<p><strong>例3</strong>：接下来，我们找出余弦曲线$y=\cos x$下的面积，从$x=0$开始到$x=b$，其中$0&lt;b\leq \pi/2$(图3)。$n$是一个正整数，将区间$[0,b]$分割成相等的$n$个子区间，长度为$\Delta x_k=b/n$。这次我们用下部和$s_n$。因为函数是递减的，所以$\bar x_k$是子区间的右端点。连续矩形的高度是</p>
<script type="math/tex; mode=display">

\cos\frac{b}{n},\quad\cos\frac{2b}{n},\quad\cdots,\cos\frac{nb}{n}</script><p>从而</p>
<script type="math/tex; mode=display">

s_n=\left(\cos\frac{b}{n}\right)\left(\frac{b}{n}\right)+\left(\cos\frac{2b}{n}\right)\left(\frac{b}{n}\right)+\cdots+\left(\cos\frac{nb}{n}\right)\left(\frac{b}{n}\right)=\frac{b}{n}\sum_{k=1}^n\cos\frac{kb}{n}</script><p>为了计算$n\to\infty$时的极限，需要用到下面的计算结果</p>
<script type="math/tex; mode=display">

\sum_{k=1}^n\cos kx=\frac{\sin\frac{1}{2}nx\cos\frac{1}{2}(n+1)x}{\sin\frac{1}{2}x}</script><p>其中$x=b/n$。从而我们得到</p>
<script type="math/tex; mode=display">
\begin{align}
{\rm {area\ of\ region}}
&=\lim_{n\to\infty}s_n\nonumber\\
&=\lim_{n\to\infty}\frac{b}{n}\cdot\frac{\sin\frac{1}{2}b\cos\left[\frac{(n+1)b}{2n}\right]}{\sin(b/2n)}\tag6
\end{align}</script><p>为了计算极限，考虑到余弦函数是连续的，可以看出</p>
<script type="math/tex; mode=display">

\cos\left[\frac{(n+1)b}{2n}\right]=\cos\left(1+\frac{1}{n}\right)\frac{b}{2}\to\cos\frac{b}{2}\quad as\quad n\to \infty</script><p>接下来，如果选$\theta=b/2n$，那么当$n\to \infty$时，$\theta\to 0$那么</p>
<script type="math/tex; mode=display">

\frac{b}{n}\cdot\frac{1}{\sin(b/2n)}=2\cdot\frac{b/2n}{\sin(b/2n)}=2\cdot\frac{\theta}{\sin\theta}\to 2\quad as\quad n\to \infty</script><p>利用这些事实(6)可写为</p>
<script type="math/tex; mode=display">

{\rm {area\ of\ region}}=\lim_{n\to\infty}s_n=2\sin\frac{b}{2}\cos\frac{b}{2}=\sin b</script><p>或者等价地</p>
<script type="math/tex; mode=display">

\int_0^b\cos xdx=\sin b</script><center>
<img src="/2020/07/08/Stroll-calculus-6-5-The-Computation-of-Areas-as-Limits/20160826201500169" alt="这里写图片描述" title>
图3
</center>

<p><a href="https://blog.csdn.net/u010182633/article/details/52331436" target="_blank" rel="noopener">漫步微积分二十八——极限思想下的面积计算</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分6.6 - 微积分基本定理</title>
    <url>/2020/07/08/Stroll-calculus-6-6-The-Fundamental-Theorem-of-Calculus/</url>
    <content><![CDATA[<p>目前为止，我们通过逼近和的极限，得到了一个相当复杂的连续函数定积分的定义，</p>
<script type="math/tex; mode=display">
\begin{equation}
\int_a^bf(x)dx=\lim_{ {\rm max\ \Delta x_k}\to\infty}\sum_{k=1}^nf(x_k^*)\Delta x_k\tag1
\end{equation}</script><a id="more"></a>
<p>之前我们已经用这个定义计算了一些简单的积分，例如</p>
<script type="math/tex; mode=display">
\begin{equation}
\int_0^bxdx=\frac{b^2}{2},\quad \int_0^bx^2dx=\frac{b^3}{3},\quad and\quad \int_0^bx^3dx=\frac{b^4}{4}\tag2
\end{equation}</script><p>这些计算有两个目的：通过提供一些逼近和的直观经验来强调积分的基本性质，并且这种方法得到的极限值可以作为计算其他积分的实用工具。那么，我们可以利用极限和的方方求解下面更复杂的积分吗？</p>
<script type="math/tex; mode=display">
\begin{equation}
\int_0^1\frac{x^4}{\sqrt[3]{7+x^5}}dx\quad and\quad \int_1^2\left(1+\frac{1}{x}\right)^4\frac{dx}{x^2}\tag3
\end{equation}</script><p>这显然是不可能的，所以我们该何去何从呢？显然我们需要的是一种更高效、更强大的计算积分方法，而这种方法就是牛顿和莱布尼兹的想法。</p>
<p>牛顿-莱布尼兹解决(1)那样积分问题的计算方法乍一看似乎是自相矛盾的。为了解决这个问题，我们用更难的问题来替换它。我们不求解图1左那样固定的面积，而是图1右边变化的面积，图像右边的边界是可以移动的，这样的话面积就是$x$ 的函数。面积函数用$A(x)$表示，那么显然左边图中$A(a)=0,A(b)$表示固定的面积。我们的目标是找到一个$A(x)$的显示公式，然后通过设置$x=b$来确定所需的面积。在这个过程中有几个步骤，为了清楚起见，我们单独考虑。</p>
<center>
<img src="/2020/07/08/Stroll-calculus-6-6-The-Fundamental-Theorem-of-Calculus/20160827180235824" alt="这里写图片描述" title>
图1
</center>

<p><strong>步骤1</strong>：我们通过建立重要的事实</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{dA}{dx}=f(x)\tag4
\end{equation}</script><p>开始。这是说面积$A$关于$x$的变化率等于区域右边界的长度。为了证明这个命题，我们必须考虑导数的定义</p>
<script type="math/tex; mode=display">

\frac{dA}{dx}=\lim_{\Delta x\to 0}\frac{A(x+\Delta x)-A(x)}{\Delta x}</script><p>现在$A(x)$是图像下边$a,x$之间的面积，$A(x+\Delta  x)$ 是$a,x+\Delta x$之间的面积。因此，分子$A(x+\Delta x)-A(x)$是$a,x+\Delta x$之间的面积(看图2中阴影部分的面积)。很容易看出面积等于有着相同底，高为$f(\bar x)$的矩形面积，其中$\bar x$是$x,x+\Delta x$之间的某个点。由它我们继续(4)的证明：</p>
<script type="math/tex; mode=display">
\begin{align*}
\frac{dA}{dx}&=\lim_{\Delta x\to 0}\frac{A(x+\Delta x)-A(x)}{\Delta x}=\lim_{\Delta x\to 0}\frac{f(\bar x)\Delta x}{\Delta x}\\
&=\lim_{\Delta x\to 0}f(\bar x)=f(x)
\end{align*}</script><p>利用到$f(x)$是连续函数。为了更加详细的解释最后一步，我们指出$\Delta x\to 0$等价于$x+\Delta x\to x$；因为$\bar x$位于$x,x+\Delta x$之间，所以$\bar x\to x$，现在利用函数的连续性得$f(\bar x)\to f(x)$</p>
<center>
<img src="/2020/07/08/Stroll-calculus-6-6-The-Fundamental-Theorem-of-Calculus/20160827180305090" alt="这里写图片描述" title>
图2
</center>

<p><strong>步骤2</strong>：方程(4)告诉我们，找到面积函数$A(x)$就能实现我们的目标。根据(4)，$A(x)$是函数$f(x)$的反导之一。但是，如果$F(x)$是任何一个$f(x)$的反导，根据前面不定积分的知识我们有</p>
<script type="math/tex; mode=display">
\begin{equation}
A(x)=F(x)+c\tag5
\end{equation}</script><p>$c$是常数值。为了确定$c$，我们令$x=a$，从而得到$A(a)=F(a)+c$；但是因为$A(a)=0$，从而得出$c=-F(a)$。因此</p>
<script type="math/tex; mode=display">
\begin{equation}
A(x)=F(x)-F(a)\tag6
\end{equation}</script><p>就是需要的公式。</p>
<p><strong>步骤3</strong>：根据(6)和$A(x)$的意义，其余的工作就是观察</p>
<script type="math/tex; mode=display">

\int_a^bf(x)dx=A(b)=F(b)-F(a)</script><p>我们用正式地微积分基本定理总结我们得到的结论：</p>
<p><strong>如果$f(x)$是闭区间$[a,b]$上的连续函数，并且$F(x)$是$f(x)$的任何一个原函数，即$(d/dx)F(x)=f(x)$或等价地</strong></p>
<script type="math/tex; mode=display">
\begin{equation}
\int f(x)dx=F(x)\tag7
\end{equation}</script><p><strong>那么</strong></p>
<script type="math/tex; mode=display">
\begin{equation}
\int_a^bf(x)dx=F(b)-F(a)\tag8
\end{equation}</script><p>这个定理将计算极限和的问题转变成更容易的找原函数的问题，从而减小了评估定积分问题。因此，为了找出$\int_a^bf(x)dx$ 的值，我们没必要考虑求和；我们只是找到原函数即可，可以用任何方式如猜测、常规计算、巧妙计算或查书，然后计算$F(b)-F(a)$的值。</p>
<p>例如，在上篇文章中，我们利用许多代数技巧得到了公式(2)。现在，借助基本定理，下面简单的公式就像明显的事实：</p>
<script type="math/tex; mode=display">

\int_0^bxdx=\frac{b^2}{2},\quad \int_0^bx^2dx=\frac{b^3}{3},\quad and\quad \int_0^bx^3dx=\frac{b^4}{4}</script><p>更一般地，对任何指数$n&gt;0$，明显可以得出</p>
<script type="math/tex; mode=display">

\int_a^bx^ndx=\frac{b^{n+1}}{n+1}-\frac{a^{n+1}}{n+1},\quad because\quad \int x^ndx=\frac{x^{n+1}}{n+1}</script><p><strong>注解1</strong>： 在计算问题的过程中，使用括号是很方便的</p>
<script type="math/tex; mode=display">
\begin{equation}
F(x)\big |_a^b=F(b)-F(a)\tag9
\end{equation}</script><p>符号的意思就是说：$x$上限为$b$时的$F(x)$值减去$x$下限为$a$时的$F(x)$就是我们要找的数。例如$x^2\big|_3^4=4^2-3^2=16-9=7$。利用这个符号，(8)可以写成</p>
<script type="math/tex; mode=display">

\int_a^bf(x)dx=F(x)\big|_a^b</script><p><strong>注解2</strong>：从这次讨论中可以看出，任何$f(x)$的原函数都用(8)解决。如果对此还有疑问，那么回顾一下，如果$F(x)$是一个原函数，那么其他任何一个都可以通过添加一个常数$c$得到即$F(x)+c$；因为</p>
<script type="math/tex; mode=display">

F(x)+c\big|_a^b=[F(b)+c]-[F(a)+c]=F(b)-F(a)</script><p>常数$c$对结果没有影响。因此当计算定积分要找原函数时，我们可以忽略常数。(然而，当我们要解决微分方程时，这些常量是不可或缺。)</p>
<p><strong>例1</strong>：计算下面的定积分：</p>
<script type="math/tex; mode=display">

(a)\int_{-1}^2x^4dx\quad(b)\int_1^{16}\frac{dx}{\sqrt{x}}\quad(c)\int_8^{27}\sqrt[3]{x}dx\quad(d)\int_{13}^{14}(x-13)^{10}dx</script><p><strong>解</strong>：通过观察每个原函数都比较容易得到：</p>
<script type="math/tex; mode=display">
\begin{align*}
&(a)\int_{-1}^2x^4dx=\frac{1}{5}x^5\big|_{-1}^{2}=\frac{1}{5}[32-(-1)]=\frac{33}{5}\\
&(b)\int_1^{16}\frac{dx}{\sqrt{x}}=2\sqrt{x}\big|_{1}^{16}=2(4-1)=6\\
&(c)\int_8^{27}\sqrt[3]{x}dx=\frac{3}{4}x^{4/3}\big|_{8}^{27}=\frac{3}{4}(81-16)=\frac{195}{4}\\
&(d)\int_{13}^{14}(x-13)^{10}dx=\frac{1}{11}(x-13)^{11}\big|_{13}^{14}=\frac{1}{11}(1-0)=\frac{1}{11}
\end{align*}</script><p>基本定理在定积分和原函数之间建立了连接。该连接习惯使用积分符号表示原函数，就像(7)那样，并用不定积分替换了原函数。读者应该熟悉这些用法。从这个角度上，我们经常会放弃形容词(不定，定)，单独用积分一次表示函数(7)或数(8)，这需要上下文以及读者对所陈述事情的理解从而避免混淆。为了正确区分，我们强调定积分积分符号上有上下限，而不定积分从来没有这种。</p>
<p>我们对使用这种相似符号$\int f(x)dx,\int_a^bf(x)dx$从而对大家引起困惑感到很抱歉，虽然他们表示非常不同的概念。然而，这些符号经历了300多年，现在试图改变他们没有多大用处。几年前，一位作者试图引进符号$A[f(x)]$取代$\int f(x)dx$。他的书比昨天报纸消失的都快。相反，学生有责任读懂符号$\int f(x)dx,\int_a^bf(x)dx$。就像我们认真阅读所有单词，从而可以区分类似于”peak”和”peek”，”venal”和”venal”，”manor”和“manner”，数学必须我们更加认真的阅读。</p>
<p>根据前面学习到的经验，我们知道(或许可以计算)许多不定积分和定积分我们都能求解。尤其是，定积分(3)也不是那么难计算了。</p>
<p><strong>例2</strong>：计算</p>
<script type="math/tex; mode=display">

\int_0^1\frac{x^4}{\sqrt[3]{7+x^5}}dx</script><p><strong>解</strong>：为了清楚起见，我们分别考虑不定积分。换元</p>
<script type="math/tex; mode=display">

u=7+x^5\quad du=5x^4dx</script><p>从而</p>
<script type="math/tex; mode=display">
\begin{align*}
\int\frac{x^4}{\sqrt[3]{7+x^5}}dx=\int(7+x^5)^{-1/3}x^4dx
&=\int u^{-1/3}\left(\frac{1}{5}du\right)=\frac{1}{5}\int u^{-1/3}du\\
&=\frac{1}{5}\cdot\frac{3}{2}u^{2/3}\\
&=\frac{3}{10}(7+x^5)^{2/3}
\end{align*}</script><p>利用基本定理得</p>
<script type="math/tex; mode=display">

\int_0^1\frac{x^4}{\sqrt[3]{7+x^5}}dx=\frac{3}{10}(7+x^5)^{2/3}\big|_0^1=\frac{3}{10}(4-7^{2/3})=\frac{3}{10}(4-\sqrt[3]{49})</script><p><strong>例3</strong>：计算</p>
<script type="math/tex; mode=display">

\int_1^2\left(1+\frac{1}{x}\right)^4\frac{dx}{x^2}</script><p><strong>解</strong>：换元</p>
<script type="math/tex; mode=display">

u=1+\frac{1}{x},\quad du=-\frac{dx}{x^2}</script><p>所以</p>
<script type="math/tex; mode=display">
\begin{align*}
\int\left(1+\frac{1}{x}\right)^4\frac{dx}{x^2}=\int u^4(-du)
&=-\frac{1}{5}u^5\\
&=-\frac{1}{5}\left(1+\frac{1}{x}\right)^5
\end{align*}</script><p>根据基本定理</p>
<script type="math/tex; mode=display">
\begin{align*}
\int_1^2\left(1+\frac{1}{x}\right)^4\frac{dx}{x^2}
&=-\frac{1}{5}\left(1+\frac{1}{x}\right)^5\Big|_1^2\\
&=-\frac{1}{5}\left(\frac{243}{32}-32\right)=\frac{781}{160}
\end{align*}</script><p><strong>例4</strong>：求曲线$y=\cos x$下面，从$x=0$到$x=b$所围成的面积，其中$0&lt;b\leq\pi/2$</p>
<p><strong>解</strong>：面积(看图1)可以用定积分给出</p>
<script type="math/tex; mode=display">

\int_0^b\cos xdx</script><p>但是我们熟悉不定积分</p>
<script type="math/tex; mode=display">

\int\cos xdx=\sin x</script><p>所以我们立刻得出</p>
<script type="math/tex; mode=display">

\int_0^b\cos xdx=\sin x\big|_0^b=\sin b-\sin 0=\sin b</script><p>与求极限和相比，可以清晰的看出基本定理的强大。之前极限和的计算很难，还要知道晦涩的三角恒等式，而知道了基本定理后，这里的计算依然很容易。</p>
<p><strong>注解3</strong>：牛顿和莱布尼兹大约在同一时间相互独立的发现了微积分。然而，导数是切线的斜率和定积分是曲线下面积这些概念是在他们之前许多思想家都知道。在这种情况下，为什么是给予牛顿和莱布尼兹创建这个新数学分支的荣誉呢(该分支在西方文明的主要特征中，可以说是支柱)？主要是因为他们是微积分基本定理的主要发现者。他们理解到它的重要性，并开始构建所需的支撑材料，将其成功应用到科学和几何的问题上。</p>
<p>然而，科学历史学家将基本定理的根源追溯到早些时候Barrow 和Pascal的几何工作上，他们的著作影响了牛顿和莱布尼兹。正如牛顿(他不是一个谦虚的人)说过的：如果我看得更远，那是因为我站在巨人的肩膀上。这是他难得一次的自我贬低。这些巨人之一还有费马，他第一个证明图3所述的面积公式。这表明，他必须知道基本定理(这似乎是最便捷的方法)。但不幸的是他没有注意到它。</p>
<p>微积分基本定理无疑是人类思想最伟大的成就之一。当我们考虑数学和物理的后续发展在多大程度的取决于它时，它也是最有影响力的成就之一。在它被发现之前，从公元前三世纪的阿基米德到十七世纪中叶的费马，找出曲线面积、体积和长度问题非常困难，只有天才可能想着去解决他们，并且任何一代都只有少数人。但现在，牛顿、莱布尼兹以及他们的追随者在基本定理的基础上提出了大量的系统方法，之后我们会对这些问题进行探讨。</p>
<center>
<img src="/2020/07/08/Stroll-calculus-6-6-The-Fundamental-Theorem-of-Calculus/20160827180429105" alt="这里写图片描述" title>
图3
</center>

<p><a href="https://blog.csdn.net/u010182633/article/details/52336301" target="_blank" rel="noopener">漫步微积分二十九——微积分基本定理</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分6.7 - 定积分的性质</title>
    <url>/2020/07/08/Stroll-calculus-6-7-Properties-of-Definite-Integrals/</url>
    <content><![CDATA[<h2 id="代数和几何面积"><a name="t0"></a><a name="t0"></a>代数和几何面积</h2>

<p>在前面的章节我们考虑了曲线$y=f(x)$下方和$x=a,x-b$之间围成区域的面积，还有两个假设分别是$(1)f(x)\geq 0;(2)a&lt;b$。然而通过逼近和的极限来定义定积分的公式即</p>
<script type="math/tex; mode=display">
\begin{equation}
\int_a^bf(x)dx=\lim_{ {\rm max\ \Delta x_k}\to\infty}\sum_{k=1}^nf(x_k^*)\Delta x_k\tag1
\end{equation}</script><a id="more"></a>
<p>不依赖于这两个假设。</p>
<p>例如，假设曲线位于$x$轴下方，如图1左边所示。在这种情况下，我们会质疑说曲线下边的区域，但我们肯定可以用曲线，$x$轴在$x=a,x=b$围成的区域来描述他。(1)中的每一项显然是负的因为$f(x_k^<em>)&lt;0$。因此，$f(x_k^</em>)&lt;0\Delta x_k$是阴影矩形面积负值，该区域面积的积分是负值，因此</p>
<script type="math/tex; mode=display">

{\rm{area\ of\ the\ region}}=-\int_a^bf(x)dx</script><p>同样，如果曲线部分在$x$轴上部，部分在下部，如图1右所示，那么积分(1)可以看做正项和负项的和，对应与$x$轴上面和下面的部分：</p>
<script type="math/tex; mode=display">
\begin{equation}
\int_a^bf(x)dx=A_1-A_2+A_3-A_4\tag2
\end{equation}</script><p>其中面积$A_1,A_2,A_3,A_4$都是正的。积分(2)经常称作区域的代数面积，因为在计算面积是，位于$x$轴上方的取正，位于下方的取负。如果每部分都取正数的话，得到的是几何面积：</p>
<script type="math/tex; mode=display">
\begin{equation}
A_1+A_2+A_3+A_4=\int_a^c-\int_c^d+\int_d^e-\int_e^b\tag3
\end{equation}</script><p>为了求出几何面积，我们必须画出图像，得到交点然后分别计算(3)右边的每个积分，这样的话就能得到正确的符号组合。</p>
<center>
<img src="/2020/07/08/Stroll-calculus-6-7-Properties-of-Definite-Integrals/20160828210338502" alt="这里写图片描述" title>
图1
</center>

<h2 id="其他性质"><a name="t1"></a><a name="t1"></a>其他性质</h2>

<p>如果我们去掉条件$a<b$而用相反的假定$a>b$，我们仍然可以保留定积分的纯数字定义(l)。因为我们从$a$到$b$遍历区间，所以增量$\Delta x_k^*$为负，这是唯一的变化。由此得到方程</b$而用相反的假定$a></p>
<script type="math/tex; mode=display">
\begin{equation}
\int_a^bf(x)dx=-\int_b^af(x)dx\tag4
\end{equation}</script><p>对于所有的$a,b(a\neq b)$都是成立的。另外，因为(4)表明交换积分的上下限会改变积分的符号，所以很自然得出</p>
<script type="math/tex; mode=display">
\begin{equation}
\int_a^af(x)dx=0\tag5
\end{equation}</script><p>如果$a&lt;b$，$c$是$a,b$间的任何一个数，根据(1)很容易得到</p>
<script type="math/tex; mode=display">
\begin{equation}
\int_a^bf(x)dx=\int_a^cf(x)dx+\int_c^bf(x)dx\tag6
\end{equation}</script><p>性质(4)(5)告诉我们(6)对任意的三个数$a,b,c$都成立，不管他们互相之间是否存在关系。</p>
<p>根据定义(1)，我们进一步列出了一些定积分的性质：</p>
<script type="math/tex; mode=display">
\begin{align}
\int_a^bcf(x)dx&=c\int_a^bf(x)dx\tag7\\
\int_a^b[f(x)+g(x)]dx&=\int_a^bf(x)dx+\int_a^bg(x)dx\tag8\\
{\rm if\ }f(x)\leq g(x)\ on\ [a,b],\quad &{\rm then}\quad \int_a^bf(x)dx\leq \int_a^bg(x)dx\tag9
\end{align}</script><p>换句话说，性质(7)表示常数因子可以移到积分符号外边，(8)表示和的积分等于单个积分的和。</p>
<h2 id="变积分限"><a name="t2"></a><a name="t2"></a>变积分限</h2>

<p>在书写定积分时，我们将$x$作为积分变量</p>
<script type="math/tex; mode=display">
\begin{equation}
\int_a^bf(x)dx\tag{10}
\end{equation}</script><p>然而，(10)是一个固定的数，其值并不取决于用哪个字母来表示变量。除了(10)，我们同样可以写为</p>
<script type="math/tex; mode=display">

\int_a^bf(t)dt\quad \int_a^bf(u)du</script><p>或任何类似的表达式，其意义都是一样的。用这种方式表示的字母通常被称为虚拟变量。</p>
<p>在大多数情况下，使用什么字母都无所谓，只要想法理解清楚就行。然而，有时我们想要通过积分给定的函数$f(x)$来构建一个新函数$F(x)$，积分下限为$a$，上限是一个变量，如下所示</p>
<script type="math/tex; mode=display">
\begin{equation}
F(x)=\int_a^xf(x)dx\tag{11}
\end{equation}</script><p>很明显这种用法可能会造成混淆，因为右边的字母$x$有两种不同的含义：积分上限，虚拟变量。为此，习惯上，我们将(11)写成以下形式</p>
<script type="math/tex; mode=display">
\begin{equation}
F(x)=\int_a^xf(t)dt\tag{12}
\end{equation}</script><p>将$t$作为虚拟变量代替$x$</p>
<p>(12)定义的函数$F(x)$具有两个重要的性质。首先，只要被积函数是在$a,x$区间上是连续的，那么积分肯定存在。第二，此函数的导数是被积函数上限的值：</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{d}{dx}F(x)=\frac{d}{dx}\int_a^xf(t)dt=f(x)\tag{13}
\end{equation}</script><p>对于任何给定的连续函数$f(x)$，为了找出不定积分，它提供了令人满意的理论解。作为一个实际的问题，可能很难(甚至是不可能)用任何熟悉的函数来计算</p>
<script type="math/tex; mode=display">

\int f(x)dx=F(x)</script><p>但是，即使我们找不到$F(x)$的公式，至少我们知道，原则上连续函数的不定积分总是存在的，即(12)定义的函数。</p>
<p><strong>例1</strong>：找出下面不定积分问题的一个显式公式</p>
<script type="math/tex; mode=display">

\int\frac{dx}{\sqrt[3]{x^{10}+1}}=F(x)</script><p>现在我们无法解决，并且将永远无法解决。然而，如果我们不需要一个显式公式，而只是一个定义良好的函数，那么</p>
<script type="math/tex; mode=display">

F(x)=\int_0^x\frac{dt}{\sqrt[3]{t^{10}+1}}</script><p>就满足条件。</p>
<p><strong>例2</strong>：让我们试着计算</p>
<script type="math/tex; mode=display">

\frac{d}{dx}\left(\int_0^x\frac{dt}{1+t^2}\right)</script><p>目前这个阶段，我们无法找出一个可导的函数来表示括号内的积分。但这并不重要。根据(13)，我们立即得到</p>
<script type="math/tex; mode=display">

\frac{d}{dx}\left(\int_0^x\frac{dt}{1+t^2}\right)=\frac{1}{1+x^2}</script><p>因此在求导可以解决的时候下，没必要一定先求积分。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/52347779" target="_blank" rel="noopener">漫步微积分三十——定积分的性质</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分7.1 - 定积分的直观含义</title>
    <url>/2020/07/09/Stroll-calculus-7-1-Introduction-The-Intuitive-Meaning-of-Integration/</url>
    <content><![CDATA[<p>前面的文章中，我们完成了两个主要目的。首先，我们将面积近似为给定曲线下的面积，并利用他们和的极限求出确切的面积值。第二，通过使用更强大的方法微积分基本定理，我们学会了如何计算极限的数值解。几乎前几篇文章的整个内容可以被压缩成下面的命题：如果$f(x)$在$[a,b]$上是连续的，那么</p>
<script type="math/tex; mode=display">
\begin{align}
\lim_{ {\rm max}\Delta x\to 0}\sum_{k=1}^nf(x_k^*)\Delta x_k
&=\int_a^bf(x)dx\nonumber\\
&=F(x)\big|_a^b=F(b)-F(a)\tag1
\end{align}</script><a id="more"></a>
<p>其中$F(x)$是$f(x)$的任何一个不定积分。</p>
<p>在几何和物理中有许多其他量本质上可以用相同的方法来处理，例如体积、弧长、表面积和一些基本物理量。每种情况的处理过程都是相同的：独立变量的区间被划分成小的子区间，求解量用某种对应的和来近似，这些和的极限用定积分的形式得到确切值，它可以用基本定理来评估。</p>
<p>在求解曲线下面积的过程中，我们已经知道了极限和的细节，这就是前面文章讲到的。我们没有必要对所有遇到的量都考虑这些细节。所需要的符号既复杂又重复，阻碍了我们对它的直观理解。</p>
<p>本着这种精神，我们将其简化为图1的形式，并用简单与直观的方式来重建(1)中定积分的定义。我们认为曲线下的面积是由许多细长的垂直矩形组成的。在图中，典型的就是高为$y$宽为$dx$的窄带，因此面积为</p>
<script type="math/tex; mode=display">
\begin{equation}
dA=ydx=f(x)dx\tag2
\end{equation}</script><p>其中$y=f(x)$。这个面积叫做面积的微分单元，或者简称为面积的单元；它可以是区域的任何一个位置，只要确保$x$是$a,b$ 之间的值即可。现在我们将区域面积$A$看做这些面积单元$dA$的总和。这个加法用符号表示就是</p>
<script type="math/tex; mode=display">
\begin{equation}
A=\int dA\tag3
\end{equation}</script><p>因为面积单元穿过了$a$到$b$的所有区域，我们可以将(3)表示成更准确的形式</p>
<script type="math/tex; mode=display">
\begin{equation}
A=\int dA=\int ydx=\_a^bf(x)dx\tag4
\end{equation}</script><p>(4)中的最后一步我们得到了定积分，此时写出积分变量和积分极限。用这种方式我们省掉了繁琐的细节，直接得到面积的定积分，而且一点都不用考虑和的极限。</p>
<p>从这个角度来看，积分就是一个数值，我们可以将它分成很多个方便的小块，然后再将他们全部加起来即可。这就是积分过程的直观莱布尼茨方法，我们将在下篇文章中详细说明和加强对它的理解。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-1-Introduction-The-Intuitive-Meaning-of-Integration/20160829191058800" alt="这里写图片描述" title>
图1
</center>

<p><a href="https://blog.csdn.net/u010182633/article/details/52355767" target="_blank" rel="noopener">漫步微积分三十一——定积分的直观含义</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分7.2 - 两条曲线间的面积</title>
    <url>/2020/07/09/Stroll-calculus-7-2-The-Area-between-Two-Curves/</url>
    <content><![CDATA[<p>假设我们给出了两条曲线$y=f(x),yg(x)$，如图1所示，在$x=a,b$处有交点并且在区间$[a,b]$内第一条曲线位于第二条的上方，为了求出曲线之间的面积，很自然地想法是使用如图所示垂直的细条。在$x$处的高度为低点的曲线与高点之间的距离$f(x)-g(x)$，其底是$dx$。因此，面积的单元是</p>
<script type="math/tex; mode=display">

dA=[f(x)-g(x)]dx</script><p>总面积为</p>
<script type="math/tex; mode=display">
\begin{equation}
A=\int dA=\int_a^b[f(x)-g(x)]dx\tag1
\end{equation}</script><a id="more"></a>
<p>我们将较小的$a$设为积分下限，将$b$设为上限来计算积分值。这样的话增量(或者说微分)$dx$将一直是正的。另外还应该指出，当$x=a,b$时，两个函数产生相同的$y$值；也就是说，他们是方程$f(x)=g(x)$的解。为了找到它们，我们需要求解这个方程。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-2-The-Area-between-Two-Curves/20160830192233988" alt="这里写图片描述" title>
图1
</center>

<p>我们建议大家不要靠死记硬背记住公式(1)，并且机械的将它套用到面积问题上。我们的目标是掌握这个方法，利用几何思想与对问题从无到有的构造出所需公式都是为了达到这个目标。该方法同样适用于水平窄带，往往这样做会更方便。在这种情况下，窄带的宽度将是$dy$，总面积将通过对$y$积分得到。</p>
<p>作为大家的辅助手段，对用积分求面积的方法，我们列出了它所遵循的大纲：</p>
<ol>
<li>画出要求的面积区域，在图上写下边界曲线的方程并找到他们的交点。</li>
<li>确定用垂直窄带(宽为$dx$)还是水平窄带(宽为$dy$)，在图中画出一条窄带。</li>
<li>着图像并利用曲线边界的方程，写下窄带面积$dA$，也就是长和宽的乘积。将$dA$完全用变量($x$ 或$y$)表示出来。</li>
<li>在$x$或$y$的上下限之间积分$dA$，上下限可以通过检查图像得到。</li>
</ol>

<p><strong>例1</strong>：曲线$y=x^2,y=4$的边界围成的区域如图2所示，如果我们选用垂直窄带，那么它的长度为$4-x^2$，面积为$dA=(4-x^2)dx$。整个区域的面积为</p>
<script type="math/tex; mode=display">
\begin{align*}
\int_2^2(4-x^2)dx
&=4x-\frac{1}{3}x^3\big|_{-2}^2\\
&=(8-\frac{8}{3})-(-8+\frac{8}{3})=\frac{32}{3}
\end{align*}</script><p>我们建议大家尽可能使用对称来简化计算。在这种情况下，图像左右对称，所以我们只需计算从$x=0$到$x=2$之间的积分，它是面积的一半，然后乘以2就得到总面积：</p>
<script type="math/tex; mode=display">

2\int_0^2(4-x^2)dx=2(4x-\frac{1}{3}x^3)\big|_{0}^2=2(8-\frac{8}{3})=\frac{32}{3}</script><p>正如计算展示的那样，这样做有一个好处，就是一个积分的极限是0。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-2-The-Area-between-Two-Curves/20160830192207957" alt="这里写图片描述" title>
图2
</center>

<p>如果我们决定用水平窄带，那么长度就是右端的$x$值减去左端的$x$值。即$\sqrt{y}-{-\sqrt{y}}$，所以$dA=[\sqrt{y}-(-\sqrt{y})]dy=2\sqrt{y}dy$，整个面积是</p>
<script type="math/tex; mode=display">

\int_0^42\sqrt{y}dy=\frac{4}{3}y^{3/2}\Big|_0^4=\frac{32}{3}</script><p>答案跟以前一样，这并不奇怪，但不管这样令人放心。</p>
<p>我们曾经强调过好的图像对理解以及执行这些过程是多么重要。</p>
<p><strong>例2</strong>：曲线$y=3-x^2,y=x+1$的边界围成的区域如图3所示。通过求解方程可以很快求出交点，利用$y$值相等得</p>
<script type="math/tex; mode=display">
\begin{align*}
3-x^2&=x+1\\
x^2+x-2&=0\\
(x+2)(x-1)&=0\\
x&=-2,1
\end{align*}</script><p>交点是$(-2,-1),(1,2)$。垂直窄带的长度为$(3-x^2)-(x+1)=2-x^2-x$，所以区域的面积可以通过求积分$dA=(2-x^2-x)$得到，上下限是$-2,1$</p>
<script type="math/tex; mode=display">
\begin{align*}
\int_{-2}^1((2-x^2-x)dx
&=(2x-\frac{1}{3}x^3-\frac{1}{2}x^2)\big|_{-2}^1\\
&=(2-\frac{1}{3}-\frac{1}{2})-(-4+\frac{8}{3}-2)=4\frac{1}{2}
\end{align*}</script><p>在这个问题中，使用水平窄带比较麻烦，因为如果$y<2$，水平窄带显然是从抛物线左半部分到达到直线的，如果$y>2$，它是从抛物线左半部分到右半部分，这意味着$dA$必须根据$y<2$还是$y>2$使用不同的公式。</2$还是$y></2$，水平窄带显然是从抛物线左半部分到达到直线的，如果$y></p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-2-The-Area-between-Two-Curves/20160830192143285" alt="这里写图片描述" title>
图3
</center>

<p><strong>例3</strong>：求出曲线$y=\cos x,y=\sin 2x$ 在区间$0\leq x\leq \pi/2$上围成的区域面积。</p>
<p><strong>解</strong>：曲线如图4所示，面积由两个阴影部分组成。这个例子的主要特征是曲线互相交叉，所以开始是第一个曲线在上面，然后是第二个。为了求解它，我们首先需要求出交点，这就意味着我们需要求解方程$\cos x=\sin x$。</p>
<script type="math/tex; mode=display">

\cos x=2\sin x\cos x,\quad \sin x=\frac{1}{2}\quad x=\frac{\pi}{6}</script><p>据此</p>
<script type="math/tex; mode=display">

dA=
\begin{cases}
(\cos x-\sin 2x)dx\quad for\ 0\leq x\leq \frac{\pi}{6}\\
(\sin 2x-\cos x)dx\quad for\ \frac{\pi}{6}\leq x\leq \frac{\pi}{2}
\end{cases}</script><p>因此所求的面积为</p>
<script type="math/tex; mode=display">
\begin{align*}
\int_0^{\pi/6}(\cos &x-\sin 2x)dx+\int_{\pi/6}^{\pi/2}(\sin 2x-\cos x)dx\\
&=(\sin x+\frac{1}{2}\cos 2x)\Big|_0^{\pi/6}+(-\frac{1}{2}\cos 2x-\sin x)\Big|_{\pi/6}^{\pi/2}\\
&=(\frac{1}{2}+\frac{1}{4}-0-\frac{1}{2})+(\frac{1}{2}-1+\frac{1}{4}+\frac{1}{2})=\frac{1}{2}
\end{align*}</script><center>
<img src="/2020/07/09/Stroll-calculus-7-2-The-Area-between-Two-Curves/20160830192116894" alt="这里写图片描述" title>
图4
</center>

<p><a href="https://blog.csdn.net/u010182633/article/details/52372224" target="_blank" rel="noopener">漫步微积分三十二——两条曲线间的面积</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分7.3 - 体积计算：圆盘法</title>
    <url>/2020/07/09/Stroll-calculus-7-3-Volumes-The-Disk-Method/</url>
    <content><![CDATA[<p>在$x=a,x=b$之间的曲线$y=f(x)$绕$x$轴旋转产生一个区域，这是一个三维图像。这种对称形状的面积相对比较容易计算。</p>
<p>这种情况如图1所示。左边是我们展示了区域本身以及底在$x$轴上宽为$dx$的摘窄带。当该区域绕$x$轴旋转时，这条窄带生成了薄的圆盘，形如一枚硬币如图右边所示，它的半径是$y=f(x)$厚度为$dx$。此圆盘的体积是我们体积$dV$的元素。因为圆盘是一个圆柱体，所以它的体积是圆盘表面积乘以厚度，</p>
<script type="math/tex; mode=display">
\begin{equation}
dV=\pi y^2dx=\pi f(x)^2dx\tag1
\end{equation}</script><a id="more"></a>
<p>现在我们想象固体充满了许多这样的圆盘，这样的话，总体积就是从左到右所有体积元素的总和，也就是说，随着$x$从$a$增加到$b$：</p>
<script type="math/tex; mode=display">
\begin{equation}
V=\int dV=\int \pi y^2dx=\int_a^b\pi f(x)^2dx\tag2
\end{equation}</script><p>这是另一个我们不该记住的基本公式。相反，最好能更好地理解它，这样的话记忆就没必要了。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-3-Volumes-The-Disk-Method/20160831181054328" alt="这里写图片描述" title>
图1
</center>

<p>有些学生可能觉得公式(2)不能给的体积的确切解，因为它没有考虑圆盘外围“ 剥皮”的体积。然而，正如面积计算一样，随着一系列的极限过程，图中轻微的视觉错误(因为我们使用的是可见的圆盘而不是实际切片)将会消失。因此，我们可以计算出使用公式(2)计算体积，并且完全相信我们的结果是正确的，不只是近似值。</p>
<p><strong>例1</strong>：一个球体可以看做是一个半圆绕其直径旋转得到的(图2)。如果半圆的方程是$x^2+y^2=a^2,y\geq 0$，那么$y=\sqrt{a^2-x^2}$并且体积元为</p>
<script type="math/tex; mode=display">

dV=\pi y^2dx=\pi (a^2-x^2)dx</script><p>利用圆球体左右两边对称的性质，我们可以计算$x=0$到$x=a$之间的积分，然后乘以2即可：</p>
<script type="math/tex; mode=display">
\begin{align}
V=2\int_0^a\pi(a^2-x^2)dx
&=2\pi(a^2x-\frac{1}{3}x^3)\big|_0^a\nonumber\\
&=\frac{4}{3}\pi a^3\tag3
\end{align}</script><p>这个公式证实了众所周知的初等几何知识。如果我们只积分$x=a-h$到$x=a$区间，那么我们得到是厚度为$h$的部分球的体积</p>
<script type="math/tex; mode=display">
\begin{align*}
V=\int_{a-h}^a\pi(a^2-x^2)dx
&=\pi(a^2x-\frac{1}{3}x^3)\big|_{a-h}^a\\
&=\pi\{\frac{2}{3}a^3-[a^2(a-h)-\frac{1}{3}(a-h)^3]\}\\
&=\pi h^2(a-\frac{1}{3}h)
\end{align*}</script><p>利用一些代数化简，我们可以看到这个公式在$h=2a$时可以化成(3)。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-3-Volumes-The-Disk-Method/20160831181020925" alt="这里写图片描述" title>
图2
</center>

<p><strong>例2</strong>：初等几何的另一个重要公式指出高为$h$，底部半径为$r$的圆锥体积为$V=\frac{1}{3}\pi r^2h$；或等价地，它是圆柱体积的三分之一。为了用积分获得此公式，进而理解因子$\frac{1}{3}$的来源，我们将圆锥看做第一象限里的直角三角形旋转得到的，如图3所示。直角三角形的斜边显然是直线$y=(r/h)x$的一部分，所以体积元为是：</p>
<script type="math/tex; mode=display">

dV=\pi y^2dx=\frac{\pi r^2}{h^2}x^2dx</script><p>现在我们从$x=0$到$x=h$积分$dV$得到总体积：</p>
<script type="math/tex; mode=display">
\begin{equation}
V=\int_0^h\frac{\pi r^2}{h^2}x^2dx=\frac{\pi r^2}{h^2}\cdot \frac{1}{3}x^3\Big|_0^h=\frac{1}{3}\pi r^2h\tag4
\end{equation}</script><center>
<img src="/2020/07/09/Stroll-calculus-7-3-Volumes-The-Disk-Method/20160831180956846" alt="这里写图片描述" title>
图3
</center>

<p>显然，这些例子的方法通常称为圆盘法。同样的想法可以应用于其他类型的固体，体积元不一定必须是圆盘。假设垂直于某条线的截面都是一个三角形或正方形或一些其他很容易找到的几何图形。那么我们的体积元$dV$是薄片面积和厚度的乘积，我们可以通过移动切片法来计算固体的总体积，如图4所示那样：</p>
<script type="math/tex; mode=display">

dV=A(x)dx\qquad V=\int dV=\int_a^bA(x)dx</script><center>
<img src="/2020/07/09/Stroll-calculus-7-3-Volumes-The-Disk-Method/20160831180925703" alt="这里写图片描述" title>
图4
</center>

<p><strong>例3</strong>：对于一个圆柱体，用一个平面(过圆柱底的直径且倾角为45)去切它得到一个楔形。为了找到这个楔形的体积，我们首先画出图像(图5)。如图所示，垂直于楔边的切片是一个三角形。如果用符号表示的话，我们将看到切片的体积是</p>
<script type="math/tex; mode=display">
\begin{align*}
dV
&=\frac{1}{2}\sqrt{a^2-y^2}\cdot \sqrt{a^2-y^2}dy\\
&=\frac{1}{2}(a^2-y^2)dy
\end{align*}</script><p>所以楔形的体积是</p>
<script type="math/tex; mode=display">
\begin{align*}
V
&=2\int_0^a\frac{1}{2}(a^2-y^2)dy=a^2y-\frac{1}{3}y^3\Big|_0^a\\
&=\frac{2}{3}a^3
\end{align*}</script><center>
<img src="/2020/07/09/Stroll-calculus-7-3-Volumes-The-Disk-Method/20160831180903767" alt="这里写图片描述" title>
图5
</center>

<p>平行于楔边的垂直切片显然是一个矩形(读者自己画图试试看)。如果$x$ 是从边到切片的距离，那么仔细考虑后，我们可以看到这一次的体积元是：</p>
<script type="math/tex; mode=display">

dV=2x\sqrt{a^2-x^2}dx</script><p>因此</p>
<script type="math/tex; mode=display">
\begin{align*}
V
&=\int_0^a2x(a^2-x^2)dx\\
&=-\frac{2}{3}(a^2-x^2)^{3/2}\Big|_0^a=\frac{2}{3}a^3
\end{align*}</script><p>跟之前的结果一样。</p>
<p><strong>注解1</strong>：对许多问题，下面变种的圆盘方法比较有用且很有必要。假设绕轴旋转的窄带被该轴分开了一定的距离，如图6左边所示。这种情况下，窄带生成的体积元在内部有一个洞-可以用垫圈来描述。这个垫圈的体积是圆盘的体积减去洞的体积</p>
<script type="math/tex; mode=display">

dV=\pi(y_1^2-y_2^2)dx</script><p>所以整个体积为</p>
<script type="math/tex; mode=display">

V=\int dV=\int_a^b\pi(y_1^2-y_2^2)dx</script><p>其中$y_1,y_2$是垫圈外部和内部的半径，根据问题给出的条件，可以用$x$的函数确定他们。计算这种体积的方法自然称为垫圈法。它适用于内部有空心的物体。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-3-Volumes-The-Disk-Method/20160831180837126" alt="这里写图片描述" title>
图6
</center>

<p><strong>注解2</strong>：例1和例2中获得的公式表示很生动，但将圆锥体与球体体积作为外接圆柱体(图7)体积的一部分将会更加容易记忆。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-3-Volumes-The-Disk-Method/20160831180711530" alt="这里写图片描述" title>
图7
</center>

<p><strong>注解3</strong>：球体的体积公式(3)是由公元前三世纪的阿基米德发现的，因为他用了非常美丽和巧妙的积分形式，所以我会以番外的形式给出他的论点。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/52387571" target="_blank" rel="noopener">漫步微积分三十三——体积计算：圆盘法</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分7.4 - 体积计算：圆柱壳法</title>
    <url>/2020/07/09/Stroll-calculus-7-4-Volumes-The-Method-of-Cylindrical-Shells/</url>
    <content><![CDATA[<p>还有一种去体积的方法，往往它比上篇文章的方法更加方便。</p>
<p>为了理解这种方法，考虑图1左边所示的区域，也就是，第一象限数轴和所示示曲线$y=f(x)$围成的区域。如果这个区域绕$x$轴旋转，那么图中的垂直窄带生成一个圆盘，我们能够从$x=0$到$x=b$区间上积分这些圆盘的体积得到总体积。当然，这是上篇文章中描述的圆盘法。然而，如果区域绕$y$轴旋转，就像图中间的那样，那么我们获得完全不同的物体，垂直窄带产生了很薄的圆柱壳。这个壳可以看做一个罐头，只是其顶部和底部已被去掉，或者很薄的纸板。其体积$dV$本质上是内圆柱表面积$(2\pi xy)$乘以厚度$(dx)$，所以</p>
<script type="math/tex; mode=display">
\begin{equation}
dV=2\pi xydx\tag1
\end{equation}</script><a id="more"></a>
<p>这个壳的半径$x$从$x=0$增长到$x=b$，从图1可以看出，圆柱壳序列填充沿着轴向外充满了整个物体。因此总体积就是$dV$体积元的和-或积分</p>
<script type="math/tex; mode=display">
\begin{equation}
V=\int dV=\int 2\pi xydx=\int_0^b2\pi xf(x)dx\tag2
\end{equation}</script><p>其中$y=f(x)$，原则上，体积$V$也可以用水平窄带得到的水平圆盘来计算；然而我们会发现这非常困难，因为给定的方程$y=f(x)$无法用$y$来表示$x$。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-4-Volumes-The-Method-of-Cylindrical-Shells/20160901191754927" alt="这里写图片描述" title>
图1
</center>

<p>和其他积分的应用一样，等式(1)(2)将涉及到和极限的复杂过程变成简洁的表达式，为了清楚起见，我们忽略这个过程的细节。</p>
<p>还跟之前一样，我们建议大家不要死记公式(2)。这个公式类似于对应的圆盘法公式，如果只是死记而不加思考的话，很容易将他们用混并打字自信。更好地方式是画图，直接从图中可见的信息来构建(1)，然后对形式(2)进行积分。此外，这种方法更大的优势，我们不用依赖于任何特定的符号，可以很容易将基本思想应用到各种轴旋转得到的物体上。</p>
<p><strong>例1</strong>：上篇文章中我们用圆盘法计算了球体的体积。现在我们用圆柱壳法在此解决这问题(图2)。图中所示壳的体积为</p>
<script type="math/tex; mode=display">
\begin{align*}
dV
&=2\pi x(2y)dx\\
&=4\pi x\sqrt{a^2-x^2}dx
\end{align*}</script><p>因此球体的体积是</p>
<script type="math/tex; mode=display">
\begin{align*}
V
&=4\pi\int_0^ax\sqrt{a^2-x^2}dx=4\pi (-\frac{1}{3})(a^2-x^2)^{3/2}\Big|_0^a\\
&=-\frac{4\pi}{3}(a^2-x^2)^{3/2}\Big|_0^a=\frac{4}{3}\pi a^3
\end{align*}</script><center>
<img src="/2020/07/09/Stroll-calculus-7-4-Volumes-The-Method-of-Cylindrical-Shells/20160901191821568" alt="这里写图片描述" title>
图2
</center>

<p>另外，我们考虑一个相关问题：如果一个直径为$a$的垂直洞通过了球中，那么如何找到剩余的体积。为此，显然积分$dV$ 的区间变成从$x=a/2$到$x=a$，所以</p>
<script type="math/tex; mode=display">
\begin{align*}
V
&=4\pi\int_{a/2}^ax\sqrt{a^2-x^2}dx=-\frac{4\pi}{3}(a^2-x^2)^{3/2}\Big|_{a/2}^a\\
&=\frac{4}{3}\pi\left(\frac{3}{4}a^2\right)^{3/2}=\frac{4}{3}\pi\left(\frac{3\sqrt{3}}{8}a^3\right)=\frac{\sqrt{3}}{2}\pi a^3
\end{align*}</script><p>这个问题可以用垫圈法解决，不是圆柱壳法更加方便。</p>
<p><strong>例2</strong>：$y=x^2$上方和$y=2-x^2$下方在第一象限围成的区域绕$y$轴旋转(图3)。为了用圆柱壳法求出体积，通过观察可以看出壳的高度为$y=(2-x^2)-x^2=2-2x^2$，所以</p>
<script type="math/tex; mode=display">
\begin{align*}
dV
&=2\pi xydx=2\pi x(2-2x^2)dx\\
&=4\pi x(x-x^3)dx
\end{align*}</script><p>因为曲线交点位于$x=\pm 1$处，从而</p>
<script type="math/tex; mode=display">
\begin{align*}
V
&=4\pi\int_0^1(x-x^3)dx\\
&=4\pi (\frac{1}{2}x^2-\frac{1}{4}x^4)\Big|_0^1=\pi
\end{align*}</script><p>大家常常错误的积分区域设置为从$x=-1$到$x=1$。这个不正确的原因可以从几何上理解，圆柱壳横扫从数轴向外横扫物体的半径是从0增加到l，不是从-l增加到1。</p>
<p>注意，如果我们试图用圆盘法解决这个问题，那么它需要计算两个积分-一个是曲线交点下面的体积，另一个是上面的体积。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-4-Volumes-The-Method-of-Cylindrical-Shells/20160901191844900" alt="这里写图片描述" title>
图3
</center>

<p><strong>例3</strong>：血流量。人类身体主动脉-大动脉-是一个管道，有人类拇指那样大。心脏通过跳动使血液通过动脉，靠近中心的血粒子移动速度约是$50\ cm/s(20\ in/s)$。另一方面，血液是粘稠的液体，动脉壁附近的血倾向于黏着在血管壁上，所以它的速度基本上为零。在这些情况下计算总流量的问题就需要用圆柱壳法积分得到。</p>
<p>我们用非常简单的想法开始，如果液体以恒定的速度$s_0$流经圆柱管，那么单位时间通过一个某处的液体体积(流量F)是$s_0A$，$A$是血管的截面面积(图4)。</p>
<p>然而，我们知道，人体动脉中血液流动比这复杂得多。我们假设动脉是圆柱形，长度为$L$半径为$R$(图5)。因为上面提到的粘度，在薄的圆柱内有血液流动，并且每层移动速度大约恒定而不同层的速度不同。这就是所谓的层流流动，血液在靠近动脉壁附近流速慢而中心位置流速快(如图5所示)，这样的话内部层滑到了外部的前面(图6)。</p>
<p>速度$s$和距中心距离$r$之间的确切关系是</p>
<script type="math/tex; mode=display">
\begin{equation}
s=\frac{P}{4\eta L}(R^2-r^2)\tag3
\end{equation}</script><center>
<img src="/2020/07/09/Stroll-calculus-7-4-Volumes-The-Method-of-Cylindrical-Shells/20160901191918210" alt="这里写图片描述" title>
图4
</center>

<p>其中$P$是动脉之间的压力差，$\eta$是血液的粘度。我们注意到，如果速度$r=R$，那么速度为零；如果$r=0$，那么速度最大为$PR^2/4\eta L$。通常用厘米$(cm)$来度量$R,r,L$，用$dynes/cm^2$来度量$P$,$dyne-s/cm^2$来度量$\eta$，这样的话$cm/s$度量$s$。对于人体而言一般$R=0.2\ cm$，常数$P/4\eta L$是500。根据这些值(3)变为</p>
<script type="math/tex; mode=display">
\begin{align}
s
&=5000(0.2^2-r^2)\nonumber\\
&=20-500r^2\quad cm/s\tag4
\end{align}</script><center>
<img src="/2020/07/09/Stroll-calculus-7-4-Volumes-The-Method-of-Cylindrical-Shells/20160901191944523" alt="这里写图片描述" title>
图5
</center>
<center>
<img src="/2020/07/09/Stroll-calculus-7-4-Volumes-The-Method-of-Cylindrical-Shells/20160901192008150" alt="这里写图片描述" title>
图6
</center>

<p>这个函数图像时抛物线的一部分(图7)并且它还说明随着血粒子靠近血管壁，它的速度趋近于零。中心的速度为$20\ cm/s$，但是当$r=0.15$时，速度只有$s=20-500(0.15)^2=8.75\ cm/s$。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-4-Volumes-The-Method-of-Cylindrical-Shells/20160901192029430" alt="这里写图片描述" title>
图7
</center>

<p>现在，为了计算流量$F$(单位时间通过某处的总体积)，我们写出半径为$r$厚度为$dr$的圆柱壳的流量元$dF$：</p>
<script type="math/tex; mode=display">
\begin{align*}
dF
&=s\cdot 2\pi rdr\\
&=\frac{P}{4\eta L}(R^2-r^2)\cdot 2\pi rdr\\
&=\frac{\pi P}{2\eta L}(R^2r-r^3)dr
\end{align*}</script><p>剩下的工作是将所有的壳加起来，即从$0$到$R$进行积分：</p>
<script type="math/tex; mode=display">
\begin{align*}
F=\int dF
&=\int_0^R\frac{\pi P}{2\eta L}\int_0^R(R^2r-r^3)dr\\
&=\int_0^R\frac{\pi P}{2\eta L}(\frac{1}{2}R^2r^2-\frac{1}{4}r^4)\Big|_0^R=\frac{\pi P}{8\eta L}R^4
\end{align*}</script><p>这个公式</p>
<script type="math/tex; mode=display">
\begin{equation}
F=\frac{\pi P}{8\eta L}R^4\tag5
\end{equation}</script><p>心血管生理学领域叫做$Poiseuille’s\ law$。它表明流量与动脉半径的四次方成正比，所以半径增加一倍流量要乘以16。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/52402712" target="_blank" rel="noopener">漫步微积分三十四——体积计算：圆柱壳法</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分7.5 - 弧长</title>
    <url>/2020/07/09/Stroll-calculus-7-5-Arc-Length/</url>
    <content><![CDATA[<p>弧是介于曲线上两个特定点$A$和点$B$之间的一部分，如图1 左边所示。物理上，弧长是一个非常简单的概念。数学上，它是稍微有点复杂。从物理观点看，我们只是折弯了一根绳子来拟合从$A$到$B$的曲线，标记下对应的点$A$和$B$，将绳子伸直然后用尺子量出长度。</p>
<p>这一过程可以用如下的逼近过程(适合于数学处理)来解决。弧$AB$用点$P_0=A,P_1,P-2,\ldots,P_n=B$分成$n$部分；将针放在这些点上；让该线段沿着这些一个个短针得到的路径延伸。我们在图1右边用$n=3$的情况说明了这个想法。$A,B$之间的长度明显短于弧长，因为两个点之间直线最短。然而，如果我们采取更大的$n$值，同时要求针之间放置的足够近，那么线的长度应该接近弧的长度。我们现在用数学语言表达它并推导出用积分计算弧长的实用方法。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-5-Arc-Length/20160903164335373" alt="这里写图片描述" title>
图1
</center>

<a id="more"></a>
<p>假设下面讨论的弧是连续函数$y=f(x)$的在区间$a\leq x\leq b$上的图像。我们将区间$[a,b]$分成$n$个子区间，用点$x<em>0=a,x_1,\ldots,x</em>{k-1},x<em>k,\ldots,x_n=b$标记出来如图2所示。令$P_k$ 表示点$(x_k,y_k)$，其中$y_k=f(x_k)$。 多边路径$P_0P_1\cdots P</em>{k-1}P{k}\cdots P_{n}$的总长度是每个点之间弦长的长度和。如果我们写成</p>
<script type="math/tex; mode=display">

\Delta x_k=x_k-x_{k-1}\quad and\quad \Delta y_k=y_k-y_{k-1}\quad k=1,2,\ldots,n</script><p>那么利用毕达哥拉斯定理得</p>
<script type="math/tex; mode=display">
\begin{align}
{\rm{length\ of\ kth\ chord}}
&=\sqrt{(\Delta x_k)^2+(\Delta y_k)^2}\nonumber\\
&=\sqrt{\left[1+\frac{(\Delta y_k)^2}{(\Delta x_k)^2}\right](\Delta x_k)^2}\nonumber\\
&=\sqrt{1+\left(\frac{\Delta y_k}{\Delta x_k}\right)^2}\Delta x_k\tag1
\end{align}</script><p>现在我们假设函数$y=f(x)$不仅连续而且可导。那么我们就能用$x<em>{k-1},x_k$ 之间某点$x_k^*$处的导数值代替根号下的比值(也就是连接$P</em>{k-1},P_k$之间弦长的斜率)</p>
<script type="math/tex; mode=display">

\frac{\Delta y_k}{\Delta x_k}=f'(x_k^*)\quad x_{k-1}<x_k^*<x_k</script><p>这一步是基于这个事实：弦平行于曲线$P_{k-1},P_k$之间某点的切线。所以我们能将(1)写成</p>
<script type="math/tex; mode=display">

{\rm{length\ of\ kth\ chord}}
=\sqrt{1+[f'(x_k^*)]^2}\Delta x_k</script><p>所以总长度为</p>
<script type="math/tex; mode=display">
\begin{equation}
\sum_{k=1}^n\sqrt{1+[f'(x_k^*)]^2}\Delta x_k\tag2
\end{equation}</script><p>现在我们用这些和的极限形式得出了结论，当$n$趋于无穷大时，最长子区间的长度接近零：</p>
<script type="math/tex; mode=display">
\begin{align}
{\rm length\ of\ arc\ AB}
&=\lim_{ {\rm max\Delta x_k\to 0}}\sum_{k=1}^n\sqrt{1+[f'(x_k^*)]^2}\Delta x_k\nonumber\\
&=\int_a^b\sqrt{1+[f'(x)]^2}dx\tag3
\end{align}</script><p>因为$f’(x)$是连续的，所以它的积分存在。</p>
<p>首先，公式(3)不太好记。然而，如果我们用莱布尼兹符号$dy/dx$代替$f’(x)$，那么下面直觉的方法将令这个公式更加掌握和记忆。让$s$表示从$A$ 到曲线上某个变化点的弧长，如图3所示。$s$可以由一个很小的增量$ds$使得$ds$是弧长的微分元素，$dx,dy$分别是$x,y$对应的变化量。我们将$ds$看做非常小，小到这段曲线几乎是直的，因此$ds$是直角三角形(称为微分三角形)的斜边。根据毕达哥拉斯定理得</p>
<script type="math/tex; mode=display">
\begin{equation}
ds^2=dx^2+dy^2\tag4
\end{equation}</script><p>这个简单的方程是计算弧长所有智慧的根源。如果我们求解(4)，因子$dx^2$提出来并移到根号外得</p>
<script type="math/tex; mode=display">
\begin{align}
ds
&=\sqrt{dx^2+dy^2}\nonumber\\
&=\sqrt{\left(1+\frac{dy^2}{dx^2}\right)dx^2}=\sqrt{\left(1+\frac{dy^2}{dx^2}\right)}dx\tag5
\end{align}</script><center>
<img src="/2020/07/09/Stroll-calculus-7-5-Arc-Length/20160903164406437" alt="这里写图片描述" title>
图2
</center>

<p>弧$AB$的总长度可以看做所有弧元素$ds$从$A$到$B$的总和- 或积分。利用(5) 可以得出</p>
<script type="math/tex; mode=display">
\begin{equation}
{\rm length\ of\ arc\ }AB=\int ds=\int_a^b\sqrt{\left(1+\frac{dy^2}{dx^2}\right)}dx\tag6
\end{equation}</script><p>也就是(3)。这个公式告诉我们$x$是积分变量，$y$可以看做$x$的函数。然而，有时候用$y$表示积分变量，将$x$看做$y$ 的函数会更加方便。在这种情况下(5) 可以换为</p>
<script type="math/tex; mode=display">
\begin{align}
ds
&=\sqrt{dx^2+dy^2}\nonumber\\
&=\sqrt{\left(\frac{dx^2}{dy^2}+1\right)dy^2}=\sqrt{\left(\frac{dx^2}{dy^2}+1\right)}dy\tag7
\end{align}</script><p>因为$y$是积分变量，弧长$AB$的积分是</p>
<script type="math/tex; mode=display">
\begin{equation}
\int ds=\int_c^d\sqrt{\left(\frac{dx^2}{dy^2}+1\right)}dy\tag8
\end{equation}</script><p>有时候它比(6)计算更加简单。</p>
<p><strong>例</strong>：求出曲线$y^2=4x^3$在点(0,0) 和$(2,4\sqrt{2})$ 之间的弧长。</p>
<p><strong>解</strong>：曲线如图4所示</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-5-Arc-Length/20160903164433544" alt="这里写图片描述" title>
图3
</center>
<center>
<img src="/2020/07/09/Stroll-calculus-7-5-Arc-Length/20160903164457044" alt="这里写图片描述" title>
图4
</center>

<p>问题中的弧指的是第一象限的曲线，如果我们求解$y$，那么得到</p>
<script type="math/tex; mode=display">

y=2x^{3/2}\quad so\quad \frac{dy}{dx}=3x^{1/2}</script><p>那么公式(6)变为</p>
<script type="math/tex; mode=display">
\begin{align*}
{\rm length\ of\ arc\ }
&=\int_0^2\sqrt{1+9x}=dx=\frac{1}{9}\int_0^2(1+9x)^{1/2}9dx\\
&=\frac{1}{9}\cdot \frac{2}{3}(1+9x)^{3/2}\Big|_0^2=\frac{2}{27}(19\sqrt{19}-1)
\end{align*}</script><p>对这种计算应该提出一个警告，当我们尝试求解任何熟悉曲线的弧长时，因为(6)中有平方根，所以我们可以无法求出积分。目前，我们是为了能够计算出积分，仔细选择了我们的问题。但这也同时让我们意识到我们迫切需要更多的积分方法。我会在下三篇文章中说明。</p>
<p><strong>注解1</strong>：存在这样的例子，在$a\leq x\leq b$ 上曲线$y=f(x)$ 连续，但是没有长度。这个令人吃惊的事实表明弧长的基本理论比我们想象的要复杂得多。我们的讨论都需要假定函数$y=f(x)$有连续的导数。这种曲线称为光滑曲线，并且”弧”一词通常意味着限制曲线有这种属性。一条光滑曲线在几何上通常描述为”连续的转向切线”。</p>
<p><strong>注解2</strong>：一些学生对方程(4)和(5)可能存在这样的印象(他们互相等效)他们是近似解，大概正确，因为微分三角形只是“准三角”，实际所谓的斜边不是一条真正的直线段。可事实不是这样的，这些方程完全正确。我们知道(3)是有效的，所以图3中的弧长$s$可以写成</p>
<script type="math/tex; mode=display">

s=\int_a^x\sqrt{1+[f'(t)]^2}dt</script><p>用$t$表示积分变量。很明显$s$是积分上限为$x$的函数，我们计算它的导数得</p>
<script type="math/tex; mode=display">

\frac{ds}{dx}=\sqrt{1+[f'(x)]^2}=\sqrt{1+\left(\frac{dy}{dx}\right)^2}</script><p>和等式(5)等价。</p>
<p><a href="https://blog.csdn.net/u010182633/article/details/52424007" target="_blank" rel="noopener">漫步微积分三十五——弧长</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分7.6 曲面的面积</title>
    <url>/2020/07/09/Stroll-calculus-7-6-The-Area-of-a-Surface-of-Revolution/</url>
    <content><![CDATA[<p>让我们考虑$x$轴上方的平滑曲线，如图1左边所示。当这条曲线绕$x$轴旋转时，它会生成一个曲面。现在我们开始解决曲面的表面积问题。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-6-The-Area-of-a-Surface-of-Revolution/20160904164308371" alt="这里写图片描述" title>
图1
</center>

<a id="more"></a>
<p>为了更加清晰，我们首先考虑一个非常简单的表面积，其底是半径为$r$的圆锥，外侧倾边长为$L$。如果沿着顶点到底边的方向切开圆锥，如图2所示，那么我们得到半径为$L$圆的一部分，且曲线边长为$2\pi r$。圆锥的侧面积$A$等于这部分的面积。从几何上可以明显看出该部分与圆的面积比等于曲线长度与圆周长之比，即：</p>
<script type="math/tex; mode=display">

\frac{A}{\pi L^2}=\frac{2\pi r}{2\pi L}\quad so\quad A=\pi rL</script><p>圆锥的侧面可以看做某条线绕着轴旋转得到的。如果将公式写成</p>
<script type="math/tex; mode=display">

A=L\cdot 2\pi(\frac{1}{2}r)</script><p>那么我们将会看到圆锥的表面积等于线长乘以其中点扫过距离的乘积。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-6-The-Area-of-a-Surface-of-Revolution/20160904164339283" alt="这里写图片描述" title>
图2
</center>

<p>接下来，我们稍微扩展一下，求一条长为$L$的线段绕与它中点距离为$r$的轴旋转得到表面积。锥外侧的面积如图3所示。如果我们用$A$表示它的面积，那么$A$是图中两个圆锥表面积之差</p>
<script type="math/tex; mode=display">

A=\pi r_1L_1-\pi r_2L_2=\pi(r_1L_1-r_2L_2)</script><p>利用相似三角形的性质，很明显</p>
<script type="math/tex; mode=display">

\frac{L_2}{r_2}=\frac{L_1}{r_1}\quad or\quad r_1L_2=r_2L_1</script><p>利用代数方法，我们可以将$A$写成如下形式</p>
<script type="math/tex; mode=display">
\begin{align*}
A
&=\pi(r_1L_1-r_1L_2+r_2L_1-r-2L-2)=\pi[r_1(L_1-L_2)+r_2(L_1-L_2)]\\
&=\pi(L_1-L_2)(r_1+r_2)=(L_1-L_2)\cdot 2\pi\left(\frac{r_1+r_2}{2}\right)=L\cdot 2\pi r
\end{align*}</script><p>对于这种情况，我们同样得出表面积等于斜边长度与中点绕轴旋转距离的乘积。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-6-The-Area-of-a-Surface-of-Revolution/20160904164408918" alt="这里写图片描述" title>
图3
</center>

<p>我们现在将这些想法应用到开头所说的常规区域问题上。我们的方法非常直观且具有几何意义。</p>
<p>我们用多条短线段来近似曲线$y=f(x)$(如图4左边所示)开始我们的讨论。通过绕$x$轴旋转曲线得到的曲面面积与多条短线段旋转得到的曲面(如图4中间)面积近似相等。侧面显然是由许多圆台组成的，这个想法由图4右边说明。如果弧长元素$ds$绕$x$轴旋转，那么它生成的薄带状面积为$dA$；如果$ds$的中点与$x$轴的距离为$y$，那么上面的讨论告诉我们</p>
<script type="math/tex; mode=display">

dA=2\pi yds=2\pi y\sqrt{1+\left(\frac{dy}{dx}\right)^2}dx</script><center></center>

<p><img src="/2020/07/09/Stroll-calculus-7-6-The-Area-of-a-Surface-of-Revolution/20160904164439371" alt="这里写图片描述" title><br>图4</p>
<p>通过对$dA$求和或积分可以求出曲面的总面积</p>
<script type="math/tex; mode=display">

A=\int dA=\int 2\pi yds=\int_a^b 2\pi y\sqrt{1+\left(\frac{dy}{dx}\right)^2}dx</script><p>其中假设$y$是$x$的函数$[y=f(x)]$。如果我们选择绕$y$轴旋转，那么将得到不同的曲面，用同样的方法可以求出<br>$A=\int 2\pi xds$<br>这些公式的基本想法可以表达为</p>
<script type="math/tex; mode=display">

A=\int 2\pi({\rm{radius\ of\ revolution}})ds</script><p>在使用这个公式来计算实际长度时，弧长的元素$ds$必须写成积分变元，并且必须给出积分限。</p>
<p><strong>例1</strong>：求出半径为$a$的球的表面积。</p>
<p><strong>解</strong>：球的表面可以描述为半圆$y=\sqrt{a^2-x^2}$绕$x$轴旋转得到的曲面(如图5)。因为</p>
<script type="math/tex; mode=display">

\frac{dy}{dx}=\frac{d}{dx}(a^2-x^2)^{1/2}=\frac{-x}{\sqrt{a^2-x^2}}</script><p>并且$ds$在第一象限内上下限为$0,a$，可以利用左右对称的特点简化计算</p>
<script type="math/tex; mode=display">
\begin{align*}
A
&=\int 2\pi yds=2\int_0^a2\pi\sqrt{1+\left(\frac{dy}{dx}\right)^2}dx\\
&=4\pi\int_0^a\sqrt{a^2-x^2}\sqrt{1+\frac{x^2}{a^2-x^2}}dx\\
&=4\pi \int_0^aadx=4\pi a^2
\end{align*}</script><p>也可以用$y$做积分变量，此时$ds$在第一象限内上下限为$0,a$。计算有点复杂，但是看一下如何计算是有启发意义的。因为第一象限内$x=\sqrt{a^2-y^2}$，所以</p>
<script type="math/tex; mode=display">

\frac{dx}{dy}=\frac{d}{dy}(a^2-y^2)^{1/2}=\frac{-y}{\sqrt{a^2-y^2}}</script><p>所以</p>
<script type="math/tex; mode=display">
\begin{align*}
A
&=\int 2\pi yds=2\int_0^a2\pi\sqrt{\left(\frac{dx}{dy}\right)^2+1}dy\\
&=4\pi\int_0^a\sqrt{\frac{y^2}{a^2-y^2}+1}dy=4\pi a\int_0^a\frac{ydy}{\sqrt{a^2-y^2}}\\
&=4\pi a(-\frac{1}{2})\int_0^a(a^2-y^2)^{-1/2}(-2ydy)=4\pi a(-\frac{1}{2})2\sqrt{a^2-y^2}\Big|_0^a\\
&=4\pi a^2
\end{align*}</script><p>和之前计算的一样。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-6-The-Area-of-a-Surface-of-Revolution/20160904164524372" alt="这里写图片描述" title>
图5
</center>

<p><strong>注解</strong>：除了发现球体的体积，阿基米德通过才华横溢的洞察力发现了球体的表面积。他的想法是将球体拆分成小的“棱锥”。想象一下半径为$a$的球体表面分为很多小的三角形(如图6)，当然这些实际上不是三角形，因为球体表面没有直线。然而，他们是如此之小以致于每个图像近似为三角形。让每个三角形作为棱锥的底，高是点到球心的距离。如果$A_k$是小金字塔底的面积，$V_k$是体积，那么我们知道$V_k=\frac{1}{3}A_ka$。(事实上棱锥的体积是与它同底同高的棱柱体积的三分之一，它是由Democritus发现的，比阿基米德早了两个世纪)将这些方程相加得：</p>
<script type="math/tex; mode=display">

\sum_{k=1}^nV_k=\sum_{k=1}^n\frac{1}{3}A_ka=\frac{1}{3}\left(\sum_{k=1}^nA_k\right)a</script><p>因为棱锥充满了整个球，所以这个公式告诉了我们体积$V$和表面积$A$之间的关系</p>
<script type="math/tex; mode=display">

V=\frac{1}{3}Aa</script><p>但是现在阿基米德发现$V=\frac{4}{3}\pi a^3$，所以我们可以将方程改为</p>
<script type="math/tex; mode=display">

\frac{4}{3}\pi a^3=\frac{1}{3}Aa</script><p>所以</p>
<script type="math/tex; mode=display">

A=4\pi a^2</script><p>这和之前的结论一样。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-6-The-Area-of-a-Surface-of-Revolution/20160904164600559" alt="这里写图片描述" title>
图6
</center>

<p><a href="https://blog.csdn.net/u010182633/article/details/52433203" target="_blank" rel="noopener">漫步微积分三十六——曲面的面积</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分7.7 - 力和功</title>
    <url>/2020/07/09/Stroll-calculus-7-7-Work-and-Energy/</url>
    <content><![CDATA[<p>首先提一个常识，在移动的对象上施加一个发力，如举起一块很沉的石头，我们感觉需要很大的力气或做功。在我们定义物理上功的概念之前，我们深信移动相同的距离，举起20磅的石头所做的功是l0磅的两倍，并且俱到3英尺所做的功是1 英尺的三倍。这些想法给出了我们基本的定义：如果恒力$F$作用的距离为$d$，那么这个过程中完成的功为力和它作用距离的乘积</p>
<script type="math/tex; mode=display">

{work\ =force\ \cdot distance}</script><p>或者</p>
<script type="math/tex; mode=display">
\begin{equation}
W=F\cdot d\tag1
\end{equation}</script><a id="more"></a>
<p>这里的力方形和运动方向一致。</p>
<p>正如我们所知，由于地球的吸引力，有“重量”的对象存在重力。对于处于或接近地球表面的物体，这个力基本上是大小恒定而且总是指向地心。因此，如果一箱重20磅的食品是从地上抬起放到一张3英尺高的桌子上，那么定义(1)告诉我们做了60$ft-lb$的功；但如果盒子抬进另一个房间但没有提高或降低它，放在一个架子上，那么这个操作完成后没有做功，因为盒子在力方向移动的距离为零。如果一台拖拉机拖动用恒力2牛拖动一块巨石走了18英尺，那么拖拉机所做的功为36$in-ton$(或3$ft-ton$)</p>
<p>这个定义只对恒力$F$满足。然而，在用力的过程中许多力都不保持恒定。对于类似的情况，我们可以将过程分成很多小部分然后通过积分得到总的功。</p>
<p>这种想法用下面拉伸弹簧的操作进行说明。</p>
<p><strong>例1</strong>：某弹簧自然长度为$16in$。当它被拉伸到$x in$ 时，胡克定律指出弹簧的恢复力为$F=kx\ pounds$，其中$k$为常数，它称为弹力系数，可以认为是弹簧刚度的度量。对题中讨论的弹簧，需要$8\ lb$的力来才能将它延伸$2\ in$。那么，从自然长度拉伸到$24\ in$需要完成的功是多少？</p>
<p><strong>解</strong>：首先，根据事实$x=2,F=8$可以求出$k$。$8=k\cdot 2$，所以$k=4,F=4x$。为了说明我们的想法，我们画一个自然长度下的弹簧，以及拉伸$x$时的状态(图1)。然后，我们想象弹簧拉伸很小的距离$dx$，那么在这距离增量内力变化很小，基本上可以认为是恒定的。所以这段距离做的功是</p>
<script type="math/tex; mode=display">
\begin{equation}
dW=F\ dx=4x\ dx\tag2
\end{equation}</script><p>整个拉伸过程中所做的功为</p>
<script type="math/tex; mode=display">

W=\int dW=\int Fdx=\int_0^84xdx=2x^2\Big|0^8=128\ in-lb</script><p>因为弹簧从16增到24时$x$是从0增加到8，所以积分限为0到8。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-7-Work-and-Energy/20160905184225673" alt="这里写图片描述" title>
图1
</center>

<p>用相似的方式，我们可以考虑，给定物体移动的方向作用在上面的力所做的功，这个力不限制必须是恒力，也可以是变化的力。如果我们引入$x$轴，从$x=a$移动到$x=b$的过程中力为$F(x)$，那么$dW=F(x)dx$是功的元素</p>
<script type="math/tex; mode=display">
\begin{equation}
W=\int dW=\int_a^bF(x)dx\tag3
\end{equation}</script><p>给出了该过程的总功。这个公式既可以作为定义，也可以作为计算功的方法。下一个例子我们引用到不同的情景中。</p>
<p><strong>例2</strong>：根据牛顿的万有引力定律，任何两个物质为$M$和$m$的物体互相之间存在吸引力$F$，它的大小与质量的乘积成正比，与它们之间距离$r$的平方成反比</p>
<script type="math/tex; mode=display">

F=G\frac{Mm}{r^2}</script><p>其中$G$叫做引力常数。如果$M$看做一个质点，那么将$m$从$r=a$移动到$r=b,a&lt;b$需要做多少功？</p>
<p><strong>解</strong>：功的元素为</p>
<script type="math/tex; mode=display">
\begin{equation}
dW=F\ dr=GMm\frac{dr}{r^2}\tag4
\end{equation}</script><p>所以总功为</p>
<script type="math/tex; mode=display">

W=\int dW=GMm\int_a^b\frac{dr}{r^2}=GMm\left(-\frac{1}{r}\right)\Big|_a^b=GMm\left(\frac{1}{a}-\frac{1}{b}\right)</script><p>考虑如果最终位置$r=b$非常远，以致于$b\to \infty$，那么功$W$将接近极限值$GMm/a$。将$m$从$r=a$移到无穷远处(也就是完全将两个物体分开)所需要做的功；它叫做两个粒子的势能。</p>
<p>前面处理的例子都是距离一定，作用的力是变化的。接下里的例子与此不同，物体的一部分在同一个力下移动不同的距离，总功可以通过计算部分功的和求出来。</p>
<p><strong>例3</strong>：考虑一个底边半径为$r$高为$h$的圆柱体，其中水深为$D$(图2)。那么将水移到桶的边缘需要做多少功？(通常我们用$w$表示水的质量密度(weight-density) 来表示，也就是单位体积的质量)</p>
<p><strong>解</strong>：这个问题的本质是每一滴水必须从初始位置移到桶的边缘。对边缘下方同一距离的所有水滴，这个过程做的功是一样的。这表明我们可以考虑很薄的水平圆柱层，在高为$x$处的厚度为$dx$，那么将这部分移到桶边缘的所做的功是$dW$，同样对其它层也用这种方法，然后从$0$ 到$D$进行相加记得总功。另外从图中可以看出，每层的体积为$\pi r^2dx$，所以质量为$w\pi r^2dx$，功的元素为</p>
<script type="math/tex; mode=display">
\begin{equation}
dW=w\pi r^2dx\cdot(h-x)\tag5
\end{equation}</script><p>因此总共为</p>
<script type="math/tex; mode=display">
\begin{align*}
W=\int dW
&=w\pi r^2\int_0^D(h-x)dx\\
&=w\pi r^2(hx-\frac{1}{2}x^2)\Big|_0^D=w\pi r^2(hD-\frac{1}{2}D^2)
\end{align*}</script><p>重新强调一下：本例题方法的关键是薄的圆柱层内所有的水移动了相同的距离。</p>
<p>我们应该看到定义(1)是这些例子的关键所在。公式(2)(4)(5)仅仅是(1)在不同情景下的版本。</p>
<p>接下来我们讨论另一个重要的概念：能量</p>
<p>考虑作用变力$F$作用在质量为$m$的物体上移动了一段距离，这里我们采用$x$轴。这个力不仅做了功，而且还产生了加速度$dv/dt$，根据牛顿第二运动定律</p>
<script type="math/tex; mode=display">
\begin{equation}
F=m\frac{dv}{dt}\qquad where\ v=dx/dt\tag6
\end{equation}</script><p>由力产生的加速度改变了物体的速度，也叫作动能或能量，它的定义式为</p>
<script type="math/tex; mode=display">

kinetic\ energy\ =\frac{1}{2}mv^2</script><p>现在我们证明下面的力学定理：</p>
<p><strong>上面描述的过程中，力$F$所做的功等于物体动能的变化量；特别地，如果物体开始是静止的，那么力所做的功等于物体获得的动能。</strong></p>
<p>这个证明很容易。我们首先将(6)写为</p>
<script type="math/tex; mode=display">

F=m\frac{dv}{dt}=m\frac{dv}{dx}\frac{dx}{dt}=mv\frac{dv}{dx}</script><p>利用公式(3)得</p>
<script type="math/tex; mode=display">
\begin{align*}
W=\int_a^bFdx
&=\int_a^bmv\frac{dv}{dx}=dx=\int_{v_a}^{v_b}mvdv\\
&=\frac{1}{2}mv^2\Big|_{v_a}^{v_b}=\frac{1}{2}mv_b^2-\frac{1}{2}mv_a^2
\end{align*}</script><p>所以功$W$等于动能的变化量。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-7-Work-and-Energy/20160905184258641" alt="这里写图片描述" title>
图2
</center>

<p><strong>注解</strong>：对某些物理情况，它可能介绍势能的概念，下面，我们就非常简明的解释一下。为了计算(7)我们使用公式(3)，假定未指定的力$F$是连续函数且只依赖$x$轴，其区间为$a\leq x\leq b$。(注意，摩擦力没有这种属性；因为它不仅取决于物体$m$的位置，还有移动方向)。这个假设保证存在函数$V(x)$使得$dV/dx=-F(x)$。因此我们可以用另一种方式来计算功$w$如下所示：</p>
<script type="math/tex; mode=display">
\begin{align}
W=\int_a^bF(x)dx
&=\int_a^b-F(x)dx=V(x)\Big|_b^a\nonumber\\
&=V(a)-V(b)\tag7
\end{align}</script><p>所以(7)可是写成</p>
<script type="math/tex; mode=display">

\frac{1}{2}mv_b^2-\frac{1}{2}mv_a^2=V(a)-V(b)</script><p>或者</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{1}{2}mv_b^2+V(b)=\frac{1}{2}mv_a^2+V(a)\tag8
\end{equation}</script><p>(9)的左边我们去掉下标，并用$V(x)$代替$V(b)$，这样做是为了强调$v,V(x)$是变量；在右边$v_a,V(a)$保持不变。于是(9)就写成</p>
<script type="math/tex; mode=display">
\begin{equation}
\frac{1}{2}mv^2+V(x)=\frac{1}{2}mv_a^2+V(a)=E\tag9
\end{equation}</script><p>其中常数$E$叫做物体的总能量。函数$V(x)$叫做物体的势能，(10)表明动能和势能的和是常数。这就是能量守恒定律，经典物理学中基本原则之一。</p>
<p>从(10)中可以看出，如果$F(x)$作功，那么动能将增加，势能同样如此。所以可以看做势能转化成等量的动能。</p>
<p>我们指出$V(x)$的定义表明它这个函数通过增加一个常数就能确定，所以为了方便，在任何特定情况下我们都选择零势能，此外，大家可能疑惑定义$V(x)$时候的代数符号，这样做的目的是保证(10)中出现的是正好而不是负号，这样的话，我们可以说动能和势能之和而不是它们的差是常数。</p>
<p><strong>例4</strong>：从物理上看，人类的心脏是一种泵。血液通过二尖瓣(图3)进入左心室，然后通过主动脉瓣迸出到身体各处。每次收缩期间的舒张压是80$mm\ Hg$<br>收缩压是120$mm\ Hg$。现在我们计算一次心跳左心室做的功，假设心室的体积在收缩的时候减少约75$cm^3$。我们需要知道$100\ mm\ Hg\cong 1.33\times 10^5\ dynes/cm^2$。</p>
<p>为便于理解泵的工作原理，我们将心脏想象成如图所示的从$x=0$到$x=a$的活塞运动，而不是肌肉收缩。如果$A$是活塞头的面积，那么$aA=75$。从图4可以看出活塞工作的压强$P(x)$</p>
<script type="math/tex; mode=display">

P(x)=\frac{40}{a}x+80</script><p>我们现在把这一切放在一起，观察到一次向上运动的过程中施加在活塞上的力是$P(x)A$，所以这个过程中所做的功为</p>
<script type="math/tex; mode=display">
\begin{align*}
W=\int_0^aP(x)Adx
&=A\int_0^a\left(\frac{40}{a}x+80\right)dx\\
&=A\left(\frac{20}{a}x^2+80x\right)\Big|_0^a=100aA\\
&\cong(1.33\times 10^5\ dynes/cm^2)\cdot(75\ cm^3)\\
&\cong10^7\ dyne-cm\\
&\cong1\ joule\\
&\cong 0.74\ ft-lb
\end{align*}</script><center>
<img src="/2020/07/09/Stroll-calculus-7-7-Work-and-Energy/20160905184328669" alt="这里写图片描述" title>
图3
</center>

<p>对一个体重120磅，脉率为60的人来说，我们可以利用计算器快速算出一天24小时心脏做的功可以将这个人垂直举起500 多$ft$。人类心脏是重要的器官，但是被我们低估了！</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-7-Work-and-Energy/20160905184351404" alt="这里写图片描述" title>
图4
</center>

<p><a href="https://blog.csdn.net/u010182633/article/details/52442649" target="_blank" rel="noopener">漫步微积分三十七——力和功</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步微积分7.8 - 流体静力学</title>
    <url>/2020/07/09/Stroll-calculus-7-8-Hydrostatic-Force/</url>
    <content><![CDATA[<p><strong>声明：单变量微积分的内容到这里就结束了，衷心希望可以帮到大家，再次谢谢大家的支持。</strong></p>
<p>前面的文章中我们已经看到如何使用积分来解决几何和基本物理中产生的问题。</p>
<p>本节，我们简短介绍一下流体静力学，它主要关注液体的行为，尤其是，我们计算一个开口容器内部的水向外的作用力。我们可以考虑任何容器，可以是一个很小的鱼缸，也可是巨型大坝水库。之所以将它，是因为它更好的解释了前几篇文章的主题(将要计算的量划分为许多方便的小块，然后添加计算也就是积分得到要计算的量)。</p>
<p>有一个底面是矩形的盒子，里面的水深为$h$(图1)，那么底部受到向下的力等于盒内水的重量。如果$A$是底部的面积，那么由公式给出</p>
<script type="math/tex; mode=display">
\begin{equation}
F=whA\tag1
\end{equation}</script><p>其中$w$是水的质量密度，近似为$62.5\ lb/ft^3$或者$\frac{1}{32}ton/ft^3$。很明显(1)中的度量单位需要兼容。我们用$feet$度量$h$，$square\ feet$度量$A$，$pounds$或者$tons\ per-\ cubic\ foot$度量$w$。那么力$F$就是$pounds\ or\ tons$。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-8-Hydrostatic-Force/20160906211647038" alt="这里写图片描述" title>
图1
</center>

<a id="more"></a>
<p>如果我们用$A$除以(1)，那么余下的量</p>
<script type="math/tex; mode=display">
\begin{equation}
p=wh\tag2
\end{equation}</script><p>是压强，或者单位面积上的力，是水对盒子底部产生的。对于深度为$h$的水造成的压强可以看成底面积为$1\ squre\ unit$ 高为$h\ units$体积水的质量，公式(2)非常重要，因为它说明压强和深度成正比，容器的大小和形状与此是不相关的。例如，游泳池内深为$4\ ft$处的压强和湖里深为$4\ ft$ 处的压强完全一样；我们在玻璃管底部放入软木并充满4$ft$ 高的水，也有同样的压强。此外，也可以通过实验验证在任何地方液体的压强方向相同，这意味着无论容器是水平放，垂直放或是任何角度放置，平板表面都有相同的压强，它的方向与平面垂直。潜水员根据经验知道对耳膜的水压只取决于水深，而不是他们头倾斜的角度。</p>
<p>对于图1，为了找出水对盒子底部的总压力，我们需要乘以底部的面积</p>
<script type="math/tex; mode=display">

F=pA</script><p>找到它对侧面的压力更加困难，因为随着水的深度增加，压强不是恒定。我们不考虑这个特定的问题，只考虑更加普遍的情况。</p>
<p>在图2中，我们显示了充满了对但形状不规则的平面。为了找到水对平面的总作用力，我们想象一下将它划分为许多薄的水平窄带。图中典型的窄带就是深度为$h$处重色部分。它的宽度$dh$相比$h$非常小所以基本上真个窄带的压强是恒定的，大小为$p=wh$。窄带面积为$dA=xdh$，所以力的元素$dF$为：</p>
<script type="math/tex; mode=display">

dF=pdA=wh\cdot xdh</script><center>
<img src="/2020/07/09/Stroll-calculus-7-8-Hydrostatic-Force/20160906211711081" alt="这里写图片描述" title>
图2
</center>

<p>作用在平面上的总力$F$通过积分这些力元得出</p>
<script type="math/tex; mode=display">
\begin{equation}
F=\int dF=\int_a^bwh\cdot xdh\tag3
\end{equation}</script><p>为了解决这一特定的问题的积分，有必要知道$x$是$h$的函数，这从平面的几何形状上可以确定出来。为了更好地了解和应用公式(3)而不是不加思索的死记这些公式，我们重复一下该方法的关键；使用薄的水平窄带，因为对于这样一条窄带，上面的压力基本上是恒定的，那么对它的力就简化为压强乘以面积。</p>
<p><strong>例1</strong>：大坝中有一扇垂直的门呈正方形，它的边长为4$ft$，上边沿在水平面下2$ft$(图3)的地方。求出这扇门必须承受的力。</p>
<center>
<img src="/2020/07/09/Stroll-calculus-7-8-Hydrostatic-Force/20160906211732210" alt="这里写图片描述" title>
图3
</center>

<p><strong>解</strong>：这种情况中$x=4$，$h$从$2$增加到$6$，所以</p>
<script type="math/tex; mode=display">

F=\int_2^6wh\cdot 4dh=2wh^2\Big|_2^6=2w\cdot 32=2\ tons</script><p><strong>例2</strong>：水渠中一个三角形坝顶部宽为10$ft$深为6$ft$图4。当顶部的水将溢出时，水对坝的作用力。</p>
<p><strong>解</strong>：利用相似三角形的性质</p>
<script type="math/tex; mode=display">

\frac{x}{10}=\frac{6-h}{6}\qquad so\qquad x=\frac{5}{3}(6-h)</script><p>因为$h$从0增加到6，所以</p>
<script type="math/tex; mode=display">
\begin{align*}
F
&=\int_0^6wh\cdot\frac{5}{3}(6-h)dh=\frac{5}{3}w(3h^2-\frac{1}{3}h^3)\Big|_0^6\\
&=60w=1\frac{7}{8}tons=3750lb
\end{align*}</script><center>
<img src="/2020/07/09/Stroll-calculus-7-8-Hydrostatic-Force/20160906211752413" alt="这里写图片描述" title>
图4
</center>

<p><a href="https://blog.csdn.net/u010182633/article/details/52453690" target="_blank" rel="noopener">漫步微积分三十八——流体静力学</a></p>
]]></content>
      <categories>
        <category>漫步微积分</category>
      </categories>
      <tags>
        <tag>calculus</tag>
      </tags>
  </entry>
  <entry>
    <title>探索redis 文件事件</title>
    <url>/2020/07/13/Explore-the-redis-file-event/</url>
    <content><![CDATA[<h2 id="原初"><a href="#原初" class="headerlink" title="原初"></a>原初</h2><p>单线程的Redis为什么如此快?</p>
<ul>
<li>纯内存操作</li>
<li>单线程操作，避免了频繁的上下文切换,</li>
<li>采用了非阻塞I/O多路复用机制</li>
</ul>
<p>看到Redis高性能的原因里，有<code>IO多路复用</code>一项，感到非常好奇具体是怎么实现的呢。</p>
<p>网上浏览了一圈，代码探索了一遍，发现复用发生在系统内核。<br>软件层面通过系统函数库<code>epoll</code> 、 <code>iocp</code>，把IO组织起来，我大致是这样理解的。</p>
<p>在之前写  <a href="/2020/06/10/Explore-the-source-code-of-the-redis-key-hashing-process/">探索redis 键散列过程源码</a>  文章时，看到redis有用到事件机制。<br>这回，在查Redis多路复用时，也看到了这个机制，决定将事件粗略探索一下，范围就定在“文件事件”上。</p>
<h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><p><img src="/2020/07/13/Explore-the-redis-file-event/20200713185944788325.png" alt="20200713185944788325.png"></p>
<ul>
<li>事件处理器用<code>multiplexing</code>监听多个套接字，根据行为的不同关联不同事件处理器</li>
<li>被监听的套接字准备好执行 <code>accept</code>, <code>read</code>, <code>write</code>, <code>close</code>等操作时，会产生相对应的事件，触发事先关联的事件处理器(ps. 回调函数)处理</li>
</ul>
<a id="more"></a>
<p>事件的定义，在头文件<code>ae.h</code>里，我猜文件名是 <code>a event</code>的缩写。</p>
<p>在源码里，经常出现<code>fd</code>，比如 <code>ipfd</code>, <code>aof_fd</code>, <code>fd</code>，经查是文件描述符 <code>file description</code> 的缩写。<br>想来在linux系统的世界观里，一切皆文件，IO相关的事物和文件有密切联系再正常不过。</p>
<p><a href="https://github.com/antirez/redis/blob/6.0.0/src/ae.h" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/ae.h</a><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* File event structure */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">aeFileEvent</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> mask; <span class="comment">/* one of AE_(READABLE|WRITABLE|BARRIER) */</span></span><br><span class="line">    aeFileProc *rfileProc;</span><br><span class="line">    aeFileProc *wfileProc;</span><br><span class="line">    <span class="keyword">void</span> *clientData;</span><br><span class="line">&#125; aeFileEvent;</span><br></pre></td></tr></table></figure></p>
<hr>
<p>当事件就绪时，需要知道文件事件的 <code>文件描述符</code> 还有 <code>事件类型</code> 才能对于锁定该事件，因此定义了 <code>aeFiredEvent</code> 结构统一管理</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* A fired event */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">aeFiredEvent</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> fd;</span><br><span class="line">    <span class="keyword">int</span> mask;</span><br><span class="line">&#125; aeFiredEvent;</span><br></pre></td></tr></table></figure>
<hr>
<p><code>aeEventLoop</code> 结构保存了一个 <code>void *</code> 类型的万能指针 <code>apidata</code> ，是用来保存轮询事件的状态的，也就是保存底层调用的多路复用库的事件状态<br><code>*beforesleep</code> 会在启动时指向预设的回调方法，之后在<code>ae.c</code> 的 <code>aeMain</code>里不断循环</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* State of an event based program */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">aeEventLoop</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> maxfd;   <span class="comment">/* highest file descriptor currently registered */</span></span><br><span class="line">    <span class="keyword">int</span> setsize; <span class="comment">/* max number of file descriptors tracked */</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> timeEventNextId;</span><br><span class="line">    <span class="keyword">time_t</span> lastTime;     <span class="comment">/* Used to detect system clock skew */</span></span><br><span class="line">    aeFileEvent *events; <span class="comment">/* Registered events */</span></span><br><span class="line">    aeFiredEvent *fired; <span class="comment">/* Fired events */</span></span><br><span class="line">    aeTimeEvent *timeEventHead;</span><br><span class="line">    <span class="keyword">int</span> stop;</span><br><span class="line">    <span class="keyword">void</span> *apidata; <span class="comment">/* This is used for polling API specific data */</span></span><br><span class="line">    aeBeforeSleepProc *beforesleep;</span><br><span class="line">    aeBeforeSleepProc *aftersleep;</span><br><span class="line">    <span class="keyword">int</span> flags;</span><br><span class="line">&#125; aeEventLoop;</span><br></pre></td></tr></table></figure>
<h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p><a href="https://github.com/antirez/redis/blob/6.0.0/src/server.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/server.c</a><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">line:<span class="number">4917</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span> </span>&#123;</span><br><span class="line">    ....</span><br><span class="line">    line:<span class="number">5075</span></span><br><span class="line">    initServer();</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    line:<span class="number">5123</span></span><br><span class="line">    aeSetBeforeSleepProc(server.el,beforeSleep);</span><br><span class="line">    aeSetAfterSleepProc(server.el,afterSleep);</span><br><span class="line">    aeMain(server.el);</span><br><span class="line">    aeDeleteEventLoop(server.el);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<ul>
<li><code>initServer</code> 初始化事件轮询、端口监听、连接应答注册等</li>
<li><code>aeSetBeforeSleepProc</code> 将<code>beforeSleep</code>函数关联到<code>event loop</code>上，函数<code>beforeSleep</code>中有<code>回复处理</code>的代码。</li>
<li><code>aeMain</code> 正常运行时，将一直循环处理事件</li>
</ul>
<hr>
<p><a href="https://github.com/antirez/redis/blob/6.0.0/src/server.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/server.c</a><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">line:<span class="number">2702</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initServer</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    line:<span class="number">2743</span></span><br><span class="line">    server.el = aeCreateEventLoop(server.maxclients+CONFIG_FDSET_INCR);</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    line:<span class="number">2752</span></span><br><span class="line">    <span class="comment">/* Open the TCP listening socket for the user commands. */</span></span><br><span class="line">    <span class="keyword">if</span> (server.port != <span class="number">0</span> &amp;&amp;</span><br><span class="line">        listenToPort(server.port,server.ipfd,&amp;server.ipfd_count) == C_ERR)</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    ....</span><br><span class="line"></span><br><span class="line">    line:<span class="number">2845</span></span><br><span class="line">    <span class="comment">/* Create an event handler for accepting new connections in TCP and Unix</span></span><br><span class="line"><span class="comment">     * domain sockets. */</span></span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; server.ipfd_count; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (aeCreateFileEvent(server.el, server.ipfd[j], AE_READABLE,</span><br><span class="line">            acceptTcpHandler,<span class="literal">NULL</span>) == AE_ERR)</span><br><span class="line">            &#123;</span><br><span class="line">                serverPanic(</span><br><span class="line">                    <span class="string">"Unrecoverable error creating server.ipfd file event."</span>);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<ul>
<li><code>aeCreateEventLoop</code> 创建事件循环、IO多路复用</li>
<li><code>listenToPort</code> 监听端口</li>
<li><code>aeCreateFileEvent</code> 创建TCP、TLS监听事件，其中会给<code>server.ipfd[j]</code> 的 <code>rfileProc</code>赋予回调函数 <code>acceptTcpHandler</code></li>
</ul>
<hr>
<p><a href="https://github.com/antirez/redis/blob/6.0.0/src/ae.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/ae.c</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">line:522</span><br><span class="line">void aeMain(aeEventLoop *eventLoop) &#123;</span><br><span class="line">    eventLoop-&gt;stop = 0;</span><br><span class="line">    while (!eventLoop-&gt;stop) &#123;</span><br><span class="line">        if (eventLoop-&gt;beforesleep != NULL)</span><br><span class="line">            eventLoop-&gt;beforesleep(eventLoop);</span><br><span class="line">        aeProcessEvents(eventLoop, AE_ALL_EVENTS|AE_CALL_AFTER_SLEEP);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<ul>
<li><code>beforeSleep</code> 的循环调用，会执行接收、回复处理等操作</li>
<li><code>aeProcessEvents</code> 的循环调用，会执行等待epoll中发生事件，并交由事先注册的处理器处理。</li>
</ul>
<h2 id="多路复用"><a href="#多路复用" class="headerlink" title="多路复用"></a>多路复用</h2><p>多路复用函数库定义在：<code>ae_xxx.c</code>中，库底层可相互替换，这里以<code>ae_epoll.c</code>做探索。</p>
<p><a href="https://github.com/antirez/redis/blob/6.0.0/src/ae_epoll.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/ae_epoll.c</a><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">line:<span class="number">39</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">aeApiCreate</span><span class="params">(aeEventLoop *eventLoop)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    line:<span class="number">48</span></span><br><span class="line">    state-&gt;epfd = epoll_create(<span class="number">1024</span>); <span class="comment">/* 1024 is just a hint for the kernel */</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">line:<span class="number">73</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">aeApiAddEvent</span><span class="params">(aeEventLoop *eventLoop, <span class="keyword">int</span> fd, <span class="keyword">int</span> mask)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    line:<span class="number">86</span></span><br><span class="line">    <span class="keyword">if</span> (epoll_ctl(state-&gt;epfd,op,fd,&amp;ee) == <span class="number">-1</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">line:<span class="number">108</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">aeApiPoll</span><span class="params">(aeEventLoop *eventLoop, struct timeval *tvp)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    line:<span class="number">112</span></span><br><span class="line">    retval = epoll_wait(state-&gt;epfd,state-&gt;events,eventLoop-&gt;setsize,</span><br><span class="line">            tvp ? (tvp-&gt;tv_sec*<span class="number">1000</span> + tvp-&gt;tv_usec/<span class="number">1000</span>) : <span class="number">-1</span>);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<ul>
<li><code>epoll_create</code> 建立一个epoll对象。参数size是内核保证能够正确处理的最大句柄数，多于这个最大数时内核可不保证效果。</li>
<li><code>epoll_ctl</code> 可以操作上面建立的epoll，例如，将刚建立的socket加入到epoll中让其监控，或者把 epoll正在监控的某个socket句柄移出epoll，不再监控它等等。</li>
<li><code>epoll_wait</code> 在调用时，在给定的timeout时间内，当在监控的所有句柄中有事件发生时，就返回用户态的进程。</li>
</ul>
<blockquote>
<p>server.c:main:initServer -&gt; server.c:initServer:aeCreateEventLoop -&gt; ae.c:*aeCreateEventLoop:aeApiCreate -&gt; ae_epoll.c:aeApiCreate:epoll_create</p>
</blockquote>
<hr>
<blockquote>
<p>server.c:main:initServer -&gt; server.c:initServer:aeCreateFileEvent -&gt; ae.c:aeCreateFileEvent:aeCreateFileEvent -&gt; ae_epoll.c:aeApiAddEvent:epoll_ctl</p>
</blockquote>
<hr>
<blockquote>
<p>server.c:main:aeMain -&gt; ae.c:aeMain:aeProcessEvents -&gt; ae.c:aeProcessEvents:aeApiPoll -&gt; ae_epoll.c:aeApiPoll:epoll_wait</p>
</blockquote>
<p>可见在程序启动的过程里，已经通过事件库<code>ae.c</code>完整的调用了多路复用函数，并完成了事件处理器的注册。</p>
<h2 id="事件处理器"><a href="#事件处理器" class="headerlink" title="事件处理器"></a>事件处理器</h2><h3 id="连接应答处理器"><a href="#连接应答处理器" class="headerlink" title="连接应答处理器"></a>连接应答处理器</h3><p>在上文的，redis启动阶段，已为事件关联acceptTcpHandler回调。</p>
<p><a href="https://github.com/antirez/redis/blob/6.0.0/src/networking.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/networking.c</a></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">line:<span class="number">944</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">acceptTcpHandler</span><span class="params">(aeEventLoop *el, <span class="keyword">int</span> fd, <span class="keyword">void</span> *privdata, <span class="keyword">int</span> mask)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cport, cfd, max = MAX_ACCEPTS_PER_CALL;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(max--) &#123;</span><br><span class="line">        cfd = anetTcpAccept(server.neterr, fd, cip, <span class="keyword">sizeof</span>(cip), &amp;cport);</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    acceptCommonHandler(connCreateAcceptedSocket(cfd),<span class="number">0</span>,cip);</span><br></pre></td></tr></table></figure>
<ul>
<li><code>anetTcpAccept</code> 用于对连接服务器监听套接字的客户端进行应答</li>
<li><code>acceptCommonHandler</code> 注册命令请求处理器</li>
</ul>
<hr>
<p>其主要调用<code>anet.c</code>中<code>anetTcpAccept</code>函数实现，具体实现为<code>sys/socket.h/accept</code>函数的包装<br><a href="https://github.com/antirez/redis/blob/6.0.0/src/anet.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/anet.c</a><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">line:<span class="number">562</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">anetTcpAccept</span><span class="params">(<span class="keyword">char</span> *err, <span class="keyword">int</span> s, <span class="keyword">char</span> *ip, <span class="keyword">size_t</span> ip_len, <span class="keyword">int</span> *port)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fd;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">if</span> ((fd = anetGenericAccept(err,s,(struct sockaddr*)&amp;sa,&amp;salen)) == <span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> ANET_ERR;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> fd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">line:<span class="number">545</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">anetGenericAccept</span><span class="params">(<span class="keyword">char</span> *err, <span class="keyword">int</span> s, struct sockaddr *sa, <span class="keyword">socklen_t</span> *len)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    fd = accept(s,sa,len);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>当Redis服务器进行初始化的时候，程序会将这个连接应答处理器和服务器监听套接字的AE_READABLE事件关联起来。<br>当有客户端用sys/socket.h/connect函数连接服务器监听套接字的时候，套接字就会产生AE_READABLE事件，引发连接应答处理器执行，并执行相应的套接字应答操作。</p>
<h3 id="命令请求处理器"><a href="#命令请求处理器" class="headerlink" title="命令请求处理器"></a>命令请求处理器</h3><blockquote>
<p>networking.c:acceptTcpHandler:acceptCommonHandler -&gt; networking.c:acceptCommonHandler:createClient -&gt; networking.c:*createClient:readQueryFromClient</p>
</blockquote>
<p>在连接处理器中，会关联命令处理函数<br>它负责从套接字中读入客户端发送的命令请求内容，具体实现为unistd.h/read函数的包装</p>
<p><a href="https://github.com/antirez/redis/blob/6.0.0/src/networking.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/networking.c</a><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">line:<span class="number">1858</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">readQueryFromClient</span><span class="params">(connection *conn)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    line:<span class="number">1887</span></span><br><span class="line">    nread = connRead(c-&gt;conn, c-&gt;querybuf+qblen, readlen);</span><br><span class="line">    ...</span><br><span class="line">    processInputBuffer(c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<hr>
<p><code>connRead</code> 该函数定义在<code>connection.h</code>中，最终映射至<code>connection.c</code>的<code>connSocketRead</code>函数<br><a href="https://github.com/antirez/redis/blob/6.0.0/src/connection.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/connection.c</a><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"server.h"</span></span></span><br><span class="line">...</span><br><span class="line">line:<span class="number">173</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">connSocketRead</span><span class="params">(connection *conn, <span class="keyword">void</span> *buf, <span class="keyword">size_t</span> buf_len)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = read(conn-&gt;fd, buf, buf_len);</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>当一个客户端通过连接应答处理器成功连接到服务器之后，服务器会将客户端套接字的AE_READABLE事件和命令请求处理器关联起来。<br>当客户端向服务器发送命令请求的时候，套接字就会产生AE_READABLE事件，引发命令请求处理器执行，并执行相应的套接字读入操作；</p>
<p>在客户端连接服务器的整个过程中，服务器都会一直为客户端套接字的AE_READABLE事件关联命令请求处理器。</p>
<h3 id="命令回复处理器"><a href="#命令回复处理器" class="headerlink" title="命令回复处理器"></a>命令回复处理器</h3><p>在启动阶段，<code>aeSetBeforeSleepProc</code>给事件循环关联了<code>beforeSleep</code>回调<br><code>beforeSleep</code> 中 <code>handleClientsWithPendingWritesUsingThreads</code> 将设置回复处理器 <code>sendReplyToClient</code></p>
<p><a href="https://github.com/antirez/redis/blob/6.0.0/src/networking.c" target="_blank" rel="noopener">https://github.com/antirez/redis/blob/6.0.0/src/networking.c</a><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">handleClientsWithPendingWritesUsingThreads</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    line:<span class="number">3052</span></span><br><span class="line">    <span class="keyword">while</span>((ln = listNext(&amp;li))) &#123;</span><br><span class="line">        client *c = listNodeValue(ln);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* Install the write handler if there are pending writes in some</span></span><br><span class="line"><span class="comment">         * of the clients. */</span></span><br><span class="line">        <span class="keyword">if</span> (clientHasPendingReplies(c) &amp;&amp;</span><br><span class="line">                connSetWriteHandler(c-&gt;conn, sendReplyToClient) == AE_ERR)</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">line:<span class="number">1357</span></span><br><span class="line"><span class="comment">/* Write event handler. Just send data to the client. */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sendReplyToClient</span><span class="params">(connection *conn)</span> </span>&#123;</span><br><span class="line">    client *c = connGetPrivateData(conn);</span><br><span class="line">    writeToClient(c,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">line:<span class="number">1261</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">writeToClient</span><span class="params">(client *c, <span class="keyword">int</span> handler_installed)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    line:<span class="number">1346</span></span><br><span class="line">    <span class="keyword">if</span> (handler_installed) connSetWriteHandler(c-&gt;conn, <span class="literal">NULL</span>);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<hr>
<p><code>connSetWriteHandler</code> 该函数定义在<code>connection.h</code>中，<br>最终映射至<code>connection.c</code>的<code>connSocketSetWriteHandler</code>函数。</p>
<p>当服务器有命令回复需要传送给客户端的时候，服务器会将客户端套接字的AE_WRITABLE事件和命令回复处理器关联起来。<br>当客户端准备好接收服务器传回的命令回复时，就会产生AE_WRITABLE事件，引发命令回复处理器执行，并执行相应的套接字写入操作。</p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>在<code>ae.c</code>的注释里有这样一段话，感叹作者积累的深厚</p>
<blockquote>
<p>A simple event-driven programming library. Originally I wrote this code<br>  for the Jim’s event-loop (Jim is a Tcl interpreter) but later translated<br>  it in form of a library for easy reuse.</p>
</blockquote>
<p>粗略的记了记redis里事件机制初始化、事件处理器<br>关于事件状态变化、时间事件、线程等还有待探索。</p>
<p><code>epoll</code> 也是一个有趣的点，对它内部的实现感到好奇。</p>
<p><a href="https://blog.csdn.net/bohu83/article/details/84964656" target="_blank" rel="noopener">《redis设计与实现》-12事件event</a><br><a href="https://blog.csdn.net/men_wen/article/details/71514524" target="_blank" rel="noopener">Redis源码剖析和注释（十九）—- Redis 事件处理实现</a><br><a href="https://segmentfault.com/a/1190000015246793" target="_blank" rel="noopener">［Redis源码阅读］当你输入get/set命令的时候，Redis做了什么</a><br><a href="https://blog.csdn.net/fujibao/article/details/81490687" target="_blank" rel="noopener">epoll模型详解</a><br><a href="https://blog.csdn.net/sparkliang/article/details/4770655" target="_blank" rel="noopener">Linux Epoll介绍和程序实例</a></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Add clipboard to next code block</title>
    <url>/2020/09/09/Add-clipboard-to-next-code-block/</url>
    <content><![CDATA[<h2 id="The-begining"><a href="#The-begining" class="headerlink" title="The begining"></a>The begining</h2><p><a href="https://kafka-tutorials.confluent.io/kafka-console-consumer-producer-basics/kafka.html" target="_blank" rel="noopener">https://kafka-tutorials.confluent.io/kafka-console-consumer-producer-basics/kafka.html</a><br>i saw <code>confluent.io</code>‘s code block is great.<br>it have feature like clipboard/ collapsible, even font looke good.<br>so i want add clipboard function to my blog at first.</p>
<p>at first i search by <code>markdown code block copy</code>, but no article helps.<br>then i search by <code>hexo next theme code block</code>, finally find the article i want.</p>
<p><a href="https://www.jianshu.com/p/3e9d614c1e77" target="_blank" rel="noopener">Hexo NexT 代码块复制功能</a></p>
<a id="more"></a>
<h2 id="implement"><a href="#implement" class="headerlink" title="implement"></a>implement</h2><h3 id="Download-clipboard-js"><a href="#Download-clipboard-js" class="headerlink" title="Download clipboard.js"></a>Download <code>clipboard.js</code></h3><p>Download js file from <a href="https://github.com/zenorocha/clipboard.js" target="_blank" rel="noopener">https://github.com/zenorocha/clipboard.js</a></p>
<ul>
<li><a href="https://raw.githubusercontent.com/zenorocha/clipboard.js/master/dist/clipboard.js" target="_blank" rel="noopener">clipboard.js</a></li>
<li><a href="https://raw.githubusercontent.com/zenorocha/clipboard.js/master/dist/clipboard.min.js" target="_blank" rel="noopener">clipboard.min.js</a> (recommend)</li>
</ul>
<p>save file to <code>themes\next\source\js\</code></p>
<p>or use cdn resource directly:<br><a href="https://github.com/zenorocha/clipboard.js/wiki/CDN-Providers" target="_blank" rel="noopener">https://github.com/zenorocha/clipboard.js/wiki/CDN-Providers</a></p>
<h3 id="Use-clipboard-js"><a href="#Use-clipboard-js" class="headerlink" title="Use clipboard.js"></a>Use <code>clipboard.js</code></h3><p>create file <code>clipboard-use.js</code> in <code>themes\next\source\js\</code> as well.</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*create copy button when page loaded*/</span></span><br><span class="line">!<span class="function"><span class="keyword">function</span> (<span class="params">e, t, a</span>) </span>&#123;</span><br><span class="line">  <span class="comment">/* code */</span></span><br><span class="line">  <span class="keyword">var</span> initCopyCode = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> copyHtml = <span class="string">''</span>;</span><br><span class="line">    copyHtml += <span class="string">'&lt;button class="btn-copy" data-clipboard-snippet&gt;'</span>;</span><br><span class="line">    copyHtml += <span class="string">'  &lt;i class="fa fa-globe"&gt;&lt;/i&gt;&lt;span&gt;copy&lt;/span&gt;'</span>;</span><br><span class="line">    copyHtml += <span class="string">'&lt;/button&gt;'</span>;</span><br><span class="line">    $(<span class="string">".highlight .code pre"</span>).before(copyHtml);</span><br><span class="line">    <span class="keyword">new</span> ClipboardJS(<span class="string">'.btn-copy'</span>, &#123;</span><br><span class="line">        target: <span class="function"><span class="keyword">function</span>(<span class="params">trigger</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> trigger.nextElementSibling;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  initCopyCode();</span><br><span class="line">&#125;(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br></pre></td></tr></table></figure>
<p>append style in <code>themes\next\source\css\_custom\custom.styl</code><br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">//copy button in code block</span><br><span class="line"><span class="selector-class">.highlight</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn-copy</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(#fcfcfc,#eee);</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d5d5d5</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">-webkit-user-select</span>: none;</span><br><span class="line">    <span class="attribute">-moz-user-select</span>: none;</span><br><span class="line">    <span class="attribute">-ms-user-select</span>: none;</span><br><span class="line">    <span class="attribute">user-select</span>: none;</span><br><span class="line">    <span class="attribute">-webkit-appearance</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">-webkit-transition</span>: opacity .<span class="number">3s</span> ease-in-out;</span><br><span class="line">    <span class="attribute">-o-transition</span>: opacity .<span class="number">3s</span> ease-in-out;</span><br><span class="line">    <span class="attribute">transition</span>: opacity .<span class="number">3s</span> ease-in-out;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn-copy</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.highlight</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.btn-copy</span>&#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h2><p>modify <code>themes\next\layout\_layout.swig</code>, add tag before <code>&lt;/body&gt;</code><br>if you use cdn resource, replace it with cdn src.</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!-- 代码块复制功能 --&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/clipboard.min.js"</span>&gt;&lt;<span class="regexp">/script&gt;  </span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">" src="</span>/js/clipboard-use.js<span class="string">"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="defects"><a href="#defects" class="headerlink" title="defects"></a>defects</h2><ul>
<li>the button style is not very harmonious with blog</li>
<li>when copy success no remind tip <code>copyed!</code><br>the offical recommend use <a href="https://github.com/primer/css" target="_blank" rel="noopener">https://github.com/primer/css</a>, but it’s not easy for me to get started.</li>
<li>when copy success the paragraph well be selected, it’s not what i want.</li>
</ul>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>install</tag>
      </tags>
  </entry>
  <entry>
    <title>卡夫卡，炼狱和分层时间轮【译】</title>
    <url>/2020/09/11/Apache-Kafka-Purgatory-and-Hierarchical-Timing-Wheels/</url>
    <content><![CDATA[<p>Apache Kafka具有称为“请求炼狱”的数据结构。炼狱将保留所有尚未满足其成功条件但还没有导致错误的请求。问题是“我们如何有效地跟踪集群中其他活动异步满足的成千上万个请求？”</p>
<p>Kafka实现了几种请求类型，这些请求类型无法立即通过响应进行响应。例子：</p>
<ul>
<li>在所有同步副本都确认该写入之前，不能将<code>acks = all</code>的生产请求视为已完成，如此我们可以保证，如果领导者失败，该请求也不会丢失。</li>
<li>直到至少有一个新字节的数据供消费者使用时，才会回答<code>min.bytes = 1</code>的提取请求。这允许进行“长时间轮询”，以便用户不必忙于等待检查新数据的到来。</li>
</ul>
<p>当（a）他们要求的条件完成或（b）发生某些超时时，这些请求被视为完成。</p>
<p>在任何时候，运行中的这些异步操作的数量与连接的数量成比例，对于卡夫卡而言，连接的数量通常为数万。</p>
<p>请求炼狱是为如此大规模的请求处理而设计的，但是旧的实现有许多缺陷。</p>
<p>在此博客中，我想解释旧实现的问题以及新实现如何解决它。我还将介绍基准测试结果。</p>
<a id="more"></a>
<h1 id="Old-Purgatory-Design"><a href="#Old-Purgatory-Design" class="headerlink" title="Old Purgatory Design"></a>Old Purgatory Design</h1><p>请求炼狱由超时计时器和用于事件驱动处理的观察者列表的哈希图组成。当由于条件未满足而无法立即满足请求时，将请求放入炼狱。满足条件后，炼狱中的请求将在稍后完成，或者超过请求的<code>timeout</code>参数指定的时间后，被强制完成（超时）。在旧的设计中，它使用Java <em>DelayQueue</em>实现计时器。</p>
<p>请求完成后，不会立即从计时器或观察者列表中删除该请求。相反，将在条件检查期间删除发现的已完成请求。如果删除没有跟上，服务器可能耗尽JVM堆并导致<em>OutOfMemoryError</em>。</p>
<p>为了缓解这种情况，当炼狱中的请求数（未决或已完成）超过配置的数目时，称为收割者线程的单独线程将从炼狱中清除已完成的请求。清除操作将扫描计时器队列和所有观察者列表，以查找已完成的请求并将其删除。</p>
<p>通过将此配置参数<code>timeout</code>设置为低，服务器实际上可以避免内存问题。但是，如果服务器过于频繁地扫描所有列表，则必须付出重大的性能损失。</p>
<h1 id="New-Purgatory-Design"><a href="#New-Purgatory-Design" class="headerlink" title="New Purgatory Design"></a>New Purgatory Design</h1><p>新设计的目标是允许立即删除已完成的请求，并显著减少重要清除过程的负担。 它需要在计时器和请求中交叉引用条目。 另外，由于插入/删除操作是针对每个请求/完成发生的，因此强烈希望具有O(1) 插入/删除成本。</p>
<p>为了满足这些要求，我们设计了一种基于 <a href="http://www.cs.columbia.edu/~nahum/w6998/papers/ton97-timing-wheels.pdf" target="_blank" rel="noopener">Hierarchical Timing Wheels</a> [1]. 的新炼狱实现。</p>
<h2 id="Hierarchical-Timing-Wheel"><a href="#Hierarchical-Timing-Wheel" class="headerlink" title="Hierarchical Timing Wheel"></a>Hierarchical Timing Wheel</h2><p>一个简单的计时轮是一系列计时任务的循环列表。让<strong>u</strong>成为时间单位。大小为 <strong>n</strong> 的计时轮有 <strong>n</strong> 个存储桶，可以在 <script type="math/tex">n * u</script> 个时间间隔内保存计时器任务。每个存储桶都包含属于相应时间范围的计时器任务。首先，第一个存储桶保存 <script type="math/tex">[0, u)</script> 的任务，第二个存储桶保存 <script type="math/tex">[u, 2u)</script>, … 的任务，第 <strong>n</strong> 个存储桶 <script type="math/tex">[u * (n - 1), u * n)</script> 。在时间单位<strong>u</strong>的每个间隔中，计时器都会计时并移动到下一个存储桶，然后使其中的所有计时器任务到期。因此，计时器永远不会在当前时间将任务插入存储桶中，因为它已经过期。计时器立即运行过期的任务。然后清空的存储桶可用于下一个回合，因此如果当前存储桶的时间为<strong>t</strong>，则在滴答之后它将成为 <script type="math/tex">[t + u * n, t + (n + 1) * u)</script> 的存储桶。计时轮的插入/删除（开始计时器/停止计时器）成本为O(1)，而基于优先级队列的计时器（例如<em>java.util.concurrent.DelayQueue</em> 和 <em>java.util.Timer</em>）的成本为 O(log n)插入/删除消耗。请注意，<em>DelayQueue</em> 或 <em>Timer</em>都不支持随机删除。</p>
<p><img src="/2020/09/11/Apache-Kafka-Purgatory-and-Hierarchical-Timing-Wheels/TimingWheels1.png" alt="TimingWheels1"></p>
<p>简单计时轮的主要缺点在于，它假定计时器请求在距当前时间 <script type="math/tex">n * u</script> 的时间间隔内。如果计时器请求超出此时间间隔，则为溢出。分层的定时轮处理此类溢出。它是按层次结构组织的定时轮，将溢出委托给上一级轮。最低级别具有最佳时间分辨率。随着我们向上移动层次结构，时间分辨率变得更粗糙。如果时间轮在一个级别上的分辨率为 <strong>u</strong> 并且大小为 <strong>n</strong>，则第二个级别的分辨率应为 <script type="math/tex">n * u</script>，第三个级别的分辨率应为 <script type="math/tex">n2 * u</script>，依此类推。在每个级别上，溢出都被委托给更高一级的时间轮。当较高级别的时间轮滴答作响时，它将计时器任务重新插入较低级别。可以按需创建溢流轮。当溢出存储桶中的存储桶到期时，该存储桶中的所有任务都将递归地重新插入到计时器中。然后将任务移至更细的时间轮(finer grain wheels)或执行任务。插入（启动计时器）成本为O(m)，其中 <strong>m</strong> 是时间轮的数量，与系统中的请求数量相比通常很小，而删除（停止计时器）成本仍为O(1)。</p>
<p><img src="/2020/09/11/Apache-Kafka-Purgatory-and-Hierarchical-Timing-Wheels/TimingWheels2.png" alt="TimingWheels2"></p>
<h2 id="Doubly-Linked-List-for-Buckets-in-Timing-Wheels"><a href="#Doubly-Linked-List-for-Buckets-in-Timing-Wheels" class="headerlink" title="Doubly Linked List for Buckets in Timing Wheels"></a>Doubly Linked List for Buckets in Timing Wheels</h2><p>在新设计中，我们对计时轮中的桶使用自己的双向链表实现。 双链列表的优点是，如果我们在列表中有访问链表单元的能力，则它允许O(1)插入/删除列表项。</p>
<p>排队到计时器队列时，计时器任务实例将自身保存链表单元。 任务完成或取消后，将使用任务本身中保存的链表单元更新列表。</p>
<h2 id="Driving-Clock-using-DelayQueue"><a href="#Driving-Clock-using-DelayQueue" class="headerlink" title="Driving Clock using DelayQueue"></a>Driving Clock using DelayQueue</h2><p>一个简单的实现可以使用一个线程，该线程每单位时间唤醒一次并执行轮转，轮转会检查存储桶中是否有任何任务。 炼狱的单位时间为1毫秒（<strong>u</strong> = 1毫秒）。 如果最低级别的请求稀少，这可能是浪费的。 通常是这种情况，因为大多数请求在插入最低级别的时间轮之前就已得到满足。 如果线程仅在有非空存储桶到期时才唤醒，这将是很好的。 新炼狱使用类似于旧实现的方式使用 <em>java.util.concurrent.DelayQueue</em> 来执行此操作，但是我们将任务存储区入队，而不是将单个任务加入队列。 这种设计具有性能优势。 <em>DelayQueue</em> 中的项目数由存储桶数限制，通常比任务数小得多，因此，对 <em>DelayQueue</em> 内部的优先级队列的报价/轮询操作数将大大减少。</p>
<h2 id="Purging-Watcher-Lists"><a href="#Purging-Watcher-Lists" class="headerlink" title="Purging Watcher Lists"></a>Purging Watcher Lists</h2><p>在旧的实现中，监视者列表的清除操作由监视者列表的总大小触发。问题在于，即使没有太多清除请求，观察者列表也可能超过阈值。发生这种情况时，会大大增加CPU负载。理想情况下，清除操作应由观察者列出的已完成请求数触发。</p>
<p>在新设计中，将立即以O(1)成本将完成的请求从计时器队列中删除。这意味着计时器队列中的请求数就是在任何时候的未决请求数。因此，如果我们知道炼狱中不同请求的总数，包括未决请求数和已完成但仍受监视的请求数之和，则可以避免不必要的清除操作。跟踪炼狱中不同请求的确切数量并非易事，因为可能会或可能不会看到请求。在新设计中，我们估计炼狱中的请求总数，而不是尝试保持确切的数目。</p>
<p>请求的估计数量保持如下。</p>
<ol>
<li>每当观察到新请求时，估计的请求总数<strong>E</strong>都会增加。</li>
<li>在开始清除操作之前，我们将估计的请求总数重置为计时器队列的大小。这是当前待处理的请求数。如果在清除期间没有向炼狱添加任何请求，则<strong>E</strong>是清除后正确的请求数。</li>
<li>如果在清除期间向炼狱添加了一些请求，则<strong>E</strong>递增为<strong>E+新监视的请求数</strong>。这可能是一个高估，因为在清除操作期间，某些新请求可能已完成，并已从观察者列表中删除。我们期望被高估的机会和被高估的机会很小。</li>
</ol>
<h1 id="Benchmark"><a href="#Benchmark" class="headerlink" title="Benchmark"></a>Benchmark</h1><p>我们比较了两个炼狱实现，旧实现和新实现的入队性能。这是一个微观基准。它仅测量炼狱入队表现。炼狱与系统的其余部分分离，并且还使用了虚假请求，没有任何用处。因此，在实际系统中炼狱的吞吐量可能低于测试所示的数量。</p>
<p>在测试中，假设请求的间隔遵循指数分布。每个请求都需要一个从对数正态分布中得出的时间。通过调整对数正态分布的形状，我们可以测试不同的超时率。</p>
<p>刻度大小为1ms，转轮大小为20。超时设置为200ms。请求的数据大小为100字节。对于低超时率情况，我们选择75percentile = 60ms和50percentile =20。对于高超时率情况，我们选择75percentile = 400ms和50percentile = 200ms。每次运行总共排队一百万个请求。</p>
<p>请求由单独的线程主动完成。本应在超时之前完成的请求会排队到另一个 <em>DelayQueue</em> 中。并且有一个单独的线程保持轮询并完成它们。不能保证实际完成时间的准确性。</p>
<p>JVM堆大小设置为200m，以重现内存不足的情况。</p>
<p>结果表明，在高入队率区域中存在巨大差异。随着目标速率的提高，这两种实现方式最初都跟上了请求。但是，在低超时情况下，旧实现的饱和度约为40000 RPS（每秒请求数），而新实现则未表现出任何明显的性能下降，而在高超时场景中，旧实现的饱和度约为25000 RPS，而新实现在此基准测试中，实施达到了105000 RPS。</p>
<p><img src="/2020/09/11/Apache-Kafka-Purgatory-and-Hierarchical-Timing-Wheels/enq_rate.png" alt="enq_rate"></p>
<p>此外，在新的实现中，CPU使用率明显更好。 请注意，由于其可扩展性限制，旧版实现的数据点不高于〜40000 RPS。 还要注意，在新实现中它的CPU时间稳定增长的同时，它的CPU时间大约为1.2。 它表明旧的实现可能由于同步而遇到了并发问题。</p>
<p><img src="/2020/09/11/Apache-Kafka-Purgatory-and-Hierarchical-Timing-Wheels/cms_time.png" alt="cms_time"></p>
<p>最后，我们测量了ParNew收集和CMS收集的总GC时间（毫秒）。 在旧的实施方式和新的实施方式之间，在旧的实施方式可以维持的入队率方面没有太大差异。 再次注意，由于其可扩展性限制，旧的实现的数据点不高于〜40000 RPS。</p>
<p><img src="/2020/09/11/Apache-Kafka-Purgatory-and-Hierarchical-Timing-Wheels/parnew_time.png" alt="parnew_time"></p>
<p><img src="/2020/09/11/Apache-Kafka-Purgatory-and-Hierarchical-Timing-Wheels/cms_time.png" alt="cms_time"></p>
<h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>在新设计中，我们将分层定时轮用于超时定时器，并使用定时器桶的 <em>DelayQueue</em> 来按需提前时钟。 立即将完成的请求从计时器队列中删除，费用为O(1)。 这些存储桶保留在延迟队列中，但是，存储桶的数量是有限制的。 而且，在运行正常的系统中，大多数请求在超时之前就已得到满足，并且许多存储桶在拉出延迟队列之前就变空了。 因此，计时器应该很少具有较低间隔的时段。 这种设计的优点是计时器队列中的请求数就是在任何时候的待处理请求数。 这使我们能够估计需要清除的请求数。 我们可以避免对观察者列表进行不必要的清除操作。 结果，我们在请求率方面实现了更高的可伸缩性，并具有更好的CPU使用率。</p>
<h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://www.confluent.io/blog/apache-kafka-purgatory-hierarchical-timing-wheels/" target="_blank" rel="noopener">Apache Kafka, Purgatory, and Hierarchical Timing Wheels</a></p>
<p><a href="https://archive.apache.org/dist/kafka/0.8.2.0/RELEASE_NOTES.html" target="_blank" rel="noopener">Release Notes - Kafka - Version 0.8.2.0</a></p>
<p><a href="https://issues.apache.org/jira/browse/KAFKA-1430" target="_blank" rel="noopener">Purgatory redesign</a></p>
<p><a href="http://www.cs.columbia.edu/~nahum/w6998/papers/ton97-timing-wheels.pdf" target="_blank" rel="noopener">George Varghese , Anthony Lauck, Hashed and hierarchical timing wheels: efficient data structures for implementing a timer facility, IEEE/ACM Transactions on Networking (TON), v.5 n.6, p.824-834, Dec. 1997</a></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>kafka</tag>
      </tags>
  </entry>
  <entry>
    <title>Java8 中的 HashMap</title>
    <url>/2020/09/30/HashMap-in-java8/</url>
    <content><![CDATA[<p>JDK1.8 中对HashMap底层进行了改造，例如扩容重散列算法优化、加入链表过长转红黑树结构等。<br>鉴于日常搬砖靠HashMap打天下，面试题基本跑不了，全面认知散列表必不可少。</p>
<h2 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h2><p>散列表的实现方法有两种：</p>
<ul>
<li>开放地址法(Hashing with linear probing)<br><img src="/2020/09/30/HashMap-in-java8/20200930161943.png" alt="20200930161943"></li>
<li>链接地址法(Hashing with separate chaining)<br><img src="/2020/09/30/HashMap-in-java8/20200930161836.png" alt="20200930161836"></li>
</ul>
<a id="more"></a>
<p>HashMap用的是链地址法，简单的说就是数组+链表，数组作为桶位索引，链表作为桶。<br>每个键值对，通过计算Key的Hash值确定索引，再通过对比放入数组下标位引用的链表。</p>
<p>其中JDK1.8新增了红黑树数据结构，在链表过长时，把链表转为树形结构。<br>如图：”AN EASY QUESTION”<br><img src="/2020/09/30/HashMap-in-java8/RedBlackTree.png" alt="RedBlackTree"></p>
<p>在深入前，需要理解HashMap的几个重要属性<br><img src="/2020/09/30/HashMap-in-java8/HashMap.png" alt="HashMap"></p>
<ul>
<li><code>loadFactor</code> 负载因子，触发容量伸缩的比例。ps.可以超载大于1。<script type="math/tex; mode=display">threshold = length * loadFactor</script></li>
<li><code>threshold</code>  所能容纳的key-value对极限，是当前索引容量下的最大阈值。</li>
<li><code>modCount</code>   记录内部结构发生变化的次数，主要用于迭代的快速失败。</li>
<li><code>size</code>       实际存在的键值对数量。</li>
</ul>
<h2 id="散列"><a href="#散列" class="headerlink" title="散列"></a>散列</h2><p>散列表是时空权衡的经典例子。<br>设想如果存在无限的空间，存在神奇的散列算法可以将键值对完美分配，可以预计搜索的效率将是最高的O(1)。</p>
<p>事实是现实世界没有无限资源，也没有魔法般的散列算法，只能在索引空间、搜索时间之间做权衡。</p>
<p>索引空间有限的情况下，数据在桶位里堆叠，这被称为Hash碰撞。<br>如何在有限的空间下减少Hash碰撞，答案是好的Hash算法和扩容机制。</p>
<p>HashMap的空间伸缩，大小必须是2的n次方（合数）,这并不是常规的做法，通常是会把桶位的大小设计成素数。素数计算索引的碰撞概率比合数小，具体证明可参考<a href="https://blog.csdn.net/liuqiyao_01/article/details/14475159" target="_blank" rel="noopener">为什么一般hashtable的桶数会取一个素数</a>。简单的说，就是合数的二进制中会出现不参与计算的<code>0</code>，这样Hash算法无法完整地反映Key的特性，键的粒度会在合数<code>0</code>的位置富集。</p>
<p>第一步定位到桶位：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">hash</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> h;</span><br><span class="line">    <span class="comment">// 1. 取对象hashCode</span></span><br><span class="line">    <span class="comment">// 2. 高位参与异或运算</span></span><br><span class="line">    <span class="keyword">return</span> (key == <span class="keyword">null</span>) ? <span class="number">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class="number">16</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.7</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">indexFor</span><span class="params">(<span class="keyword">int</span> h, <span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 3. 取模</span></span><br><span class="line">    <span class="keyword">return</span> h &amp; (length-<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.8</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> Node&lt;K,V&gt; <span class="title">getNode</span><span class="params">(<span class="keyword">int</span> hash, Object key)</span> </span>&#123;</span><br><span class="line">    Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; first, e; <span class="keyword">int</span> n; K k;</span><br><span class="line">    <span class="comment">// 3. 取模</span></span><br><span class="line">    <span class="keyword">if</span> ((tab = table) != <span class="keyword">null</span> &amp;&amp; (n = tab.length) &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">        (first = tab[(n - <span class="number">1</span>) &amp; hash]) != <span class="keyword">null</span>) &#123;</span><br><span class="line">          ...</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>由于length总是2的n次方(除初始值以外)， <code>h &amp; (length - 1)</code> 等价于取模运算。<br>长度乘方时32比特向左移动，减1后末尾大多为1，“与”运算后即是h对lenght的模。</p>
<p>在JDK1.8的实现中，优化了高位运算的算法，通过hashCode()的高16位异或低16位实现：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(h = k.hashCode()) ^ (h &gt;&gt;&gt; 16)</span><br></pre></td></tr></table></figure></p>
<p>这主要是处于速度、功效、质量考虑，对短长度时的散列比较友好。<br>可以预想，有更友好的叠加方式，将更多的高位叠加至低位，但计算的消耗估计也会增加。</p>
<h2 id="put方法"><a href="#put方法" class="headerlink" title="put方法"></a>put方法</h2><ol>
<li>判断键值对数组table[i]是否为空或为null，否则执行resize()进行扩容；</li>
<li>根据键值key计算hash值得到插入的数组索引i，如果table[i]==null，直接新建节点添加，转向⑥，如果table[i]不为空，转向③；</li>
<li>判断table[i]的首个元素是否和key一样，如果相同直接覆盖value，否则转向④，这里的相同指的是hashCode以及equals；</li>
<li>判断table[i] 是否为treeNode，即table[i] 是否是红黑树，如果是红黑树，则直接在树中插入键值对，否则转向⑤；</li>
<li>遍历table[i]，判断链表长度是否大于8，大于8的话把链表转换为红黑树，在红黑树中执行插入操作，否则进行链表的插入操作；遍历过程中若发现key已经存在直接覆盖value即可；</li>
<li>插入成功后，判断实际存在的键值对数量size是否超多了最大容量threshold，如果超过，进行扩容。</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">final</span> V <span class="title">putVal</span><span class="params">(<span class="keyword">int</span> hash, K key, V value, <span class="keyword">boolean</span> onlyIfAbsent,</span></span></span><br><span class="line"><span class="function"><span class="params">                   <span class="keyword">boolean</span> evict)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">        <span class="comment">// 步骤③：节点key存在，直接覆盖value</span></span><br><span class="line">        <span class="keyword">if</span> (p.hash == hash &amp;&amp;</span><br><span class="line">            ((k = p.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">            e = p;</span><br><span class="line">        <span class="comment">// 步骤④：判断该链为红黑树</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (p <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">            e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(<span class="keyword">this</span>, tab, hash, key, value);</span><br><span class="line">        <span class="comment">// 步骤⑤：该链为链表</span></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> binCount = <span class="number">0</span>; ; ++binCount) &#123;</span><br><span class="line">                <span class="keyword">if</span> ((e = p.next) == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    p.next = newNode(hash, key, value, <span class="keyword">null</span>);</span><br><span class="line">                    <span class="comment">// 链表长度大于8转换为红黑树进行处理</span></span><br><span class="line">                    <span class="keyword">if</span> (binCount &gt;= TREEIFY_THRESHOLD - <span class="number">1</span>) <span class="comment">// -1 for 1st</span></span><br><span class="line">                        treeifyBin(tab, hash);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 已存在，中断</span></span><br><span class="line">                <span class="keyword">if</span> (e.hash == hash &amp;&amp;</span><br><span class="line">                    ((k = e.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                p = e;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="扩容"><a href="#扩容" class="headerlink" title="扩容"></a>扩容</h2><p>扩容就是重新设置容量，无法装入更多元素时，需要扩展索引数组长度。</p>
<p>1.8因为有红黑树的resize逻辑比较复杂，这里以1.7为例便于理解，本质上差别不大</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">resize</span><span class="params">(<span class="keyword">int</span> newCapacity)</span> </span>&#123;</span><br><span class="line">     Entry[] oldTable = table;                    <span class="comment">//引用扩容前的Entry数组</span></span><br><span class="line">     <span class="keyword">int</span> oldCapacity = oldTable.length;         </span><br><span class="line">     <span class="keyword">if</span> (oldCapacity == MAXIMUM_CAPACITY) &#123;       <span class="comment">//扩容前的数组大小如果已经达到最大(2^30)了</span></span><br><span class="line">         threshold = Integer.MAX_VALUE;           <span class="comment">//修改阈值为int的最大值(2^31-1)，这样以后就不会扩容了</span></span><br><span class="line">         <span class="keyword">return</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     Entry[] newTable = <span class="keyword">new</span> Entry[newCapacity];  <span class="comment">//初始化一个新的Entry数组</span></span><br><span class="line">     transfer(newTable);                         <span class="comment">//！！将数据转移到新的Entry数组里</span></span><br><span class="line">     table = newTable;                           <span class="comment">//HashMap的table属性引用新的Entry数组</span></span><br><span class="line">     threshold = (<span class="keyword">int</span>)(newCapacity * loadFactor);<span class="comment">//修改阈值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>基本逻辑就是用容量更大的数组来代替原数组，<code>transfer</code>方法将元素拷贝至新数组。</p>
<h3 id="1-8的优化"><a href="#1-8的优化" class="headerlink" title="1.8的优化"></a>1.8的优化</h3><p>JDK1.8的优化点在于充分利用了2倍扩容机制，让拷贝过程不需要重算HashCode：</p>
<p><img src="/2020/09/30/HashMap-in-java8/4d8022db.png" alt="4d8022db"></p>
<ul>
<li>图（a）表示扩容前key1和key2两种key确定索引位置的示例</li>
<li>图（b）表示扩容后key1和key2两种key确定索引位置的示例</li>
</ul>
<p><img src="/2020/09/30/HashMap-in-java8/3cc9813a.png" alt="3cc9813a"></p>
<ul>
<li>假设在扩容前有随机的 Key1、Key2 键在同一桶位，有相同散列码</li>
<li>在扩容后长度的比特向左移了一位，意味着最高位有变动</li>
<li>由于Key1 Key2 随机，在当前length最高位上的比特也随机出现0或1</li>
<li>只需要做”与”运算就能将键区分开，将变动的Key拷贝向扩展出的另一半。</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> Node&lt;K,V&gt;[] resize() &#123;</span><br><span class="line">    Node&lt;K,V&gt;[] oldTab = table;</span><br><span class="line">    <span class="keyword">int</span> oldCap = (oldTab == <span class="keyword">null</span>) ? <span class="number">0</span> : oldTab.length;</span><br><span class="line">    ...</span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(&#123;<span class="string">"rawtypes"</span>,<span class="string">"unchecked"</span>&#125;)</span><br><span class="line">        Node&lt;K,V&gt;[] newTab = (Node&lt;K,V&gt;[])<span class="keyword">new</span> Node[newCap];</span><br><span class="line">    table = newTab;</span><br><span class="line">    <span class="keyword">if</span> (oldTab != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; oldCap; ++j) &#123;</span><br><span class="line">            Node&lt;K,V&gt; e;</span><br><span class="line">            <span class="keyword">if</span> ((e = oldTab[j]) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                oldTab[j] = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (e.next == <span class="keyword">null</span>)</span><br><span class="line">                    newTab[e.hash &amp; (newCap - <span class="number">1</span>)] = e;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">                    ((TreeNode&lt;K,V&gt;)e).split(<span class="keyword">this</span>, newTab, j, oldCap);</span><br><span class="line">                <span class="keyword">else</span> &#123; <span class="comment">// preserve order</span></span><br><span class="line">                    Node&lt;K,V&gt; loHead = <span class="keyword">null</span>, loTail = <span class="keyword">null</span>;</span><br><span class="line">                    Node&lt;K,V&gt; hiHead = <span class="keyword">null</span>, hiTail = <span class="keyword">null</span>;</span><br><span class="line">                    Node&lt;K,V&gt; next;</span><br><span class="line">                    <span class="keyword">do</span> &#123;</span><br><span class="line">                        next = e.next;</span><br><span class="line">                        <span class="comment">// 原索引</span></span><br><span class="line">                        <span class="keyword">if</span> ((e.hash &amp; oldCap) == <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (loTail == <span class="keyword">null</span>)</span><br><span class="line">                                loHead = e;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                                loTail.next = e;</span><br><span class="line">                            loTail = e;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">// 原索引 + oldCap</span></span><br><span class="line">                        <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span> (hiTail == <span class="keyword">null</span>)</span><br><span class="line">                                hiHead = e;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                                hiTail.next = e;</span><br><span class="line">                            hiTail = e;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">while</span> ((e = next) != <span class="keyword">null</span>);</span><br><span class="line">                    <span class="comment">// 分开放置</span></span><br><span class="line">                    <span class="keyword">if</span> (loTail != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        loTail.next = <span class="keyword">null</span>;</span><br><span class="line">                        newTab[j] = loHead;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (hiTail != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        hiTail.next = <span class="keyword">null</span>;</span><br><span class="line">                        newTab[j + oldCap] = hiHead;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newTab;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个设计确实非常的巧妙!</p>
<h3 id="死循环问题"><a href="#死循环问题" class="headerlink" title="死循环问题"></a>死循环问题</h3><p>HashMap并不是线程安全的类，在多线程场景下直接使用有可能会造成死循环。<br>1.7 版本下大致的形成死循环的逻辑如下：</p>
<ol>
<li>线程A、线程B均在做放入键值对操作</li>
<li>正好碰到数组需要扩容的情形</li>
<li>由于1.7版本中，链表resize后会被倒排，先执行的线程会将数组引用指向曾经的链尾。</li>
<li>假设A先resize，已将链表排好。</li>
<li>正好这时B开始resize，它所认为的链头已经变成了链尾，排好后将形成环形结构。</li>
</ol>
<p>1.8 版本同样可能死循环，但由于改了倒排，出现问题的点不同。<br>1.8 版本在链表转红黑树的步骤上，多线程环境下可能会出现死循环。</p>
<h2 id="均匀Benchmark"><a href="#均匀Benchmark" class="headerlink" title="均匀Benchmark"></a>均匀Benchmark</h2><p><img src="/2020/09/30/HashMap-in-java8/377effbf.png" alt="377effbf"><br>通过观测测试结果可知，JDK1.8的性能要高于JDK1.7 15%以上，在某些size的区域上，甚至高于100%。<br>由于Hash算法较均匀，JDK1.8引入的红黑树效果不明显，下面我们看看Hash不均匀的的情况。</p>
<h2 id="极不均匀Benchmark"><a href="#极不均匀Benchmark" class="headerlink" title="极不均匀Benchmark"></a>极不均匀Benchmark</h2><p><img src="/2020/09/30/HashMap-in-java8/bd20c215.png" alt="bd20c215"><br>从表中结果中可知，随着size的变大，JDK1.7的花费时间是增长的趋势，而JDK1.8是明显的降低趋势，并且呈现对数增长稳定。<br>当一个链表太长的时候，HashMap会动态的将它替换成一个红黑树，这话的话会将时间复杂度从O(n)降为O(logn)。<br>hash算法均匀和不均匀所花费的时间明显也不相同，这两种情况的相对比较，可以说明一个好的hash算法的重要性。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol>
<li>扩容是一个特别耗性能的操作，尽量避免map进行频繁的扩容。</li>
<li>负载因子是可以修改的，也可以大于1，但是建议不要轻易修改，除非情况非常特殊。</li>
<li>HashMap是线程不安全的，不要在并发的环境中同时操作HashMap，ConcurrentHashMap不香吗？</li>
<li>JDK1.8引入红黑树大程度优化了HashMap的性能。</li>
</ol>
<p><a href="https://tech.meituan.com/2016/06/24/java-hashmap.html" target="_blank" rel="noopener">Java 8系列之重新认识HashMap</a><br><a href="https://blog.csdn.net/xuefeng0707/article/details/40797085" target="_blank" rel="noopener">HashMap多线程死循环问题</a><br><a href="https://www.cnblogs.com/zhuifeng523/p/13688346.html" target="_blank" rel="noopener">踩坑了，JDK8中HashMap依然会死循环！</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>structure</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello spring data redis</title>
    <url>/2020/09/24/Hello-spring-data-redis/</url>
    <content><![CDATA[<h2 id="project"><a href="#project" class="headerlink" title="project"></a>project</h2><p>learn on project <code>springboot-learning-example</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/JeffLi1993/springboot-learning-example.git</span><br></pre></td></tr></table></figure></p>
<p>copy module <code>springboot-mybatis-redis</code> to <code>springboot-redis</code><br>modify <code>pom.xml</code>, remove mybatis/mysql, add lombok</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;springboot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springboot-redis&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;name&gt;springboot-redis :: 使用 Redis 作为缓存&lt;/name&gt;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line"></span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.16.14&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h2><p>use <code>spring-context.xml</code> define bean in <code>resources</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- redis template definition --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"redisTemplate"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">"org.springframework.data.redis.core.RedisTemplate"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">p:connection-factory-ref</span>=<span class="string">"jedisConnectionFactory"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jedisConnectionFactory"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">"org.springframework.data.redis.connection.jedis.JedisConnectionFactory"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">p:host-name</span>=<span class="string">"127.0.0.1"</span> <span class="attr">p:port</span>=<span class="string">"6379"</span> <span class="attr">p:password</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag">          <span class="attr">p:poolConfig-ref</span>=<span class="string">"jedisPoolConfig"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jedisPoolConfig"</span> <span class="attr">class</span>=<span class="string">"redis.clients.jedis.JedisPoolConfig"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxTotal"</span> <span class="attr">value</span>=<span class="string">"50"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxIdle"</span> <span class="attr">value</span>=<span class="string">"50"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minIdle"</span> <span class="attr">value</span>=<span class="string">"10"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnBorrow"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnReturn"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testWhileIdle"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>add annotation in test package</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">ContextConfiguration</span>(</span>&#123;<span class="string">"/spring-context.xml"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisTemplateTest</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>or use <code>application.properties</code> springboot configuration</p>
<p>add annotation in test package</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootTest</span>(<span class="title">classes</span> </span>= Application<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">RedisTemplateTest</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Cluster"><a href="#Cluster" class="headerlink" title="Cluster"></a>Cluster</h2><p>add property class<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.redis.cluster"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClusterConfigurationProperties</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * spring.redis.cluster.nodes[0] = 127.0.0.1:7379</span></span><br><span class="line"><span class="comment">     * spring.redis.cluster.nodes[1] = 127.0.0.1:7380</span></span><br><span class="line"><span class="comment">     * ...</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;String&gt; nodes;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>add springboot bean configuration<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ClusterConfigurationProperties clusterProperties;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(<span class="string">"redisTemplateCluster"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> RedisTemplate <span class="title">redisTemplateCluster</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        RedisTemplate template = <span class="keyword">new</span> RedisTemplate();</span><br><span class="line">        template.setConnectionFactory(</span><br><span class="line">                <span class="keyword">new</span> JedisConnectionFactory(</span><br><span class="line">                        <span class="keyword">new</span> RedisClusterConfiguration(clusterProperties.getNodes())));</span><br><span class="line">        <span class="keyword">return</span> template;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Template"><a href="#Template" class="headerlink" title="Template"></a>Template</h2><p>base operate<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootTest</span>(<span class="title">classes</span> </span>= Application<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">RedisTemplateTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String, String&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Description: 展示String数据结构操作</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testValueOperations</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String key = <span class="string">"RedisTemplateTest:TEST:String:1"</span>;</span><br><span class="line">        ValueOperations&lt;String, String&gt; valueOp = redisTemplate.opsForValue();</span><br><span class="line">        valueOp.set(key, <span class="string">"1"</span>);</span><br><span class="line">        Assert.assertEquals(<span class="string">"1"</span>, valueOp.get(key));</span><br><span class="line">        redisTemplate.delete(key);</span><br><span class="line">        Assert.assertNull(valueOp.get(key));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Description: 展示Set数据结构操作</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSetOperations</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String key = <span class="string">"RedisTemplateTest:TEST:Set:1"</span>;</span><br><span class="line">        SetOperations&lt;String, String&gt; op = redisTemplate.opsForSet();</span><br><span class="line">        op.add(key, <span class="string">"1"</span>, <span class="string">"2"</span>);</span><br><span class="line">        op.add(key, <span class="string">"2"</span>, <span class="string">"3"</span>, <span class="string">"4"</span>);</span><br><span class="line">        op.remove(key, <span class="string">"4"</span>);</span><br><span class="line">        Assert.assertEquals(Long.valueOf(<span class="number">3</span>), op.size(key));</span><br><span class="line">        redisTemplate.delete(key);</span><br><span class="line">        Assert.assertEquals(Long.valueOf(<span class="number">0</span>), op.size(key));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Description: 展示SortedSet数据结构操作</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testZSetOperations</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String key = <span class="string">"RedisTemplateTest:TEST:ZSet:1"</span>;</span><br><span class="line">        ZSetOperations&lt;String, String&gt; op = redisTemplate.opsForZSet();</span><br><span class="line">        <span class="comment">// 添加Key及用于排序的得分</span></span><br><span class="line">        op.add(key, <span class="string">"1"</span>, <span class="number">1</span>);</span><br><span class="line">        op.add(key, <span class="string">"2"</span>, <span class="number">2</span>);</span><br><span class="line">        op.add(key, <span class="string">"3"</span>, <span class="number">3</span>);</span><br><span class="line">        op.add(key, <span class="string">"4"</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="comment">// 更新</span></span><br><span class="line">        op.add(key, <span class="string">"4"</span>, <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">        Assert.assertEquals(Long.valueOf(<span class="number">2</span>), op.count(key, <span class="number">3</span>, <span class="number">4</span>));</span><br><span class="line"></span><br><span class="line">        op.remove(key, <span class="string">"3"</span>);</span><br><span class="line">        Assert.assertEquals(Long.valueOf(<span class="number">3</span>), op.size(key));</span><br><span class="line"></span><br><span class="line">        redisTemplate.delete(key);</span><br><span class="line">        Assert.assertEquals(Long.valueOf(<span class="number">0</span>), op.size(key));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Description: 展示Hash数据结构操作</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testHashOperations</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String key = <span class="string">"RedisTemplateTest:TEST:Hash:1"</span>;</span><br><span class="line">        HashOperations&lt;String, String, String&gt; op = redisTemplate.opsForHash();</span><br><span class="line"></span><br><span class="line">        op.put(key, <span class="string">"1"</span>, <span class="string">"1"</span>);</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">        map.put(<span class="string">"2"</span>, <span class="string">"2"</span>);</span><br><span class="line">        map.put(<span class="string">"3"</span>, <span class="string">"3"</span>);</span><br><span class="line">        map.put(<span class="string">"4"</span>, <span class="string">"4"</span>);</span><br><span class="line">        map.put(<span class="string">"5"</span>, <span class="string">"5"</span>);</span><br><span class="line"></span><br><span class="line">        op.putAll(key, map);</span><br><span class="line">        Assert.assertEquals(<span class="number">5</span>, op.entries(key).size());</span><br><span class="line"></span><br><span class="line">        op.delete(key, <span class="string">"4"</span>, <span class="string">"5"</span>);</span><br><span class="line">        Assert.assertEquals(<span class="number">3</span>, op.entries(key).size());</span><br><span class="line"></span><br><span class="line">        redisTemplate.delete(key);</span><br><span class="line">        Assert.assertEquals(<span class="number">0</span>, op.entries(key).size());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Repository"><a href="#Repository" class="headerlink" title="Repository"></a>Repository</h2><h3 id="POJO"><a href="#POJO" class="headerlink" title="POJO"></a>POJO</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="meta">@RedisHash</span>(<span class="string">"persons"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    String id;</span><br><span class="line">    String firstName;</span><br><span class="line">    String lastName;</span><br><span class="line">    Address address;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Address</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Address</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Address</span><span class="params">(String city, String country)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.city = city;</span><br><span class="line">        <span class="keyword">this</span>.country = country;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    String city;</span><br><span class="line">    String country;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Converter"><a href="#Converter" class="headerlink" title="Converter"></a>Converter</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WritingConverter</span></span><br><span class="line">public class AddressToBytesConverter implements Converter&lt;Address, byte[]&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Jackson2JsonRedisSerializer&lt;Address&gt; serializer;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AddressToBytesConverter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        serializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer&lt;Address&gt;(Address<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        serializer.setObjectMapper(<span class="keyword">new</span> ObjectMapper());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] convert(Address value) &#123;</span><br><span class="line">        <span class="keyword">return</span> serializer.serialize(value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ReadingConverter</span></span><br><span class="line">public class BytesToAddressConverter implements Converter&lt;byte[], Address&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Jackson2JsonRedisSerializer&lt;Address&gt; serializer;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BytesToAddressConverter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        serializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer&lt;Address&gt;(Address<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        serializer.setObjectMapper(<span class="keyword">new</span> ObjectMapper());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Address <span class="title">convert</span><span class="params">(<span class="keyword">byte</span>[] value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> serializer.deserialize(value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Conversions"><a href="#Conversions" class="headerlink" title="Conversions"></a>Conversions</h3><p>add conversions in springboot configuration<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> CustomConversions <span class="title">redisCustomConversions</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> CustomConversions(</span><br><span class="line">        Arrays.asList(<span class="keyword">new</span> AddressToBytesConverter(), <span class="keyword">new</span> BytesToAddressConverter()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="Interface"><a href="#Interface" class="headerlink" title="Interface"></a>Interface</h3><p>As our repository extends CrudRepository it provides basic CRUD and finder operations.<br>The thing we need in between to glue things together is the according Spring configuration.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PersonRepository</span> <span class="keyword">extends</span> <span class="title">CrudRepository</span>&lt;<span class="title">Person</span>, <span class="title">String</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h3><p>case:<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootTest</span>(<span class="title">classes</span> </span>= Application<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">RepositoryRedisTemplateTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    PersonRepository repo;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">basicCrudOperations</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Person lin = Person.builder()</span><br><span class="line">                .firstName(<span class="string">"lin"</span>).address(<span class="keyword">new</span> Address(<span class="string">"JJ"</span>, <span class="string">"CHINA"</span>)).build();</span><br><span class="line">        repo.save(lin);</span><br><span class="line">        Assert.assertEquals(lin, repo.findOne(rand.getId()));</span><br><span class="line">        Assert.assertEquals(<span class="number">1</span>, repo.count());</span><br><span class="line">        repo.delete(lin);</span><br><span class="line">        Assert.assertEquals(<span class="number">0</span>, repo.count());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>playground-5:0&gt;hgetall persons:b9d5c6ce-44b1-4d3d-a2dd-8120c794b6f1<br> 1)  “_class”<br> 2)  “org.spring.springboot.domain.Person”<br> 3)  “id”<br> 4)  “b9d5c6ce-44b1-4d3d-a2dd-8120c794b6f1”<br> 5)  “firstName”<br> 6)  “lin”<br> 7)  “address”<br> 8)  “{“city”:”JJ”,”country”:”CHINA”}”</p>
</blockquote>
<p><a href="https://my.oschina.net/yuyidi/blog/499951" target="_blank" rel="noopener">Redis之序列化POJO</a><br><a href="https://blog.csdn.net/supermancoke/article/details/70053456" target="_blank" rel="noopener">Spring Redis（6）Redis持久化</a><br><a href="https://stackoverflow.com/questions/42915576/redis-how-to-configure-custom-conversions" target="_blank" rel="noopener">Redis - How to configure custom conversions</a><br><a href="https://docs.spring.io/spring-data/data-redis/docs/current/reference/html/#reference" target="_blank" rel="noopener">https://docs.spring.io/spring-data/data-redis/docs/current/reference/html/#reference</a><br><a href="https://docs.spring.io/spring-data/redis/docs/2.0.3.RELEASE/reference/html/#redis.repositories" target="_blank" rel="noopener">https://docs.spring.io/spring-data/redis/docs/2.0.3.RELEASE/reference/html/#redis.repositories</a></p>
]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>redis</tag>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步键圈 - 初始</title>
    <url>/2020/10/11/Stroll-keyboard-fan-community-The-begining/</url>
    <content><![CDATA[<h1 id="Ergodox"><a href="#Ergodox" class="headerlink" title="Ergodox"></a>Ergodox</h1><p>最早听闻客制化键盘，要追溯到5年前的2015年。<br>如果我没记错，应该是在Chiphell看到的ErgoDox帖子，有开箱和组装细节。<br>虽然那时对分体机械键盘有兴趣，但要自己组装、焊接、刷固件还是太硬核了并不适合当时的我。</p>
<a id="more"></a>
<p><img src="/2020/10/11/Stroll-keyboard-fan-community-The-begining/large_537_DSC_1167.jpg" alt="large_537_DSC_1167"><br><img src="/2020/10/11/Stroll-keyboard-fan-community-The-begining/large_537_DSC_1168.jpg" alt="large_537_DSC_1168"><br><img src="/2020/10/11/Stroll-keyboard-fan-community-The-begining/large_537_DSC_1169.jpg" alt="large_537_DSC_1169"></p>
<h1 id="UHK60"><a href="#UHK60" class="headerlink" title="UHK60"></a>UHK60</h1><p>之后还找到ultimate hacking keyboard，样子挺好看，宣传的功能也挺牛。<br>缺点是价格挺贵，而且还买不到，拖了不少时间才正式发售，有段时间都快忘了有这么个键盘。</p>
<p><img src="/2020/10/11/Stroll-keyboard-fan-community-The-begining/keychatter_2015-12-14_02-53-40.jpg" alt="keychatter_2015-12-14_02-53-40"></p>
<p><a href="https://www.keychatter.com/2015/12/13/whats-clacking-ultimate-hacking-keyboard-featurette/" target="_blank" rel="noopener">What’s Clacking: Ultimate Hacking Keyboard featurette!</a></p>
<p><img src="/2020/10/11/Stroll-keyboard-fan-community-The-begining/uhk-hands.jpg" alt="uhk-hands"><br><img src="/2020/10/11/Stroll-keyboard-fan-community-The-begining/uhk-hardware.jpg" alt="uhk-hardware"></p>
<p><a href="https://www.tech-critter.com/amp/ultimate-hacking-keyboard-launches/" target="_blank" rel="noopener">Ultimate Hacking Keyboard Launches Campaign</a></p>
<p>从现在来看还是一把不错的键盘，产品完成度挺高。<br><a href="https://ultimatehackingkeyboard.com/product/uhk60" target="_blank" rel="noopener">Ultimate Hacking Keyboard $275</a></p>
<h1 id="Smartyao"><a href="#Smartyao" class="headerlink" title="Smartyao"></a>Smartyao</h1><p>2016年购入了我的第一把机械键盘，售价400元的国产凯华五脚红轴分体键盘，一用就是4年至今仍是主力。</p>
<p>可能是因为左右手大拇指位置分出了独立按键，这把键盘的名字叫”大拇指键盘”，灵瑶出品。<br><img src="/2020/10/11/Stroll-keyboard-fan-community-The-begining/IMG_0801.JPG" alt="IMG_0801"></p>
<ul>
<li>左右各44个键</li>
<li>注塑外壳</li>
<li>白色PCB</li>
<li>亚克力定位板</li>
</ul>
<p>键盘的结构比较简单，用的是<code>Tray mount</code> 托盘式安装，四角用手拧对板螺丝固定。</p>
<p><img src="/2020/10/11/Stroll-keyboard-fan-community-The-begining/tray-mount.jpg" alt="tray-mount"></p>
<p>定位板是5mm的亚克力板，直接占满轴的下部，优点是简单粗暴没空腔音、成本可控定位效果还很好。<br>要说缺点听网上的文章说手感、声音不好，有共振，可能是我用习惯了，完全不介意。</p>
<p><img src="/2020/10/11/Stroll-keyboard-fan-community-The-begining/IMG_0802.JPG" alt="IMG_0802"></p>
<p>左右两边各有一块5mm亚克力夹板，放在定位板上做增高填充，其下是led状态灯和主控。</p>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><p>分体是最大的优点，插线方式可以左右分别插USB、也可以左右连接后单插USB，相当人性化。<br><img src="/2020/10/11/Stroll-keyboard-fan-community-The-begining/IMG_2889.JPG" alt="IMG_2889"></p>
<p>除了分体的设计，这把键盘支持宏、组合键、切层，妥妥的生产力。<br>固件不知道是不是用的Bface的方案，键位层数只有4层，但平时也就用前两层，多了完全记不住。<br>凯华五脚红轴还不错，可惜停产了咸鱼都搜不到。。。</p>
<ul>
<li>分体</li>
<li>开箱即用</li>
<li>左右手大拇指键很高效</li>
<li>宏功能丰富，支持切层</li>
<li>键位够多保留F区，layout紧凑</li>
<li>售价亲民</li>
</ul>
<h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><ul>
<li>自定义宏数量只有4个，无法定义更多。</li>
<li>刷固件并不是那么方便，键位布局、宏设置需要慢慢习惯。</li>
<li>状态灯有点刺眼，瞬开层还好，如果是切层会一直闪烁。</li>
<li>底部的手拧螺丝作脚撑加上防滑胶，高度有点高，长时间打字手腕会累。</li>
<li>未知材质键帽，我猜是廉价PBT，OEM高度也是有点高。</li>
<li>键帽难配，要好看得上大全套。</li>
<li>没有热插拔版本，换轴得上烙铁和吸锡器。</li>
<li>没有无线版本。</li>
</ul>
<p><img src="/2020/10/11/Stroll-keyboard-fan-community-The-begining/IMG_2890.JPG" alt="IMG_2890"></p>
<p><a href="https://www.zhihu.com/question/378575887" target="_blank" rel="noopener">“饭圈”如何翻译成英文?“饭圈化”呢?</a><br><a href="https://www.chiphell.com/thread-1639674-1-1.html" target="_blank" rel="noopener">[外设] 普及版ErgoDox——ErgoDone二狗蛋人体工学机械键盘 </a><br><a href="http://it.huangye88.com/xinxi/108282333.html" target="_blank" rel="noopener">左手单手机械键盘(国产轴) 游戏 绘图工具键盘 全键可编程 内置宏</a></p>
]]></content>
      <categories>
        <category>漫步键圈</category>
      </categories>
  </entry>
  <entry>
    <title>追根溯源，日语漫谈【转】</title>
    <url>/2020/09/20/Trace-back-to-the-source-Japanese-ramble/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>　　今天开始，打算写一系列有关日语的随笔。不定期更新。这些内容一般不会在任何教科书里提到，考试当然也不会考到。所以，主要是我个人的研究爱好了。这系列的文章，主要是从日语的发展角度来对现在的一些常用词作出解释，从某种角度来说，我认为这也可以帮助学习日语的人来加深理解，起到一定的提高作用。<br>　　大多数内容都是基础的，有一点日语基础的人应该都可以阅读。</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b0100068o.html" target="_blank" rel="noopener">日语随笔　前言 (2006-09-04 12:12:29)</a></p>
<h1 id="（一）从“海”的音读说起"><a href="#（一）从“海”的音读说起" class="headerlink" title="（一）从“海”的音读说起"></a>（一）从“海”的音读说起</h1><p>日语里分音读和训读。汉字作音读的时候，其发音和中文类似，这一点对于学习日语的中国人来说，是比较方便的。<br>　　但是，有一些汉字，音读的发音和中文的发音还是有不少区别的，我们有时候会很气恼，为什么日本人偏要把我们的发音改掉呢，好好地发成一样不是很好吗？教科书的解释，一般是说，日语的音读是采用了中国的古音，所以和现代的汉语有差距。<br>　　很多情况下的确如此，但也并不全是这样。比如“海”字。中文发“Ｈａｉ”（はい），日语发“Ｋａｉ”（かい），但是，并不是说这个字在中国古代发作Ｋａｉ，后来变成Ｈａｉ。事实上，“海”这个字，中国历史上从来没有发作Ｋａｉ过。即使不发Ｈａｉ，也是Ｈｅ，或者Ｈｅｉ，总而言之，和“Ｋ”是没有关系的。</p>
<p>　　那么日本人引进这个字的时候，为什么不用はい作为读音，而用かい呢？答案很简单，在日本古代，は这个假名不发音为Ｈａ，而是发音为Ｐａ。<br>　　在室町以前，はひふへほ的发音，是Ｐａ，Ｐｉ，Ｐｕ，Ｐｅ，Ｐｏ。而日语里面，没有Ｈａ这个音。于是，对于“海”这个字的注音，只能在比较接近的Ｋａｉ，Ｇａｉ，Ｐａｉ中挑选，显然，Ｋａｉ的发音更为接近。<br>　　同样的原因，所有中文里以Ｈ为声母的汉字，到了日本后，发音全变成了か行，当然有一些因为浊化而成为が行。除了“海”，其他的例子还有“好”、“浩”、“号”等字，中文发音为Ｈａｏ，日语音读为こう（Ｋｏｕ）或者ごう（Ｇｏｕ）；贺，中文发音为Ｈｅ，日语发音则为か（Ｋａ）；黑，中文发音为Ｈｅｉ，日语发音则为こく（Ｋｏｋｕ）等等，大家可以自己再找许多例子出来，这里不多写了。<br>　　但是，有人可能要问，如果は行全变成了か行，那么日语中不是就不存在Ｈａｉ的音读了吗？当然不是。这一点，我们下一期再说吧。</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b0100068p.html" target="_blank" rel="noopener">追根溯源，日语漫谈（一）从“海”的音读说起 (2006-09-04 12:14:13)</a></p>
<a id="more"></a>
<h1 id="（二）は为什么会浊化成ば？"><a href="#（二）は为什么会浊化成ば？" class="headerlink" title="（二）は为什么会浊化成ば？"></a>（二）は为什么会浊化成ば？</h1><p>　　日语里分清音浊音。比如かきくけこ（ＫａＫｉＫｕＫｅＫｏ）是清音，がぎぐげご（ＧａＧｉＧｕＧｅＧｏ）则是浊音。清音的假名在右上角加上两个点就变成浊音，这个叫做浊音化。一般全世界语言通行的规律，ｋ会浊化成ｇ，ｓ会浊化成ｚ，这和日语中都是一致的。但是日语有一点却是非常独特，那就是はひふへほ（ＨａＨｉＦｕＨｅＨｏ）居然会浊化成ばびぶべぼ（ＢａＢｉＢｕＢｅＢｏ），也就是说，Ｈ的音浊化成了Ｂ的音。这一点是非常奇怪的。按照全世界的规律，应该是Ｐ的音浊化成Ｂ的音才对。<br>　　但是，如果回忆一下上一篇的内容，我们就可以恍然大悟。在古代日本，はひふへほ本来就是读作（ＰａＰｉＰｕＰｅＰｏ），所以这个时候浊化成ＢａＢｉＢｕＢｅＢｏ就是顺理成章的事情了。后来日语发音发生了变化，はひふへほ被读作了（ＨａＨｉＦｕＨｅＨｏ），但是浊音没有变化，所以就对不上号了。而原来的（ＰａＰｉＰｕＰｅＰｏ）的读音，则被作为现代日语中的半浊音保留了下来，也就是ぱぴぷぺぽ。换句话说，古代日本，是不存在半浊音的。<br>　　好了，然后我们再来回答上一篇最后留下来的一个问题。<br>　　古代日本为汉字标注音读的时候，以Ｈ打头的全变成了以Ｋ打头的，那么日语中中发音为Ｈａｉ的汉字的音读是怎么来的呢？<br>　　答案当然也很简单，现代日语中音读为はい（Ｈａｉ）的汉字，其实原来的发音为ぱい（Ｐａｉ）。换句话说，古代日本人用か行的假名来作为以Ｈ开头的汉字的音读，而以は行的假名来作为以Ｐ开头的汉字的音读，而这个は行的假名，古代的发音的确是以Ｐ开头的。<br>　　举例来说，排（Ｐａｉ），现代日语发音为はい（Ｈａｉ）。票（Ｐｉａｏ），现代日语发音为ひょう（Ｈｙｏｕ）等等。<br>　　这个规律带来的一个结果是，现代日语中的汉字音读，基本读音为ぱ行，也就是半浊音的，完全是不存在的。存在的只有は行或者ば行，这就是因为以Ｐ开头的音，全部被归到は行去了。只有在促音（っ）或者拨音（ん）的后面，会出现浊化现象，这时候才有半浊音的出现。比如伝票（でんぴょう），一方（いっぽう），出発（しゅっぱつ）等等。</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b01000692.html" target="_blank" rel="noopener">追根溯源，日语漫谈（二）は为什么会浊化成ば？ (2006-09-05 11:56:13)</a></p>
<h1 id="（三）は为什么会发音Wa"><a href="#（三）は为什么会发音Wa" class="headerlink" title="（三）は为什么会发音Ｗａ"></a>（三）は为什么会发音Ｗａ</h1><p>　　现代日语里，は的读音为Ｈａ，但有时候，这个假名的发音会变成Ｗａ。比如一般在日语第１课要学习的句型：“私は学生です。”里，那个は要读作Ｗａ。<br>　　另外，有一些汉字的读音，本来是用は的，但在日语的发展中，也出现了Ｗａ的读音。比如原这个字，本来的读音为はら（Ｈａｒａ。注意：这个是训读）的，但是在藤原（ふじわら。Ｆｕｊｉｗａｒａ）这个姓氏里，原的发音却成为了Ｗａｒａ。<br>　　这种现象，术语叫做“は行転呼音”，指的是は行的音被转成了わ行的音。学术上，転呼音虽然多被认为是一种音便（注：所谓音便，指的是为了发音方便而发生的变音），但其实“は行転呼音”并没有那么简单。下面我们来解释一下这种现象的形成。<br>　　首先我们来回想一下は行的假名读音：はひふへほ，读作ＨａＨｉＦｕＨｅＨｏ。请注意，不是ＨａＨｉＨｕＨｅＨｏ。其中的ふ，发音不是Ｈｕ而是Ｆｕ，这是为什么呢？<br>　　我们前两篇说过，はひふへほ在古代是发音为ＰａＰｉＰｕＰｅＰｏ的，只不过在现代才变成了ＨａＨｉＦｕＨｅＨｏ。但是，其实ＰａＰｉＰｕＰｅＰｏ并不是一下子变成ＨａＨｉＦｕＨｅＨｏ的，而是有一个中间过程。在室町时期开始，这五个假名的发音其实是先变成了ＦａＦｉＦｕＦｅＦｏ。到了江户后期，才变成现在的发音的。<br>　　中文里面Ｈ和Ｆ的音也经常会发生混淆，以至于出现了“化肥会挥发”、“粉红凤凰飞”等绕口令。可见Ｈ和Ｆ的确非常容易发生串门，于是Ｆ的音最终变成Ｈ，就在情理之中了。这其中只有ふ保留了Ｆｕ的发音，没有变成Ｈｕ，这只不过是出于音便的考虑，Ｆｕ的发音更为方便。<br>　　好了，然后我们再来回忆一下浊化的问题。除了我们以前说过的在促音（っ）或者拨音（ん）后面会浊化外，还有多种浊化形式。其中还有一种叫做连浊。连浊指的是，一个汉字跟在其他汉字后时，这个汉字的首音节经常发生浊化现象。比如“歯”这个字，训读音为“は”，但是放到单词里，比如“虫歯”（注：蛀牙的意思），发音就是（むしば），は连浊成了ば。<br>　　上一篇我们说了，因为はひふへほ在古代是发音为ＰａＰｉＰｕＰｅＰｏ，所以他们浊化后成为了ばびぶべぼ（ＢａＢｉＢｕＢｅＢｏ）。那么请思索一下，当はひふへほ的发音变成ＦａＦｉＦｕＦｅＦｏ后，应该浊化成什么呢？清音Ｆ，所对应的浊音为Ｖ。日语没有Ｖ这个音，但是有近似的Ｗ。换句话说，ＦａＦｉＦｕＦｅＦｏ浊化后就成为了ＷａＷｉＷｕＷｅＷｏ。也就是说，わ（Ｗａ），其实也是は（Ｈａ）的一种浊音。于是，藤原的发音成为ふじわら（Ｆｕｊｉｗａｒａ），其实只不过是ふじはら（Ｆｕｊｉｈａｒａ）的一种连浊表现而已。其他如石原这个姓，有时候也发音成いしわら（Ｉｓｈｉｗａｒａ）原因也是依理类推。“私は学生です。”中的は（Ｗａ），也不过是古代（其实也就百多年）的浊音形式到今天的一种保留而已。</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b0100069j.html" target="_blank" rel="noopener">追根溯源，日语漫谈（三）は为什么会发音Ｗａ (2006-09-06 13:11:01)</a></p>
<h1 id="（四）へ为什么会发音E"><a href="#（四）へ为什么会发音E" class="headerlink" title="（四）へ为什么会发音Ｅ"></a>（四）へ为什么会发音Ｅ</h1><p>　　上一篇介绍了は为什么会发音Ｗａ，与之类似，へ（Ｈｅ）这个假名有时候发音读作Ｅ，其实道理一样。上一篇我们介绍了术语“は行転呼音”，用来指は行的五个音转换到わ行的现象，所以显然发生转换的不仅仅是は。へ作为は行的一个音，同样也会被转化到わ行，发音变成Ｗｅ。<br>　　说到这里，我们要先来解释一下わ行了。わ行在五十音图中，是比较特殊的一行，因为在现代版的五十音图中，这一行只有两个音：わ（Ｗａ）和を（Ｗｏ）。但是，在古代，其实ＷａＷｉＷｕＷｅＷｏ是全的。Ｗｕ的发音和う（Ｕ）完全一样，所以这个没有假名，但其他四个都是有对应的假名。除了わ和を外，还有两个是ゐ（Ｗｉ）和ゑ（Ｗｅ）。二战后，日本决定ＷｉＷｅＷｏ这三个音取消掉，相对应的音改成い（Ｉ）、え（Ｅ）、お（Ｏ）。假名中ゐ和ゑ也作废了，を也只在作助词时保留，其他时候都改用お。于是わ行的五个假名，成为了わいうえを（ＷａＩＵＥＯ）。需要强调一下的是，を的假名虽然被保留，但发音已经变成和お一样。<br>　　所以，へ被转化到わ行以后，发音变成Ｗｅ，然后Ｗｅ的音消灭，最终就变成了Ｅ。这就是这个转变的经过。<br>　　以上所说内容，同样可以应用于ひ、ふ、ほ这三个假名。<br>　　举个例子，我们知道，日语动词中有很多以う结尾的，如：言う（いう）、買う（かう）、違う（ちがう）等。但是，在一百多年前，日语中并没有以う结尾的动词，这些动词当时都是以ふ结尾的。如果你有兴趣看看古代日本文言，你会看见，这些动词是言ふ（いふ）、買ふ（かふ）、違ふ（ちがふ）。ふ为什么变成了う？这和へ的发音变成Ｅ的道理完全一样，大家依理类推吧。</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b0100069w.html" target="_blank" rel="noopener">追根溯源，日语漫谈（四）へ为什么会发音Ｅ (2006-09-07 11:28:05)</a></p>
<h1 id="（五）五十音图的起源"><a href="#（五）五十音图的起源" class="headerlink" title="（五）五十音图的起源"></a>（五）五十音图的起源</h1><p>　　我们学日语，上来第１课就学五十音图，于是想当然地以为日本人从创造出日语时就有五十音图了。但其实这是错误的。<br>　　古人说话，只是采用这几个固定的音节，并不想到去把一个音节分成元音和辅音。日本发明五十音图的始祖，现在认为是明觉和尚。他是平安末期的僧侣，大约是１１世纪后期的人物。<br>　　明觉写了一本书，叫《反音作法》。这个反音，其实就是学习了中国的反切技术。中国在很早的时代，就发现为了注明读音，必须发展一套元音和辅音的系统，于是反切应运而生。反切就是用两个汉字来表示一个汉字的读音，前一个汉字取声母，后一个汉字取韵母。如，坛为徒干切，徒的声母为Ｔ，干的韵母为Ａｎ，拼起来就是坛的读音为Ｔａｎ。<br>　　明觉在《反音作法》中详细参照了中国的反切方式，把日语的所有发音也进行了归类，分出了５个元音和１０个辅音，于是就组成了五十音图。<br>　　顺便说一下，中国反切的兴起大约是在东汉后期，大约公元２世纪到３世纪吧，正是佛教刚传入中国的时候，现代学者认为，中国反切兴起应该和中国人希望读懂佛经中的梵文有关。而日本发明五十音图，同样也是为了解决给佛经中的梵文注音的问题。这一点从发明者是个和尚也可以看出来。<br>　　五十音图发明当时，其实也并不叫做五十音图，而是叫做五音图。什么是五音？这也是中国传入的概念。中国古代音韵学中有五音的说法，指的是所有辅音可以分成五类，所谓唇音、舌音、齿音、牙音、喉音。（注：宫商角徵羽也叫五音，不过这不是同一个概念）<br>　　明觉创造五十音图之前，五音概念就已经传入日本。明觉的五十音图，对应到五音的话，アワヤ行为喉音，サタラナ行为舌音，ハマワ为唇音。所以日本人见到五十音图，就觉得这是把五音概念图解化了，因此就称之为五音图。<br>　　直到江户时代，也就是１７世纪，五十音图的叫法才开始出现，这之前，都一直是叫做五音图的。</p>
<p>附：《反音作法》一书中的最早的五十音图（点击看全图）<br><img src="/2020/09/20/Trace-back-to-the-source-Japanese-ramble/5555513ba9bcbeac41389.jpeg" alt="5555513ba9bcbeac41389"></p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b010006ah.html" target="_blank" rel="noopener">追根溯源，日语漫谈（五）五十音图的起源 (2006-09-08 12:57:07)</a></p>
<h1 id="（六）五十音顺和いろは顺"><a href="#（六）五十音顺和いろは顺" class="headerlink" title="（六）五十音顺和いろは顺"></a>（六）五十音顺和いろは顺</h1><p>　　五十音图对于记忆日语假名的确有着非常大的帮助，因为这是有规律可循的表格，比起只能靠硬背的英语字母表自然是方便了许多。但是，前一篇我介绍了，五十音图其实在１１世纪才被发明，所以在发明前，日本人记忆假名，其实也只能依靠字母表的方式。<br>　　当时的日本人经常发明一些歌曲，这些歌曲里，恰巧能把所有假名使用一遍，所以记熟这首歌，就等于记住了所有的假名。这类编入各种名称以方便记忆的歌曲，日语叫做手習歌（てならいうた）。所有的假名手習歌中，最有名的就是いろは歌了。<br>いろはにほへと　ちりぬるを<br>わかよたれそ　つねならむ<br>うゐのおくやま　けふこえて<br>あさきゆめみし　ゑひもせす</p>
<p>色は匂へど　散りぬるを<br>我が世誰ぞ　常ならむ<br>有為の奥山　今日越えて<br>浅き夢見じ　酔ひもせず 　　<br>歌词大意为：花虽香，终会谢。世上有谁能常在？凡尘山，今日越。俗梦已醒醉亦散。<br>　　这首歌作于平安时期，和五十音图的出现大约是同时期的。因为以いろは开始，所以叫做いろは歌。<br>　　当时的古代没有拨音ん，但是有另外两个现在已经作废的假名ゐ和ゑ，所以假名的总数一共是４７个。而いろは歌里包括了这全部４７个假名，再加上歌词具有含义，因此对于记忆的帮助非常大。虽然いろは歌出现不久，五十音图也问世了，但这首歌依然传唱不衰，即使到今天，绝大多数日本人也都知道这首歌。现代日语里，也有いろは这个词，表示事物的基本。这就好像英语里用ABC来表示基本的概念一样。<br>　　いろは歌和五十音图是截然不同的两种记忆假名的方法，这带来的一个结果就是出现了两种日语假名的排列次序。现在词典里按照あいうえお的次序进行排列，这种叫做五十音顺。但是，假名未必一定要按照五十音顺排列的。还有一种跟五十音顺地位相仿的就是いろは顺，所谓いろは顺，就是日语假名在いろは歌中出现的次序。这个次序今天还在许多地方使用。比如一些法令中的条款，编号不用一、二、三，而是用的イ、ロ、ハ、…。在全世界通用的摩尔码中，日本人也使用いろは的次序来对应英文字母ABC，等等。在一些古籍之中，这种应用就更多了。</p>
<p><a href="http://blog.sina.com.cn/s/blog_bce220450102w0tq.html" target="_blank" rel="noopener">追根溯源，日语漫谈（六）五十音顺和いろは顺</a><br><a href="http://blog.sina.com.cn/s/blog_5555513b010006bx.html" target="_blank" rel="noopener">追根溯源，日语漫谈（六）五十音顺和いろは顺</a></p>
<h1 id="（七）训令式罗马字和赫本式罗马字"><a href="#（七）训令式罗马字和赫本式罗马字" class="headerlink" title="（七）训令式罗马字和赫本式罗马字"></a>（七）训令式罗马字和赫本式罗马字</h1><p>　　使用英文字母给日语假名标注读音，这种叫做罗马字注音，和中国的汉语拼音差不多。<br>　　但是，和汉语拼音的唯一性不同，日语的罗马字注音有多种注法。从大的来说，有两大类：训令式（訓令式）和赫本式（ヘボン式）。<br>　　所谓训令式，就是完全以五十音图的行和段的结合来进行注音；而赫本式，则是根据假名的真实发音来注音。五十音图的行和段的结合，本来应该是和该假名的真实发音一致的，这样，训令式和赫本式对于大多数的假名的标注方法是一致的。如か，大家都是标成ｋａ，而ね，则大家都是ｎｅ。<br>　　但是，有一部分假名是例外的。如し，因为是さ行い段，所以训令式的罗马字为ｓｉ，但按照发音来的赫本式罗马字为ｓｈｉ。例外的假名只有５个，し以外的另４个为：ち（训令式：ｔｉ；赫本式：ｃｈｉ）、つ（训令式：ｔｕ；赫本式：ｔｓｕ）、じ（训令式：ｚｉ；赫本式：ｊｉ）、ふ（训令式：ｈｕ；赫本式：ｆｕ）。<br>　　此外，一些拗音的标注方法也有不同。训令式的拗音标注规则，是用这一行的辅音加上ｙ，再加上所属的段的元音。如きゃ就是ｋｙａ，みゅ就是ｍｙｕ等。大多数拗音的罗马字，训令式和赫本式也是相同的，但是，由于しちじ这三个假名本身的训令式和赫本式不同，所以以它们为语素的假名：しゃしゅしょ、ちゃちゅちょ、じゃじゅじょ也有不同。按照训令式的话，しゃしゅしょ分别应该为ｓｙａ、ｓｙｕ、ｓｙｏ，而赫本式为ｓｈａ、ｓｈｕ、ｓｈｏ；ちゃちゅちょ的训令式为ｔｙａ、ｔｙｕ、ｔｙｏ，而赫本式为ｃｈａ、ｃｈｕ、ｃｈｏ。じゃじゅじょ的训令式和赫本式则分别为ｚｙａ、ｚｙｕ、ｚｙｏ和ｊａ、ｊｕ、ｊｏ。<br>　　现在我们一般使用电脑输入日语时，都是采用罗马字拼音法输入假名。而一般输入法中间，训令式假名和赫本式假名都是支持的，比如，要输入ちゃ，既可以用ｔｙａ，也可以用ｃｈａ。大家可以自己选择喜欢的方式。<br>　　对假名使用罗马字来标注，最早是来到日本传教的西方传教士想出来的主意。最早将这一行为体系化的，是詹姆斯·Ｃ·赫本（James Curtis Hepburn），他在１８６７年出版的《和英语林集成》中介绍了这一体系，这就是我们说的赫本式了。<br>　　但是，日本人发现这种赫本式和五十音图有差别，不符合日语的规则，于是他们在此后不久，根据五十音图而推出了日本式罗马字注音。赫本式一度消亡。<br>　　二战后，美国人接管日本后，发现日本式非常难以记忆（一方面是因为日本式不符合西方习惯，另一方面是日语发音已经发生了变化，日本式的又跟不上形势了），于是又重新推广赫本式。此后，日本政府将原来的日本式按照现代日语的习惯进行了改造，发布一个训令宣布采用这种改良后的日本式罗马字注音法，这就是训令式。虽然如此，赫本式重新复活后，得到了广泛的使用，再加上日本国际化的势头很汹涌，因此时至今日，可能还是赫本式所占的比例大一些了。<br>　　只是，现在我们使用的赫本式，随着时间推移，日语的发展，也已经和当年赫本所倡导的有了一些区别。而且各个地方各个部门都为了完善赫本式而作出了许多改进，于是造成今天的赫本式也有不少不同的版本。我们以后会再介绍这个问题。<br>附：</p>
<h2 id="訓令式の表"><a href="#訓令式の表" class="headerlink" title="訓令式の表"></a>訓令式の表</h2><table cellpadding="4" width="500" border="1">
<tbody>
<tr>
<td>&nbsp;<wbr></td>
<th>あ</th>
<th>い</th>
<th>う</th>
<th>え</th>
<th>お</th>
<th>ん</th>
<th colspan="3">（拗音）</th>
</tr>
<tr>
<th>あ</th>
<td>a</td>
<td>i</td>
<td>u</td>
<td>e</td>
<td>o</td>
<td colspan="4">&nbsp;<wbr></td>
</tr>
<tr>
<th>か</th>
<td>ka</td>
<td>ki</td>
<td>ku</td>
<td>ke</td>
<td>ko</td>
<td>&nbsp;<wbr></td>
<td>kya</td>
<td>kyu</td>
<td>kyo</td>
</tr>
<tr>
<th>さ</th>
<td>sa</td>
<td>si</td>
<td>su</td>
<td>se</td>
<td>so</td>
<td>&nbsp;<wbr></td>
<td>sya</td>
<td>syu</td>
<td>syo</td>
</tr>
<tr>
<th>た</th>
<td>ta</td>
<td>ti</td>
<td>tu</td>
<td>te</td>
<td>to</td>
<td>&nbsp;<wbr></td>
<td>tya</td>
<td>tyu</td>
<td>tyo</td>
</tr>
<tr>
<th>な</th>
<td>na</td>
<td>ni</td>
<td>nu</td>
<td>ne</td>
<td>no</td>
<td>&nbsp;<wbr></td>
<td>nya</td>
<td>nyu</td>
<td>nyo</td>
</tr>
<tr>
<th>は</th>
<td>ha</td>
<td>hi</td>
<td>hu</td>
<td>he</td>
<td>ho</td>
<td>&nbsp;<wbr></td>
<td>hya</td>
<td>hyu</td>
<td>hyo</td>
</tr>
<tr>
<th>ま</th>
<td>ma</td>
<td>mi</td>
<td>mu</td>
<td>me</td>
<td>mo</td>
<td>&nbsp;<wbr></td>
<td>mya</td>
<td>myu</td>
<td>myo</td>
</tr>
<tr>
<th>や</th>
<td>ya</td>
<td>(i)</td>
<td>yu</td>
<td>(e)</td>
<td>yo</td>
<td colspan="4">&nbsp;<wbr></td>
</tr>
<tr>
<th>ら</th>
<td>ra</td>
<td>ri</td>
<td>ru</td>
<td>re</td>
<td>ro</td>
<td>&nbsp;<wbr></td>
<td>rya</td>
<td>ryu</td>
<td>ryo</td>
</tr>
<tr>
<th>わ</th>
<td>wa</td>
<td>i</td>
<td>&nbsp;<wbr></td>
<td>e</td>
<td>o</td>
<td>n</td>
<td colspan="3">&nbsp;<wbr></td>
</tr>
<tr>
<th>が</th>
<td>ga</td>
<td>gi</td>
<td>gu</td>
<td>ge</td>
<td>go</td>
<td>&nbsp;<wbr></td>
<td>gya</td>
<td>gyu</td>
<td>gyo</td>
</tr>
<tr>
<th>ざ</th>
<td>za</td>
<td>zi</td>
<td>zu</td>
<td>ze</td>
<td>zo</td>
<td>&nbsp;<wbr></td>
<td>zya</td>
<td>zyu</td>
<td>zyo</td>
</tr>
<tr>
<th>だ</th>
<td>da</td>
<td>(zi)</td>
<td>(zu)</td>
<td>de</td>
<td>do</td>
<td>&nbsp;<wbr></td>
<td>(zya)</td>
<td>(zyu)</td>
<td>(zyo)</td>
</tr>
<tr>
<th>ば</th>
<td>ba</td>
<td>bi</td>
<td>bu</td>
<td>be</td>
<td>bo</td>
<td>&nbsp;<wbr></td>
<td>bya</td>
<td>byu</td>
<td>byo</td>
</tr>
<tr>
<th>ぱ</th>
<td>pa</td>
<td>pi</td>
<td>pu</td>
<td>pe</td>
<td>po</td>
<td>&nbsp;<wbr></td>
<td>pya</td>
<td>pyu</td>
<td>pyo</td>
</tr>
</tbody>
</table>

<h2 id="ヘボン式の表"><a href="#ヘボン式の表" class="headerlink" title="ヘボン式の表"></a>ヘボン式の表</h2><table cellpadding="4" width="500" border="1">
<tbody>
<tr>
<td>&nbsp;<wbr></td>
<th>あ</th>
<th>い</th>
<th>う</th>
<th>え</th>
<th>お</th>
<th colspan="3">（拗音）</th>
</tr>
<tr>
<th>あ</th>
<td>a</td>
<td>i</td>
<td>u</td>
<td>e</td>
<td>o</td>
<td colspan="3">&nbsp;<wbr></td>
</tr>
<tr>
<th>か</th>
<td>ka</td>
<td>ki</td>
<td>ku</td>
<td>ke</td>
<td>ko</td>
<td>kya</td>
<td>kyu</td>
<td>kyo</td>
</tr>
<tr>
<th>さ</th>
<td>sa</td>
<td>shi</td>
<td>su</td>
<td>se</td>
<td>so</td>
<td>sha</td>
<td>shu</td>
<td>sho</td>
</tr>
<tr>
<th>た</th>
<td>ta</td>
<td>chi</td>
<td>tsu</td>
<td>te</td>
<td>to</td>
<td>cha</td>
<td>chu</td>
<td>cho</td>
</tr>
<tr>
<th>な</th>
<td>na</td>
<td>ni</td>
<td>nu</td>
<td>ne</td>
<td>no</td>
<td>nya</td>
<td>nyu</td>
<td>nyo</td>
</tr>
<tr>
<th>は</th>
<td>ha</td>
<td>hi</td>
<td>fu</td>
<td>he</td>
<td>ho</td>
<td>hya</td>
<td>hyu</td>
<td>hyo</td>
</tr>
<tr>
<th>ま</th>
<td>ma</td>
<td>mi</td>
<td>mu</td>
<td>me</td>
<td>mo</td>
<td>mya</td>
<td>myu</td>
<td>myo</td>
</tr>
<tr>
<th>や</th>
<td>ya</td>
<td>(i)</td>
<td>yu</td>
<td>(e)</td>
<td>yo</td>
<td colspan="3">&nbsp;<wbr></td>
</tr>
<tr>
<th>ら</th>
<td>ra</td>
<td>ri</td>
<td>ru</td>
<td>re</td>
<td>ro</td>
<td>rya</td>
<td>ryu</td>
<td>ryo</td>
</tr>
<tr>
<th>わ</th>
<td>wa</td>
<td>(wi)</td>
<td></td>
<td>(we)</td>
<td>o(wo)</td>
<td colspan="3">&nbsp;<wbr></td>
</tr>
<tr>
<th>ん</th>
<td>n</td>
</tr>
<tr>
<th>が</th>
<td>ga</td>
<td>gi</td>
<td>gu</td>
<td>ge</td>
<td>go</td>
<td>gya</td>
<td>gyu</td>
<td>gyo</td>
</tr>
<tr>
<th>ざ</th>
<td>za</td>
<td>ji</td>
<td>zu</td>
<td>ze</td>
<td>zo</td>
<td>ja</td>
<td>ju</td>
<td>jo</td>
</tr>
<tr>
<th>だ</th>
<td>da</td>
<td>(ji)</td>
<td>(zu)</td>
<td>de</td>
<td>do</td>
<td>(ja)</td>
<td>(ju)</td>
<td>(jo)</td>
</tr>
<tr>
<th>ば</th>
<td>ba</td>
<td>bi</td>
<td>bu</td>
<td>be</td>
<td>bo</td>
<td>bya</td>
<td>byu</td>
<td>byo</td>
</tr>
<tr>
<th>ぱ</th>
<td>pa</td>
<td>pi</td>
<td>pu</td>
<td>pe</td>
<td>po</td>
<td>pya</td>
<td>pyu</td>
<td>pyo</td>
</tr>
</tbody>
</table>

<p><a href="http://blog.sina.com.cn/s/blog_5555513b010006dn.html" target="_blank" rel="noopener">追根溯源，日语漫谈（七）训令式罗马字和赫本式罗马字 (2006-09-16 13:13:34)</a></p>
<h1 id="（八）日语里到底有几个假名"><a href="#（八）日语里到底有几个假名" class="headerlink" title="（八）日语里到底有几个假名"></a>（八）日语里到底有几个假名</h1><p>　　假名是日语的基础，但是日语中到底有几个假名呢？这其实并不是一个简单的问题。<br>　　首先我们要解决一个问题，那就是浊音和半浊音到底是否算一个单独的假名？<br>　　比如说，は是一个假名，那么ば和ぱ是不是也都算一个不同的假名呢？<br>　　我们经常把ば或者ぱ也称为一个假名，但是，精确地说的话，它们不能算是独立的假名，而是假名は，加上了浊点゛或者半浊点゜而构成的。所以我们计算日语里有多少假名时，浊音和半浊音可以去掉。<br>　　<br>　　日语中除了五十音之外，还有许多其他的音。一般来说，五十音图里的音统称清音。除了这些清音以外，日语还有浊音、半浊音、拗音、长音、促音、拨音等概念。<br>　　拗音和促音都是由五十音图中的假名组成，只不过一部分假名需要小写而已，所以也不存在五十音图以外的假名。长音，同样通过五十音图中假名的组合而成，或者使用长音符号“ー”，也不存在五十音图以外的假名。<br>　　因此，日语中的假名数量，就是五十音图中假名的数量，再加上拨音ん了。接下来我们就看看五十音图中到底有多少个假名。<br>　　虽然是五十音图，但并不是有五十个假名，や行只有３个假名，わ行只有２个，所以加起来五十音图为４５个假名，再加上拨音ん，是为４６个假名。<br>　　但是，我以前也说过，ゐ和ゑ这两个假名，直到二战后才被废止，我们现在看稍微古老一点的文献的话，还是有可能看到这两个假名。之前提到的いろは歌里，也同样有这两个，因此，如果我们说日语中有４８个假名，那也不算错。而如果考虑平假名和片假名的区别，那么乘以2后回答92或者96也都可以。</p>
<p>　　然后，我们顺便再来看一个问题，五十音图中是否包括拨音ん呢？显然，根据我们到现在说的内容，应该是不包括的。首先五十音图问世的时候根本没有ん这个音，从历史上就是不包括的；其次从五十音图的名称上来说，所谓五段十行，没有拨音ん的位置。再次，五十音图统称清音，而ん是拨音，概念本身不同。<br>　　但是，我们现在看到的五十音图中，很多其实都包括了ん。目前学术界，有很多专家也主张五十音图中加进ん。<br>　　这是为什么呢？因为从当年创造五十音图的目的来说，就是为了收纳日语中所有的假名。而现在，除了五十音图，就只有ん这一个假名了。所以应该把ん放进五十音图，这样所有的假名可以集中在一张图内，对于学习日语的人也比较方便。<br>　　虽然学术界依然有争论，但是为了方便学日语的人，中国的日语教科书都是把ん收入五十音图之中的。</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b010006eb.html" target="_blank" rel="noopener">追根溯源，日语漫谈（八）日语里到底有几个假名 (2006-09-17 11:51:59)</a></p>
<h1 id="（九）关于拨音ん"><a href="#（九）关于拨音ん" class="headerlink" title="（九）关于拨音ん"></a>（九）关于拨音ん</h1><p>　　以前我们提到过，拨音ん并非从来就有的。<br>　　五十音图出现的十一世纪时，日语里没有这个音，也就是说，当时的日语中是没有鼻音的。但是当时的汉语中有鼻音，所以那以前，日本人引进的汉语中，往往都采取去掉最后的鼻音的方法来作为其音读。<br>　　后来日本人觉得这样不好，于是重新创造了新的假名ん，那些汉字的音读也重新改成有鼻音的情况。但是，有一些专有名词中，还是保留了原来没有鼻音的音读。<br>　　比如安。现代的音读虽然是あん，但是有些地方，如著名歌星安室奈美惠的姓－－安室（あむろ）里面，就发音做あ；其它如仁（にん），有些地方就发音为に；天（てん），有些地方就发音为て，等等。还有一些时候，虽然不加鼻音ん，却会用发音相近的な行的假名来补足所需要的发音。比如信这个字，音读为しん，但在“信濃（しなの）”这个古地名里，信发音为し，濃发音为の，两个字的中间加上了一个な来补足音节。</p>
<p>　　这个ん，日语叫做拨音。那么为什么叫拨音呢？日语里其他的各种音的名称，比如清音、浊音、拗音、促音、长音等，都是根据其发音的特征来命名的。可唯独拨音不是。拨音，原先在日语里叫“撥ねる音”。撥ねる在日语中有往上的意思。用在笔划当中，就是我们中文说的“提”的意思。这个ん和它的片假名ン，最后一笔都是往上提的，字型上看，也有一种向上腾升的感觉，所以被命名为了“撥ねる音”，简化以后，就是撥音，也就是简化字的拨音了。说起来，这个名称其实并不太好，因为し（シ）和れ（レ）也是最后一笔上提的，却不称为拨音，这也只能说是约定俗成的缘故了。</p>
<p>　　日语中，没有以ん开头的单词。日本有一种文字游戏，叫做しりとり（尻取り）。规则很简单，就是每个人说一个单词，后一个人说的单词必须以前一个人说的单词的最后一个假名开头。比如第一个人说はな（花），第二个人说なつかしい（懐かしい），第三个人说いく（行く），第四个人再说一个以く开头的单词。这个游戏里有一个规则，就是任何人说的单词，不能以ん结尾，否则就算输。这就是因为日语里没有以ん开头的单词，所以一旦某人以ん结尾，下一个人就没办法接了。</p>
<p>　　事实上，全世界大多数语言都没有以鼻音开头的单词的。但是，其实古代日语和中文中这种单词都是存在的。<br>　　一个现在所知道的例子是，日语里的“梅”和“马”的概念都是源自中国。最早的时候，它们的读音分别为“んめ”和“んま”。后来由于鼻音放在最前面发音很困难，所以ん的音就蜕化成了う。所以现在，梅叫うめ；马叫うま。<br>　　另一方面，中文里面，以鼻音开头的词语出于同样的原因也发生演变而消亡，只有一些方言里还留有其蛛丝马迹。比如在上海话方言中，“五”，“鱼”等字的发音就是一个完全的鼻音。而在广东话方言中，“吴”字的发音也是一个鼻音。香港明星吴孟达的日语发音，就是“ン・マンタッ”。<br>　　现代日语中，其实也已经出现一些以ん开头的语言用法。目前虽然还被语言学家们认为是不规范用法，但将来或许终将成为标准的日语。比如有这种用法：ん千円。意思就是大约几千日元。一般在不清楚具体数量，用比较含糊的方法说话时可以这样使用。这个用法倒也是和ん这个发音颇为吻合的。</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b010006ft.html" target="_blank" rel="noopener">追根溯源，日语漫谈（九）关于拨音ん (2006-09-21 13:11:00)</a></p>
<h1 id="（十）拨音的罗马字及其真正发音"><a href="#（十）拨音的罗马字及其真正发音" class="headerlink" title="（十）拨音的罗马字及其真正发音"></a>（十）拨音的罗马字及其真正发音</h1><p>　　前面我介绍过训令式罗马字注音和赫本式罗马字注音。在这两种注音方法中，拨音都是用ｎ来表示的。<br>　　但是，其实拨音的罗马字注音并不那么简单，还是颇有一些概念可以说说的。<br>　　我们先来看两个日语：（１）簡易（かんい）、（２）蟹（かに）。按照我们现在所知道的罗马字注音方法，把这两个单词转变成罗马字注音的话，结果都是ｋａｎｉ。这两个日语明明是不同的发音，写成罗马字后却完全一样，就非常容易混淆。<br>　　顺便插一句，其实中国的汉语拼音中也有类似问题。西安、鲜，这两个词语的拼音都是ｘｉａｎ。于是我们常使用分隔符“＇”来进行辅助。西安就写成了Ｘｉ＇ａｎ，而Ｘｉａｎ就是鲜的发音了。<br>　　训令式的日语罗马字注音法也同样使用分隔符“’”来达到这个目的。单写ｋａｎｉ的话，我们认为是かに。如果要表示かんい，那么要写成ｋａｎ’ｉ。<br>　　但是，赫本式里面，对于这个问题并没有作什么规则上的要求，于是各种赫本式的标注法各有不同。有的使用训令式相同的方法，有的则使用减号。如：かんい写成kan-i。<br>　　在进行电脑输入的时候，通用的输入方式中，一般都采取接连输入两个ｎ来代表ん的方法，这也是为了解决这个问题。</p>
<p>　　另一方面，赫本式里面，对于拨音的标注方法，还有一些更严格的规则。<br>　　在介绍这个问题之前，我们先要考虑一个问题：ん的注音为ｎ，那么ん的发音是不是ｎ呢？<br>　　其实ん这个假名，代表了日语中的鼻音，而事实上，按照国际音标的的话，鼻音的发音有７种不同的种类，用音标来表示的话，分别是[m]、[ற<sup>1</sup>]、[n]、[ղ<sup>2</sup>]、[ր<sup>3</sup>]、[ŋ<sup>4</sup>]、[N]这七种。有些比较挑剔的日本语音学者认为ん的发音至少占了这７个音标中的５种。<br>　　有些语言非常重视鼻音，如丹麦语。但对于我们这些普通人，尤其是平时说惯了只有前鼻音和后鼻音的中国人来说，实在没必要在乎各种发音之间的微妙区别。只是，我们虽然不需要掌握那些语音学家说的５种发音，但是，日语中ん至少有３种发音还是需要知道的。<br>　　ん一般发音ｎ，但是，当ん后面跟的是か行或が行的假名时，它要发后鼻音[ŋ<sup>4</sup>]，这个音标我们一般用ｎｇ来表示。比如说，あんてい（安定）中的ん，发音为ｎ；但あんがい（案外）中的ん，发音则是ｎｇ。大家可以自己多读几遍，自己体会一下。<br>　　另一方面，ｎ本身是一个开口音，但如果后面跟了一个闭口音，那么发音结束后要立即为下一个音做准备，于是开口音ｎ就会演变成闭口音ｍ。日语中，ま行、ば行、ぱ行为闭口音，所以如果ん后面跟了这三行的假名，这个ん的发音就会变成ｍ。比如かんぺき（完璧）。其中的ん发音其实是ｍ，大家也可以体会一下。<br>　　掌握了ん的发音至少有ｎ、ｎｇ、ｍ三种的事实，我们再来看看ん的赫本式罗马字注音法。我们说过，赫本式罗马字注音本来就是强调要贴近假名的发音。所以现在的赫本式规则中，仅以一个ｎ来代表拨音ん，就引起了广泛的意见。<br>　　日本现在流行着的许多赫本式罗马字注音法规则，并非完全和官方的定义一致，而是许多团体自己定义了一些新规则，将这个赫本式进行了扩张。由于ｎｇ这个音用罗马字很难表达，所以一般大家都同意发音ｎｇ的时候还是用ｎ来表示。但是，有许多地方使用的赫本式规则中，规定ん在ｍ、ｂ、ｐ这三个音前面要用ｍ来表示。<br>　　所以，如果你到了日本，看到地铁指示牌上“本町（ほんまち）”这个站名的罗马字注音为Ｈｏｍｍａｃｈｉ，而不是Ｈｏｎｍａｃｈｉ，也不要奇怪，这也是完全符合赫本式注音法的。</p>
<p>[1]<img src="/2020/09/20/Trace-back-to-the-source-Japanese-ramble/5555513b8865525e13f2f.png" alt="5555513b8865525e13f2f"><br>[2]<img src="/2020/09/20/Trace-back-to-the-source-Japanese-ramble/5555513b0db86f67d1022.png" alt="5555513b0db86f67d1022"><br>[3]<img src="/2020/09/20/Trace-back-to-the-source-Japanese-ramble/5555513b49cfe6117fa84.png" alt="5555513b49cfe6117fa84"><br>[4]<img src="/2020/09/20/Trace-back-to-the-source-Japanese-ramble/5555513bd9e3026c8bcd0.png" alt="5555513bd9e3026c8bcd0"></p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b010006ga.html" target="_blank" rel="noopener">追根溯源，日语漫谈（十）拨音的罗马字及其真正发音 (2006-09-22 14:11:54)</a></p>
<h1 id="（十一）长音的基本概念"><a href="#（十一）长音的基本概念" class="headerlink" title="（十一）长音的基本概念"></a>（十一）长音的基本概念</h1><p>　　长音的概念，也是初学日语时必须要掌握的内容。但是，事实上长音的概念并不简单。<br>　　按照我们课本上教的内容，平假名的长音，是根据这个假名所属的段，分别用あいうえお跟在后面表示长音。比如か的长音是かあ、ね的长音是ねえ、も的长音是もお、等等。但是，え段的假名，也可以用い来表示长音，如けい；お段的假名，也可以用う来表示长音，如ろう。另一方面，片假名的长音，则用长音符号“ー”来表示。</p>
<p>　　我们先来看平假名。首先提一个问题，为什么え段的长音，既可以用え又可以用い；お段的长音，既可以用お又可以用う呢？这其实是因为各种长音的来源不同。<br>　　我们首先要搞清楚一个概念。现代日语中的长音的来源主要有两种。一种是本来发音就是拖长的，所以把这个音写成假名时，用代表长音的假名来表示。另一种是，本来发音并不是长音，而是两个不同的假名分别发音。但是，由于这两个假名在发音上比较相似，当进行连读时，就自然演变成了长音。而这两种不同的来源，造成了长音的假名表示方法出现区别。<br>　　首先，我们来看お段。先看这个单词：おおきい（大きい）。这是一个非常基本的单词，意思是大。但是，其实以前这个单词并不是写成おおきい，而是写成おほきい。也就是说，原来这里并不存在长音。但是，随着日语的演化，出现了は行假名的转呼现象，ほ渐渐变成お，这种现象我已经在以前介绍过了。所以おほきい就变成了おおきい。而お段的假名后面再跟上个お，进行连读的话，发音自然变成了长音。所以，お段后面加お得到的长音，其实是我们上面所说的第二种来源。而其他あ段加あ、い段加い、う段加う、え段加え的长音表达方式则全部是上面所说的第一种来源。双方的来源是不同的。既然如此，那么在第一种来源下的お段的长音怎么表示呢？为了表示区别，就规定，这种来源的お段的长音，用う来表示。这就是お段的长音有两种表示方法的原因。<br>　　接下来，我们来看え段。第一种来源的长音，是通过え段假名加え得到的。另一方面，え段后面如果跟了个い，发生连读时，也会变成长音，但这属于第二种来源。</p>
<p>　　事实上，日本人在说日语的时候，对于え段后面加い而得到的长音，在真正发音时经常是感觉不到这是一个长音的。比如きれい这个单词，这里的れい本来是应该当作长音来读的，但是，有不少日本人在发音的时候，还是き・れ・い这样，把い当作单独一个音读出来的。<br>　　换句话说，虽然在规则上认可了え段后面加い是一种长音，但由于这是通过快速连读才得到的，在实际生活中，很多人并不真正认为这属于长音。这种认识还反映在了罗马字注音法中。这一点，我们在下一节里继续解释。</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b010006qq.html" target="_blank" rel="noopener">追根溯源，日语漫谈（十一）长音的基本概念 (2006-10-14 13:16:04)</a></p>
<h1 id="（十二）长音符"><a href="#（十二）长音符" class="headerlink" title="（十二）长音符"></a>（十二）长音符</h1><p>　　上一节中，我说到接下来要解释长音的罗马字注音法。<br>　　不过，我现在发现，还漏了片假名的长音没有介绍，因此这里再插一节片假名的长音。<br>　　片假名的长音表示方法很简单，就是通过使用长音符：“ー”。所谓长音符，就是一横。<br>　　世界上有几百种语言，拥有长音的不在少数。各种语言的长音表示方法并不统一。比如英语中并没有特别的表达长音的方法，德语中则是加一个ｈ，另外，像国际音标中则是使用了冒号。<br>　　但是，使用一横来表示长音的，只有日语一家。这个长音符号是怎么来的呢？其实也颇有一番可说。</p>
<p>　　首先我们要记得一个概念，那就是日本和中国一样，原来的书写顺序是竖着写的。在从上到下进行书写的年代，这个长音符也不是一横，而是一竖。事实上，在日本流行了横向书写的许多年后，很多人还是习惯把长音符写作一竖，比如把“ターゲット”写成“タ|ゲット”，甚至在一些昭和时代的图书中还能够看到这种写法。<br>　　接下来我们再继续来看这一竖，为什么长音符会是一竖呢？这里我们先看一张图。</p>
<p><img src="/2020/09/20/Trace-back-to-the-source-Japanese-ramble/5555513bccd95526ebe39.jpeg" alt="5555513bccd95526ebe39"></p>
<p>　　这是大约于１７１５年左右成书的新井白石写的《西洋纪闻》中的一段。《西洋纪闻》是现代认为最早出现长音符记号的书籍。请注意我圈出来的地方，这里的这个用一竖来表示的长音，并不是写在正中央，而是偏在右边。<br>　　这个新井白石是日本著名的兰学大家。所谓兰学，指的是从荷兰传来的学问。这个兰学在江户时代风靡一时，对日本影响非常大。而荷兰语里面，长音现象非常普遍，所以兰学在翻译荷兰语时，对于如何表示长音也显得很头疼。<br>　　在新井白石的另一作品《约翰帕蒂斯塔物语》里，他使用了一个汉字来表示长音——“引”。比如，算术被写成“アリツテメ引テイカ”。日语里“引”字有拖长的意思，所以新井可能一开始打算使用这个汉字来代表长音。但是一个完整的片假名单词里面嵌进一个汉字，看起来颇为不适，所以在写《西洋纪闻》的时候，新井又把“引”简化成“|”，因此我们看起来，这一竖会偏在右边。<br>　　此后，随着兰学的广泛流行，大学者新井白石所发明的这个长音符号也被广泛采用，再因为书写由竖写转变成横写，终于落定成现在的长音符号“ー”了。<br>　　顺便我们提一下。现在使用的日语假名中，平假名主要由汉字的字形简化而得，而片假名则主要取汉字的偏旁部首。如安→あ，伊→イ。所以主要用于片假名的长音符，采用了片假名相同的造字规则，使用了“引”的偏旁“|”，可以说，也是完全符合日语历来的造字规则的。</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b010006sl.html" target="_blank" rel="noopener">追根溯源，日语漫谈（十二）长音符 (2006-10-17 18:15:16)</a></p>
<h1 id="（十三）长音的罗马字注音"><a href="#（十三）长音的罗马字注音" class="headerlink" title="（十三）长音的罗马字注音"></a>（十三）长音的罗马字注音</h1><p>　　之前介绍了长音的各个方面概念，最后来看看它的罗马字注音法。<br>　　可能大家不知道，在日本最为通用的一些罗马字注音法中，不论是训令式还是赫本式，长音都是不标注的。换句话说，こうとう的话，罗马字注音是koto。请注意不是koutou，因为并不需要把代表长音的两个う也写出来。这么一来，こうとう的罗马字注音，其实和こと是完全一样的。大家回忆一下几个著名城市的英语：东京（とうきょう）是Ｔｏｋｙｏ，大阪（おおさか）是Ｏｓａｋａ，也完全是按照这个规则来的。<br>　　为什么会出现这种情况？应该说，这是日本最初的注音标准定得不太科学有关。<br>　　一开始，日本的文部省对长音也是规定了罗马字表示方法的，那就是要求在母音字母上加一个“^”符号。比如长音ねえ，就是nê。后来，在一些其他的注音方式中，也有使用一横来代替“^”的，于是长音ねえ，就成为nē。<br>　　总而言之，日本人一开始在罗马字表示时，使用了一种符号来代表长音，于是到了电脑时代，这个方法出现祸根。那就是，人们发现，无法使用电脑来输入这些长音。另一方面，外国人也看不懂这个意思。于是，人们自然而然地忽略了上面的那个符号，于是出现了长音被忽略的结果。<br>　　但是，以上所说，有一个例外，那就是え段后面加上い的这类长音。我们之前已经说过，在本质上，这并不被认为是真正的长音，所以在罗马字注音中，这个い是不能省略的。如けいたい，罗马字注音就是ｋｅｉｔａｉ，而不是ｋｅｔａｉ，这一点请务必注意。</p>
<p>　　事实上，长音忽略后，有很多地方容易产生混淆。长音短音的注音拼法一样，会造成很多同音词，在实际应用中也有诸多不便。因此，有些地方采用了德语中表示长音的方法，加上一个Ｈ来代表长音，如ラーメン标注成ｒａｈｍｅｎ，さとう标注成ｓａｔｏｈ等等。这种方法并没有被列为国家标准，但各行各业采用这种方法的也比较多。另一方面，有些地方，用Ｈ来表示长音也并不符合通常的音标常识。虽然ａｈ代表ａ的长音，ｏｈ代表ｏ的长音看上去很符合发音常识，但ｉｈ代表ｉ的长音就有些奇怪了。<br>　　日本外务省对于日本人的护照上的英文名字有着严格的规定，要求必须按照赫本式罗马字注音法来，这当然是因为赫本式是重视注音和真正的发音匹配，比较方便外国人理解。（请参照之前的章节中对于赫本式注音法的解释）<br>　　在护照的英文名字标注法中，本来长音也是和赫本式一样，是忽略掉的。但是这样会造成太多的同名同姓，所以２０００年，外务省又加了一条通融的规矩：お段的长音标注时，可以使用Ｈ。为什么只有お段可以使用Ｈ呢？这是因为，日语的长音，几乎只集中于え段和お段，あいう三个段里，几乎只有外来语才使用长音，日语名字里根本不会出现这三个段的长音。而え段的长音几乎都是加い的，这个长音本来就是标注出来的，也不需要特别加上Ｈ，所以剩下的只有お段了。</p>
<p>　　当然，用Ｈ来表示长音终究只是少数派。现在最普遍的罗马字注音法，还是采用赫本式，并且忽略长音。</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b010006ws.html" target="_blank" rel="noopener">追根溯源，日语漫谈（十三）长音的罗马字注音 (2006-10-23 13:43:15)</a></p>
<h1 id="（十四）促音"><a href="#（十四）促音" class="headerlink" title="（十四）促音"></a>（十四）促音</h1><p>　　促音，顾名思义，就是发音短促的意思。<br>　　虽然促音这个名字是日语中所独有的，但这种发音现象在许多语言中都存在，包括英语，只不过不叫这个名而已。<br>　　英语中有一个失爆现象（ｕｎｒｅｌｅａｓｅｄ　ｓｔｏｐ）。不知道学过英语的人知不知道。<br>　　失爆的规则有三条，不过我们这里只提最主要的一条，就是当两个爆破音连在一起的时候，前一个应该失去爆破变成不发音。比如ｂｌａｃｋｂｏａｒｄ，这里的[k]其实一般不发音，因为连续两个爆破音发音上比较困难。这个失爆和日语的促音其实属于同一种发音现象，促音也是因为同样原因，原来应该发的音弱化消失，才慢慢演变成促音。<br>　　不过，日语中的促音变化，和英语中的失爆现象相比，要求更为严格。英语中是两个爆破音重叠发生失爆，而日语中，原则上只有前一个音是か行或者た行，后一个音是清辅音ｋ、ｓ、ｔ、ｐ，也就是か、さ、た、ぱ这四行时，才会发生音节脱落的促音化现象。自古以来日语的演变一直遵守这个规则，只是在现代引入外来语时，才带入了一些不符合这个规则的外来语新词。所以，如果大家一时记不得一个单词的假名到底是清音还是浊音，那么如果有促音在内，而且还不是外来语，这个规则就可以帮助我们判断。比如：いっぱい是正确的，いっばい就是错误的。虽然在口语中，有时候也不遵照这个规则，比如“一倍”这两个字，本来发音为いちばい，但是口语中也有人会将之促音化成为いっばい，只是正式的发音是不认可这一点的。<br>　　如我们刚才所说，真正的促音，除了外来语，后面肯定应该有か、さ、た、ぱ这四行的假名。换句话说，促音是不会出现在一个词的末尾的。但是，由于促音被用来表现停顿，所以有时候口语中一个突兀的停顿也会用促音来表示。比如表示意外时可以用“あっ”。这里促音就表示あ之后又一个突然的停顿。同样，促音也有出现在词首，如：“ったく”等等。这些是现代口语的发展，一方面目前尚未被认可为正统语言，另一方面也多数是一些语气词，因此，我们不必对此太在意。</p>
<p>　　最后说一下促音的罗马字注音法。我们对日语中的各种发音做一个总结。有五十音（也可以称为清音），浊音，拗音，拨音，长音，促音。我们之前已经介绍过除促音外的所有发音的罗马字注音法。现在，该说一下促音的了。<br>　　按照现有规则，促音后面不可能作为最后一个音，也不可能直接跟元音，也就是说，它后面一定是一个辅音。所以，不论是训令式还是赫本式罗马字注音法，都规定把促音后的一个辅音字母写两遍，来代表这个地方存在一个促音。如：きって的训令式和赫本式罗马字都是ｋｉｔｔｅ。而みっつ的训令式罗马字为ｍｉｔｔｕ，赫本式罗马字为ｍｉｔｔｓｕ。あっち的训令式为ａｔｔｉ，赫本式为ａｃｃｈｉ。在绝大多数的电脑日语输入法里，也都是使用这个方法输入促音的。<br>　　这里需要介绍一下的，是在一部分常用的赫本式罗马字注音法中，对于促音的表示方法有一点细微的差别。他们有一条特别的规则，就是当促音后面跟着ｃｈ的时候，不用ｃ来表示促音，而是用ｔ。如之前举例的あっち，在这些赫本式注音方式中，拼法不是ａｃｃｈｉ，而是ａｔｃｈｉ。这种赫本式注音法的其他标注方式，和我们之前介绍的标准的赫本式是一致的，只有这么一点差别。这主要是也是因为按照西方语言的常识，ｃｃｈ的发音不太容易理解，而ｔｃｈ就比较常见了。</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b01000773.html" target="_blank" rel="noopener">追根溯源，日语漫谈（十四）促音 (2006-11-14 17:02:37)</a></p>
<h1 id="（十五）"><a href="#（十五）" class="headerlink" title="（十五）"></a>（十五）</h1><p>ＡＢＣＤＥＦＧ，这些叫做什么字母？相信每一个中国人都知道，这叫做英文字母。<br>　　日本人使用英文字母来给他们的假名注音，但是他们不把这个叫做英文注音，而是叫做罗马字注音，这是为什么呢？<br>　　其实，这些字母的学名，并不叫英文字母，他们的标准名称是叫做拉丁字母。这个是全世界通行的称呼。<br>　　另一方面，我们中国人使用汉字，所谓为了区分中文和西文，把西文的这些基本元素成为字母，以和字的概念分开。但其实上，在大多数国家中，字和字母也并没有任何区别。<br>　　然后我们来说说日语，日本人把一个个西文字母也称呼为字、或者文字。而我们所说的英文字母，在日语里就叫做“ラテン文字”（对应到中文就是拉丁文字）。另一方面，所有的字母的集合，有一个专门的英语术语，叫做Ａｌｐｈａｂｅｔ（中文译为字母表），所以日语中也用片假名アルファベット来指代字母的概念。如果单指一个英文字母，称为“ラテン文字”，而如果指的是英文字母这个广泛的概念，那么“ラテン文字”和“ラテンアルファベット”都可以。任何语种的字母集合都可以称为アルファベット，但是，在日语中，如果单说アルファベット，其实绝大部分情况下就是指ラテンアルファベット，就好像我们中国人说字母表，通常指的就是英文字母表一样。<br>　　对现代欧洲文化带来深远影响的古罗马帝国的官方语言就是拉丁语，所以，拉丁字母有时候又被称作罗马字母（请注意，不是罗马数字）。日语中，叫作“ローマ文字”或者“ローマ字”。<br>　　另一方面，现在欧洲几乎所有国家的语言都发源于古罗马时代的拉丁语。其中英国人所使用的英语因为当年大英帝国在全世界建立了日不落帝国而风靡全球。而这个英语，虽然和拉丁语有很大区别，但它所使用的字母，却正好和拉丁语的２６个字母完全相同。所以，明明是拉丁字母，在许多地方就被当成是英文字母了。日语中也有英字（えいじ）这个概念，这其实是近几十年来新出现的单词，也是英文字母的风头盖过了拉丁字母的一种表现吧。“ラテン文字”、“アルファベット”、“ローマ字”、“英字”等等概念，都经常可以在日本看到，很难说哪种说法更占优势，只是在一些约定俗成的地方有固定的使用方式。比如，单单一个字母，一般叫“ラテン文字”，字母表的话，叫“アルファベット”，给日语注音时，一般叫“ローマ字”，而在电脑领域，则通常叫“英字”。但其实它们都是同一个意思，也就是我们中国人说的：英文字母。</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b0100077v.html" target="_blank" rel="noopener">追根溯源，日语漫谈（十五）明明是英文注音，为什么叫罗马字？ (2006-11-16 16:52:00)</a></p>
<h1 id="（番外篇之一）"><a href="#（番外篇之一）" class="headerlink" title="（番外篇之一）"></a>（番外篇之一）</h1><p>　　本段内容其实和日语无关。不过既然提到了拉丁字母的问题，就顺便说一下，因此作为番外篇处理。<br>　　据说，世界上最早发明字母的，是腓尼基人，他们发明的字母叫做腓尼基字母。<br>　　很多书上说，英文字母来源于腓尼基字母。本质上说，这种说法是没错的。全世界，至少是全欧洲，所有语言的字母应该都是来源于腓尼基字母。但是，英文字母并非直接脱胎于腓尼基字母的。<br>　　我在之前的文章里，说过英文字母其实应该叫拉丁字母。而拉丁语是古罗马的官方语言，拉丁字母应该是罗马时代被创造出来的。而创造的时候，应该是创造了定居在离罗马不远的古代伊特鲁立亚人使用的文字。<br>　　这所谓的伊特鲁立亚字母，又应该是受到辉煌的古希腊文明影响，脱胎于希腊字母。再从希腊字母去寻找源头，才能牵扯上腓尼基字母。<br>　　所以，希腊字母其实是英文字母的一个前身。然而，拉丁字母（英文字母）和希腊字母的关系还不仅与此。<br>　　早期脱胎于伊特鲁立亚字母的拉丁字母其实只有２１个，而不是我们现在所用的２６个。其中缺少的５个是Ｊ、Ｕ、Ｗ、Ｙ、Ｚ。后来在公元前１世纪时，罗马人又从希腊字母中借用了Ｙ和Ｚ加到最后，于是成为２３个。至于Ｊ、Ｕ、Ｗ，则是到了中世纪后，分别从Ｉ和Ｖ中分化出来的。<br>　　所以说，拉丁字母本来就和希腊字母有血缘关系，后来还直接借用希腊字母，就怪不得现在的英文字母和希腊字母看上去有一些像了。<br>　　英文字母和希腊字母的关系，还从另一个方面可以看出来。英文中表示字母集合的单词叫做Ａｌｐｈａｂｅｔ，这个词的词源是来自拉丁语，而其实原来拉丁语中的这个单词，就是希腊字母的前两个：Ａｌｐｈａ（α）和Ｂｅｔａ（β）拼起来得到的。<br>　　最后，我们来和日语搭个边。<br>　　希腊字母从古至今，发音其实也发生过变化。但是出于一些惯例，我们平时使用中，某些字母改用了新音，某些字母则依然保留古音。各国在使用新音和古音的习惯上还不尽相同，所以我下面给出一些常用希腊字母在日语中的读音。<br>Α　α　アルファ<br>Β　β　ベータ<br>Γ　γ　ガンマ<br>Δ　δ　デルタ<br>Ε　ε　イプシロン（エプシロン亦可）<br>Θ　θ　シータ<br>Λ　λ　ラムダ<br>Μ　μ　ミュー<br>Π　π　パイ<br>Σ　σ　シグマ<br>Φ　φ　ファイ（フィー亦可）<br>Ω　ω　オメガ</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b0100079u.html" target="_blank" rel="noopener">追根溯源，日语漫谈（番外篇之一）英文字母和希腊字母 (2006-11-20 15:56:37)</a></p>
<h1 id="（十六）"><a href="#（十六）" class="headerlink" title="（十六）"></a>（十六）</h1><p>　　五十音图是根据中文中的反切而得到创意，对日语假名文字的发音进行元音和辅音拆分后得到的产物。那么理论上，五十音图中的每个音都应该是该行的辅音和该段的元音进行拼音组合得来的。<br>　　比如こ，就应该是か行的辅音Ｋ，和お段的元音Ｏ进行组合，得到Ｋｏ的发音。而ね，则是な行的辅音Ｎ，和え段的原因Ｅ进行组合得到Ｎｅ的发音。<br>　　可是，事实上，五十音图中并不是每个假名都遵循这个规律。比如说，前几篇曾经介绍的ふ和を，这两个假名没有遵循该规律，其原因，以前我也已经介绍过了。五十音图中，像这样没有遵循拼音规律的假名还有四个，分别是し、す、ち、つ（注意，这里没有考虑浊音的情况。以后我也会解释浊音的情况）。那么这四个音为什么不遵照拼规律呢？这一点，和ふ这个假名一样，也和日语的发展有关。<br>　　首先我们来看た行的五个假名：たちつてと。他们的发音，是Ｔａ，Ｃｈｉ，Ｔｓｕ，Ｔｅ，Ｔｏ。ち和つ不是发音Ｔｉ和Ｔｕ，而是Ｃｈｉ和Ｔｓｕ。我们其实可以肯定，在古代日本，ち和つ的发音应该是Ｔｉ和Ｔｕ的，但是，在日语发展过程中，这两个音慢慢蜕变成了Ｃｈｉ和Ｔｓｕ。<br>　　如果大家学过国际音标的话，应该更好理解一点。Ｃｈｉ的音标是［ｔ∫ｉ］，而Ｔｓｕ的音标为［ｔｓｕ］。我们可以看到，分别是在原来的发音［ｔｉ］和［ｔｕ］中间加上了一个摩擦音［∫］和［ｓ］。事实上，从音韵学角度说，在发音［ｔｉ］和［ｔｕ］时，很容易带上了舌头的摩擦，于是发生音变后成为［ｔ∫ｉ］和［ｔｓｕ］也是非常合情合理。我们可以理解日语历史上的这一发音变化。<br>　　更进一步来看，在ち和つ的现代发音之中，由于加上了一个摩擦辅音，其实还造成了元音的音素［ｉ］和［ｕ］弱化。特别是つ里面，［ｕ］的音已经消失不见，虽然罗马字注音依然写成ｔｓｕ，但其实发音已经完全变成了［ｔｓ］，里面不存在［ｕ］这个音了。<br>　　然后再来看さ行的五个假名：さしすせそ。现代日语中，这发音为Ｓａ，Ｓｈｉ，Ｓｕ，Ｓｅ，Ｓｏ。由于［ｓ］是个摩擦音，所以基于和上面相同的理由，す虽然罗马字注音是Ｓｕ，但其实真正的发音里没有［ｕ］这个音，只剩下了［ｓ］。另一方面，し的发音不是Ｓｉ，而是Ｓｈｉ，写成音标就是［∫ｉ］。［∫］和［ｓ］都是摩擦音，只不过摩擦的位置不同，所以发生发音的转换也并不奇怪。</p>
<p>　　事实上，さ行的这５个音，一般认为在历史上并不是发音为Ｓａ，Ｓｉ，Ｓｕ，Ｓｅ，Ｓｏ的，当然也不是Ｓａ，Ｓｈｉ，Ｓｕ，Ｓｅ，Ｓｏ。历史上这一行的辅音不是ｓ，但是究竟是哪一个辅音，目前还没有定论。有不少专家也认为，し之所以会发音Ｓｈｉ，并不是简单地从Ｓｉ变过来，而是更复杂的一个变化。我们在以后将继续讨论这个问题。</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b010007co.html" target="_blank" rel="noopener">追根溯源，日语漫谈（十六）五十音图中的特殊发音 (2006-11-24 13:45:30)</a></p>
<h1 id="（十七）四つ仮名问题"><a href="#（十七）四つ仮名问题" class="headerlink" title="（十七）四つ仮名问题"></a>（十七）四つ仮名问题</h1><p>　　我写的这个系列的日语漫谈，主要是在假名的发音。现在接近尾声了，所以我们开始要进入一些复杂的问题。<br>　　日语假名发音中，一个最有名的问题就是所谓的“四つ仮名问题”，这一节我们就来讨论一下这个问题。<br>　　四つ仮名问题，指的是じ、ず、ぢ、づ这四个假名的发音问题。在现代日语中，じ和ぢ的发音一样，都是Ｊｉ，ず和づ的发音一样，都是Ｚｕ。一般写假名的时候，都只用じ和ず，只有在历史性的惯用词汇中，才会有ぢ和づ出现，这一点相信学过日语的人，在课堂上都学过。<br>　　这里说的是标准的日本语，在某些地方的方言中，じ、ず、ぢ、づ的发音仍然互相有区别，而在另一些地方的方言中，甚至连じ和ず的发音都变成一样的了。这些也全都是“四つ仮名问题”研究的对象范围，不过关于方言问题，本文就不打算提及了。<br>　　我们现在来看看“四つ仮名问题”的成因。<br>　　这四个假名都是浊音，恢复到清音的话，是し、す、ち、つ。很巧的是，这正是上一节我们提到的不按照五十音图拼音规律那几个假名。我们来看他们的发音：ｓｈｉ，ｓｕ，ｃｈｉ，ｔｓｕ。按照音韵知识，分别把这４个音变成浊音，那么应该是ｊｉ，ｚｕ，ｇｉ，ｄｚｕ。（注意这里标注的ｇｉ，音标应该是［ｄʒｉ］，而不是［ｇｉ］）<br>　　在日本战国时期，欧洲传教士进入这个国家，用西文符号对日本的假名进行了标注。当时留下来的一些葡萄牙教士的手记中，也可以证明当时じ、ず、ぢ、づ这四个假名的发音的确是上述的ｊｉ，ｚｕ，ｇｉ，ｄｚｕ。但是，进入了江户时期后，渐渐发生了［ｊ］和［ｄʒ，及［ｚ］和［ｄｚ］的混淆，所以就造成了现在的じ和ぢ一样、ず和づ一样的结果了。<br>　　事实上，如果你懂国际音标的话，就会知道这四个音标的发音的确很接近。虽然清音的发音差距较大，但混浊以后就变得接近起来。特别是［ｊ］和［ｄʒ］，不仅仅是日本人，就算是我们中国人，甚至是英语母语的美国人，都有时候分不大清。<br>分享：</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b010007dj.html" target="_blank" rel="noopener">追根溯源，日语漫谈（十七）四つ仮名问题 (2006-11-26 13:50:13)</a></p>
<h1 id="（十八）ざ行的研究"><a href="#（十八）ざ行的研究" class="headerlink" title="（十八）ざ行的研究"></a>（十八）ざ行的研究</h1><p>　　上一节，我们讨论了“四つ仮名”问题，提到ず和づ本来发音应该分别是［ｚａ］和［ｄｚａ］，但是由于［ｚ］和［ｄｚ］的发音相近，于是最后渐渐都变成了同一个音——［ｚａ］。<br>　　但是这个说法并不算特别确切。<br>　　我们来看看整个ざ行。对于ざ行的另外几个假名ざ、ぜ、ぞ，他们的注音是ｚａ，ｚｅ，ｚｏ。但是，他们的发音真的是使用辅音［ｚ］吗？<br>　　答案是错的。<br>　　虽然ざ行假名注音时使用ｚ，但是，如果你说它们的发音也是［ｚ］，那么就错了。可能一般人并不知道，ざ、ぜ、ぞ等假名，只有在单词中间或者最后出现时，发音才是ｚａ，ｚｅ，ｚｏ。而在单词的开头出现时，发音其实会变成ｄｚａ，ｄｚｅ，ｄｚｏ。大家来看看下面两个单词：増加（ぞうか）和心臓（しんぞう）。读一下，看看两个ぞ的发音是否一样？事实上，前一个是ｄｚｏ，后一个才是ｚｏ。<br>　　也就是说，日语中本来，［ｚ］和［ｄｚ］就是混为一谈的。ず和づ发音一样，可以说是天经地义。<br>　　有一些语言学家还提出了一个更为有趣的假设。他们认为，さしすせそ的发音，原来应该是ｔｓａ，ｔｓｉ，ｔｓｕ，ｔｓｅ，ｔｓｏ。所以ざじずぜぞ就是ｄｚａ，ｄｚｉ，ｄｚｕ，ｄｚｅ，ｄｚｏ。但是，这和たちつてと的发音很类似，特别是ち和つ，发音经过悠久的岁月后也变成了现在的ｃｈｉ和ｔｓｕ，所以非常难区分，于是さしすせそ就变成了ｓａ，ｓｉ，ｓｕ，ｓｅ，ｓｏ，最后ｓｉ又变成了ｓｈｉ。但是，浊音这里没有及时展现这一变化，于是ｄｚ的发音也被保留下来，这才是造成了上一节我们所说的四つ仮名现象真正原因。<br>　　当然，这也只是一个假说，真正情况如何，现在也很难考证了。</p>
<p>　　最后我要强调一点。虽然ざ有时候发音ｚａ，有时候发音ｄｚａ，但是，さ的发音永远是ｓａ，不会变成ｔｓａ。也就是说，从严格意义上来说的话，ざ并不是さ的浊音。</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b010007gm.html" target="_blank" rel="noopener">追根溯源，日语漫谈（十八）ざ行的研究 (2006-12-01 18:20:29)</a></p>
<h1 id="番外篇-关于“重”的读法"><a href="#番外篇-关于“重”的读法" class="headerlink" title="番外篇 关于“重”的读法"></a>番外篇 关于“重”的读法</h1><p>　　昨天看到有人问我关于日语中“重”字，在中文中怎么读的问题，虽然是很简单的问题，但如果追究起来，倒也有一些可以讨论的地方。<br>　　首先，日语中“重”这个字，在日语中，主要的音读和训读都是有两套的。音读的话，是じゅう和ちょう；训读的话，是おも和かさね。这两套读音，其实正是对应了中文里“重”的多音字。<br>　　当拼音为ｚｈｏｎｇ的时候，其意义解释为重量，轻重之类，这时候对应的日语读法是じゅう或者おも。如：重量（じゅうりょう），重い（おもい）等。而当拼音为ｃｈｏｎｇ的时候，其意义解释为重叠，重复等，对应的日语读法应该是ちょう或者かさね。如：重複（ちょうふく），重なる（かさなる）等。<br>　　但是，时至今日，虽然训读的读法依然保留没有特别的变化，但音读方面却有些不一样了。日本人不懂中文，所以对于根据中文读音不同而派生出来的两种读音很难理解，于是大家都渐渐统一到了じゅう这个发音上，ちょう的发音则渐渐消亡。<br>　　像“重奏”“重婚”这些词，里面的重都是重复或者重叠的意思，翻成中文后念ｃｈｏｎｇ，而在日语中，本来都是发音为ちょう的，现在则基本已经变成了じゅう。但是，还是有一小部分上了年纪的日本人会念成ちょう。另外，还有一些词语，比如：“重畳”和“重复”等等，现在还基本两种读音各有一部分支持群，只是发展方向来看，也依然是じゅう占了主流。（大约在２０年前，绝大多数日本人都认为重复应该读成ちょうふく，可是现在已经颠倒过来，半数以上认为应该是じゅうふく）<br>　　还有一些词，比如重犯，本来，当读成じゅうはん时是重犯人的意思，而读成ちょうはん时则是惯犯的意思。但现在也都变成了じゅうはん这唯一的一个读音。</p>
<p>　　那么在人名中该怎么办呢？事实上，重在人名中的时候，有一个完全不同的读音：しげ。这种现象叫做“当て字”，就是说，使用不同的字来对应同一个读音。しげ本来对应的汉字是茂，或者繁，两者都是草木繁盛的意思。引伸出去，草木相互重叠的话，就是草木繁盛了，所以重这个字也被经常使用来当成しげ的“当て字”。既然如此，这里它代表的是重叠的意思，所以翻译成中文的话，应该读作ｃｈｏｎｇ，才最正确。</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b010007hu.html" target="_blank" rel="noopener">追根溯源，日语漫谈 番外篇 关于“重”的读法 (2006-12-04 16:55:12)</a></p>
<h1 id="（十九）日语中的浊音"><a href="#（十九）日语中的浊音" class="headerlink" title="（十九）日语中的浊音"></a>（十九）日语中的浊音</h1><p>　　到目前为止的文章里，我也陆陆续续提到了很多次浊音的概念，那么现在我们来总结一下，看看到底清音和浊音是怎么一个概念。<br>　　事实上，日语中清音和浊音的概念，和我们音韵学上所说的清音和浊音还是稍有不同的。<br>　　日语中有一个浊点，所有带浊点的都是浊音，不带浊点的就是清音。此外还有一个半浊音，这些我们之前已经都提过了。<br>　　但是在世界范围的正常定义上，清音的发音是声带不振动的，而浊音则是声带振动的。在发一个音的时候，把自己的手指放在喉咙上，感受到振动就是浊音，感受不到就是清音。<br>　　站在这个基础上，我们发现，其实绝大多数音素都是浊音，比如元音，就全部都是浊音。在辅音里面，也就只有［ｐ］，［ｋ］，［ｔ］，［ｓ］这几个是清音，其它都是浊音。<br>　　日语假名都是通过一个辅音和一个元音结合而成（除了极少数例外），而由于元音都是浊音，所以本来从国际音韵学上来说，日语中所有的假名都是浊音。但是，我们已经说了，日语中浊音的概念不同。首先，他们只看辅音，忽略了元音。其次，他们说的浊音，是指有相应清音存在的那些音素，也就是只包括［ｂ］，［ｇ］，［ｄ］，［ｚ］这四个辅音所属的那四个行：ば行、が行、だ行、ざ行。还有半浊音。虽然名字叫半浊音，但如果只看其中的辅音，忽略元音的话，其实是清音。<br>　　日语假名之中，除了上述的浊音和半浊音，剩下的全部算清音（注意，ん不在其内，它是拨音）。也就是说，比如ま这个假名，发音ｍａ。其中的ｍ和ａ其实从音韵学上来说都是浊音，但在日语中，ま算作清音。这里非常容易产生混淆。所以，对于我们通常说的音韵学上的清音和浊音的概念，日本人发明了另一种称呼方法：无声音和有声音。无声音就是音韵学上的清音，有声音就是音韵学上的浊音。<br>　　这无声音和有声音都是针对单个音素来的，比如ｍ和ａ都是有声音，而ｋ是无声音。而针对两个音素组合成的假名，则不说有声或者无声，而叫清音浊音或者半浊音。比如ま是清音，が是浊音，ぱ是半浊音。<br>　　所以我们研究日语发音的时候，如果说到浊音，大家要搞清楚这和你学习英语时所说的浊音，概念是不同的。</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b010007no.html" target="_blank" rel="noopener">追根溯源，日语漫谈（十九）日语中的浊音 (2006-12-12 23:26:35)</a></p>
<h1 id="（二十）送气音和不送气音"><a href="#（二十）送气音和不送气音" class="headerlink" title="（二十）送气音和不送气音"></a>（二十）送气音和不送气音</h1><p>　　日语发音上有一个很大的特征，那就是同一个假名，在词首和非词首时，发音会有微妙的区别。<br>　　这个规则体现在か行、た行、和ぱ行。<br>　　大家在学习日语发音时，老师应该教过，当か这个假名不是出现在词首的时候，要发音成ｇａ；た不是出现在词首时，要发音成ｄａ吧？当然，か行、た行和ぱ行其他的假名也是如此。举个例子，いか的发音，听上去不是ｉｋａ，而是接近于ｉｇａ；いたい的发音，听上去不是ｉｔａｉ，而接近于ｉｄａｉ。<br>　　这种发音规则并不是谁特别规定的，你看到这个单词，去读的时候，会自然而然地读成这个样子，这就是因为只有这么发音，才最为顺口。<br>　　这种现象在英语中也一样存在，比如这个单词：ｓｔａｒｔ。请大家发音一下看看，前一个ｔ和后一个ｔ的发音是不同的，前一个发音有些接近于ｄ，而后一个才是真正的ｔ。<br>　　有些书上把这种现象称之为浊化，但是，这种说法并不确切。请注意，ｓｔａｒｔ的前一个ｔ虽然接近于ｄ的发音，但依然还是和ｄ不同。ｔ是清音，ｄ是浊音，而ｓｔａｒｔ的前一个ｔ，虽然发音接近于ｄ，但依然是清音。同样，いか的发音，虽然听上去像是ｉｇａ，但这时候依然是清音，并非变成了いが。</p>
<p>　　这里，我们需要了解到一个新的概念，这就是送气音和不送气音的概念。（在日语中，称之为有气音和无气音）<br>　　在上一节，我提到清音和浊音的区别，如果把手放在喉咙上，感受得到振动的就是浊音。比如在英语中，［ｐ］是清音，［ｂ］是浊音。但是，实际上在中文当中，会有很大的区别。我们的拼音ｂｐｍｆ，大家感受一下ｂ和ｐ，可以发现ｂ也完全没有声带的振动，也就是说，这两个全是清音。实际上，［ｂ］，［ｇ］，［ｄ］这三个在国际音标中是浊音的音素，在汉语拼音中则全部变成了清音。它们和［ｐ］，［ｋ］，［ｔ］的区别不在清和浊上，而只在送气和不送气。<br>　　［ｐ］，［ｂ］，［ｋ］，［ｇ］，［ｔ］，［ｄ］这些称为爆破音。爆破音除了可以分成清音和浊音外，还可以分为送气和不送气。一种是在爆破后紧跟着强烈的送气，另一种则没有强烈的送气。比如：［ｐ］，［ｋ］，［ｔ］这三个是有送气的，当发这三个音时，如果停止送气，听上去就好像变成了［ｂ］，［ｇ］，［ｄ］，但这时候它们依然是清音。换句话说，其实应该有三种状态：清音送气，清音不送气，和浊音。<br>　　于是，ｓｔａｒｔ的前一个ｔ是清音不送气，后一个ｔ是清音送气。同样，日语中いか的か也是清音不送气而已，并非浊音。</p>
<p>　　送气和不送气的现象，并不局限于爆破音。破擦音也同样有着一现象。国际音素中破擦音有［ｔｒ］［ｄｒ］［ｔ∫］等不少，日语中接触到的只有［ｔ∫］，［ｔｓ］和［ｄｚ］。［ｔｓ］是送气清音，当它变成不送气清音时，有些地方会采用［ｔｚ］的方式来表示。也就是说，つ在词首发音［ｔｓ］，而在非词首则发音［ｔｚ］，但是，并非变成了づ。发音为［ｔ∫ｉ］的ち也是同样道理，大家可以依理类推。<br>　　作为总结，か行、た行、和ぱ行的所有清音假名，都会发生送气音转化为不送气音的现象，但是，不要以为这是浊化，它们依然还是清音。</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b010007np.html" target="_blank" rel="noopener">追根溯源，日语漫谈（二十）送气音和不送气音 (2006-12-13 13:30:10)</a></p>
<h1 id="番外篇（二）汉语中的清浊"><a href="#番外篇（二）汉语中的清浊" class="headerlink" title="番外篇（二）汉语中的清浊"></a>番外篇（二）汉语中的清浊</h1><p>　　上一篇中，我提到了汉语中的清音和浊音概念，和英语日语中的都有些区别，现在我们就另外开一篇番外篇，把汉语中的清浊概念也好好介绍一下。<br>　　事实上，汉语的音韵分类，本来是世界上最为严格的语言之一。我们之前已经提到过，辅音其实有两种概念，一种叫做清音和浊音，另一种叫做送气音和不送气音。英语和日语的音韵里面，都不讲究送气和不送气，只不过在发音中会自然出现不送气现象。可是古代汉语中却是对于清浊以及送气都有严格的分类。<br>　　古代汉语音韵学，是个非常复杂的学问，有一部分现在也已经失传，只能流于猜测。我这里也不打算涉及非常高深的地方，只不过简单介绍一下。<br>　　研究古汉语音韵学，最重要的东西就是宋代的韵图。这里面有一个概念，叫做“三十六字母”。这里的字母，就是声母的意思，也就是我们说的辅音。所以说，古代汉语的辅音，就是这韵图里面归纳出来的三十六个。<br>　　韵图中把三十六字母分成了四类：全清、次清、全浊、次浊。这一个分类显然比起其他语言的清浊两层概念要复杂了。结合我们介绍过的清浊和送气的概念，解释这四个分类就比较简单。送气的清音就是全清，不送气的清音就是次清，不送气的浊音就是全浊，而剩下的鼻音，唇音等等就是次浊了。<br>　　举例来说，ｐ、ｋ、ｓ之类英语和日语中都被认为是清音的音素就是全清，而这些清音一旦不送气，就变成了次清。比如ｐｉｎ的ｐ是全清，而ｓｐｉｎ的ｐ则是次清。值得注意的是，现代汉语中的ｂｐｍｆ的ｂ，其实作为声母来说，是一个清音（因为它不发生声带的震动），只不过它不送气而已，所以ｂ，以及其他ｄ，ｇ之类的全部属于次清。而英语中的浊辅音ｂ，ｄ，ｇ之类的，则是中国音韵学中所说的全浊。其他的ｌ，ｎｇ，ｍ之类的，则是次浊。<br>　　古代汉语中，全清、次清、全浊全部都是存在的，而现代汉语普通话之中，全浊已经消亡，历史上的全浊声母，已经全部转化成了同样属于不送气音的次清。所以音韵学中有一句话叫：汉语之中无浊音。当然，这里指的是全浊。<br>　　但是，有不少方言之中，全浊还是被保留了下来，尤其是一些南方的方言。举个例子，“白”这个字，按普通话发音的话，辅音是次清，但按照上海话发音的话，则依然是全浊。有一些方言中，同一个字，在句首时发音为次清，但在句子中间时，依然会保留全浊发音。不过我对于各种方言也不太熟悉，这里只能稍微提一下。</p>
<p>　　汉语音韵学博大精深，我本人也只不过略知皮毛，因此，这里也就介绍到这里，有兴趣的人，可以自己选一些书去看看哦。</p>
<p><a href="http://blog.sina.com.cn/s/blog_5555513b010007z3.html" target="_blank" rel="noopener">追根溯源，日语漫谈（番外篇之二）汉语中的清浊 (2006-12-28 13:28:22)</a></p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>symbol</tag>
      </tags>
  </entry>
  <entry>
    <title>漫步键圈 - 误入键圈</title>
    <url>/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/</url>
    <content><![CDATA[<h2 id="替换轴"><a href="#替换轴" class="headerlink" title="替换轴"></a>替换轴</h2><p>大拇指键盘【LY092-MINI】年初渐渐有几个轴出现不触发或要多次按键才触发的问题。<br>想想大概是凯华轴的寿命到了，买了Cherry的五脚红轴替换坏掉的和部分使用频率高的键位。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">E R T A G</span><br><span class="line">U I O L N</span><br></pre></td></tr></table></figure></p>
<p>字母频率可以参考<br><a href="https://en.wikipedia.org/wiki/Letter_frequency" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Letter_frequency</a></p>
<p>焊接轴的替换需要克服吸锡的烦恼。</p>
<p>诀窍是别怕烙铁烫坏吸锡器尽量靠近焊点，<br>在焊点熔融的时候吸锡动作要快迅速怼在焊点上，避免锡吸不干净残留在焊盘上。</p>
<p>焊点如果多次熔融，可能会出现活性下降不融化的情况，<br>或是锡没吸干净针脚依然和焊盘粘连，这些都可以补锡解决。</p>
<h2 id="物色"><a href="#物色" class="headerlink" title="物色"></a>物色</h2><p>老伙计又复活了，开始觉得换轴很有意思。<br>开始了解更多的键盘，更多的触发开关形式。</p>
<a id="more"></a>
<h2 id="屈蹲"><a href="#屈蹲" class="headerlink" title="屈蹲"></a>屈蹲</h2><h3 id="IBM-model-F"><a href="#IBM-model-F" class="headerlink" title="IBM model F"></a>IBM model F</h3><p>虽然是把老键盘，但左手边的功能键让人很有好感，很生产力。<br>不少客制化的layout也在左手边加功能键区，即减少行数又方便使用。</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/IBM_Model_F_XT_t.jpg" alt="IBM_Model_F_XT_t.jpg"></p>
<h3 id="IBM-model-M"><a href="#IBM-model-M" class="headerlink" title="IBM model M"></a>IBM model M</h3><p>屈蹲键盘的典范，这个layout已经和现代键盘非常接近。</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/IBM_Model_M_1391403_keyboard_t.jpg" alt="IBM_Model_M_1391403_keyboard_t.jpg"></p>
<h2 id="静电容"><a href="#静电容" class="headerlink" title="静电容"></a>静电容</h2><h3 id="HHKB"><a href="#HHKB" class="headerlink" title="HHKB"></a>HHKB</h3><p><code>Happy Hacking Keyboard</code> 很有名，在程序员圈流传着HHKB的传说。<br>静电容的手感确实很独特，压力曲线很平滑回弹也是，是种胶碗渐进的段落感。</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/topre-force-linear.gif" alt="topre-force-linear.gif"><br><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/topre-force-all.gif" alt="topre-force-all.gif"><br><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/hhkb_1_t.jpg" alt="hhkb_1_t.jpg"><br><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/hhkb_2_t.jpg" alt="hhkb_2_t.jpg"><br><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/hhkb_3_t.jpg" alt="hhkb_3_t.jpg"></p>
<p>曾经很疑惑为什么主控的接线只有13个触点，照理来说60个键的排布，至少需要8 + 8，16个IO口。<br>看了Hasu的文档发现HHKB键盘下还有PCB。</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/hhkb_4_t.jpg" alt="hhkb_4_t.jpg"><br><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/hhkb_5_t.jpg" alt="hhkb_5_t.jpg"><br><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/hhkb_6_t.jpg" alt="hhkb_6_t.jpg"></p>
<ul>
<li><code>HC4051</code>   解码行</li>
<li><code>LS145</code>    解码列</li>
<li><code>TP1683/4</code> 判断是否有按键</li>
</ul>
<p>简单说用3个触点来表示8种状态，这样就能覆盖键位<br>JP版有点特殊，因为键位超过64个，PCB上装了两个 <code>HC4051</code>，用来区分更多键位。<br>JP版有了方向键，还有ISO回车，但配列左移有点可惜。</p>
<p><a href="http://www.pfu.com.cn/HHKB/" target="_blank" rel="noopener">http://www.pfu.com.cn/HHKB/</a><br><a href="https://github.com/tmk/HHKB_controller" target="_blank" rel="noopener">https://github.com/tmk/HHKB_controller</a><br><a href="https://github.com/tmk/tmk_keyboard/blob/master/keyboard/hhkb/doc/HHKB.txt" target="_blank" rel="noopener">https://github.com/tmk/tmk_keyboard/blob/master/keyboard/hhkb/doc/HHKB.txt</a><br><a href="https://www.wstx.com/p-24348" target="_blank" rel="noopener">HHKB Pro 2&amp;Pro 2 TYPE-S静电容键盘拆解 -全文阅读</a></p>
<h3 id="Realforce"><a href="#Realforce" class="headerlink" title="Realforce"></a>Realforce</h3><p>也是静电容键盘，感觉做工很好很精致，据说手感很好。<br>键盘造型有棱有角，很符合直男审美。<br>PFU的联名款还能调键程。</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/realforce_t.jpg" alt="realforce_t.jpg"></p>
<p><a href="https://www.pfu.com.cn/REALFORCE/" target="_blank" rel="noopener">https://www.pfu.com.cn/REALFORCE/</a></p>
<h3 id="Niz"><a href="#Niz" class="headerlink" title="Niz"></a>Niz</h3><p>宁芝静电容，据说手感很好。<br>创始人<code>A</code>是个很有情怀的圈内大佬。<br>配列形式有很多，66、68、84、87、108都有。</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/plum_niz_66_t.jpg" alt="plum_niz_66_t.jpg"></p>
<h2 id="TMK"><a href="#TMK" class="headerlink" title="TMK"></a>TMK</h2><h3 id="Hasu-Usb2Usb"><a href="#Hasu-Usb2Usb" class="headerlink" title="Hasu Usb2Usb"></a>Hasu Usb2Usb</h3><p>第一次听闻Hasu的大名是在linustechtip，<br>2019年初他们的后期剪辑介绍有线键盘转接器，能很经济的实现键盘宏功能。</p>
<p>当时想买，可惜已经卖光了，淘宝当然也别想产品太小众。<br>在geekhack、github里慢慢了解，想自己做一个但难度太高，作罢。</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/hasu-usb2usb_t.jpg" alt="hasu-usb2usb_t.jpg"></p>
<p><a href="https://github.com/tmk/USB2USB_Converter" target="_blank" rel="noopener">https://github.com/tmk/USB2USB_Converter</a></p>
<h3 id="Lot60-BLE"><a href="#Lot60-BLE" class="headerlink" title="Lot60-BLE"></a>Lot60-BLE</h3><p>年初在淘宝搜到的蓝牙5.0双模PCB，150元左右的价格挺划算想组60配列的不要错过。<br>NRF52832蓝牙 + CH554USB 组成蓝牙双模，硬件、软件都在github上开源，非常友好。</p>
<p>Lotlab的wiki、键盘配置器也很好用，本地服务器的刷固件形式比较有趣。<br>固件上层用的TMK-core，自编译键盘配置需要蓝牙SDK、TMK、USB，具体参考<code>.travis.yml</code>。<br>本想买LotCore来试试能不能组分体蓝牙双模，结果没货了。。。<br>之后的自设计方案也是参考的LotCore，感谢Jim和Geno的分享。</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/lot60-ble_t.jpg" alt="lot60-ble_t.jpg"><br><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/lotcore_t.jpg" alt="lotcore_t.jpg"></p>
<p><a href="https://wiki.lotlab.org/" target="_blank" rel="noopener">https://wiki.lotlab.org/</a><br><a href="https://keyboard.lotlab.org/" target="_blank" rel="noopener">https://keyboard.lotlab.org/</a><br><a href="https://github.com/Lotlab/nrf52-keyboard" target="_blank" rel="noopener">https://github.com/Lotlab/nrf52-keyboard</a><br><a href="https://github.com/Lotlab/Lot60-BLE-Keyboard" target="_blank" rel="noopener">https://github.com/Lotlab/Lot60-BLE-Keyboard</a></p>
<h3 id="GT-BLE60"><a href="#GT-BLE60" class="headerlink" title="GT-BLE60"></a>GT-BLE60</h3><p>格老师做的PCB，在lot60的基础上加了rgb、热插拔</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/gt-ble60-1_t.jpg" alt="gt-ble60-1_t.jpg"><br><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/gt-ble60-2_t.jpg" alt="gt-ble60-2_t.jpg"></p>
<p><a href="https://glab.online/" target="_blank" rel="noopener">https://glab.online/</a><br><a href="https://github.com/genokolar/Lotkb_Keyboard_PCB" target="_blank" rel="noopener">https://github.com/genokolar/Lotkb_Keyboard_PCB</a><br><a href="https://git.code.tencent.com/lotkb/lotkb-builder" target="_blank" rel="noopener">https://git.code.tencent.com/lotkb/lotkb-builder</a><br><a href="https://git.code.tencent.com/lotkb/keyboard-builder-server" target="_blank" rel="noopener">https://git.code.tencent.com/lotkb/keyboard-builder-server</a></p>
<h2 id="QMK"><a href="#QMK" class="headerlink" title="QMK"></a>QMK</h2><h3 id="Baguette"><a href="#Baguette" class="headerlink" title="Baguette"></a>Baguette</h3><p>这是一把采用QMK的客制化键盘，渲染图很好看。<br>当时就是这把键盘让我产生自己做一把键盘的想法。</p>
<p>这位作者的其他作品也很有设计感，我很喜欢。</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/baguette_t.jpg" alt="baguette_t.jpg"></p>
<p><a href="http://yiancar-designs.com/" target="_blank" rel="noopener">http://yiancar-designs.com/</a><br><a href="https://github.com/yiancar" target="_blank" rel="noopener">https://github.com/yiancar</a><br><a href="https://github.com/qmk/qmk_firmware/tree/master/keyboards/baguette" target="_blank" rel="noopener">https://github.com/qmk/qmk_firmware/tree/master/keyboards/baguette</a></p>
<h3 id="Mitosis"><a href="#Mitosis" class="headerlink" title="Mitosis"></a>Mitosis</h3><p>2017年的一个开源分体键盘项目，特点是PCB板左右对称上下都可以焊接元件。<br>2.4G用微雪的NRF51822 模块，CR2032 纽扣电池供电。</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/mitosis_keyboard_LxmE3-s1916x752_t.jpg" alt="mitosis_keyboard_LxmE3-s1916x752_t.jpg"></p>
<p><a href="https://github.com/reversebias/mitosis" target="_blank" rel="noopener">https://github.com/reversebias/mitosis</a><br><a href="https://github.com/reversebias/mitosis-hardware" target="_blank" rel="noopener">https://github.com/reversebias/mitosis-hardware</a><br><a href="https://github.com/qmk/qmk_firmware/tree/master/keyboards/mitosis" target="_blank" rel="noopener">https://github.com/qmk/qmk_firmware/tree/master/keyboards/mitosis</a></p>
<h3 id="Redox"><a href="#Redox" class="headerlink" title="Redox"></a>Redox</h3><p>ergodox的一个无线版<br>用的是Mitosis二极管方案修改版，似乎可以用更便宜的模块。</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/redox_keyboard_81154-s1223x818_t.jpg" alt="redox_keyboard_81154-s1223x818_t.jpg"></p>
<p><a href="https://github.com/mattdibi/redox-w-firmware" target="_blank" rel="noopener">https://github.com/mattdibi/redox-w-firmware</a><br><a href="https://github.com/qmk/qmk_firmware/tree/master/keyboards/redox_w" target="_blank" rel="noopener">https://github.com/qmk/qmk_firmware/tree/master/keyboards/redox_w</a></p>
<h3 id="UNI660"><a href="#UNI660" class="headerlink" title="UNI660"></a>UNI660</h3><p>天狼星的作品，分体无线键盘<br>NRF51822的2.4G方案，Mitosis二极管方案修改版。</p>
<p>产品完成度很高，无线芯片直接板载，接收器也是定制的。</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/uni660.jpg" alt="uni660.jpg"></p>
<p><a href="https://github.com/qmk/qmk_firmware/tree/master/keyboards/sirius/uni660" target="_blank" rel="noopener">https://github.com/qmk/qmk_firmware/tree/master/keyboards/sirius/uni660</a></p>
<h3 id="CA66"><a href="#CA66" class="headerlink" title="CA66"></a>CA66</h3><p>复古大边框，很有意思的layout，据说灵感来自薄膜老键盘<code>IBM PCjr</code>。</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/ca66_t.jpg" alt="ca66_t.jpg"></p>
<h3 id="Pheromone"><a href="#Pheromone" class="headerlink" title="Pheromone"></a>Pheromone</h3><p>费洛蒙键盘，挺有设计感，带旋钮、电位器、OLED小屏。<br>可惜依然左移，似乎非左移想保持60%必须要舍弃方向键、问号键和shift键中的一个。</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/Pheromone_t.jpg" alt="Pheromone_t.jpg"></p>
<p><a href="https://github.com/luantty2/pheromone_keyboard" target="_blank" rel="noopener">https://github.com/luantty2/pheromone_keyboard</a></p>
<h3 id="BlocKey"><a href="#BlocKey" class="headerlink" title="BlocKey"></a>BlocKey</h3><p>很小巧的一个钥匙扣键盘，很特别的形式让人印象深刻。<br>用的是微动开关，估计寿命不会很长，如果能做成蓝牙双模就更好了。</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/BlocKey_t.jpg" alt="BlocKey_t.jpg"></p>
<p><a href="https://github.com/qmk/qmk_firmware/tree/master/keyboards/blockey" target="_blank" rel="noopener">https://github.com/qmk/qmk_firmware/tree/master/keyboards/blockey</a></p>
<h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><h3 id="M60"><a href="#M60" class="headerlink" title="M60"></a>M60</h3><p>makerdiary的一款机械键盘PCB，特点是用了M2接口插接主控。<br>主控用的是NRF52840，相当给力，蓝牙、USB一体且RAM空间很大。<br>使用python编译固件，支持USB更新，相比手动编译刷固件应该会更易用一些。<br>PCB设计给人印象很好，红白配色醒目且有趣味。</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/m60_1_t.jpg" alt="m60_1_t.jpg"><br><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/m60_2_t.jpg" alt="m60_2_t.jpg"><br><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/m60_3_t.jpg" alt="m60_3_t.jpg"></p>
<p><a href="https://github.com/makerdiary/python-keyboard" target="_blank" rel="noopener">https://github.com/makerdiary/python-keyboard</a></p>
<h3 id="makeymakey"><a href="#makeymakey" class="headerlink" title="makeymakey"></a>makeymakey</h3><p>最早接触的自定义触摸按键板，固件修改用的Arduino IDE。<br>当时还没发现用的主控是<code>ATMEGA32u4</code>，这个芯片真是应用广泛。<br>现在被拿来当做视频快进键，是个很有意思的小板。</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/Product-Shot-MakeyMakey_large.jpg" alt="Product-Shot-MakeyMakey_large.jpg"></p>
<p><a href="https://makeymakey.com/" target="_blank" rel="noopener">https://makeymakey.com/</a></p>
<hr>
<p><a href="http://xahlee.info/kbd/diy_keyboards_index.html" target="_blank" rel="noopener">http://xahlee.info/kbd/diy_keyboards_index.html</a><br><a href="https://input.club/the-problem-with-mechanical-switch-reviews/" target="_blank" rel="noopener">The Problem with Mechanical Switch Reviews</a><br><a href="http://www5f.biglobe.ne.jp/~silencium/keyboard/index.html" target="_blank" rel="noopener">http://www5f.biglobe.ne.jp/~silencium/keyboard/index.html</a></p>
]]></content>
      <categories>
        <category>漫步键圈</category>
      </categories>
  </entry>
  <entry>
    <title>漫步键圈 - 选型</title>
    <url>/2020/10/23/Stroll-keyboard-fan-community-Selection/</url>
    <content><![CDATA[<h2 id="期望"><a href="#期望" class="headerlink" title="期望"></a>期望</h2><p>最佳的期望是能拥有【LY092-MINI】布局的分体无线键盘，要有层功能、宏功能。<br>要能在保持尺寸不变、降低高度同时，有不错的可用性、可靠性，最好还能有不错的外观。</p>
<h2 id="调研"><a href="#调研" class="headerlink" title="调研"></a>调研</h2><p>从淘宝找到闲鱼，再到zFrontier，各种客制化群，发现分体键盘是个较小众的产品品类。<br>分体键盘普遍都是有线键盘，无线分体键盘要么是左右有连线，要么是键位学习成本很高只能当玩具。<br>其中的2.4G接收器方案是个比较实用的方案，在稳定可靠上有优势，缺点是需要接收器没法用蓝牙、USB。</p>
<p>Github里的老哥收集了一堆分体，可惜没有能满足我需求的分体。<br><a href="https://github.com/diimdeep/awesome-split-keyboards" target="_blank" rel="noopener">https://github.com/diimdeep/awesome-split-keyboards</a></p>
<p>这个站点也很不错，有很多小众键盘鼠标介绍。<br><a href="http://xahlee.info/kbd/ergonomic_keyboards_index.html" target="_blank" rel="noopener">http://xahlee.info/kbd/ergonomic_keyboards_index.html</a></p>
<a id="more"></a>
<h2 id="Gist里有惊喜"><a href="#Gist里有惊喜" class="headerlink" title="Gist里有惊喜"></a>Gist里有惊喜</h2><p>二月底，在gist找到一个实现了真正无线分体的客制化键盘<br>不得不说飞线大法好，PCB都不用定做，亚克力 + 螺柱完成定位和壳体。</p>
<p><img src="/2020/10/23/Stroll-keyboard-fan-community-Selection/Spock_1_t.jpg" alt="Spock_1_t.jpg"><br><img src="/2020/10/23/Stroll-keyboard-fan-community-Selection/Spock_2_t.jpg" alt="Spock_2_t.jpg"><br><img src="/2020/10/23/Stroll-keyboard-fan-community-Selection/Spock_3_t.jpg" alt="Spock_3_t.jpg"><br><img src="/2020/10/23/Stroll-keyboard-fan-community-Selection/Spock_4_t.jpg" alt="Spock_4_t.jpg"></p>
<p>缺点是模块很贵，<a href="https://www.adafruit.com/product/3406" target="_blank" rel="noopener">Adafruit Feather nRF52 Bluefruit LE - nRF52832</a> 淘宝上价格要去到300多一片。<br>还有壳体完成度不够高，简易的用螺柱固定，手感、耐用程度存在疑问，而且厚度略厚不够美观。</p>
<p><img src="/2020/10/23/Stroll-keyboard-fan-community-Selection/Feather-nrf52832_1_t.jpg" alt="Feather-nrf52832_1_t.jpg"><br><img src="/2020/10/23/Stroll-keyboard-fan-community-Selection/Feather-nrf52832_2_t.jpg" alt="Feather-nrf52832_2_t.jpg"></p>
<p>如果要实现这个方案，使用<a href="https://www.adafruit.com/product/3995" target="_blank" rel="noopener">Particle Xenon Kit - nRF52840 with BLE and Mesh</a>模块会是个更好的选择。<br>芯片更好，模块更好看，价格还便宜很多’只要’100多一片。</p>
<p><img src="/2020/10/23/Stroll-keyboard-fan-community-Selection/Xenon-nrf52840_1_t.jpg" alt="Xenon-nrf52840_1_t.jpg"><br><img src="/2020/10/23/Stroll-keyboard-fan-community-Selection/Xenon-nrf52840_2_t.jpg" alt="Xenon-nrf52840_2_t.jpg"></p>
<p>不得不说这个方案还是挺好的，蓝牙、充电都集成在了模块上，当时很心动。<br>如果用的是Xenon模块，USB也被集成在NRF52840里，模块很简洁，成本也在接受范围内。</p>
<p><a href="https://gist.github.com/wez/b30683a4dfa329b86b9e0a2811a8c593" target="_blank" rel="noopener">https://gist.github.com/wez/b30683a4dfa329b86b9e0a2811a8c593</a><br><a href="https://github.com/wez/SpockKeyboard" target="_blank" rel="noopener">https://github.com/wez/SpockKeyboard</a></p>
<h2 id="Lotlab"><a href="#Lotlab" class="headerlink" title="Lotlab"></a>Lotlab</h2><p>三月份在Lotlab找到的产品，核心飞线板很有意思。使用TMK实现，支持层、宏、空中DFU。<br><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/lotcore_t.jpg" alt="lotcore_t.jpg"></p>
<p>可惜开源工程里的<code>ergoconn</code>样例，看起来还是左右部分作为独立键盘连接设备。<br>这种模式在windows上还可以，但在mac/linux上并不适用。<br><img src="/2020/10/11/Stroll-keyboard-fan-community-The-begining/IMG_2889.JPG" alt="IMG_2889"></p>
<p>在MacOS上多键盘之间并不相互影响，想要输入大写<code>H</code>，左<code>Shift</code>配合右<code>h</code>不能输入<code>H</code>。<br>而且不知道是不是因为左右蓝牙的稳定性问题，在快速输入时会有左右不协调的割裂感。</p>
<p>作为入门在设计PCB时参考了LKBCore电路。</p>
<p><a href="https://lceda.cn/Wayne654/nrfmicro" target="_blank" rel="noopener">nrfmicro</a><br><a href="https://lceda.cn/xiaoquana/ji-yu-NRF52810de-lan-ya-shuang-m" target="_blank" rel="noopener">基于NRF52810的蓝牙双模小数字键盘</a><br><a href="https://wiki.lotlab.org/ble/lkb-core.html" target="_blank" rel="noopener">https://wiki.lotlab.org/ble/lkb-core.html</a></p>
<h2 id="Mitosis"><a href="#Mitosis" class="headerlink" title="Mitosis"></a>Mitosis</h2><p>第一次听闻<code>Mitosis</code>是在天狼星的客制化群里。<br>这种分体方案需要三块NRF51822，一块Arduino micro pro。<br>其中一块NRF51822将作为接收器把左右手动作发给ATMEGA32u4。<br>QMK固件可以用可视化界面VIA配置，非常友好。</p>
<p><code>Mitosis</code> 因为没用二极管，每个按键都直连GPIO口，这让按键的数量比较有限。</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/mitosis_keyboard_LxmE3-s1916x752_t.jpg" alt="mitosis_keyboard_LxmE3-s1916x752_t.jpg"></p>
<p>键盘的评测在<code>chiphell</code>里有介绍: <a href="https://www.chiphell.com/thread-1759954-1-1.html" target="_blank" rel="noopener">[配件开箱] 垃圾键盘毁我青春系列——mitosis分体无线键盘</a>。</p>
<p><a href="https://github.com/reversebias/mitosis" target="_blank" rel="noopener">https://github.com/reversebias/mitosis</a></p>
<h2 id="Redox"><a href="#Redox" class="headerlink" title="Redox"></a>Redox</h2><p>Github的推荐项目，果然质量很不错，是<code>Mitosis</code>的二极管方案。</p>
<p><img src="/2020/10/20/Stroll-keyboard-fan-community-lucky-to-enter/redox_keyboard_81154-s1223x818_t.jpg" alt="redox_keyboard_81154-s1223x818_t.jpg"></p>
<p>曾想改造固件适配自己的PCB，做一个2.4G方案。</p>
<p><a href="https://github.com/mattdibi/redox-w-firmware" target="_blank" rel="noopener">https://github.com/mattdibi/redox-w-firmware</a></p>
<h2 id="Buletosis"><a href="#Buletosis" class="headerlink" title="Buletosis"></a>Buletosis</h2><p>无意间搜到的一个方案，作者的wiki写的特别好，也让我最终找到最适合的方案。<br>该方案的主旨是精简<code>Mitosis</code>，不再使用接收器，左右手间用<code>Gazell</code>协议互联，右手作为蓝牙接入设备。<br>缺点也很明显，因为NRF51822的空间不够，作为主控的固件支持并不完善。<br>在Lotlab里倒是有基于NRF51822的固件项目， 但支持有限需要自己魔改。</p>
<p><a href="https://github.com/joric/bluetosis" target="_blank" rel="noopener">https://github.com/joric/bluetosis</a><br><a href="https://github.com/joric/bluetosis/wiki" target="_blank" rel="noopener">https://github.com/joric/bluetosis/wiki</a><br><a href="https://github.com/joric/bluetosis/wiki/Alternatives" target="_blank" rel="noopener">https://github.com/joric/bluetosis/wiki/Alternatives</a><br><a href="https://github.com/joric/bluetosis/wiki/QMK-Support" target="_blank" rel="noopener">https://github.com/joric/bluetosis/wiki/QMK-Support</a></p>
<h2 id="QMK-nrf52"><a href="#QMK-nrf52" class="headerlink" title="QMK-nrf52"></a>QMK-nrf52</h2><p>QMK的一个非官方分支，优点是QMK支持广泛。<br>缺点是可能需要Dongle来作为接收器，而且并不适配我的PCB设想。<br>看分支源码中的分体ble键盘配置，是把分体的第二把键盘作为第一把键盘的行扩展。<br>这样行列的针脚就要求不能重复，而我的设计里左右PCB有重复使用的蓝牙针脚。</p>
<p><a href="https://github.com/sekigon-gonnoc/qmk_firmware/tree/nrf52" target="_blank" rel="noopener">https://github.com/sekigon-gonnoc/qmk_firmware/tree/nrf52</a></p>
<h2 id="BlueMicro-BLE"><a href="#BlueMicro-BLE" class="headerlink" title="BlueMicro_BLE"></a>BlueMicro_BLE</h2><p>万万没想到，绕了一大圈还是回到了基于<code>Adafruit</code>的方案<br>方案支持NRF52832、NRF52840，虽然是用的它自家的产品针脚，但可以魔改一番来适配自设计PCB。</p>
<p>因为自设计的PCB里，有用到21脚作为GPIO，需要把bootloader里的reset脚改掉。<br>line:193/195<br><a href="https://github.com/NordicSemiconductor/nrfx/blob/7a4c9d946cf1801771fc180acdbf7b878f270093/mdk/system_nrf52.c" target="_blank" rel="noopener">https://github.com/NordicSemiconductor/nrfx/blob/7a4c9d946cf1801771fc180acdbf7b878f270093/mdk/system_nrf52.c</a></p>
<p>看方案特性，能完美满足我的需求，右手作为外围设备连接左手，再作为一个蓝牙键盘接入。<br>而且支持层功能、宏功能，配置可以参考 <code>4x4Tutorials</code> 键盘配置，keymaps很丰富。<br><a href="https://github.com/jpconstantineau/BlueMicro_BLE/blob/master/docs/features.md" target="_blank" rel="noopener">https://github.com/jpconstantineau/BlueMicro_BLE/blob/master/docs/features.md</a></p>
<p><a href="https://github.com/jpconstantineau/BlueMicro_BLE" target="_blank" rel="noopener">https://github.com/jpconstantineau/BlueMicro_BLE</a><br><a href="https://github.com/adafruit/Adafruit_nRF52_Bootloader" target="_blank" rel="noopener">https://github.com/adafruit/Adafruit_nRF52_Bootloader</a></p>
]]></content>
      <categories>
        <category>漫步键圈</category>
      </categories>
  </entry>
</search>
